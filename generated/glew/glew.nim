# Generated @ 2021-06-15T16:17:55-04:00
# Command line:
#   /home/john/.nimble/pkgs/nimterop-#head/nimterop/toast --preprocess -m:c --recurse -f=ast2 -H -E__,_ -F__,_ --includeDirs+=/home/john/.cache/nim/nimterop/nimglew/glew/include --passL+=/home/john/.cache/nim/nimterop/nimglew/glew/lib/libGLEW.a --pnim --nim:/usr/bin/nim --pluginSourcePath=/home/john/.cache/nim/nimterop/cPlugins/nimterop_480415852.nim /home/john/.cache/nim/nimterop/nimglew/glew/include/GL/glew.h -o /home/john/doc/rep/gin/generated/glew/glew.nim

# const 'GLEWAPI' has unsupported value 'extern __attribute__ ((visibility("default")))'
# const 'GLAPI' has unsupported value 'extern'
# const 'GLEW_VAR_EXPORT' has unsupported value 'GLEWAPI'
# const 'GLEW_FUN_EXPORT' has unsupported value 'GLEWAPI'
# const 'GLEW_VERSION_1_1' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_1_1)'
# const 'glCopyTexSubImage3D' has unsupported value 'GLEW_GET_FUN(__glewCopyTexSubImage3D)'
# const 'glDrawRangeElements' has unsupported value 'GLEW_GET_FUN(__glewDrawRangeElements)'
# const 'glTexImage3D' has unsupported value 'GLEW_GET_FUN(__glewTexImage3D)'
# const 'glTexSubImage3D' has unsupported value 'GLEW_GET_FUN(__glewTexSubImage3D)'
# const 'GLEW_VERSION_1_2' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_1_2)'
# const 'GLEW_VERSION_1_2_1' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_1_2_1)'
# const 'glActiveTexture' has unsupported value 'GLEW_GET_FUN(__glewActiveTexture)'
# const 'glClientActiveTexture' has unsupported value 'GLEW_GET_FUN(__glewClientActiveTexture)'
# const 'glCompressedTexImage1D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage1D)'
# const 'glCompressedTexImage2D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage2D)'
# const 'glCompressedTexImage3D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage3D)'
# const 'glCompressedTexSubImage1D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage1D)'
# const 'glCompressedTexSubImage2D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage2D)'
# const 'glCompressedTexSubImage3D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage3D)'
# const 'glGetCompressedTexImage' has unsupported value 'GLEW_GET_FUN(__glewGetCompressedTexImage)'
# const 'glLoadTransposeMatrixd' has unsupported value 'GLEW_GET_FUN(__glewLoadTransposeMatrixd)'
# const 'glLoadTransposeMatrixf' has unsupported value 'GLEW_GET_FUN(__glewLoadTransposeMatrixf)'
# const 'glMultTransposeMatrixd' has unsupported value 'GLEW_GET_FUN(__glewMultTransposeMatrixd)'
# const 'glMultTransposeMatrixf' has unsupported value 'GLEW_GET_FUN(__glewMultTransposeMatrixf)'
# const 'glMultiTexCoord1d' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1d)'
# const 'glMultiTexCoord1dv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1dv)'
# const 'glMultiTexCoord1f' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1f)'
# const 'glMultiTexCoord1fv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1fv)'
# const 'glMultiTexCoord1i' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1i)'
# const 'glMultiTexCoord1iv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1iv)'
# const 'glMultiTexCoord1s' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1s)'
# const 'glMultiTexCoord1sv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1sv)'
# const 'glMultiTexCoord2d' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2d)'
# const 'glMultiTexCoord2dv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2dv)'
# const 'glMultiTexCoord2f' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2f)'
# const 'glMultiTexCoord2fv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2fv)'
# const 'glMultiTexCoord2i' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2i)'
# const 'glMultiTexCoord2iv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2iv)'
# const 'glMultiTexCoord2s' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2s)'
# const 'glMultiTexCoord2sv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2sv)'
# const 'glMultiTexCoord3d' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3d)'
# const 'glMultiTexCoord3dv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3dv)'
# const 'glMultiTexCoord3f' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3f)'
# const 'glMultiTexCoord3fv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3fv)'
# const 'glMultiTexCoord3i' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3i)'
# const 'glMultiTexCoord3iv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3iv)'
# const 'glMultiTexCoord3s' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3s)'
# const 'glMultiTexCoord3sv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3sv)'
# const 'glMultiTexCoord4d' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4d)'
# const 'glMultiTexCoord4dv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4dv)'
# const 'glMultiTexCoord4f' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4f)'
# const 'glMultiTexCoord4fv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4fv)'
# const 'glMultiTexCoord4i' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4i)'
# const 'glMultiTexCoord4iv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4iv)'
# const 'glMultiTexCoord4s' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4s)'
# const 'glMultiTexCoord4sv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4sv)'
# const 'glSampleCoverage' has unsupported value 'GLEW_GET_FUN(__glewSampleCoverage)'
# const 'GLEW_VERSION_1_3' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_1_3)'
# const 'glBlendColor' has unsupported value 'GLEW_GET_FUN(__glewBlendColor)'
# const 'glBlendEquation' has unsupported value 'GLEW_GET_FUN(__glewBlendEquation)'
# const 'glBlendFuncSeparate' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncSeparate)'
# const 'glFogCoordPointer' has unsupported value 'GLEW_GET_FUN(__glewFogCoordPointer)'
# const 'glFogCoordd' has unsupported value 'GLEW_GET_FUN(__glewFogCoordd)'
# const 'glFogCoorddv' has unsupported value 'GLEW_GET_FUN(__glewFogCoorddv)'
# const 'glFogCoordf' has unsupported value 'GLEW_GET_FUN(__glewFogCoordf)'
# const 'glFogCoordfv' has unsupported value 'GLEW_GET_FUN(__glewFogCoordfv)'
# const 'glMultiDrawArrays' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArrays)'
# const 'glMultiDrawElements' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElements)'
# const 'glPointParameterf' has unsupported value 'GLEW_GET_FUN(__glewPointParameterf)'
# const 'glPointParameterfv' has unsupported value 'GLEW_GET_FUN(__glewPointParameterfv)'
# const 'glPointParameteri' has unsupported value 'GLEW_GET_FUN(__glewPointParameteri)'
# const 'glPointParameteriv' has unsupported value 'GLEW_GET_FUN(__glewPointParameteriv)'
# const 'glSecondaryColor3b' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3b)'
# const 'glSecondaryColor3bv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3bv)'
# const 'glSecondaryColor3d' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3d)'
# const 'glSecondaryColor3dv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3dv)'
# const 'glSecondaryColor3f' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3f)'
# const 'glSecondaryColor3fv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3fv)'
# const 'glSecondaryColor3i' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3i)'
# const 'glSecondaryColor3iv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3iv)'
# const 'glSecondaryColor3s' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3s)'
# const 'glSecondaryColor3sv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3sv)'
# const 'glSecondaryColor3ub' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3ub)'
# const 'glSecondaryColor3ubv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3ubv)'
# const 'glSecondaryColor3ui' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3ui)'
# const 'glSecondaryColor3uiv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3uiv)'
# const 'glSecondaryColor3us' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3us)'
# const 'glSecondaryColor3usv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3usv)'
# const 'glSecondaryColorPointer' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColorPointer)'
# const 'glWindowPos2d' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2d)'
# const 'glWindowPos2dv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2dv)'
# const 'glWindowPos2f' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2f)'
# const 'glWindowPos2fv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2fv)'
# const 'glWindowPos2i' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2i)'
# const 'glWindowPos2iv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2iv)'
# const 'glWindowPos2s' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2s)'
# const 'glWindowPos2sv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2sv)'
# const 'glWindowPos3d' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3d)'
# const 'glWindowPos3dv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3dv)'
# const 'glWindowPos3f' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3f)'
# const 'glWindowPos3fv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3fv)'
# const 'glWindowPos3i' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3i)'
# const 'glWindowPos3iv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3iv)'
# const 'glWindowPos3s' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3s)'
# const 'glWindowPos3sv' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3sv)'
# const 'GLEW_VERSION_1_4' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_1_4)'
# const 'GL_CURRENT_FOG_COORD' has unsupported value 'GL_CURRENT_FOG_COORDINATE'
# const 'GL_FOG_COORD' has unsupported value 'GL_FOG_COORDINATE'
# const 'GL_FOG_COORD_ARRAY' has unsupported value 'GL_FOG_COORDINATE_ARRAY'
# const 'GL_FOG_COORD_ARRAY_BUFFER_BINDING' has unsupported value 'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING'
# const 'GL_FOG_COORD_ARRAY_POINTER' has unsupported value 'GL_FOG_COORDINATE_ARRAY_POINTER'
# const 'GL_FOG_COORD_ARRAY_STRIDE' has unsupported value 'GL_FOG_COORDINATE_ARRAY_STRIDE'
# const 'GL_FOG_COORD_ARRAY_TYPE' has unsupported value 'GL_FOG_COORDINATE_ARRAY_TYPE'
# const 'GL_FOG_COORD_SRC' has unsupported value 'GL_FOG_COORDINATE_SOURCE'
# const 'GL_SRC0_ALPHA' has unsupported value 'GL_SOURCE0_ALPHA'
# const 'GL_SRC0_RGB' has unsupported value 'GL_SOURCE0_RGB'
# const 'GL_SRC1_ALPHA' has unsupported value 'GL_SOURCE1_ALPHA'
# const 'GL_SRC1_RGB' has unsupported value 'GL_SOURCE1_RGB'
# const 'GL_SRC2_ALPHA' has unsupported value 'GL_SOURCE2_ALPHA'
# const 'GL_SRC2_RGB' has unsupported value 'GL_SOURCE2_RGB'
# const 'glBeginQuery' has unsupported value 'GLEW_GET_FUN(__glewBeginQuery)'
# const 'glBindBuffer' has unsupported value 'GLEW_GET_FUN(__glewBindBuffer)'
# const 'glBufferData' has unsupported value 'GLEW_GET_FUN(__glewBufferData)'
# const 'glBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewBufferSubData)'
# const 'glDeleteBuffers' has unsupported value 'GLEW_GET_FUN(__glewDeleteBuffers)'
# const 'glDeleteQueries' has unsupported value 'GLEW_GET_FUN(__glewDeleteQueries)'
# const 'glEndQuery' has unsupported value 'GLEW_GET_FUN(__glewEndQuery)'
# const 'glGenBuffers' has unsupported value 'GLEW_GET_FUN(__glewGenBuffers)'
# const 'glGenQueries' has unsupported value 'GLEW_GET_FUN(__glewGenQueries)'
# const 'glGetBufferParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetBufferParameteriv)'
# const 'glGetBufferPointerv' has unsupported value 'GLEW_GET_FUN(__glewGetBufferPointerv)'
# const 'glGetBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewGetBufferSubData)'
# const 'glGetQueryObjectiv' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectiv)'
# const 'glGetQueryObjectuiv' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectuiv)'
# const 'glGetQueryiv' has unsupported value 'GLEW_GET_FUN(__glewGetQueryiv)'
# const 'glIsBuffer' has unsupported value 'GLEW_GET_FUN(__glewIsBuffer)'
# const 'glIsQuery' has unsupported value 'GLEW_GET_FUN(__glewIsQuery)'
# const 'glMapBuffer' has unsupported value 'GLEW_GET_FUN(__glewMapBuffer)'
# const 'glUnmapBuffer' has unsupported value 'GLEW_GET_FUN(__glewUnmapBuffer)'
# const 'GLEW_VERSION_1_5' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_1_5)'
# const 'GL_BLEND_EQUATION_RGB' has unsupported value 'GL_BLEND_EQUATION'
# const 'glAttachShader' has unsupported value 'GLEW_GET_FUN(__glewAttachShader)'
# const 'glBindAttribLocation' has unsupported value 'GLEW_GET_FUN(__glewBindAttribLocation)'
# const 'glBlendEquationSeparate' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationSeparate)'
# const 'glCompileShader' has unsupported value 'GLEW_GET_FUN(__glewCompileShader)'
# const 'glCreateProgram' has unsupported value 'GLEW_GET_FUN(__glewCreateProgram)'
# const 'glCreateShader' has unsupported value 'GLEW_GET_FUN(__glewCreateShader)'
# const 'glDeleteProgram' has unsupported value 'GLEW_GET_FUN(__glewDeleteProgram)'
# const 'glDeleteShader' has unsupported value 'GLEW_GET_FUN(__glewDeleteShader)'
# const 'glDetachShader' has unsupported value 'GLEW_GET_FUN(__glewDetachShader)'
# const 'glDisableVertexAttribArray' has unsupported value 'GLEW_GET_FUN(__glewDisableVertexAttribArray)'
# const 'glDrawBuffers' has unsupported value 'GLEW_GET_FUN(__glewDrawBuffers)'
# const 'glEnableVertexAttribArray' has unsupported value 'GLEW_GET_FUN(__glewEnableVertexAttribArray)'
# const 'glGetActiveAttrib' has unsupported value 'GLEW_GET_FUN(__glewGetActiveAttrib)'
# const 'glGetActiveUniform' has unsupported value 'GLEW_GET_FUN(__glewGetActiveUniform)'
# const 'glGetAttachedShaders' has unsupported value 'GLEW_GET_FUN(__glewGetAttachedShaders)'
# const 'glGetAttribLocation' has unsupported value 'GLEW_GET_FUN(__glewGetAttribLocation)'
# const 'glGetProgramInfoLog' has unsupported value 'GLEW_GET_FUN(__glewGetProgramInfoLog)'
# const 'glGetProgramiv' has unsupported value 'GLEW_GET_FUN(__glewGetProgramiv)'
# const 'glGetShaderInfoLog' has unsupported value 'GLEW_GET_FUN(__glewGetShaderInfoLog)'
# const 'glGetShaderSource' has unsupported value 'GLEW_GET_FUN(__glewGetShaderSource)'
# const 'glGetShaderiv' has unsupported value 'GLEW_GET_FUN(__glewGetShaderiv)'
# const 'glGetUniformLocation' has unsupported value 'GLEW_GET_FUN(__glewGetUniformLocation)'
# const 'glGetUniformfv' has unsupported value 'GLEW_GET_FUN(__glewGetUniformfv)'
# const 'glGetUniformiv' has unsupported value 'GLEW_GET_FUN(__glewGetUniformiv)'
# const 'glGetVertexAttribPointerv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribPointerv)'
# const 'glGetVertexAttribdv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribdv)'
# const 'glGetVertexAttribfv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribfv)'
# const 'glGetVertexAttribiv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribiv)'
# const 'glIsProgram' has unsupported value 'GLEW_GET_FUN(__glewIsProgram)'
# const 'glIsShader' has unsupported value 'GLEW_GET_FUN(__glewIsShader)'
# const 'glLinkProgram' has unsupported value 'GLEW_GET_FUN(__glewLinkProgram)'
# const 'glShaderSource' has unsupported value 'GLEW_GET_FUN(__glewShaderSource)'
# const 'glStencilFuncSeparate' has unsupported value 'GLEW_GET_FUN(__glewStencilFuncSeparate)'
# const 'glStencilMaskSeparate' has unsupported value 'GLEW_GET_FUN(__glewStencilMaskSeparate)'
# const 'glStencilOpSeparate' has unsupported value 'GLEW_GET_FUN(__glewStencilOpSeparate)'
# const 'glUniform1f' has unsupported value 'GLEW_GET_FUN(__glewUniform1f)'
# const 'glUniform1fv' has unsupported value 'GLEW_GET_FUN(__glewUniform1fv)'
# const 'glUniform1i' has unsupported value 'GLEW_GET_FUN(__glewUniform1i)'
# const 'glUniform1iv' has unsupported value 'GLEW_GET_FUN(__glewUniform1iv)'
# const 'glUniform2f' has unsupported value 'GLEW_GET_FUN(__glewUniform2f)'
# const 'glUniform2fv' has unsupported value 'GLEW_GET_FUN(__glewUniform2fv)'
# const 'glUniform2i' has unsupported value 'GLEW_GET_FUN(__glewUniform2i)'
# const 'glUniform2iv' has unsupported value 'GLEW_GET_FUN(__glewUniform2iv)'
# const 'glUniform3f' has unsupported value 'GLEW_GET_FUN(__glewUniform3f)'
# const 'glUniform3fv' has unsupported value 'GLEW_GET_FUN(__glewUniform3fv)'
# const 'glUniform3i' has unsupported value 'GLEW_GET_FUN(__glewUniform3i)'
# const 'glUniform3iv' has unsupported value 'GLEW_GET_FUN(__glewUniform3iv)'
# const 'glUniform4f' has unsupported value 'GLEW_GET_FUN(__glewUniform4f)'
# const 'glUniform4fv' has unsupported value 'GLEW_GET_FUN(__glewUniform4fv)'
# const 'glUniform4i' has unsupported value 'GLEW_GET_FUN(__glewUniform4i)'
# const 'glUniform4iv' has unsupported value 'GLEW_GET_FUN(__glewUniform4iv)'
# const 'glUniformMatrix2fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2fv)'
# const 'glUniformMatrix3fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3fv)'
# const 'glUniformMatrix4fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4fv)'
# const 'glUseProgram' has unsupported value 'GLEW_GET_FUN(__glewUseProgram)'
# const 'glValidateProgram' has unsupported value 'GLEW_GET_FUN(__glewValidateProgram)'
# const 'glVertexAttrib1d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1d)'
# const 'glVertexAttrib1dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1dv)'
# const 'glVertexAttrib1f' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1f)'
# const 'glVertexAttrib1fv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1fv)'
# const 'glVertexAttrib1s' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1s)'
# const 'glVertexAttrib1sv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1sv)'
# const 'glVertexAttrib2d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2d)'
# const 'glVertexAttrib2dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2dv)'
# const 'glVertexAttrib2f' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2f)'
# const 'glVertexAttrib2fv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2fv)'
# const 'glVertexAttrib2s' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2s)'
# const 'glVertexAttrib2sv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2sv)'
# const 'glVertexAttrib3d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3d)'
# const 'glVertexAttrib3dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3dv)'
# const 'glVertexAttrib3f' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3f)'
# const 'glVertexAttrib3fv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3fv)'
# const 'glVertexAttrib3s' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3s)'
# const 'glVertexAttrib3sv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3sv)'
# const 'glVertexAttrib4Nbv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Nbv)'
# const 'glVertexAttrib4Niv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Niv)'
# const 'glVertexAttrib4Nsv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Nsv)'
# const 'glVertexAttrib4Nub' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Nub)'
# const 'glVertexAttrib4Nubv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Nubv)'
# const 'glVertexAttrib4Nuiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Nuiv)'
# const 'glVertexAttrib4Nusv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4Nusv)'
# const 'glVertexAttrib4bv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4bv)'
# const 'glVertexAttrib4d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4d)'
# const 'glVertexAttrib4dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4dv)'
# const 'glVertexAttrib4f' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4f)'
# const 'glVertexAttrib4fv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4fv)'
# const 'glVertexAttrib4iv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4iv)'
# const 'glVertexAttrib4s' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4s)'
# const 'glVertexAttrib4sv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4sv)'
# const 'glVertexAttrib4ubv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4ubv)'
# const 'glVertexAttrib4uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4uiv)'
# const 'glVertexAttrib4usv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4usv)'
# const 'glVertexAttribPointer' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribPointer)'
# const 'GLEW_VERSION_2_0' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_2_0)'
# const 'glUniformMatrix2x3fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2x3fv)'
# const 'glUniformMatrix2x4fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2x4fv)'
# const 'glUniformMatrix3x2fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3x2fv)'
# const 'glUniformMatrix3x4fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3x4fv)'
# const 'glUniformMatrix4x2fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4x2fv)'
# const 'glUniformMatrix4x3fv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4x3fv)'
# const 'GLEW_VERSION_2_1' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_2_1)'
# const 'GL_CLIP_DISTANCE0' has unsupported value 'GL_CLIP_PLANE0'
# const 'GL_CLIP_DISTANCE1' has unsupported value 'GL_CLIP_PLANE1'
# const 'GL_CLIP_DISTANCE2' has unsupported value 'GL_CLIP_PLANE2'
# const 'GL_CLIP_DISTANCE3' has unsupported value 'GL_CLIP_PLANE3'
# const 'GL_CLIP_DISTANCE4' has unsupported value 'GL_CLIP_PLANE4'
# const 'GL_CLIP_DISTANCE5' has unsupported value 'GL_CLIP_PLANE5'
# const 'GL_COMPARE_REF_TO_TEXTURE' has unsupported value 'GL_COMPARE_R_TO_TEXTURE_ARB'
# const 'GL_MAX_CLIP_DISTANCES' has unsupported value 'GL_MAX_CLIP_PLANES'
# const 'GL_MAX_VARYING_COMPONENTS' has unsupported value 'GL_MAX_VARYING_FLOATS'
# const 'glBeginConditionalRender' has unsupported value 'GLEW_GET_FUN(__glewBeginConditionalRender)'
# const 'glBeginTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewBeginTransformFeedback)'
# const 'glBindFragDataLocation' has unsupported value 'GLEW_GET_FUN(__glewBindFragDataLocation)'
# const 'glClampColor' has unsupported value 'GLEW_GET_FUN(__glewClampColor)'
# const 'glClearBufferfi' has unsupported value 'GLEW_GET_FUN(__glewClearBufferfi)'
# const 'glClearBufferfv' has unsupported value 'GLEW_GET_FUN(__glewClearBufferfv)'
# const 'glClearBufferiv' has unsupported value 'GLEW_GET_FUN(__glewClearBufferiv)'
# const 'glClearBufferuiv' has unsupported value 'GLEW_GET_FUN(__glewClearBufferuiv)'
# const 'glColorMaski' has unsupported value 'GLEW_GET_FUN(__glewColorMaski)'
# const 'glDisablei' has unsupported value 'GLEW_GET_FUN(__glewDisablei)'
# const 'glEnablei' has unsupported value 'GLEW_GET_FUN(__glewEnablei)'
# const 'glEndConditionalRender' has unsupported value 'GLEW_GET_FUN(__glewEndConditionalRender)'
# const 'glEndTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewEndTransformFeedback)'
# const 'glGetBooleani_v' has unsupported value 'GLEW_GET_FUN(__glewGetBooleani_v)'
# const 'glGetFragDataLocation' has unsupported value 'GLEW_GET_FUN(__glewGetFragDataLocation)'
# const 'glGetStringi' has unsupported value 'GLEW_GET_FUN(__glewGetStringi)'
# const 'glGetTexParameterIiv' has unsupported value 'GLEW_GET_FUN(__glewGetTexParameterIiv)'
# const 'glGetTexParameterIuiv' has unsupported value 'GLEW_GET_FUN(__glewGetTexParameterIuiv)'
# const 'glGetTransformFeedbackVarying' has unsupported value 'GLEW_GET_FUN(__glewGetTransformFeedbackVarying)'
# const 'glGetUniformuiv' has unsupported value 'GLEW_GET_FUN(__glewGetUniformuiv)'
# const 'glGetVertexAttribIiv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribIiv)'
# const 'glGetVertexAttribIuiv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribIuiv)'
# const 'glIsEnabledi' has unsupported value 'GLEW_GET_FUN(__glewIsEnabledi)'
# const 'glTexParameterIiv' has unsupported value 'GLEW_GET_FUN(__glewTexParameterIiv)'
# const 'glTexParameterIuiv' has unsupported value 'GLEW_GET_FUN(__glewTexParameterIuiv)'
# const 'glTransformFeedbackVaryings' has unsupported value 'GLEW_GET_FUN(__glewTransformFeedbackVaryings)'
# const 'glUniform1ui' has unsupported value 'GLEW_GET_FUN(__glewUniform1ui)'
# const 'glUniform1uiv' has unsupported value 'GLEW_GET_FUN(__glewUniform1uiv)'
# const 'glUniform2ui' has unsupported value 'GLEW_GET_FUN(__glewUniform2ui)'
# const 'glUniform2uiv' has unsupported value 'GLEW_GET_FUN(__glewUniform2uiv)'
# const 'glUniform3ui' has unsupported value 'GLEW_GET_FUN(__glewUniform3ui)'
# const 'glUniform3uiv' has unsupported value 'GLEW_GET_FUN(__glewUniform3uiv)'
# const 'glUniform4ui' has unsupported value 'GLEW_GET_FUN(__glewUniform4ui)'
# const 'glUniform4uiv' has unsupported value 'GLEW_GET_FUN(__glewUniform4uiv)'
# const 'glVertexAttribI1i' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1i)'
# const 'glVertexAttribI1iv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1iv)'
# const 'glVertexAttribI1ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1ui)'
# const 'glVertexAttribI1uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1uiv)'
# const 'glVertexAttribI2i' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2i)'
# const 'glVertexAttribI2iv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2iv)'
# const 'glVertexAttribI2ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2ui)'
# const 'glVertexAttribI2uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2uiv)'
# const 'glVertexAttribI3i' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3i)'
# const 'glVertexAttribI3iv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3iv)'
# const 'glVertexAttribI3ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3ui)'
# const 'glVertexAttribI3uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3uiv)'
# const 'glVertexAttribI4bv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4bv)'
# const 'glVertexAttribI4i' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4i)'
# const 'glVertexAttribI4iv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4iv)'
# const 'glVertexAttribI4sv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4sv)'
# const 'glVertexAttribI4ubv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4ubv)'
# const 'glVertexAttribI4ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4ui)'
# const 'glVertexAttribI4uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4uiv)'
# const 'glVertexAttribI4usv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4usv)'
# const 'glVertexAttribIPointer' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribIPointer)'
# const 'GLEW_VERSION_3_0' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_3_0)'
# const 'glDrawArraysInstanced' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstanced)'
# const 'glDrawElementsInstanced' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstanced)'
# const 'glPrimitiveRestartIndex' has unsupported value 'GLEW_GET_FUN(__glewPrimitiveRestartIndex)'
# const 'glTexBuffer' has unsupported value 'GLEW_GET_FUN(__glewTexBuffer)'
# const 'GLEW_VERSION_3_1' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_3_1)'
# const 'glFramebufferTexture' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture)'
# const 'glGetBufferParameteri64v' has unsupported value 'GLEW_GET_FUN(__glewGetBufferParameteri64v)'
# const 'glGetInteger64i_v' has unsupported value 'GLEW_GET_FUN(__glewGetInteger64i_v)'
# const 'GLEW_VERSION_3_2' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_3_2)'
# const 'glVertexAttribDivisor' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribDivisor)'
# const 'GLEW_VERSION_3_3' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_3_3)'
# const 'glBlendEquationSeparatei' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationSeparatei)'
# const 'glBlendEquationi' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationi)'
# const 'glBlendFuncSeparatei' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncSeparatei)'
# const 'glBlendFunci' has unsupported value 'GLEW_GET_FUN(__glewBlendFunci)'
# const 'glMinSampleShading' has unsupported value 'GLEW_GET_FUN(__glewMinSampleShading)'
# const 'GLEW_VERSION_4_0' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_0)'
# const 'GLEW_VERSION_4_1' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_1)'
# const 'GLEW_VERSION_4_2' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_2)'
# const 'GLEW_VERSION_4_3' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_3)'
# const 'GLEW_VERSION_4_4' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_4)'
# const 'glGetGraphicsResetStatus' has unsupported value 'GLEW_GET_FUN(__glewGetGraphicsResetStatus)'
# const 'glGetnCompressedTexImage' has unsupported value 'GLEW_GET_FUN(__glewGetnCompressedTexImage)'
# const 'glGetnTexImage' has unsupported value 'GLEW_GET_FUN(__glewGetnTexImage)'
# const 'glGetnUniformdv' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformdv)'
# const 'GLEW_VERSION_4_5' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_5)'
# const 'glMultiDrawArraysIndirectCount' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirectCount)'
# const 'glMultiDrawElementsIndirectCount' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirectCount)'
# const 'glSpecializeShader' has unsupported value 'GLEW_GET_FUN(__glewSpecializeShader)'
# const 'GLEW_VERSION_4_6' has unsupported value 'GLEW_GET_VAR(__GLEW_VERSION_4_6)'
# const 'GLEW_3DFX_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_3DFX_multisample)'
# const 'glTbufferMask3DFX' has unsupported value 'GLEW_GET_FUN(__glewTbufferMask3DFX)'
# const 'GLEW_3DFX_tbuffer' has unsupported value 'GLEW_GET_VAR(__GLEW_3DFX_tbuffer)'
# const 'GLEW_3DFX_texture_compression_FXT1' has unsupported value 'GLEW_GET_VAR(__GLEW_3DFX_texture_compression_FXT1)'
# const 'GLEW_AMD_blend_minmax_factor' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_blend_minmax_factor)'
# const 'GLEW_AMD_compressed_3DC_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_compressed_3DC_texture)'
# const 'GLEW_AMD_compressed_ATC_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_compressed_ATC_texture)'
# const 'GLEW_AMD_conservative_depth' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_conservative_depth)'
# const 'glDebugMessageCallbackAMD' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageCallbackAMD)'
# const 'glDebugMessageEnableAMD' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageEnableAMD)'
# const 'glDebugMessageInsertAMD' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageInsertAMD)'
# const 'glGetDebugMessageLogAMD' has unsupported value 'GLEW_GET_FUN(__glewGetDebugMessageLogAMD)'
# const 'GLEW_AMD_debug_output' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_debug_output)'
# const 'GLEW_AMD_depth_clamp_separate' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_depth_clamp_separate)'
# const 'glBlendEquationIndexedAMD' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationIndexedAMD)'
# const 'glBlendEquationSeparateIndexedAMD' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationSeparateIndexedAMD)'
# const 'glBlendFuncIndexedAMD' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncIndexedAMD)'
# const 'glBlendFuncSeparateIndexedAMD' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncSeparateIndexedAMD)'
# const 'GLEW_AMD_draw_buffers_blend' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_draw_buffers_blend)'
# const 'glFramebufferSamplePositionsfvAMD' has unsupported value 'GLEW_GET_FUN(__glewFramebufferSamplePositionsfvAMD)'
# const 'glGetFramebufferParameterfvAMD' has unsupported value 'GLEW_GET_FUN(__glewGetFramebufferParameterfvAMD)'
# const 'glGetNamedFramebufferParameterfvAMD' has unsupported value 'GLEW_GET_FUN(__glewGetNamedFramebufferParameterfvAMD)'
# const 'glNamedFramebufferSamplePositionsfvAMD' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferSamplePositionsfvAMD)'
# const 'GLEW_AMD_framebuffer_sample_positions' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_framebuffer_sample_positions)'
# const 'GLEW_AMD_gcn_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_gcn_shader)'
# const 'GLEW_AMD_gpu_shader_half_float' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_gpu_shader_half_float)'
# const 'GLEW_AMD_gpu_shader_int16' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_gpu_shader_int16)'
# const 'GLEW_AMD_gpu_shader_int64' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_gpu_shader_int64)'
# const 'glVertexAttribParameteriAMD' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribParameteriAMD)'
# const 'GLEW_AMD_interleaved_elements' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_interleaved_elements)'
# const 'glMultiDrawArraysIndirectAMD' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirectAMD)'
# const 'glMultiDrawElementsIndirectAMD' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirectAMD)'
# const 'GLEW_AMD_multi_draw_indirect' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_multi_draw_indirect)'
# const 'glDeleteNamesAMD' has unsupported value 'GLEW_GET_FUN(__glewDeleteNamesAMD)'
# const 'glGenNamesAMD' has unsupported value 'GLEW_GET_FUN(__glewGenNamesAMD)'
# const 'glIsNameAMD' has unsupported value 'GLEW_GET_FUN(__glewIsNameAMD)'
# const 'GLEW_AMD_name_gen_delete' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_name_gen_delete)'
# const 'glQueryObjectParameteruiAMD' has unsupported value 'GLEW_GET_FUN(__glewQueryObjectParameteruiAMD)'
# const 'GLEW_AMD_occlusion_query_event' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_occlusion_query_event)'
# const 'glBeginPerfMonitorAMD' has unsupported value 'GLEW_GET_FUN(__glewBeginPerfMonitorAMD)'
# const 'glDeletePerfMonitorsAMD' has unsupported value 'GLEW_GET_FUN(__glewDeletePerfMonitorsAMD)'
# const 'glEndPerfMonitorAMD' has unsupported value 'GLEW_GET_FUN(__glewEndPerfMonitorAMD)'
# const 'glGenPerfMonitorsAMD' has unsupported value 'GLEW_GET_FUN(__glewGenPerfMonitorsAMD)'
# const 'glGetPerfMonitorCounterDataAMD' has unsupported value 'GLEW_GET_FUN(__glewGetPerfMonitorCounterDataAMD)'
# const 'glGetPerfMonitorCounterInfoAMD' has unsupported value 'GLEW_GET_FUN(__glewGetPerfMonitorCounterInfoAMD)'
# const 'glGetPerfMonitorCounterStringAMD' has unsupported value 'GLEW_GET_FUN(__glewGetPerfMonitorCounterStringAMD)'
# const 'glGetPerfMonitorCountersAMD' has unsupported value 'GLEW_GET_FUN(__glewGetPerfMonitorCountersAMD)'
# const 'glGetPerfMonitorGroupStringAMD' has unsupported value 'GLEW_GET_FUN(__glewGetPerfMonitorGroupStringAMD)'
# const 'glGetPerfMonitorGroupsAMD' has unsupported value 'GLEW_GET_FUN(__glewGetPerfMonitorGroupsAMD)'
# const 'glSelectPerfMonitorCountersAMD' has unsupported value 'GLEW_GET_FUN(__glewSelectPerfMonitorCountersAMD)'
# const 'GLEW_AMD_performance_monitor' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_performance_monitor)'
# const 'GLEW_AMD_pinned_memory' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_pinned_memory)'
# const 'GLEW_AMD_program_binary_Z400' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_program_binary_Z400)'
# const 'GLEW_AMD_query_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_query_buffer_object)'
# const 'glSetMultisamplefvAMD' has unsupported value 'GLEW_GET_FUN(__glewSetMultisamplefvAMD)'
# const 'GLEW_AMD_sample_positions' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_sample_positions)'
# const 'GLEW_AMD_seamless_cubemap_per_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_seamless_cubemap_per_texture)'
# const 'GLEW_AMD_shader_atomic_counter_ops' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_shader_atomic_counter_ops)'
# const 'GLEW_AMD_shader_ballot' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_shader_ballot)'
# const 'GLEW_AMD_shader_explicit_vertex_parameter' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_shader_explicit_vertex_parameter)'
# const 'GLEW_AMD_shader_stencil_export' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_shader_stencil_export)'
# const 'GLEW_AMD_shader_stencil_value_export' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_shader_stencil_value_export)'
# const 'GLEW_AMD_shader_trinary_minmax' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_shader_trinary_minmax)'
# const 'glTexStorageSparseAMD' has unsupported value 'GLEW_GET_FUN(__glewTexStorageSparseAMD)'
# const 'glTextureStorageSparseAMD' has unsupported value 'GLEW_GET_FUN(__glewTextureStorageSparseAMD)'
# const 'GLEW_AMD_sparse_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_sparse_texture)'
# const 'glStencilOpValueAMD' has unsupported value 'GLEW_GET_FUN(__glewStencilOpValueAMD)'
# const 'GLEW_AMD_stencil_operation_extended' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_stencil_operation_extended)'
# const 'GLEW_AMD_texture_gather_bias_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_texture_gather_bias_lod)'
# const 'GLEW_AMD_texture_texture4' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_texture_texture4)'
# const 'GLEW_AMD_transform_feedback3_lines_triangles' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_transform_feedback3_lines_triangles)'
# const 'GLEW_AMD_transform_feedback4' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_transform_feedback4)'
# const 'GLEW_AMD_vertex_shader_layer' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_vertex_shader_layer)'
# const 'glTessellationFactorAMD' has unsupported value 'GLEW_GET_FUN(__glewTessellationFactorAMD)'
# const 'glTessellationModeAMD' has unsupported value 'GLEW_GET_FUN(__glewTessellationModeAMD)'
# const 'GLEW_AMD_vertex_shader_tessellator' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_vertex_shader_tessellator)'
# const 'GLEW_AMD_vertex_shader_viewport_index' has unsupported value 'GLEW_GET_VAR(__GLEW_AMD_vertex_shader_viewport_index)'
# const 'GLEW_ANDROID_extension_pack_es31a' has unsupported value 'GLEW_GET_VAR(__GLEW_ANDROID_extension_pack_es31a)'
# const 'GLEW_ANGLE_depth_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_depth_texture)'
# const 'glBlitFramebufferANGLE' has unsupported value 'GLEW_GET_FUN(__glewBlitFramebufferANGLE)'
# const 'GLEW_ANGLE_framebuffer_blit' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_framebuffer_blit)'
# const 'glRenderbufferStorageMultisampleANGLE' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageMultisampleANGLE)'
# const 'GLEW_ANGLE_framebuffer_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_framebuffer_multisample)'
# const 'glDrawArraysInstancedANGLE' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstancedANGLE)'
# const 'glDrawElementsInstancedANGLE' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedANGLE)'
# const 'glVertexAttribDivisorANGLE' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribDivisorANGLE)'
# const 'GLEW_ANGLE_instanced_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_instanced_arrays)'
# const 'GLEW_ANGLE_pack_reverse_row_order' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_pack_reverse_row_order)'
# const 'GLEW_ANGLE_program_binary' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_program_binary)'
# const 'GLEW_ANGLE_texture_compression_dxt1' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt1)'
# const 'GLEW_ANGLE_texture_compression_dxt3' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt3)'
# const 'GLEW_ANGLE_texture_compression_dxt5' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt5)'
# const 'GLEW_ANGLE_texture_usage' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_texture_usage)'
# const 'glBeginQueryANGLE' has unsupported value 'GLEW_GET_FUN(__glewBeginQueryANGLE)'
# const 'glDeleteQueriesANGLE' has unsupported value 'GLEW_GET_FUN(__glewDeleteQueriesANGLE)'
# const 'glEndQueryANGLE' has unsupported value 'GLEW_GET_FUN(__glewEndQueryANGLE)'
# const 'glGenQueriesANGLE' has unsupported value 'GLEW_GET_FUN(__glewGenQueriesANGLE)'
# const 'glGetQueryObjecti64vANGLE' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjecti64vANGLE)'
# const 'glGetQueryObjectivANGLE' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectivANGLE)'
# const 'glGetQueryObjectui64vANGLE' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectui64vANGLE)'
# const 'glGetQueryObjectuivANGLE' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectuivANGLE)'
# const 'glGetQueryivANGLE' has unsupported value 'GLEW_GET_FUN(__glewGetQueryivANGLE)'
# const 'glIsQueryANGLE' has unsupported value 'GLEW_GET_FUN(__glewIsQueryANGLE)'
# const 'glQueryCounterANGLE' has unsupported value 'GLEW_GET_FUN(__glewQueryCounterANGLE)'
# const 'GLEW_ANGLE_timer_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_timer_query)'
# const 'glGetTranslatedShaderSourceANGLE' has unsupported value 'GLEW_GET_FUN(__glewGetTranslatedShaderSourceANGLE)'
# const 'GLEW_ANGLE_translated_shader_source' has unsupported value 'GLEW_GET_VAR(__GLEW_ANGLE_translated_shader_source)'
# const 'GLEW_APPLE_aux_depth_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_aux_depth_stencil)'
# const 'GLEW_APPLE_client_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_client_storage)'
# const 'GLEW_APPLE_clip_distance' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_clip_distance)'
# const 'GLEW_APPLE_color_buffer_packed_float' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_color_buffer_packed_float)'
# const 'glCopyTextureLevelsAPPLE' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureLevelsAPPLE)'
# const 'GLEW_APPLE_copy_texture_levels' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_copy_texture_levels)'
# const 'glDrawElementArrayAPPLE' has unsupported value 'GLEW_GET_FUN(__glewDrawElementArrayAPPLE)'
# const 'glDrawRangeElementArrayAPPLE' has unsupported value 'GLEW_GET_FUN(__glewDrawRangeElementArrayAPPLE)'
# const 'glElementPointerAPPLE' has unsupported value 'GLEW_GET_FUN(__glewElementPointerAPPLE)'
# const 'glMultiDrawElementArrayAPPLE' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementArrayAPPLE)'
# const 'glMultiDrawRangeElementArrayAPPLE' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawRangeElementArrayAPPLE)'
# const 'GLEW_APPLE_element_array' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_element_array)'
# const 'glDeleteFencesAPPLE' has unsupported value 'GLEW_GET_FUN(__glewDeleteFencesAPPLE)'
# const 'glFinishFenceAPPLE' has unsupported value 'GLEW_GET_FUN(__glewFinishFenceAPPLE)'
# const 'glFinishObjectAPPLE' has unsupported value 'GLEW_GET_FUN(__glewFinishObjectAPPLE)'
# const 'glGenFencesAPPLE' has unsupported value 'GLEW_GET_FUN(__glewGenFencesAPPLE)'
# const 'glIsFenceAPPLE' has unsupported value 'GLEW_GET_FUN(__glewIsFenceAPPLE)'
# const 'glSetFenceAPPLE' has unsupported value 'GLEW_GET_FUN(__glewSetFenceAPPLE)'
# const 'glTestFenceAPPLE' has unsupported value 'GLEW_GET_FUN(__glewTestFenceAPPLE)'
# const 'glTestObjectAPPLE' has unsupported value 'GLEW_GET_FUN(__glewTestObjectAPPLE)'
# const 'GLEW_APPLE_fence' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_fence)'
# const 'GLEW_APPLE_float_pixels' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_float_pixels)'
# const 'glBufferParameteriAPPLE' has unsupported value 'GLEW_GET_FUN(__glewBufferParameteriAPPLE)'
# const 'glFlushMappedBufferRangeAPPLE' has unsupported value 'GLEW_GET_FUN(__glewFlushMappedBufferRangeAPPLE)'
# const 'GLEW_APPLE_flush_buffer_range' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_flush_buffer_range)'
# const 'glRenderbufferStorageMultisampleAPPLE' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageMultisampleAPPLE)'
# const 'glResolveMultisampleFramebufferAPPLE' has unsupported value 'GLEW_GET_FUN(__glewResolveMultisampleFramebufferAPPLE)'
# const 'GLEW_APPLE_framebuffer_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_framebuffer_multisample)'
# const 'glGetObjectParameterivAPPLE' has unsupported value 'GLEW_GET_FUN(__glewGetObjectParameterivAPPLE)'
# const 'glObjectPurgeableAPPLE' has unsupported value 'GLEW_GET_FUN(__glewObjectPurgeableAPPLE)'
# const 'glObjectUnpurgeableAPPLE' has unsupported value 'GLEW_GET_FUN(__glewObjectUnpurgeableAPPLE)'
# const 'GLEW_APPLE_object_purgeable' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_object_purgeable)'
# const 'GLEW_APPLE_pixel_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_pixel_buffer)'
# const 'GLEW_APPLE_rgb_422' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_rgb_422)'
# const 'GLEW_APPLE_row_bytes' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_row_bytes)'
# const 'GLEW_APPLE_specular_vector' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_specular_vector)'
# const 'glClientWaitSyncAPPLE' has unsupported value 'GLEW_GET_FUN(__glewClientWaitSyncAPPLE)'
# const 'glDeleteSyncAPPLE' has unsupported value 'GLEW_GET_FUN(__glewDeleteSyncAPPLE)'
# const 'glFenceSyncAPPLE' has unsupported value 'GLEW_GET_FUN(__glewFenceSyncAPPLE)'
# const 'glGetInteger64vAPPLE' has unsupported value 'GLEW_GET_FUN(__glewGetInteger64vAPPLE)'
# const 'glGetSyncivAPPLE' has unsupported value 'GLEW_GET_FUN(__glewGetSyncivAPPLE)'
# const 'glIsSyncAPPLE' has unsupported value 'GLEW_GET_FUN(__glewIsSyncAPPLE)'
# const 'glWaitSyncAPPLE' has unsupported value 'GLEW_GET_FUN(__glewWaitSyncAPPLE)'
# const 'GLEW_APPLE_sync' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_sync)'
# const 'GLEW_APPLE_texture_2D_limited_npot' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_texture_2D_limited_npot)'
# const 'GLEW_APPLE_texture_format_BGRA8888' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_texture_format_BGRA8888)'
# const 'GLEW_APPLE_texture_max_level' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_texture_max_level)'
# const 'GLEW_APPLE_texture_packed_float' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_texture_packed_float)'
# const 'glGetTexParameterPointervAPPLE' has unsupported value 'GLEW_GET_FUN(__glewGetTexParameterPointervAPPLE)'
# const 'glTextureRangeAPPLE' has unsupported value 'GLEW_GET_FUN(__glewTextureRangeAPPLE)'
# const 'GLEW_APPLE_texture_range' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_texture_range)'
# const 'GLEW_APPLE_transform_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_transform_hint)'
# const 'glBindVertexArrayAPPLE' has unsupported value 'GLEW_GET_FUN(__glewBindVertexArrayAPPLE)'
# const 'glDeleteVertexArraysAPPLE' has unsupported value 'GLEW_GET_FUN(__glewDeleteVertexArraysAPPLE)'
# const 'glGenVertexArraysAPPLE' has unsupported value 'GLEW_GET_FUN(__glewGenVertexArraysAPPLE)'
# const 'glIsVertexArrayAPPLE' has unsupported value 'GLEW_GET_FUN(__glewIsVertexArrayAPPLE)'
# const 'GLEW_APPLE_vertex_array_object' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_vertex_array_object)'
# const 'glFlushVertexArrayRangeAPPLE' has unsupported value 'GLEW_GET_FUN(__glewFlushVertexArrayRangeAPPLE)'
# const 'glVertexArrayParameteriAPPLE' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayParameteriAPPLE)'
# const 'glVertexArrayRangeAPPLE' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayRangeAPPLE)'
# const 'GLEW_APPLE_vertex_array_range' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_vertex_array_range)'
# const 'glDisableVertexAttribAPPLE' has unsupported value 'GLEW_GET_FUN(__glewDisableVertexAttribAPPLE)'
# const 'glEnableVertexAttribAPPLE' has unsupported value 'GLEW_GET_FUN(__glewEnableVertexAttribAPPLE)'
# const 'glIsVertexAttribEnabledAPPLE' has unsupported value 'GLEW_GET_FUN(__glewIsVertexAttribEnabledAPPLE)'
# const 'glMapVertexAttrib1dAPPLE' has unsupported value 'GLEW_GET_FUN(__glewMapVertexAttrib1dAPPLE)'
# const 'glMapVertexAttrib1fAPPLE' has unsupported value 'GLEW_GET_FUN(__glewMapVertexAttrib1fAPPLE)'
# const 'glMapVertexAttrib2dAPPLE' has unsupported value 'GLEW_GET_FUN(__glewMapVertexAttrib2dAPPLE)'
# const 'glMapVertexAttrib2fAPPLE' has unsupported value 'GLEW_GET_FUN(__glewMapVertexAttrib2fAPPLE)'
# const 'GLEW_APPLE_vertex_program_evaluators' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_vertex_program_evaluators)'
# const 'GLEW_APPLE_ycbcr_422' has unsupported value 'GLEW_GET_VAR(__GLEW_APPLE_ycbcr_422)'
# const 'glClearDepthf' has unsupported value 'GLEW_GET_FUN(__glewClearDepthf)'
# const 'glDepthRangef' has unsupported value 'GLEW_GET_FUN(__glewDepthRangef)'
# const 'glGetShaderPrecisionFormat' has unsupported value 'GLEW_GET_FUN(__glewGetShaderPrecisionFormat)'
# const 'glReleaseShaderCompiler' has unsupported value 'GLEW_GET_FUN(__glewReleaseShaderCompiler)'
# const 'glShaderBinary' has unsupported value 'GLEW_GET_FUN(__glewShaderBinary)'
# const 'GLEW_ARB_ES2_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_ES2_compatibility)'
# const 'glMemoryBarrierByRegion' has unsupported value 'GLEW_GET_FUN(__glewMemoryBarrierByRegion)'
# const 'GLEW_ARB_ES3_1_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_ES3_1_compatibility)'
# const 'glPrimitiveBoundingBoxARB' has unsupported value 'GLEW_GET_FUN(__glewPrimitiveBoundingBoxARB)'
# const 'GLEW_ARB_ES3_2_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_ES3_2_compatibility)'
# const 'GLEW_ARB_ES3_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_ES3_compatibility)'
# const 'GLEW_ARB_arrays_of_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_arrays_of_arrays)'
# const 'glDrawArraysInstancedBaseInstance' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstancedBaseInstance)'
# const 'glDrawElementsInstancedBaseInstance' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedBaseInstance)'
# const 'glDrawElementsInstancedBaseVertexBaseInstance' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedBaseVertexBaseInstance)'
# const 'GLEW_ARB_base_instance' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_base_instance)'
# const 'glGetImageHandleARB' has unsupported value 'GLEW_GET_FUN(__glewGetImageHandleARB)'
# const 'glGetTextureHandleARB' has unsupported value 'GLEW_GET_FUN(__glewGetTextureHandleARB)'
# const 'glGetTextureSamplerHandleARB' has unsupported value 'GLEW_GET_FUN(__glewGetTextureSamplerHandleARB)'
# const 'glGetVertexAttribLui64vARB' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribLui64vARB)'
# const 'glIsImageHandleResidentARB' has unsupported value 'GLEW_GET_FUN(__glewIsImageHandleResidentARB)'
# const 'glIsTextureHandleResidentARB' has unsupported value 'GLEW_GET_FUN(__glewIsTextureHandleResidentARB)'
# const 'glMakeImageHandleNonResidentARB' has unsupported value 'GLEW_GET_FUN(__glewMakeImageHandleNonResidentARB)'
# const 'glMakeImageHandleResidentARB' has unsupported value 'GLEW_GET_FUN(__glewMakeImageHandleResidentARB)'
# const 'glMakeTextureHandleNonResidentARB' has unsupported value 'GLEW_GET_FUN(__glewMakeTextureHandleNonResidentARB)'
# const 'glMakeTextureHandleResidentARB' has unsupported value 'GLEW_GET_FUN(__glewMakeTextureHandleResidentARB)'
# const 'glProgramUniformHandleui64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformHandleui64ARB)'
# const 'glProgramUniformHandleui64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformHandleui64vARB)'
# const 'glUniformHandleui64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniformHandleui64ARB)'
# const 'glUniformHandleui64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniformHandleui64vARB)'
# const 'glVertexAttribL1ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1ui64ARB)'
# const 'glVertexAttribL1ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1ui64vARB)'
# const 'GLEW_ARB_bindless_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_bindless_texture)'
# const 'glBindFragDataLocationIndexed' has unsupported value 'GLEW_GET_FUN(__glewBindFragDataLocationIndexed)'
# const 'glGetFragDataIndex' has unsupported value 'GLEW_GET_FUN(__glewGetFragDataIndex)'
# const 'GLEW_ARB_blend_func_extended' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_blend_func_extended)'
# const 'glBufferStorage' has unsupported value 'GLEW_GET_FUN(__glewBufferStorage)'
# const 'GLEW_ARB_buffer_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_buffer_storage)'
# const 'glCreateSyncFromCLeventARB' has unsupported value 'GLEW_GET_FUN(__glewCreateSyncFromCLeventARB)'
# const 'GLEW_ARB_cl_event' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_cl_event)'
# const 'glClearBufferData' has unsupported value 'GLEW_GET_FUN(__glewClearBufferData)'
# const 'glClearBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewClearBufferSubData)'
# const 'glClearNamedBufferDataEXT' has unsupported value 'GLEW_GET_FUN(__glewClearNamedBufferDataEXT)'
# const 'glClearNamedBufferSubDataEXT' has unsupported value 'GLEW_GET_FUN(__glewClearNamedBufferSubDataEXT)'
# const 'GLEW_ARB_clear_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_clear_buffer_object)'
# const 'glClearTexImage' has unsupported value 'GLEW_GET_FUN(__glewClearTexImage)'
# const 'glClearTexSubImage' has unsupported value 'GLEW_GET_FUN(__glewClearTexSubImage)'
# const 'GLEW_ARB_clear_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_clear_texture)'
# const 'glClipControl' has unsupported value 'GLEW_GET_FUN(__glewClipControl)'
# const 'GLEW_ARB_clip_control' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_clip_control)'
# const 'glClampColorARB' has unsupported value 'GLEW_GET_FUN(__glewClampColorARB)'
# const 'GLEW_ARB_color_buffer_float' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_color_buffer_float)'
# const 'GLEW_ARB_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_compatibility)'
# const 'GLEW_ARB_compressed_texture_pixel_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_compressed_texture_pixel_storage)'
# const 'glDispatchCompute' has unsupported value 'GLEW_GET_FUN(__glewDispatchCompute)'
# const 'glDispatchComputeIndirect' has unsupported value 'GLEW_GET_FUN(__glewDispatchComputeIndirect)'
# const 'GLEW_ARB_compute_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_compute_shader)'
# const 'glDispatchComputeGroupSizeARB' has unsupported value 'GLEW_GET_FUN(__glewDispatchComputeGroupSizeARB)'
# const 'GLEW_ARB_compute_variable_group_size' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_compute_variable_group_size)'
# const 'GLEW_ARB_conditional_render_inverted' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_conditional_render_inverted)'
# const 'GLEW_ARB_conservative_depth' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_conservative_depth)'
# const 'glCopyBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewCopyBufferSubData)'
# const 'GLEW_ARB_copy_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_copy_buffer)'
# const 'glCopyImageSubData' has unsupported value 'GLEW_GET_FUN(__glewCopyImageSubData)'
# const 'GLEW_ARB_copy_image' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_copy_image)'
# const 'GLEW_ARB_cull_distance' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_cull_distance)'
# const 'glDebugMessageCallbackARB' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageCallbackARB)'
# const 'glDebugMessageControlARB' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageControlARB)'
# const 'glDebugMessageInsertARB' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageInsertARB)'
# const 'glGetDebugMessageLogARB' has unsupported value 'GLEW_GET_FUN(__glewGetDebugMessageLogARB)'
# const 'GLEW_ARB_debug_output' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_debug_output)'
# const 'GLEW_ARB_depth_buffer_float' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_depth_buffer_float)'
# const 'GLEW_ARB_depth_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_depth_clamp)'
# const 'GLEW_ARB_depth_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_depth_texture)'
# const 'GLEW_ARB_derivative_control' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_derivative_control)'
# const 'glBindTextureUnit' has unsupported value 'GLEW_GET_FUN(__glewBindTextureUnit)'
# const 'glBlitNamedFramebuffer' has unsupported value 'GLEW_GET_FUN(__glewBlitNamedFramebuffer)'
# const 'glCheckNamedFramebufferStatus' has unsupported value 'GLEW_GET_FUN(__glewCheckNamedFramebufferStatus)'
# const 'glClearNamedBufferData' has unsupported value 'GLEW_GET_FUN(__glewClearNamedBufferData)'
# const 'glClearNamedBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewClearNamedBufferSubData)'
# const 'glClearNamedFramebufferfi' has unsupported value 'GLEW_GET_FUN(__glewClearNamedFramebufferfi)'
# const 'glClearNamedFramebufferfv' has unsupported value 'GLEW_GET_FUN(__glewClearNamedFramebufferfv)'
# const 'glClearNamedFramebufferiv' has unsupported value 'GLEW_GET_FUN(__glewClearNamedFramebufferiv)'
# const 'glClearNamedFramebufferuiv' has unsupported value 'GLEW_GET_FUN(__glewClearNamedFramebufferuiv)'
# const 'glCompressedTextureSubImage1D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureSubImage1D)'
# const 'glCompressedTextureSubImage2D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureSubImage2D)'
# const 'glCompressedTextureSubImage3D' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureSubImage3D)'
# const 'glCopyNamedBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewCopyNamedBufferSubData)'
# const 'glCopyTextureSubImage1D' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureSubImage1D)'
# const 'glCopyTextureSubImage2D' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureSubImage2D)'
# const 'glCopyTextureSubImage3D' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureSubImage3D)'
# const 'glCreateBuffers' has unsupported value 'GLEW_GET_FUN(__glewCreateBuffers)'
# const 'glCreateFramebuffers' has unsupported value 'GLEW_GET_FUN(__glewCreateFramebuffers)'
# const 'glCreateProgramPipelines' has unsupported value 'GLEW_GET_FUN(__glewCreateProgramPipelines)'
# const 'glCreateQueries' has unsupported value 'GLEW_GET_FUN(__glewCreateQueries)'
# const 'glCreateRenderbuffers' has unsupported value 'GLEW_GET_FUN(__glewCreateRenderbuffers)'
# const 'glCreateSamplers' has unsupported value 'GLEW_GET_FUN(__glewCreateSamplers)'
# const 'glCreateTextures' has unsupported value 'GLEW_GET_FUN(__glewCreateTextures)'
# const 'glCreateTransformFeedbacks' has unsupported value 'GLEW_GET_FUN(__glewCreateTransformFeedbacks)'
# const 'glCreateVertexArrays' has unsupported value 'GLEW_GET_FUN(__glewCreateVertexArrays)'
# const 'glDisableVertexArrayAttrib' has unsupported value 'GLEW_GET_FUN(__glewDisableVertexArrayAttrib)'
# const 'glEnableVertexArrayAttrib' has unsupported value 'GLEW_GET_FUN(__glewEnableVertexArrayAttrib)'
# const 'glFlushMappedNamedBufferRange' has unsupported value 'GLEW_GET_FUN(__glewFlushMappedNamedBufferRange)'
# const 'glGenerateTextureMipmap' has unsupported value 'GLEW_GET_FUN(__glewGenerateTextureMipmap)'
# const 'glGetCompressedTextureImage' has unsupported value 'GLEW_GET_FUN(__glewGetCompressedTextureImage)'
# const 'glGetNamedBufferParameteri64v' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferParameteri64v)'
# const 'glGetNamedBufferParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferParameteriv)'
# const 'glGetNamedBufferPointerv' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferPointerv)'
# const 'glGetNamedBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferSubData)'
# const 'glGetNamedFramebufferAttachmentParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetNamedFramebufferAttachmentParameteriv)'
# const 'glGetNamedFramebufferParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetNamedFramebufferParameteriv)'
# const 'glGetNamedRenderbufferParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetNamedRenderbufferParameteriv)'
# const 'glGetQueryBufferObjecti64v' has unsupported value 'GLEW_GET_FUN(__glewGetQueryBufferObjecti64v)'
# const 'glGetQueryBufferObjectiv' has unsupported value 'GLEW_GET_FUN(__glewGetQueryBufferObjectiv)'
# const 'glGetQueryBufferObjectui64v' has unsupported value 'GLEW_GET_FUN(__glewGetQueryBufferObjectui64v)'
# const 'glGetQueryBufferObjectuiv' has unsupported value 'GLEW_GET_FUN(__glewGetQueryBufferObjectuiv)'
# const 'glGetTextureImage' has unsupported value 'GLEW_GET_FUN(__glewGetTextureImage)'
# const 'glGetTextureLevelParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetTextureLevelParameterfv)'
# const 'glGetTextureLevelParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetTextureLevelParameteriv)'
# const 'glGetTextureParameterIiv' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterIiv)'
# const 'glGetTextureParameterIuiv' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterIuiv)'
# const 'glGetTextureParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterfv)'
# const 'glGetTextureParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameteriv)'
# const 'glGetTransformFeedbacki64_v' has unsupported value 'GLEW_GET_FUN(__glewGetTransformFeedbacki64_v)'
# const 'glGetTransformFeedbacki_v' has unsupported value 'GLEW_GET_FUN(__glewGetTransformFeedbacki_v)'
# const 'glGetTransformFeedbackiv' has unsupported value 'GLEW_GET_FUN(__glewGetTransformFeedbackiv)'
# const 'glGetVertexArrayIndexed64iv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayIndexed64iv)'
# const 'glGetVertexArrayIndexediv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayIndexediv)'
# const 'glGetVertexArrayiv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayiv)'
# const 'glInvalidateNamedFramebufferData' has unsupported value 'GLEW_GET_FUN(__glewInvalidateNamedFramebufferData)'
# const 'glInvalidateNamedFramebufferSubData' has unsupported value 'GLEW_GET_FUN(__glewInvalidateNamedFramebufferSubData)'
# const 'glMapNamedBuffer' has unsupported value 'GLEW_GET_FUN(__glewMapNamedBuffer)'
# const 'glMapNamedBufferRange' has unsupported value 'GLEW_GET_FUN(__glewMapNamedBufferRange)'
# const 'glNamedBufferData' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferData)'
# const 'glNamedBufferStorage' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferStorage)'
# const 'glNamedBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferSubData)'
# const 'glNamedFramebufferDrawBuffer' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferDrawBuffer)'
# const 'glNamedFramebufferDrawBuffers' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferDrawBuffers)'
# const 'glNamedFramebufferParameteri' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferParameteri)'
# const 'glNamedFramebufferReadBuffer' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferReadBuffer)'
# const 'glNamedFramebufferRenderbuffer' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferRenderbuffer)'
# const 'glNamedFramebufferTexture' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTexture)'
# const 'glNamedFramebufferTextureLayer' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTextureLayer)'
# const 'glNamedRenderbufferStorage' has unsupported value 'GLEW_GET_FUN(__glewNamedRenderbufferStorage)'
# const 'glNamedRenderbufferStorageMultisample' has unsupported value 'GLEW_GET_FUN(__glewNamedRenderbufferStorageMultisample)'
# const 'glTextureBuffer' has unsupported value 'GLEW_GET_FUN(__glewTextureBuffer)'
# const 'glTextureBufferRange' has unsupported value 'GLEW_GET_FUN(__glewTextureBufferRange)'
# const 'glTextureParameterIiv' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterIiv)'
# const 'glTextureParameterIuiv' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterIuiv)'
# const 'glTextureParameterf' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterf)'
# const 'glTextureParameterfv' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterfv)'
# const 'glTextureParameteri' has unsupported value 'GLEW_GET_FUN(__glewTextureParameteri)'
# const 'glTextureParameteriv' has unsupported value 'GLEW_GET_FUN(__glewTextureParameteriv)'
# const 'glTextureStorage1D' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage1D)'
# const 'glTextureStorage2D' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage2D)'
# const 'glTextureStorage2DMultisample' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage2DMultisample)'
# const 'glTextureStorage3D' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage3D)'
# const 'glTextureStorage3DMultisample' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage3DMultisample)'
# const 'glTextureSubImage1D' has unsupported value 'GLEW_GET_FUN(__glewTextureSubImage1D)'
# const 'glTextureSubImage2D' has unsupported value 'GLEW_GET_FUN(__glewTextureSubImage2D)'
# const 'glTextureSubImage3D' has unsupported value 'GLEW_GET_FUN(__glewTextureSubImage3D)'
# const 'glTransformFeedbackBufferBase' has unsupported value 'GLEW_GET_FUN(__glewTransformFeedbackBufferBase)'
# const 'glTransformFeedbackBufferRange' has unsupported value 'GLEW_GET_FUN(__glewTransformFeedbackBufferRange)'
# const 'glUnmapNamedBuffer' has unsupported value 'GLEW_GET_FUN(__glewUnmapNamedBuffer)'
# const 'glVertexArrayAttribBinding' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayAttribBinding)'
# const 'glVertexArrayAttribFormat' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayAttribFormat)'
# const 'glVertexArrayAttribIFormat' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayAttribIFormat)'
# const 'glVertexArrayAttribLFormat' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayAttribLFormat)'
# const 'glVertexArrayBindingDivisor' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayBindingDivisor)'
# const 'glVertexArrayElementBuffer' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayElementBuffer)'
# const 'glVertexArrayVertexBuffer' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexBuffer)'
# const 'glVertexArrayVertexBuffers' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexBuffers)'
# const 'GLEW_ARB_direct_state_access' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_direct_state_access)'
# const 'glDrawBuffersARB' has unsupported value 'GLEW_GET_FUN(__glewDrawBuffersARB)'
# const 'GLEW_ARB_draw_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_draw_buffers)'
# const 'glBlendEquationSeparateiARB' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationSeparateiARB)'
# const 'glBlendEquationiARB' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationiARB)'
# const 'glBlendFuncSeparateiARB' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncSeparateiARB)'
# const 'glBlendFunciARB' has unsupported value 'GLEW_GET_FUN(__glewBlendFunciARB)'
# const 'GLEW_ARB_draw_buffers_blend' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_draw_buffers_blend)'
# const 'glDrawElementsBaseVertex' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsBaseVertex)'
# const 'glDrawElementsInstancedBaseVertex' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedBaseVertex)'
# const 'glDrawRangeElementsBaseVertex' has unsupported value 'GLEW_GET_FUN(__glewDrawRangeElementsBaseVertex)'
# const 'glMultiDrawElementsBaseVertex' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsBaseVertex)'
# const 'GLEW_ARB_draw_elements_base_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_draw_elements_base_vertex)'
# const 'glDrawArraysIndirect' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysIndirect)'
# const 'glDrawElementsIndirect' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsIndirect)'
# const 'GLEW_ARB_draw_indirect' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_draw_indirect)'
# const 'GLEW_ARB_draw_instanced' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_draw_instanced)'
# const 'GLEW_ARB_enhanced_layouts' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_enhanced_layouts)'
# const 'GLEW_ARB_explicit_attrib_location' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_explicit_attrib_location)'
# const 'GLEW_ARB_explicit_uniform_location' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_explicit_uniform_location)'
# const 'GLEW_ARB_fragment_coord_conventions' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_fragment_coord_conventions)'
# const 'GLEW_ARB_fragment_layer_viewport' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_fragment_layer_viewport)'
# const 'GLEW_ARB_fragment_program' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_fragment_program)'
# const 'GLEW_ARB_fragment_program_shadow' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_fragment_program_shadow)'
# const 'GLEW_ARB_fragment_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_fragment_shader)'
# const 'GLEW_ARB_fragment_shader_interlock' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_fragment_shader_interlock)'
# const 'glFramebufferParameteri' has unsupported value 'GLEW_GET_FUN(__glewFramebufferParameteri)'
# const 'glGetFramebufferParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetFramebufferParameteriv)'
# const 'glGetNamedFramebufferParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedFramebufferParameterivEXT)'
# const 'glNamedFramebufferParameteriEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferParameteriEXT)'
# const 'GLEW_ARB_framebuffer_no_attachments' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_framebuffer_no_attachments)'
# const 'glBindFramebuffer' has unsupported value 'GLEW_GET_FUN(__glewBindFramebuffer)'
# const 'glBindRenderbuffer' has unsupported value 'GLEW_GET_FUN(__glewBindRenderbuffer)'
# const 'glBlitFramebuffer' has unsupported value 'GLEW_GET_FUN(__glewBlitFramebuffer)'
# const 'glCheckFramebufferStatus' has unsupported value 'GLEW_GET_FUN(__glewCheckFramebufferStatus)'
# const 'glDeleteFramebuffers' has unsupported value 'GLEW_GET_FUN(__glewDeleteFramebuffers)'
# const 'glDeleteRenderbuffers' has unsupported value 'GLEW_GET_FUN(__glewDeleteRenderbuffers)'
# const 'glFramebufferRenderbuffer' has unsupported value 'GLEW_GET_FUN(__glewFramebufferRenderbuffer)'
# const 'glFramebufferTexture1D' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture1D)'
# const 'glFramebufferTexture2D' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture2D)'
# const 'glFramebufferTexture3D' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture3D)'
# const 'glFramebufferTextureLayer' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureLayer)'
# const 'glGenFramebuffers' has unsupported value 'GLEW_GET_FUN(__glewGenFramebuffers)'
# const 'glGenRenderbuffers' has unsupported value 'GLEW_GET_FUN(__glewGenRenderbuffers)'
# const 'glGenerateMipmap' has unsupported value 'GLEW_GET_FUN(__glewGenerateMipmap)'
# const 'glGetFramebufferAttachmentParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetFramebufferAttachmentParameteriv)'
# const 'glGetRenderbufferParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetRenderbufferParameteriv)'
# const 'glIsFramebuffer' has unsupported value 'GLEW_GET_FUN(__glewIsFramebuffer)'
# const 'glIsRenderbuffer' has unsupported value 'GLEW_GET_FUN(__glewIsRenderbuffer)'
# const 'glRenderbufferStorage' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorage)'
# const 'glRenderbufferStorageMultisample' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageMultisample)'
# const 'GLEW_ARB_framebuffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_framebuffer_object)'
# const 'GLEW_ARB_framebuffer_sRGB' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_framebuffer_sRGB)'
# const 'glFramebufferTextureARB' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureARB)'
# const 'glFramebufferTextureFaceARB' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureFaceARB)'
# const 'glFramebufferTextureLayerARB' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureLayerARB)'
# const 'glProgramParameteriARB' has unsupported value 'GLEW_GET_FUN(__glewProgramParameteriARB)'
# const 'GLEW_ARB_geometry_shader4' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_geometry_shader4)'
# const 'glGetProgramBinary' has unsupported value 'GLEW_GET_FUN(__glewGetProgramBinary)'
# const 'glProgramBinary' has unsupported value 'GLEW_GET_FUN(__glewProgramBinary)'
# const 'glProgramParameteri' has unsupported value 'GLEW_GET_FUN(__glewProgramParameteri)'
# const 'GLEW_ARB_get_program_binary' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_get_program_binary)'
# const 'glGetCompressedTextureSubImage' has unsupported value 'GLEW_GET_FUN(__glewGetCompressedTextureSubImage)'
# const 'glGetTextureSubImage' has unsupported value 'GLEW_GET_FUN(__glewGetTextureSubImage)'
# const 'GLEW_ARB_get_texture_sub_image' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_get_texture_sub_image)'
# const 'glSpecializeShaderARB' has unsupported value 'GLEW_GET_FUN(__glewSpecializeShaderARB)'
# const 'GLEW_ARB_gl_spirv' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_gl_spirv)'
# const 'GLEW_ARB_gpu_shader5' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_gpu_shader5)'
# const 'glGetUniformdv' has unsupported value 'GLEW_GET_FUN(__glewGetUniformdv)'
# const 'glUniform1d' has unsupported value 'GLEW_GET_FUN(__glewUniform1d)'
# const 'glUniform1dv' has unsupported value 'GLEW_GET_FUN(__glewUniform1dv)'
# const 'glUniform2d' has unsupported value 'GLEW_GET_FUN(__glewUniform2d)'
# const 'glUniform2dv' has unsupported value 'GLEW_GET_FUN(__glewUniform2dv)'
# const 'glUniform3d' has unsupported value 'GLEW_GET_FUN(__glewUniform3d)'
# const 'glUniform3dv' has unsupported value 'GLEW_GET_FUN(__glewUniform3dv)'
# const 'glUniform4d' has unsupported value 'GLEW_GET_FUN(__glewUniform4d)'
# const 'glUniform4dv' has unsupported value 'GLEW_GET_FUN(__glewUniform4dv)'
# const 'glUniformMatrix2dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2dv)'
# const 'glUniformMatrix2x3dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2x3dv)'
# const 'glUniformMatrix2x4dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2x4dv)'
# const 'glUniformMatrix3dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3dv)'
# const 'glUniformMatrix3x2dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3x2dv)'
# const 'glUniformMatrix3x4dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3x4dv)'
# const 'glUniformMatrix4dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4dv)'
# const 'glUniformMatrix4x2dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4x2dv)'
# const 'glUniformMatrix4x3dv' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4x3dv)'
# const 'GLEW_ARB_gpu_shader_fp64' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_gpu_shader_fp64)'
# const 'glGetUniformi64vARB' has unsupported value 'GLEW_GET_FUN(__glewGetUniformi64vARB)'
# const 'glGetUniformui64vARB' has unsupported value 'GLEW_GET_FUN(__glewGetUniformui64vARB)'
# const 'glGetnUniformi64vARB' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformi64vARB)'
# const 'glGetnUniformui64vARB' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformui64vARB)'
# const 'glProgramUniform1i64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1i64ARB)'
# const 'glProgramUniform1i64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1i64vARB)'
# const 'glProgramUniform1ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1ui64ARB)'
# const 'glProgramUniform1ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1ui64vARB)'
# const 'glProgramUniform2i64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2i64ARB)'
# const 'glProgramUniform2i64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2i64vARB)'
# const 'glProgramUniform2ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2ui64ARB)'
# const 'glProgramUniform2ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2ui64vARB)'
# const 'glProgramUniform3i64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3i64ARB)'
# const 'glProgramUniform3i64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3i64vARB)'
# const 'glProgramUniform3ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3ui64ARB)'
# const 'glProgramUniform3ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3ui64vARB)'
# const 'glProgramUniform4i64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4i64ARB)'
# const 'glProgramUniform4i64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4i64vARB)'
# const 'glProgramUniform4ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4ui64ARB)'
# const 'glProgramUniform4ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4ui64vARB)'
# const 'glUniform1i64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1i64ARB)'
# const 'glUniform1i64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1i64vARB)'
# const 'glUniform1ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1ui64ARB)'
# const 'glUniform1ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1ui64vARB)'
# const 'glUniform2i64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2i64ARB)'
# const 'glUniform2i64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2i64vARB)'
# const 'glUniform2ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2ui64ARB)'
# const 'glUniform2ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2ui64vARB)'
# const 'glUniform3i64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3i64ARB)'
# const 'glUniform3i64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3i64vARB)'
# const 'glUniform3ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3ui64ARB)'
# const 'glUniform3ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3ui64vARB)'
# const 'glUniform4i64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4i64ARB)'
# const 'glUniform4i64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4i64vARB)'
# const 'glUniform4ui64ARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4ui64ARB)'
# const 'glUniform4ui64vARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4ui64vARB)'
# const 'GLEW_ARB_gpu_shader_int64' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_gpu_shader_int64)'
# const 'GLEW_ARB_half_float_pixel' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_half_float_pixel)'
# const 'GLEW_ARB_half_float_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_half_float_vertex)'
# const 'glColorSubTable' has unsupported value 'GLEW_GET_FUN(__glewColorSubTable)'
# const 'glColorTable' has unsupported value 'GLEW_GET_FUN(__glewColorTable)'
# const 'glColorTableParameterfv' has unsupported value 'GLEW_GET_FUN(__glewColorTableParameterfv)'
# const 'glColorTableParameteriv' has unsupported value 'GLEW_GET_FUN(__glewColorTableParameteriv)'
# const 'glConvolutionFilter1D' has unsupported value 'GLEW_GET_FUN(__glewConvolutionFilter1D)'
# const 'glConvolutionFilter2D' has unsupported value 'GLEW_GET_FUN(__glewConvolutionFilter2D)'
# const 'glConvolutionParameterf' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameterf)'
# const 'glConvolutionParameterfv' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameterfv)'
# const 'glConvolutionParameteri' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameteri)'
# const 'glConvolutionParameteriv' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameteriv)'
# const 'glCopyColorSubTable' has unsupported value 'GLEW_GET_FUN(__glewCopyColorSubTable)'
# const 'glCopyColorTable' has unsupported value 'GLEW_GET_FUN(__glewCopyColorTable)'
# const 'glCopyConvolutionFilter1D' has unsupported value 'GLEW_GET_FUN(__glewCopyConvolutionFilter1D)'
# const 'glCopyConvolutionFilter2D' has unsupported value 'GLEW_GET_FUN(__glewCopyConvolutionFilter2D)'
# const 'glGetColorTable' has unsupported value 'GLEW_GET_FUN(__glewGetColorTable)'
# const 'glGetColorTableParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableParameterfv)'
# const 'glGetColorTableParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableParameteriv)'
# const 'glGetConvolutionFilter' has unsupported value 'GLEW_GET_FUN(__glewGetConvolutionFilter)'
# const 'glGetConvolutionParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetConvolutionParameterfv)'
# const 'glGetConvolutionParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetConvolutionParameteriv)'
# const 'glGetHistogram' has unsupported value 'GLEW_GET_FUN(__glewGetHistogram)'
# const 'glGetHistogramParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetHistogramParameterfv)'
# const 'glGetHistogramParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetHistogramParameteriv)'
# const 'glGetMinmax' has unsupported value 'GLEW_GET_FUN(__glewGetMinmax)'
# const 'glGetMinmaxParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetMinmaxParameterfv)'
# const 'glGetMinmaxParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetMinmaxParameteriv)'
# const 'glGetSeparableFilter' has unsupported value 'GLEW_GET_FUN(__glewGetSeparableFilter)'
# const 'glHistogram' has unsupported value 'GLEW_GET_FUN(__glewHistogram)'
# const 'glMinmax' has unsupported value 'GLEW_GET_FUN(__glewMinmax)'
# const 'glResetHistogram' has unsupported value 'GLEW_GET_FUN(__glewResetHistogram)'
# const 'glResetMinmax' has unsupported value 'GLEW_GET_FUN(__glewResetMinmax)'
# const 'glSeparableFilter2D' has unsupported value 'GLEW_GET_FUN(__glewSeparableFilter2D)'
# const 'GLEW_ARB_imaging' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_imaging)'
# const 'glMultiDrawArraysIndirectCountARB' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirectCountARB)'
# const 'glMultiDrawElementsIndirectCountARB' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirectCountARB)'
# const 'GLEW_ARB_indirect_parameters' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_indirect_parameters)'
# const 'glDrawArraysInstancedARB' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstancedARB)'
# const 'glDrawElementsInstancedARB' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedARB)'
# const 'glVertexAttribDivisorARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribDivisorARB)'
# const 'GLEW_ARB_instanced_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_instanced_arrays)'
# const 'glGetInternalformativ' has unsupported value 'GLEW_GET_FUN(__glewGetInternalformativ)'
# const 'GLEW_ARB_internalformat_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_internalformat_query)'
# const 'glGetInternalformati64v' has unsupported value 'GLEW_GET_FUN(__glewGetInternalformati64v)'
# const 'GLEW_ARB_internalformat_query2' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_internalformat_query2)'
# const 'glInvalidateBufferData' has unsupported value 'GLEW_GET_FUN(__glewInvalidateBufferData)'
# const 'glInvalidateBufferSubData' has unsupported value 'GLEW_GET_FUN(__glewInvalidateBufferSubData)'
# const 'glInvalidateFramebuffer' has unsupported value 'GLEW_GET_FUN(__glewInvalidateFramebuffer)'
# const 'glInvalidateSubFramebuffer' has unsupported value 'GLEW_GET_FUN(__glewInvalidateSubFramebuffer)'
# const 'glInvalidateTexImage' has unsupported value 'GLEW_GET_FUN(__glewInvalidateTexImage)'
# const 'glInvalidateTexSubImage' has unsupported value 'GLEW_GET_FUN(__glewInvalidateTexSubImage)'
# const 'GLEW_ARB_invalidate_subdata' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_invalidate_subdata)'
# const 'GLEW_ARB_map_buffer_alignment' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_map_buffer_alignment)'
# const 'glFlushMappedBufferRange' has unsupported value 'GLEW_GET_FUN(__glewFlushMappedBufferRange)'
# const 'glMapBufferRange' has unsupported value 'GLEW_GET_FUN(__glewMapBufferRange)'
# const 'GLEW_ARB_map_buffer_range' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_map_buffer_range)'
# const 'glCurrentPaletteMatrixARB' has unsupported value 'GLEW_GET_FUN(__glewCurrentPaletteMatrixARB)'
# const 'glMatrixIndexPointerARB' has unsupported value 'GLEW_GET_FUN(__glewMatrixIndexPointerARB)'
# const 'glMatrixIndexubvARB' has unsupported value 'GLEW_GET_FUN(__glewMatrixIndexubvARB)'
# const 'glMatrixIndexuivARB' has unsupported value 'GLEW_GET_FUN(__glewMatrixIndexuivARB)'
# const 'glMatrixIndexusvARB' has unsupported value 'GLEW_GET_FUN(__glewMatrixIndexusvARB)'
# const 'GLEW_ARB_matrix_palette' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_matrix_palette)'
# const 'glBindBuffersBase' has unsupported value 'GLEW_GET_FUN(__glewBindBuffersBase)'
# const 'glBindBuffersRange' has unsupported value 'GLEW_GET_FUN(__glewBindBuffersRange)'
# const 'glBindImageTextures' has unsupported value 'GLEW_GET_FUN(__glewBindImageTextures)'
# const 'glBindSamplers' has unsupported value 'GLEW_GET_FUN(__glewBindSamplers)'
# const 'glBindTextures' has unsupported value 'GLEW_GET_FUN(__glewBindTextures)'
# const 'glBindVertexBuffers' has unsupported value 'GLEW_GET_FUN(__glewBindVertexBuffers)'
# const 'GLEW_ARB_multi_bind' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_multi_bind)'
# const 'glMultiDrawArraysIndirect' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirect)'
# const 'glMultiDrawElementsIndirect' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirect)'
# const 'GLEW_ARB_multi_draw_indirect' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_multi_draw_indirect)'
# const 'glSampleCoverageARB' has unsupported value 'GLEW_GET_FUN(__glewSampleCoverageARB)'
# const 'GLEW_ARB_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_multisample)'
# const 'glActiveTextureARB' has unsupported value 'GLEW_GET_FUN(__glewActiveTextureARB)'
# const 'glClientActiveTextureARB' has unsupported value 'GLEW_GET_FUN(__glewClientActiveTextureARB)'
# const 'glMultiTexCoord1dARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1dARB)'
# const 'glMultiTexCoord1dvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1dvARB)'
# const 'glMultiTexCoord1fARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1fARB)'
# const 'glMultiTexCoord1fvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1fvARB)'
# const 'glMultiTexCoord1iARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1iARB)'
# const 'glMultiTexCoord1ivARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1ivARB)'
# const 'glMultiTexCoord1sARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1sARB)'
# const 'glMultiTexCoord1svARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1svARB)'
# const 'glMultiTexCoord2dARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2dARB)'
# const 'glMultiTexCoord2dvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2dvARB)'
# const 'glMultiTexCoord2fARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2fARB)'
# const 'glMultiTexCoord2fvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2fvARB)'
# const 'glMultiTexCoord2iARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2iARB)'
# const 'glMultiTexCoord2ivARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2ivARB)'
# const 'glMultiTexCoord2sARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2sARB)'
# const 'glMultiTexCoord2svARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2svARB)'
# const 'glMultiTexCoord3dARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3dARB)'
# const 'glMultiTexCoord3dvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3dvARB)'
# const 'glMultiTexCoord3fARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3fARB)'
# const 'glMultiTexCoord3fvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3fvARB)'
# const 'glMultiTexCoord3iARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3iARB)'
# const 'glMultiTexCoord3ivARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3ivARB)'
# const 'glMultiTexCoord3sARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3sARB)'
# const 'glMultiTexCoord3svARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3svARB)'
# const 'glMultiTexCoord4dARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4dARB)'
# const 'glMultiTexCoord4dvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4dvARB)'
# const 'glMultiTexCoord4fARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4fARB)'
# const 'glMultiTexCoord4fvARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4fvARB)'
# const 'glMultiTexCoord4iARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4iARB)'
# const 'glMultiTexCoord4ivARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4ivARB)'
# const 'glMultiTexCoord4sARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4sARB)'
# const 'glMultiTexCoord4svARB' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4svARB)'
# const 'GLEW_ARB_multitexture' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_multitexture)'
# const 'glBeginQueryARB' has unsupported value 'GLEW_GET_FUN(__glewBeginQueryARB)'
# const 'glDeleteQueriesARB' has unsupported value 'GLEW_GET_FUN(__glewDeleteQueriesARB)'
# const 'glEndQueryARB' has unsupported value 'GLEW_GET_FUN(__glewEndQueryARB)'
# const 'glGenQueriesARB' has unsupported value 'GLEW_GET_FUN(__glewGenQueriesARB)'
# const 'glGetQueryObjectivARB' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectivARB)'
# const 'glGetQueryObjectuivARB' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectuivARB)'
# const 'glGetQueryivARB' has unsupported value 'GLEW_GET_FUN(__glewGetQueryivARB)'
# const 'glIsQueryARB' has unsupported value 'GLEW_GET_FUN(__glewIsQueryARB)'
# const 'GLEW_ARB_occlusion_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_occlusion_query)'
# const 'GLEW_ARB_occlusion_query2' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_occlusion_query2)'
# const 'glMaxShaderCompilerThreadsARB' has unsupported value 'GLEW_GET_FUN(__glewMaxShaderCompilerThreadsARB)'
# const 'GLEW_ARB_parallel_shader_compile' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_parallel_shader_compile)'
# const 'GLEW_ARB_pipeline_statistics_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_pipeline_statistics_query)'
# const 'GLEW_ARB_pixel_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_pixel_buffer_object)'
# const 'glPointParameterfARB' has unsupported value 'GLEW_GET_FUN(__glewPointParameterfARB)'
# const 'glPointParameterfvARB' has unsupported value 'GLEW_GET_FUN(__glewPointParameterfvARB)'
# const 'GLEW_ARB_point_parameters' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_point_parameters)'
# const 'GLEW_ARB_point_sprite' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_point_sprite)'
# const 'glPolygonOffsetClamp' has unsupported value 'GLEW_GET_FUN(__glewPolygonOffsetClamp)'
# const 'GLEW_ARB_polygon_offset_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_polygon_offset_clamp)'
# const 'GLEW_ARB_post_depth_coverage' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_post_depth_coverage)'
# const 'glGetProgramInterfaceiv' has unsupported value 'GLEW_GET_FUN(__glewGetProgramInterfaceiv)'
# const 'glGetProgramResourceIndex' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourceIndex)'
# const 'glGetProgramResourceLocation' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourceLocation)'
# const 'glGetProgramResourceLocationIndex' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourceLocationIndex)'
# const 'glGetProgramResourceName' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourceName)'
# const 'glGetProgramResourceiv' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourceiv)'
# const 'GLEW_ARB_program_interface_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_program_interface_query)'
# const 'glProvokingVertex' has unsupported value 'GLEW_GET_FUN(__glewProvokingVertex)'
# const 'GLEW_ARB_provoking_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_provoking_vertex)'
# const 'GLEW_ARB_query_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_query_buffer_object)'
# const 'GLEW_ARB_robust_buffer_access_behavior' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_robust_buffer_access_behavior)'
# const 'glGetGraphicsResetStatusARB' has unsupported value 'GLEW_GET_FUN(__glewGetGraphicsResetStatusARB)'
# const 'glGetnColorTableARB' has unsupported value 'GLEW_GET_FUN(__glewGetnColorTableARB)'
# const 'glGetnCompressedTexImageARB' has unsupported value 'GLEW_GET_FUN(__glewGetnCompressedTexImageARB)'
# const 'glGetnConvolutionFilterARB' has unsupported value 'GLEW_GET_FUN(__glewGetnConvolutionFilterARB)'
# const 'glGetnHistogramARB' has unsupported value 'GLEW_GET_FUN(__glewGetnHistogramARB)'
# const 'glGetnMapdvARB' has unsupported value 'GLEW_GET_FUN(__glewGetnMapdvARB)'
# const 'glGetnMapfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetnMapfvARB)'
# const 'glGetnMapivARB' has unsupported value 'GLEW_GET_FUN(__glewGetnMapivARB)'
# const 'glGetnMinmaxARB' has unsupported value 'GLEW_GET_FUN(__glewGetnMinmaxARB)'
# const 'glGetnPixelMapfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetnPixelMapfvARB)'
# const 'glGetnPixelMapuivARB' has unsupported value 'GLEW_GET_FUN(__glewGetnPixelMapuivARB)'
# const 'glGetnPixelMapusvARB' has unsupported value 'GLEW_GET_FUN(__glewGetnPixelMapusvARB)'
# const 'glGetnPolygonStippleARB' has unsupported value 'GLEW_GET_FUN(__glewGetnPolygonStippleARB)'
# const 'glGetnSeparableFilterARB' has unsupported value 'GLEW_GET_FUN(__glewGetnSeparableFilterARB)'
# const 'glGetnTexImageARB' has unsupported value 'GLEW_GET_FUN(__glewGetnTexImageARB)'
# const 'glGetnUniformdvARB' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformdvARB)'
# const 'glGetnUniformfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformfvARB)'
# const 'glGetnUniformivARB' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformivARB)'
# const 'glGetnUniformuivARB' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformuivARB)'
# const 'glReadnPixelsARB' has unsupported value 'GLEW_GET_FUN(__glewReadnPixelsARB)'
# const 'GLEW_ARB_robustness' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_robustness)'
# const 'GLEW_ARB_robustness_application_isolation' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_robustness_application_isolation)'
# const 'GLEW_ARB_robustness_share_group_isolation' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_robustness_share_group_isolation)'
# const 'glFramebufferSampleLocationsfvARB' has unsupported value 'GLEW_GET_FUN(__glewFramebufferSampleLocationsfvARB)'
# const 'glNamedFramebufferSampleLocationsfvARB' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferSampleLocationsfvARB)'
# const 'GLEW_ARB_sample_locations' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sample_locations)'
# const 'glMinSampleShadingARB' has unsupported value 'GLEW_GET_FUN(__glewMinSampleShadingARB)'
# const 'GLEW_ARB_sample_shading' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sample_shading)'
# const 'glBindSampler' has unsupported value 'GLEW_GET_FUN(__glewBindSampler)'
# const 'glDeleteSamplers' has unsupported value 'GLEW_GET_FUN(__glewDeleteSamplers)'
# const 'glGenSamplers' has unsupported value 'GLEW_GET_FUN(__glewGenSamplers)'
# const 'glGetSamplerParameterIiv' has unsupported value 'GLEW_GET_FUN(__glewGetSamplerParameterIiv)'
# const 'glGetSamplerParameterIuiv' has unsupported value 'GLEW_GET_FUN(__glewGetSamplerParameterIuiv)'
# const 'glGetSamplerParameterfv' has unsupported value 'GLEW_GET_FUN(__glewGetSamplerParameterfv)'
# const 'glGetSamplerParameteriv' has unsupported value 'GLEW_GET_FUN(__glewGetSamplerParameteriv)'
# const 'glIsSampler' has unsupported value 'GLEW_GET_FUN(__glewIsSampler)'
# const 'glSamplerParameterIiv' has unsupported value 'GLEW_GET_FUN(__glewSamplerParameterIiv)'
# const 'glSamplerParameterIuiv' has unsupported value 'GLEW_GET_FUN(__glewSamplerParameterIuiv)'
# const 'glSamplerParameterf' has unsupported value 'GLEW_GET_FUN(__glewSamplerParameterf)'
# const 'glSamplerParameterfv' has unsupported value 'GLEW_GET_FUN(__glewSamplerParameterfv)'
# const 'glSamplerParameteri' has unsupported value 'GLEW_GET_FUN(__glewSamplerParameteri)'
# const 'glSamplerParameteriv' has unsupported value 'GLEW_GET_FUN(__glewSamplerParameteriv)'
# const 'GLEW_ARB_sampler_objects' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sampler_objects)'
# const 'GLEW_ARB_seamless_cube_map' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_seamless_cube_map)'
# const 'GLEW_ARB_seamless_cubemap_per_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_seamless_cubemap_per_texture)'
# const 'glActiveShaderProgram' has unsupported value 'GLEW_GET_FUN(__glewActiveShaderProgram)'
# const 'glBindProgramPipeline' has unsupported value 'GLEW_GET_FUN(__glewBindProgramPipeline)'
# const 'glCreateShaderProgramv' has unsupported value 'GLEW_GET_FUN(__glewCreateShaderProgramv)'
# const 'glDeleteProgramPipelines' has unsupported value 'GLEW_GET_FUN(__glewDeleteProgramPipelines)'
# const 'glGenProgramPipelines' has unsupported value 'GLEW_GET_FUN(__glewGenProgramPipelines)'
# const 'glGetProgramPipelineInfoLog' has unsupported value 'GLEW_GET_FUN(__glewGetProgramPipelineInfoLog)'
# const 'glGetProgramPipelineiv' has unsupported value 'GLEW_GET_FUN(__glewGetProgramPipelineiv)'
# const 'glIsProgramPipeline' has unsupported value 'GLEW_GET_FUN(__glewIsProgramPipeline)'
# const 'glProgramUniform1d' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1d)'
# const 'glProgramUniform1dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1dv)'
# const 'glProgramUniform1f' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1f)'
# const 'glProgramUniform1fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1fv)'
# const 'glProgramUniform1i' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1i)'
# const 'glProgramUniform1iv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1iv)'
# const 'glProgramUniform1ui' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1ui)'
# const 'glProgramUniform1uiv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1uiv)'
# const 'glProgramUniform2d' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2d)'
# const 'glProgramUniform2dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2dv)'
# const 'glProgramUniform2f' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2f)'
# const 'glProgramUniform2fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2fv)'
# const 'glProgramUniform2i' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2i)'
# const 'glProgramUniform2iv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2iv)'
# const 'glProgramUniform2ui' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2ui)'
# const 'glProgramUniform2uiv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2uiv)'
# const 'glProgramUniform3d' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3d)'
# const 'glProgramUniform3dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3dv)'
# const 'glProgramUniform3f' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3f)'
# const 'glProgramUniform3fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3fv)'
# const 'glProgramUniform3i' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3i)'
# const 'glProgramUniform3iv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3iv)'
# const 'glProgramUniform3ui' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3ui)'
# const 'glProgramUniform3uiv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3uiv)'
# const 'glProgramUniform4d' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4d)'
# const 'glProgramUniform4dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4dv)'
# const 'glProgramUniform4f' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4f)'
# const 'glProgramUniform4fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4fv)'
# const 'glProgramUniform4i' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4i)'
# const 'glProgramUniform4iv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4iv)'
# const 'glProgramUniform4ui' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4ui)'
# const 'glProgramUniform4uiv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4uiv)'
# const 'glProgramUniformMatrix2dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2dv)'
# const 'glProgramUniformMatrix2fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2fv)'
# const 'glProgramUniformMatrix2x3dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2x3dv)'
# const 'glProgramUniformMatrix2x3fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2x3fv)'
# const 'glProgramUniformMatrix2x4dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2x4dv)'
# const 'glProgramUniformMatrix2x4fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2x4fv)'
# const 'glProgramUniformMatrix3dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3dv)'
# const 'glProgramUniformMatrix3fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3fv)'
# const 'glProgramUniformMatrix3x2dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3x2dv)'
# const 'glProgramUniformMatrix3x2fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3x2fv)'
# const 'glProgramUniformMatrix3x4dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3x4dv)'
# const 'glProgramUniformMatrix3x4fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3x4fv)'
# const 'glProgramUniformMatrix4dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4dv)'
# const 'glProgramUniformMatrix4fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4fv)'
# const 'glProgramUniformMatrix4x2dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4x2dv)'
# const 'glProgramUniformMatrix4x2fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4x2fv)'
# const 'glProgramUniformMatrix4x3dv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4x3dv)'
# const 'glProgramUniformMatrix4x3fv' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4x3fv)'
# const 'glUseProgramStages' has unsupported value 'GLEW_GET_FUN(__glewUseProgramStages)'
# const 'glValidateProgramPipeline' has unsupported value 'GLEW_GET_FUN(__glewValidateProgramPipeline)'
# const 'GLEW_ARB_separate_shader_objects' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_separate_shader_objects)'
# const 'GLEW_ARB_shader_atomic_counter_ops' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_atomic_counter_ops)'
# const 'glGetActiveAtomicCounterBufferiv' has unsupported value 'GLEW_GET_FUN(__glewGetActiveAtomicCounterBufferiv)'
# const 'GLEW_ARB_shader_atomic_counters' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_atomic_counters)'
# const 'GLEW_ARB_shader_ballot' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_ballot)'
# const 'GLEW_ARB_shader_bit_encoding' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_bit_encoding)'
# const 'GLEW_ARB_shader_clock' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_clock)'
# const 'GLEW_ARB_shader_draw_parameters' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_draw_parameters)'
# const 'GLEW_ARB_shader_group_vote' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_group_vote)'
# const 'glBindImageTexture' has unsupported value 'GLEW_GET_FUN(__glewBindImageTexture)'
# const 'glMemoryBarrier' has unsupported value 'GLEW_GET_FUN(__glewMemoryBarrier)'
# const 'GLEW_ARB_shader_image_load_store' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_image_load_store)'
# const 'GLEW_ARB_shader_image_size' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_image_size)'
# const 'glAttachObjectARB' has unsupported value 'GLEW_GET_FUN(__glewAttachObjectARB)'
# const 'glCompileShaderARB' has unsupported value 'GLEW_GET_FUN(__glewCompileShaderARB)'
# const 'glCreateProgramObjectARB' has unsupported value 'GLEW_GET_FUN(__glewCreateProgramObjectARB)'
# const 'glCreateShaderObjectARB' has unsupported value 'GLEW_GET_FUN(__glewCreateShaderObjectARB)'
# const 'glDeleteObjectARB' has unsupported value 'GLEW_GET_FUN(__glewDeleteObjectARB)'
# const 'glDetachObjectARB' has unsupported value 'GLEW_GET_FUN(__glewDetachObjectARB)'
# const 'glGetActiveUniformARB' has unsupported value 'GLEW_GET_FUN(__glewGetActiveUniformARB)'
# const 'glGetAttachedObjectsARB' has unsupported value 'GLEW_GET_FUN(__glewGetAttachedObjectsARB)'
# const 'glGetHandleARB' has unsupported value 'GLEW_GET_FUN(__glewGetHandleARB)'
# const 'glGetInfoLogARB' has unsupported value 'GLEW_GET_FUN(__glewGetInfoLogARB)'
# const 'glGetObjectParameterfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetObjectParameterfvARB)'
# const 'glGetObjectParameterivARB' has unsupported value 'GLEW_GET_FUN(__glewGetObjectParameterivARB)'
# const 'glGetShaderSourceARB' has unsupported value 'GLEW_GET_FUN(__glewGetShaderSourceARB)'
# const 'glGetUniformLocationARB' has unsupported value 'GLEW_GET_FUN(__glewGetUniformLocationARB)'
# const 'glGetUniformfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetUniformfvARB)'
# const 'glGetUniformivARB' has unsupported value 'GLEW_GET_FUN(__glewGetUniformivARB)'
# const 'glLinkProgramARB' has unsupported value 'GLEW_GET_FUN(__glewLinkProgramARB)'
# const 'glShaderSourceARB' has unsupported value 'GLEW_GET_FUN(__glewShaderSourceARB)'
# const 'glUniform1fARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1fARB)'
# const 'glUniform1fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1fvARB)'
# const 'glUniform1iARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1iARB)'
# const 'glUniform1ivARB' has unsupported value 'GLEW_GET_FUN(__glewUniform1ivARB)'
# const 'glUniform2fARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2fARB)'
# const 'glUniform2fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2fvARB)'
# const 'glUniform2iARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2iARB)'
# const 'glUniform2ivARB' has unsupported value 'GLEW_GET_FUN(__glewUniform2ivARB)'
# const 'glUniform3fARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3fARB)'
# const 'glUniform3fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3fvARB)'
# const 'glUniform3iARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3iARB)'
# const 'glUniform3ivARB' has unsupported value 'GLEW_GET_FUN(__glewUniform3ivARB)'
# const 'glUniform4fARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4fARB)'
# const 'glUniform4fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4fvARB)'
# const 'glUniform4iARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4iARB)'
# const 'glUniform4ivARB' has unsupported value 'GLEW_GET_FUN(__glewUniform4ivARB)'
# const 'glUniformMatrix2fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2fvARB)'
# const 'glUniformMatrix3fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3fvARB)'
# const 'glUniformMatrix4fvARB' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4fvARB)'
# const 'glUseProgramObjectARB' has unsupported value 'GLEW_GET_FUN(__glewUseProgramObjectARB)'
# const 'glValidateProgramARB' has unsupported value 'GLEW_GET_FUN(__glewValidateProgramARB)'
# const 'GLEW_ARB_shader_objects' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_objects)'
# const 'GLEW_ARB_shader_precision' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_precision)'
# const 'GLEW_ARB_shader_stencil_export' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_stencil_export)'
# const 'glShaderStorageBlockBinding' has unsupported value 'GLEW_GET_FUN(__glewShaderStorageBlockBinding)'
# const 'GLEW_ARB_shader_storage_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_storage_buffer_object)'
# const 'glGetActiveSubroutineName' has unsupported value 'GLEW_GET_FUN(__glewGetActiveSubroutineName)'
# const 'glGetActiveSubroutineUniformName' has unsupported value 'GLEW_GET_FUN(__glewGetActiveSubroutineUniformName)'
# const 'glGetActiveSubroutineUniformiv' has unsupported value 'GLEW_GET_FUN(__glewGetActiveSubroutineUniformiv)'
# const 'glGetProgramStageiv' has unsupported value 'GLEW_GET_FUN(__glewGetProgramStageiv)'
# const 'glGetSubroutineIndex' has unsupported value 'GLEW_GET_FUN(__glewGetSubroutineIndex)'
# const 'glGetSubroutineUniformLocation' has unsupported value 'GLEW_GET_FUN(__glewGetSubroutineUniformLocation)'
# const 'glGetUniformSubroutineuiv' has unsupported value 'GLEW_GET_FUN(__glewGetUniformSubroutineuiv)'
# const 'glUniformSubroutinesuiv' has unsupported value 'GLEW_GET_FUN(__glewUniformSubroutinesuiv)'
# const 'GLEW_ARB_shader_subroutine' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_subroutine)'
# const 'GLEW_ARB_shader_texture_image_samples' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_texture_image_samples)'
# const 'GLEW_ARB_shader_texture_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_texture_lod)'
# const 'GLEW_ARB_shader_viewport_layer_array' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shader_viewport_layer_array)'
# const 'GLEW_ARB_shading_language_100' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shading_language_100)'
# const 'GLEW_ARB_shading_language_420pack' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shading_language_420pack)'
# const 'glCompileShaderIncludeARB' has unsupported value 'GLEW_GET_FUN(__glewCompileShaderIncludeARB)'
# const 'glDeleteNamedStringARB' has unsupported value 'GLEW_GET_FUN(__glewDeleteNamedStringARB)'
# const 'glGetNamedStringARB' has unsupported value 'GLEW_GET_FUN(__glewGetNamedStringARB)'
# const 'glGetNamedStringivARB' has unsupported value 'GLEW_GET_FUN(__glewGetNamedStringivARB)'
# const 'glIsNamedStringARB' has unsupported value 'GLEW_GET_FUN(__glewIsNamedStringARB)'
# const 'glNamedStringARB' has unsupported value 'GLEW_GET_FUN(__glewNamedStringARB)'
# const 'GLEW_ARB_shading_language_include' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shading_language_include)'
# const 'GLEW_ARB_shading_language_packing' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shading_language_packing)'
# const 'GLEW_ARB_shadow' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shadow)'
# const 'GLEW_ARB_shadow_ambient' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_shadow_ambient)'
# const 'glBufferPageCommitmentARB' has unsupported value 'GLEW_GET_FUN(__glewBufferPageCommitmentARB)'
# const 'GLEW_ARB_sparse_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sparse_buffer)'
# const 'glTexPageCommitmentARB' has unsupported value 'GLEW_GET_FUN(__glewTexPageCommitmentARB)'
# const 'GLEW_ARB_sparse_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sparse_texture)'
# const 'GLEW_ARB_sparse_texture2' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sparse_texture2)'
# const 'GLEW_ARB_sparse_texture_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sparse_texture_clamp)'
# const 'GLEW_ARB_spirv_extensions' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_spirv_extensions)'
# const 'GLEW_ARB_stencil_texturing' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_stencil_texturing)'
# const 'glClientWaitSync' has unsupported value 'GLEW_GET_FUN(__glewClientWaitSync)'
# const 'glDeleteSync' has unsupported value 'GLEW_GET_FUN(__glewDeleteSync)'
# const 'glFenceSync' has unsupported value 'GLEW_GET_FUN(__glewFenceSync)'
# const 'glGetInteger64v' has unsupported value 'GLEW_GET_FUN(__glewGetInteger64v)'
# const 'glGetSynciv' has unsupported value 'GLEW_GET_FUN(__glewGetSynciv)'
# const 'glIsSync' has unsupported value 'GLEW_GET_FUN(__glewIsSync)'
# const 'glWaitSync' has unsupported value 'GLEW_GET_FUN(__glewWaitSync)'
# const 'GLEW_ARB_sync' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_sync)'
# const 'glPatchParameterfv' has unsupported value 'GLEW_GET_FUN(__glewPatchParameterfv)'
# const 'glPatchParameteri' has unsupported value 'GLEW_GET_FUN(__glewPatchParameteri)'
# const 'GLEW_ARB_tessellation_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_tessellation_shader)'
# const 'glTextureBarrier' has unsupported value 'GLEW_GET_FUN(__glewTextureBarrier)'
# const 'GLEW_ARB_texture_barrier' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_barrier)'
# const 'GLEW_ARB_texture_border_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_border_clamp)'
# const 'glTexBufferARB' has unsupported value 'GLEW_GET_FUN(__glewTexBufferARB)'
# const 'GLEW_ARB_texture_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_buffer_object)'
# const 'GLEW_ARB_texture_buffer_object_rgb32' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_buffer_object_rgb32)'
# const 'glTexBufferRange' has unsupported value 'GLEW_GET_FUN(__glewTexBufferRange)'
# const 'glTextureBufferRangeEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureBufferRangeEXT)'
# const 'GLEW_ARB_texture_buffer_range' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_buffer_range)'
# const 'glCompressedTexImage1DARB' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage1DARB)'
# const 'glCompressedTexImage2DARB' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage2DARB)'
# const 'glCompressedTexImage3DARB' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage3DARB)'
# const 'glCompressedTexSubImage1DARB' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage1DARB)'
# const 'glCompressedTexSubImage2DARB' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage2DARB)'
# const 'glCompressedTexSubImage3DARB' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage3DARB)'
# const 'glGetCompressedTexImageARB' has unsupported value 'GLEW_GET_FUN(__glewGetCompressedTexImageARB)'
# const 'GLEW_ARB_texture_compression' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_compression)'
# const 'GLEW_ARB_texture_compression_bptc' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_compression_bptc)'
# const 'GLEW_ARB_texture_compression_rgtc' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_compression_rgtc)'
# const 'GLEW_ARB_texture_cube_map' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_cube_map)'
# const 'GLEW_ARB_texture_cube_map_array' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_cube_map_array)'
# const 'GLEW_ARB_texture_env_add' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_env_add)'
# const 'GLEW_ARB_texture_env_combine' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_env_combine)'
# const 'GLEW_ARB_texture_env_crossbar' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_env_crossbar)'
# const 'GLEW_ARB_texture_env_dot3' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_env_dot3)'
# const 'GLEW_ARB_texture_filter_anisotropic' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_filter_anisotropic)'
# const 'GLEW_ARB_texture_filter_minmax' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_filter_minmax)'
# const 'GLEW_ARB_texture_float' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_float)'
# const 'GLEW_ARB_texture_gather' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_gather)'
# const 'GLEW_ARB_texture_mirror_clamp_to_edge' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_mirror_clamp_to_edge)'
# const 'GLEW_ARB_texture_mirrored_repeat' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_mirrored_repeat)'
# const 'glGetMultisamplefv' has unsupported value 'GLEW_GET_FUN(__glewGetMultisamplefv)'
# const 'glSampleMaski' has unsupported value 'GLEW_GET_FUN(__glewSampleMaski)'
# const 'glTexImage2DMultisample' has unsupported value 'GLEW_GET_FUN(__glewTexImage2DMultisample)'
# const 'glTexImage3DMultisample' has unsupported value 'GLEW_GET_FUN(__glewTexImage3DMultisample)'
# const 'GLEW_ARB_texture_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_multisample)'
# const 'GLEW_ARB_texture_non_power_of_two' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_non_power_of_two)'
# const 'GLEW_ARB_texture_query_levels' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_query_levels)'
# const 'GLEW_ARB_texture_query_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_query_lod)'
# const 'GLEW_ARB_texture_rectangle' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_rectangle)'
# const 'GLEW_ARB_texture_rg' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_rg)'
# const 'GLEW_ARB_texture_rgb10_a2ui' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_rgb10_a2ui)'
# const 'GLEW_ARB_texture_stencil8' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_stencil8)'
# const 'glTexStorage1D' has unsupported value 'GLEW_GET_FUN(__glewTexStorage1D)'
# const 'glTexStorage2D' has unsupported value 'GLEW_GET_FUN(__glewTexStorage2D)'
# const 'glTexStorage3D' has unsupported value 'GLEW_GET_FUN(__glewTexStorage3D)'
# const 'GLEW_ARB_texture_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_storage)'
# const 'glTexStorage2DMultisample' has unsupported value 'GLEW_GET_FUN(__glewTexStorage2DMultisample)'
# const 'glTexStorage3DMultisample' has unsupported value 'GLEW_GET_FUN(__glewTexStorage3DMultisample)'
# const 'glTextureStorage2DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage2DMultisampleEXT)'
# const 'glTextureStorage3DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage3DMultisampleEXT)'
# const 'GLEW_ARB_texture_storage_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_storage_multisample)'
# const 'GLEW_ARB_texture_swizzle' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_swizzle)'
# const 'glTextureView' has unsupported value 'GLEW_GET_FUN(__glewTextureView)'
# const 'GLEW_ARB_texture_view' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_texture_view)'
# const 'glGetQueryObjecti64v' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjecti64v)'
# const 'glGetQueryObjectui64v' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectui64v)'
# const 'glQueryCounter' has unsupported value 'GLEW_GET_FUN(__glewQueryCounter)'
# const 'GLEW_ARB_timer_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_timer_query)'
# const 'glBindTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewBindTransformFeedback)'
# const 'glDeleteTransformFeedbacks' has unsupported value 'GLEW_GET_FUN(__glewDeleteTransformFeedbacks)'
# const 'glDrawTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewDrawTransformFeedback)'
# const 'glGenTransformFeedbacks' has unsupported value 'GLEW_GET_FUN(__glewGenTransformFeedbacks)'
# const 'glIsTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewIsTransformFeedback)'
# const 'glPauseTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewPauseTransformFeedback)'
# const 'glResumeTransformFeedback' has unsupported value 'GLEW_GET_FUN(__glewResumeTransformFeedback)'
# const 'GLEW_ARB_transform_feedback2' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_transform_feedback2)'
# const 'glBeginQueryIndexed' has unsupported value 'GLEW_GET_FUN(__glewBeginQueryIndexed)'
# const 'glDrawTransformFeedbackStream' has unsupported value 'GLEW_GET_FUN(__glewDrawTransformFeedbackStream)'
# const 'glEndQueryIndexed' has unsupported value 'GLEW_GET_FUN(__glewEndQueryIndexed)'
# const 'glGetQueryIndexediv' has unsupported value 'GLEW_GET_FUN(__glewGetQueryIndexediv)'
# const 'GLEW_ARB_transform_feedback3' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_transform_feedback3)'
# const 'glDrawTransformFeedbackInstanced' has unsupported value 'GLEW_GET_FUN(__glewDrawTransformFeedbackInstanced)'
# const 'glDrawTransformFeedbackStreamInstanced' has unsupported value 'GLEW_GET_FUN(__glewDrawTransformFeedbackStreamInstanced)'
# const 'GLEW_ARB_transform_feedback_instanced' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_transform_feedback_instanced)'
# const 'GLEW_ARB_transform_feedback_overflow_query' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_transform_feedback_overflow_query)'
# const 'glLoadTransposeMatrixdARB' has unsupported value 'GLEW_GET_FUN(__glewLoadTransposeMatrixdARB)'
# const 'glLoadTransposeMatrixfARB' has unsupported value 'GLEW_GET_FUN(__glewLoadTransposeMatrixfARB)'
# const 'glMultTransposeMatrixdARB' has unsupported value 'GLEW_GET_FUN(__glewMultTransposeMatrixdARB)'
# const 'glMultTransposeMatrixfARB' has unsupported value 'GLEW_GET_FUN(__glewMultTransposeMatrixfARB)'
# const 'GLEW_ARB_transpose_matrix' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_transpose_matrix)'
# const 'glBindBufferBase' has unsupported value 'GLEW_GET_FUN(__glewBindBufferBase)'
# const 'glBindBufferRange' has unsupported value 'GLEW_GET_FUN(__glewBindBufferRange)'
# const 'glGetActiveUniformBlockName' has unsupported value 'GLEW_GET_FUN(__glewGetActiveUniformBlockName)'
# const 'glGetActiveUniformBlockiv' has unsupported value 'GLEW_GET_FUN(__glewGetActiveUniformBlockiv)'
# const 'glGetActiveUniformName' has unsupported value 'GLEW_GET_FUN(__glewGetActiveUniformName)'
# const 'glGetActiveUniformsiv' has unsupported value 'GLEW_GET_FUN(__glewGetActiveUniformsiv)'
# const 'glGetIntegeri_v' has unsupported value 'GLEW_GET_FUN(__glewGetIntegeri_v)'
# const 'glGetUniformBlockIndex' has unsupported value 'GLEW_GET_FUN(__glewGetUniformBlockIndex)'
# const 'glGetUniformIndices' has unsupported value 'GLEW_GET_FUN(__glewGetUniformIndices)'
# const 'glUniformBlockBinding' has unsupported value 'GLEW_GET_FUN(__glewUniformBlockBinding)'
# const 'GLEW_ARB_uniform_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_uniform_buffer_object)'
# const 'GLEW_ARB_vertex_array_bgra' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_array_bgra)'
# const 'glBindVertexArray' has unsupported value 'GLEW_GET_FUN(__glewBindVertexArray)'
# const 'glDeleteVertexArrays' has unsupported value 'GLEW_GET_FUN(__glewDeleteVertexArrays)'
# const 'glGenVertexArrays' has unsupported value 'GLEW_GET_FUN(__glewGenVertexArrays)'
# const 'glIsVertexArray' has unsupported value 'GLEW_GET_FUN(__glewIsVertexArray)'
# const 'GLEW_ARB_vertex_array_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_array_object)'
# const 'glGetVertexAttribLdv' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribLdv)'
# const 'glVertexAttribL1d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1d)'
# const 'glVertexAttribL1dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1dv)'
# const 'glVertexAttribL2d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2d)'
# const 'glVertexAttribL2dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2dv)'
# const 'glVertexAttribL3d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3d)'
# const 'glVertexAttribL3dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3dv)'
# const 'glVertexAttribL4d' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4d)'
# const 'glVertexAttribL4dv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4dv)'
# const 'glVertexAttribLPointer' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribLPointer)'
# const 'GLEW_ARB_vertex_attrib_64bit' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_attrib_64bit)'
# const 'glBindVertexBuffer' has unsupported value 'GLEW_GET_FUN(__glewBindVertexBuffer)'
# const 'glVertexArrayBindVertexBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayBindVertexBufferEXT)'
# const 'glVertexArrayVertexAttribBindingEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribBindingEXT)'
# const 'glVertexArrayVertexAttribFormatEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribFormatEXT)'
# const 'glVertexArrayVertexAttribIFormatEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribIFormatEXT)'
# const 'glVertexArrayVertexAttribLFormatEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribLFormatEXT)'
# const 'glVertexArrayVertexBindingDivisorEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexBindingDivisorEXT)'
# const 'glVertexAttribBinding' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribBinding)'
# const 'glVertexAttribFormat' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribFormat)'
# const 'glVertexAttribIFormat' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribIFormat)'
# const 'glVertexAttribLFormat' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribLFormat)'
# const 'glVertexBindingDivisor' has unsupported value 'GLEW_GET_FUN(__glewVertexBindingDivisor)'
# const 'GLEW_ARB_vertex_attrib_binding' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_attrib_binding)'
# const 'glVertexBlendARB' has unsupported value 'GLEW_GET_FUN(__glewVertexBlendARB)'
# const 'glWeightPointerARB' has unsupported value 'GLEW_GET_FUN(__glewWeightPointerARB)'
# const 'glWeightbvARB' has unsupported value 'GLEW_GET_FUN(__glewWeightbvARB)'
# const 'glWeightdvARB' has unsupported value 'GLEW_GET_FUN(__glewWeightdvARB)'
# const 'glWeightfvARB' has unsupported value 'GLEW_GET_FUN(__glewWeightfvARB)'
# const 'glWeightivARB' has unsupported value 'GLEW_GET_FUN(__glewWeightivARB)'
# const 'glWeightsvARB' has unsupported value 'GLEW_GET_FUN(__glewWeightsvARB)'
# const 'glWeightubvARB' has unsupported value 'GLEW_GET_FUN(__glewWeightubvARB)'
# const 'glWeightuivARB' has unsupported value 'GLEW_GET_FUN(__glewWeightuivARB)'
# const 'glWeightusvARB' has unsupported value 'GLEW_GET_FUN(__glewWeightusvARB)'
# const 'GLEW_ARB_vertex_blend' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_blend)'
# const 'glBindBufferARB' has unsupported value 'GLEW_GET_FUN(__glewBindBufferARB)'
# const 'glBufferDataARB' has unsupported value 'GLEW_GET_FUN(__glewBufferDataARB)'
# const 'glBufferSubDataARB' has unsupported value 'GLEW_GET_FUN(__glewBufferSubDataARB)'
# const 'glDeleteBuffersARB' has unsupported value 'GLEW_GET_FUN(__glewDeleteBuffersARB)'
# const 'glGenBuffersARB' has unsupported value 'GLEW_GET_FUN(__glewGenBuffersARB)'
# const 'glGetBufferParameterivARB' has unsupported value 'GLEW_GET_FUN(__glewGetBufferParameterivARB)'
# const 'glGetBufferPointervARB' has unsupported value 'GLEW_GET_FUN(__glewGetBufferPointervARB)'
# const 'glGetBufferSubDataARB' has unsupported value 'GLEW_GET_FUN(__glewGetBufferSubDataARB)'
# const 'glIsBufferARB' has unsupported value 'GLEW_GET_FUN(__glewIsBufferARB)'
# const 'glMapBufferARB' has unsupported value 'GLEW_GET_FUN(__glewMapBufferARB)'
# const 'glUnmapBufferARB' has unsupported value 'GLEW_GET_FUN(__glewUnmapBufferARB)'
# const 'GLEW_ARB_vertex_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_buffer_object)'
# const 'glBindProgramARB' has unsupported value 'GLEW_GET_FUN(__glewBindProgramARB)'
# const 'glDeleteProgramsARB' has unsupported value 'GLEW_GET_FUN(__glewDeleteProgramsARB)'
# const 'glDisableVertexAttribArrayARB' has unsupported value 'GLEW_GET_FUN(__glewDisableVertexAttribArrayARB)'
# const 'glEnableVertexAttribArrayARB' has unsupported value 'GLEW_GET_FUN(__glewEnableVertexAttribArrayARB)'
# const 'glGenProgramsARB' has unsupported value 'GLEW_GET_FUN(__glewGenProgramsARB)'
# const 'glGetProgramEnvParameterdvARB' has unsupported value 'GLEW_GET_FUN(__glewGetProgramEnvParameterdvARB)'
# const 'glGetProgramEnvParameterfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetProgramEnvParameterfvARB)'
# const 'glGetProgramLocalParameterdvARB' has unsupported value 'GLEW_GET_FUN(__glewGetProgramLocalParameterdvARB)'
# const 'glGetProgramLocalParameterfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetProgramLocalParameterfvARB)'
# const 'glGetProgramStringARB' has unsupported value 'GLEW_GET_FUN(__glewGetProgramStringARB)'
# const 'glGetProgramivARB' has unsupported value 'GLEW_GET_FUN(__glewGetProgramivARB)'
# const 'glGetVertexAttribPointervARB' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribPointervARB)'
# const 'glGetVertexAttribdvARB' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribdvARB)'
# const 'glGetVertexAttribfvARB' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribfvARB)'
# const 'glGetVertexAttribivARB' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribivARB)'
# const 'glIsProgramARB' has unsupported value 'GLEW_GET_FUN(__glewIsProgramARB)'
# const 'glProgramEnvParameter4dARB' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameter4dARB)'
# const 'glProgramEnvParameter4dvARB' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameter4dvARB)'
# const 'glProgramEnvParameter4fARB' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameter4fARB)'
# const 'glProgramEnvParameter4fvARB' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameter4fvARB)'
# const 'glProgramLocalParameter4dARB' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameter4dARB)'
# const 'glProgramLocalParameter4dvARB' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameter4dvARB)'
# const 'glProgramLocalParameter4fARB' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameter4fARB)'
# const 'glProgramLocalParameter4fvARB' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameter4fvARB)'
# const 'glProgramStringARB' has unsupported value 'GLEW_GET_FUN(__glewProgramStringARB)'
# const 'glVertexAttrib1dARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1dARB)'
# const 'glVertexAttrib1dvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1dvARB)'
# const 'glVertexAttrib1fARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1fARB)'
# const 'glVertexAttrib1fvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1fvARB)'
# const 'glVertexAttrib1sARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1sARB)'
# const 'glVertexAttrib1svARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1svARB)'
# const 'glVertexAttrib2dARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2dARB)'
# const 'glVertexAttrib2dvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2dvARB)'
# const 'glVertexAttrib2fARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2fARB)'
# const 'glVertexAttrib2fvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2fvARB)'
# const 'glVertexAttrib2sARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2sARB)'
# const 'glVertexAttrib2svARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2svARB)'
# const 'glVertexAttrib3dARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3dARB)'
# const 'glVertexAttrib3dvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3dvARB)'
# const 'glVertexAttrib3fARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3fARB)'
# const 'glVertexAttrib3fvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3fvARB)'
# const 'glVertexAttrib3sARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3sARB)'
# const 'glVertexAttrib3svARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3svARB)'
# const 'glVertexAttrib4NbvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NbvARB)'
# const 'glVertexAttrib4NivARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NivARB)'
# const 'glVertexAttrib4NsvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NsvARB)'
# const 'glVertexAttrib4NubARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NubARB)'
# const 'glVertexAttrib4NubvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NubvARB)'
# const 'glVertexAttrib4NuivARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NuivARB)'
# const 'glVertexAttrib4NusvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4NusvARB)'
# const 'glVertexAttrib4bvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4bvARB)'
# const 'glVertexAttrib4dARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4dARB)'
# const 'glVertexAttrib4dvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4dvARB)'
# const 'glVertexAttrib4fARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4fARB)'
# const 'glVertexAttrib4fvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4fvARB)'
# const 'glVertexAttrib4ivARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4ivARB)'
# const 'glVertexAttrib4sARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4sARB)'
# const 'glVertexAttrib4svARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4svARB)'
# const 'glVertexAttrib4ubvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4ubvARB)'
# const 'glVertexAttrib4uivARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4uivARB)'
# const 'glVertexAttrib4usvARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4usvARB)'
# const 'glVertexAttribPointerARB' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribPointerARB)'
# const 'GLEW_ARB_vertex_program' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_program)'
# const 'glBindAttribLocationARB' has unsupported value 'GLEW_GET_FUN(__glewBindAttribLocationARB)'
# const 'glGetActiveAttribARB' has unsupported value 'GLEW_GET_FUN(__glewGetActiveAttribARB)'
# const 'glGetAttribLocationARB' has unsupported value 'GLEW_GET_FUN(__glewGetAttribLocationARB)'
# const 'GLEW_ARB_vertex_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_shader)'
# const 'GLEW_ARB_vertex_type_10f_11f_11f_rev' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_type_10f_11f_11f_rev)'
# const 'glColorP3ui' has unsupported value 'GLEW_GET_FUN(__glewColorP3ui)'
# const 'glColorP3uiv' has unsupported value 'GLEW_GET_FUN(__glewColorP3uiv)'
# const 'glColorP4ui' has unsupported value 'GLEW_GET_FUN(__glewColorP4ui)'
# const 'glColorP4uiv' has unsupported value 'GLEW_GET_FUN(__glewColorP4uiv)'
# const 'glMultiTexCoordP1ui' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP1ui)'
# const 'glMultiTexCoordP1uiv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP1uiv)'
# const 'glMultiTexCoordP2ui' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP2ui)'
# const 'glMultiTexCoordP2uiv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP2uiv)'
# const 'glMultiTexCoordP3ui' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP3ui)'
# const 'glMultiTexCoordP3uiv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP3uiv)'
# const 'glMultiTexCoordP4ui' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP4ui)'
# const 'glMultiTexCoordP4uiv' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordP4uiv)'
# const 'glNormalP3ui' has unsupported value 'GLEW_GET_FUN(__glewNormalP3ui)'
# const 'glNormalP3uiv' has unsupported value 'GLEW_GET_FUN(__glewNormalP3uiv)'
# const 'glSecondaryColorP3ui' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColorP3ui)'
# const 'glSecondaryColorP3uiv' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColorP3uiv)'
# const 'glTexCoordP1ui' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP1ui)'
# const 'glTexCoordP1uiv' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP1uiv)'
# const 'glTexCoordP2ui' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP2ui)'
# const 'glTexCoordP2uiv' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP2uiv)'
# const 'glTexCoordP3ui' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP3ui)'
# const 'glTexCoordP3uiv' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP3uiv)'
# const 'glTexCoordP4ui' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP4ui)'
# const 'glTexCoordP4uiv' has unsupported value 'GLEW_GET_FUN(__glewTexCoordP4uiv)'
# const 'glVertexAttribP1ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP1ui)'
# const 'glVertexAttribP1uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP1uiv)'
# const 'glVertexAttribP2ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP2ui)'
# const 'glVertexAttribP2uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP2uiv)'
# const 'glVertexAttribP3ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP3ui)'
# const 'glVertexAttribP3uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP3uiv)'
# const 'glVertexAttribP4ui' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP4ui)'
# const 'glVertexAttribP4uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribP4uiv)'
# const 'glVertexP2ui' has unsupported value 'GLEW_GET_FUN(__glewVertexP2ui)'
# const 'glVertexP2uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexP2uiv)'
# const 'glVertexP3ui' has unsupported value 'GLEW_GET_FUN(__glewVertexP3ui)'
# const 'glVertexP3uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexP3uiv)'
# const 'glVertexP4ui' has unsupported value 'GLEW_GET_FUN(__glewVertexP4ui)'
# const 'glVertexP4uiv' has unsupported value 'GLEW_GET_FUN(__glewVertexP4uiv)'
# const 'GLEW_ARB_vertex_type_2_10_10_10_rev' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_vertex_type_2_10_10_10_rev)'
# const 'glDepthRangeArrayv' has unsupported value 'GLEW_GET_FUN(__glewDepthRangeArrayv)'
# const 'glDepthRangeIndexed' has unsupported value 'GLEW_GET_FUN(__glewDepthRangeIndexed)'
# const 'glGetDoublei_v' has unsupported value 'GLEW_GET_FUN(__glewGetDoublei_v)'
# const 'glGetFloati_v' has unsupported value 'GLEW_GET_FUN(__glewGetFloati_v)'
# const 'glScissorArrayv' has unsupported value 'GLEW_GET_FUN(__glewScissorArrayv)'
# const 'glScissorIndexed' has unsupported value 'GLEW_GET_FUN(__glewScissorIndexed)'
# const 'glScissorIndexedv' has unsupported value 'GLEW_GET_FUN(__glewScissorIndexedv)'
# const 'glViewportArrayv' has unsupported value 'GLEW_GET_FUN(__glewViewportArrayv)'
# const 'glViewportIndexedf' has unsupported value 'GLEW_GET_FUN(__glewViewportIndexedf)'
# const 'glViewportIndexedfv' has unsupported value 'GLEW_GET_FUN(__glewViewportIndexedfv)'
# const 'GLEW_ARB_viewport_array' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_viewport_array)'
# const 'glWindowPos2dARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2dARB)'
# const 'glWindowPos2dvARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2dvARB)'
# const 'glWindowPos2fARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2fARB)'
# const 'glWindowPos2fvARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2fvARB)'
# const 'glWindowPos2iARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2iARB)'
# const 'glWindowPos2ivARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2ivARB)'
# const 'glWindowPos2sARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2sARB)'
# const 'glWindowPos2svARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2svARB)'
# const 'glWindowPos3dARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3dARB)'
# const 'glWindowPos3dvARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3dvARB)'
# const 'glWindowPos3fARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3fARB)'
# const 'glWindowPos3fvARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3fvARB)'
# const 'glWindowPos3iARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3iARB)'
# const 'glWindowPos3ivARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3ivARB)'
# const 'glWindowPos3sARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3sARB)'
# const 'glWindowPos3svARB' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3svARB)'
# const 'GLEW_ARB_window_pos' has unsupported value 'GLEW_GET_VAR(__GLEW_ARB_window_pos)'
# const 'GLEW_ARM_mali_program_binary' has unsupported value 'GLEW_GET_VAR(__GLEW_ARM_mali_program_binary)'
# const 'GLEW_ARM_mali_shader_binary' has unsupported value 'GLEW_GET_VAR(__GLEW_ARM_mali_shader_binary)'
# const 'GLEW_ARM_rgba8' has unsupported value 'GLEW_GET_VAR(__GLEW_ARM_rgba8)'
# const 'GLEW_ARM_shader_framebuffer_fetch' has unsupported value 'GLEW_GET_VAR(__GLEW_ARM_shader_framebuffer_fetch)'
# const 'GLEW_ARM_shader_framebuffer_fetch_depth_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_ARM_shader_framebuffer_fetch_depth_stencil)'
# const 'GLEW_ATIX_point_sprites' has unsupported value 'GLEW_GET_VAR(__GLEW_ATIX_point_sprites)'
# const 'GLEW_ATIX_texture_env_combine3' has unsupported value 'GLEW_GET_VAR(__GLEW_ATIX_texture_env_combine3)'
# const 'GLEW_ATIX_texture_env_route' has unsupported value 'GLEW_GET_VAR(__GLEW_ATIX_texture_env_route)'
# const 'GLEW_ATIX_vertex_shader_output_point_size' has unsupported value 'GLEW_GET_VAR(__GLEW_ATIX_vertex_shader_output_point_size)'
# const 'glDrawBuffersATI' has unsupported value 'GLEW_GET_FUN(__glewDrawBuffersATI)'
# const 'GLEW_ATI_draw_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_draw_buffers)'
# const 'glDrawElementArrayATI' has unsupported value 'GLEW_GET_FUN(__glewDrawElementArrayATI)'
# const 'glDrawRangeElementArrayATI' has unsupported value 'GLEW_GET_FUN(__glewDrawRangeElementArrayATI)'
# const 'glElementPointerATI' has unsupported value 'GLEW_GET_FUN(__glewElementPointerATI)'
# const 'GLEW_ATI_element_array' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_element_array)'
# const 'glGetTexBumpParameterfvATI' has unsupported value 'GLEW_GET_FUN(__glewGetTexBumpParameterfvATI)'
# const 'glGetTexBumpParameterivATI' has unsupported value 'GLEW_GET_FUN(__glewGetTexBumpParameterivATI)'
# const 'glTexBumpParameterfvATI' has unsupported value 'GLEW_GET_FUN(__glewTexBumpParameterfvATI)'
# const 'glTexBumpParameterivATI' has unsupported value 'GLEW_GET_FUN(__glewTexBumpParameterivATI)'
# const 'GLEW_ATI_envmap_bumpmap' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_envmap_bumpmap)'
# const 'glAlphaFragmentOp1ATI' has unsupported value 'GLEW_GET_FUN(__glewAlphaFragmentOp1ATI)'
# const 'glAlphaFragmentOp2ATI' has unsupported value 'GLEW_GET_FUN(__glewAlphaFragmentOp2ATI)'
# const 'glAlphaFragmentOp3ATI' has unsupported value 'GLEW_GET_FUN(__glewAlphaFragmentOp3ATI)'
# const 'glBeginFragmentShaderATI' has unsupported value 'GLEW_GET_FUN(__glewBeginFragmentShaderATI)'
# const 'glBindFragmentShaderATI' has unsupported value 'GLEW_GET_FUN(__glewBindFragmentShaderATI)'
# const 'glColorFragmentOp1ATI' has unsupported value 'GLEW_GET_FUN(__glewColorFragmentOp1ATI)'
# const 'glColorFragmentOp2ATI' has unsupported value 'GLEW_GET_FUN(__glewColorFragmentOp2ATI)'
# const 'glColorFragmentOp3ATI' has unsupported value 'GLEW_GET_FUN(__glewColorFragmentOp3ATI)'
# const 'glDeleteFragmentShaderATI' has unsupported value 'GLEW_GET_FUN(__glewDeleteFragmentShaderATI)'
# const 'glEndFragmentShaderATI' has unsupported value 'GLEW_GET_FUN(__glewEndFragmentShaderATI)'
# const 'glGenFragmentShadersATI' has unsupported value 'GLEW_GET_FUN(__glewGenFragmentShadersATI)'
# const 'glPassTexCoordATI' has unsupported value 'GLEW_GET_FUN(__glewPassTexCoordATI)'
# const 'glSampleMapATI' has unsupported value 'GLEW_GET_FUN(__glewSampleMapATI)'
# const 'glSetFragmentShaderConstantATI' has unsupported value 'GLEW_GET_FUN(__glewSetFragmentShaderConstantATI)'
# const 'GLEW_ATI_fragment_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_fragment_shader)'
# const 'glMapObjectBufferATI' has unsupported value 'GLEW_GET_FUN(__glewMapObjectBufferATI)'
# const 'glUnmapObjectBufferATI' has unsupported value 'GLEW_GET_FUN(__glewUnmapObjectBufferATI)'
# const 'GLEW_ATI_map_object_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_map_object_buffer)'
# const 'GLEW_ATI_meminfo' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_meminfo)'
# const 'glPNTrianglesfATI' has unsupported value 'GLEW_GET_FUN(__glewPNTrianglesfATI)'
# const 'glPNTrianglesiATI' has unsupported value 'GLEW_GET_FUN(__glewPNTrianglesiATI)'
# const 'GLEW_ATI_pn_triangles' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_pn_triangles)'
# const 'glStencilFuncSeparateATI' has unsupported value 'GLEW_GET_FUN(__glewStencilFuncSeparateATI)'
# const 'glStencilOpSeparateATI' has unsupported value 'GLEW_GET_FUN(__glewStencilOpSeparateATI)'
# const 'GLEW_ATI_separate_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_separate_stencil)'
# const 'GLEW_ATI_shader_texture_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_shader_texture_lod)'
# const 'GLEW_ATI_text_fragment_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_text_fragment_shader)'
# const 'GLEW_ATI_texture_compression_3dc' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_texture_compression_3dc)'
# const 'GLEW_ATI_texture_env_combine3' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_texture_env_combine3)'
# const 'GLEW_ATI_texture_float' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_texture_float)'
# const 'GLEW_ATI_texture_mirror_once' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_texture_mirror_once)'
# const 'glArrayObjectATI' has unsupported value 'GLEW_GET_FUN(__glewArrayObjectATI)'
# const 'glFreeObjectBufferATI' has unsupported value 'GLEW_GET_FUN(__glewFreeObjectBufferATI)'
# const 'glGetArrayObjectfvATI' has unsupported value 'GLEW_GET_FUN(__glewGetArrayObjectfvATI)'
# const 'glGetArrayObjectivATI' has unsupported value 'GLEW_GET_FUN(__glewGetArrayObjectivATI)'
# const 'glGetObjectBufferfvATI' has unsupported value 'GLEW_GET_FUN(__glewGetObjectBufferfvATI)'
# const 'glGetObjectBufferivATI' has unsupported value 'GLEW_GET_FUN(__glewGetObjectBufferivATI)'
# const 'glGetVariantArrayObjectfvATI' has unsupported value 'GLEW_GET_FUN(__glewGetVariantArrayObjectfvATI)'
# const 'glGetVariantArrayObjectivATI' has unsupported value 'GLEW_GET_FUN(__glewGetVariantArrayObjectivATI)'
# const 'glIsObjectBufferATI' has unsupported value 'GLEW_GET_FUN(__glewIsObjectBufferATI)'
# const 'glNewObjectBufferATI' has unsupported value 'GLEW_GET_FUN(__glewNewObjectBufferATI)'
# const 'glUpdateObjectBufferATI' has unsupported value 'GLEW_GET_FUN(__glewUpdateObjectBufferATI)'
# const 'glVariantArrayObjectATI' has unsupported value 'GLEW_GET_FUN(__glewVariantArrayObjectATI)'
# const 'GLEW_ATI_vertex_array_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_vertex_array_object)'
# const 'glGetVertexAttribArrayObjectfvATI' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribArrayObjectfvATI)'
# const 'glGetVertexAttribArrayObjectivATI' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribArrayObjectivATI)'
# const 'glVertexAttribArrayObjectATI' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribArrayObjectATI)'
# const 'GLEW_ATI_vertex_attrib_array_object' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_vertex_attrib_array_object)'
# const 'glClientActiveVertexStreamATI' has unsupported value 'GLEW_GET_FUN(__glewClientActiveVertexStreamATI)'
# const 'glNormalStream3bATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3bATI)'
# const 'glNormalStream3bvATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3bvATI)'
# const 'glNormalStream3dATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3dATI)'
# const 'glNormalStream3dvATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3dvATI)'
# const 'glNormalStream3fATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3fATI)'
# const 'glNormalStream3fvATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3fvATI)'
# const 'glNormalStream3iATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3iATI)'
# const 'glNormalStream3ivATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3ivATI)'
# const 'glNormalStream3sATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3sATI)'
# const 'glNormalStream3svATI' has unsupported value 'GLEW_GET_FUN(__glewNormalStream3svATI)'
# const 'glVertexBlendEnvfATI' has unsupported value 'GLEW_GET_FUN(__glewVertexBlendEnvfATI)'
# const 'glVertexBlendEnviATI' has unsupported value 'GLEW_GET_FUN(__glewVertexBlendEnviATI)'
# const 'glVertexStream1dATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1dATI)'
# const 'glVertexStream1dvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1dvATI)'
# const 'glVertexStream1fATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1fATI)'
# const 'glVertexStream1fvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1fvATI)'
# const 'glVertexStream1iATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1iATI)'
# const 'glVertexStream1ivATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1ivATI)'
# const 'glVertexStream1sATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1sATI)'
# const 'glVertexStream1svATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream1svATI)'
# const 'glVertexStream2dATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2dATI)'
# const 'glVertexStream2dvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2dvATI)'
# const 'glVertexStream2fATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2fATI)'
# const 'glVertexStream2fvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2fvATI)'
# const 'glVertexStream2iATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2iATI)'
# const 'glVertexStream2ivATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2ivATI)'
# const 'glVertexStream2sATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2sATI)'
# const 'glVertexStream2svATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream2svATI)'
# const 'glVertexStream3dATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3dATI)'
# const 'glVertexStream3dvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3dvATI)'
# const 'glVertexStream3fATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3fATI)'
# const 'glVertexStream3fvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3fvATI)'
# const 'glVertexStream3iATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3iATI)'
# const 'glVertexStream3ivATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3ivATI)'
# const 'glVertexStream3sATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3sATI)'
# const 'glVertexStream3svATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream3svATI)'
# const 'glVertexStream4dATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4dATI)'
# const 'glVertexStream4dvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4dvATI)'
# const 'glVertexStream4fATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4fATI)'
# const 'glVertexStream4fvATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4fvATI)'
# const 'glVertexStream4iATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4iATI)'
# const 'glVertexStream4ivATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4ivATI)'
# const 'glVertexStream4sATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4sATI)'
# const 'glVertexStream4svATI' has unsupported value 'GLEW_GET_FUN(__glewVertexStream4svATI)'
# const 'GLEW_ATI_vertex_streams' has unsupported value 'GLEW_GET_VAR(__GLEW_ATI_vertex_streams)'
# const 'GLEW_EGL_KHR_context_flush_control' has unsupported value 'GLEW_GET_VAR(__GLEW_EGL_KHR_context_flush_control)'
# const 'GLEW_EGL_NV_robustness_video_memory_purge' has unsupported value 'GLEW_GET_VAR(__GLEW_EGL_NV_robustness_video_memory_purge)'
# const 'GLEW_EXT_422_pixels' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_422_pixels)'
# const 'GLEW_EXT_Cg_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_Cg_shader)'
# const 'GLEW_EXT_EGL_image_array' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_EGL_image_array)'
# const 'GLEW_EXT_YUV_target' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_YUV_target)'
# const 'GLEW_EXT_abgr' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_abgr)'
# const 'glDrawArraysInstancedBaseInstanceEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstancedBaseInstanceEXT)'
# const 'glDrawElementsInstancedBaseInstanceEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedBaseInstanceEXT)'
# const 'glDrawElementsInstancedBaseVertexBaseInstanceEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedBaseVertexBaseInstanceEXT)'
# const 'GLEW_EXT_base_instance' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_base_instance)'
# const 'GLEW_EXT_bgra' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_bgra)'
# const 'glGetUniformBufferSizeEXT' has unsupported value 'GLEW_GET_FUN(__glewGetUniformBufferSizeEXT)'
# const 'glGetUniformOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewGetUniformOffsetEXT)'
# const 'glUniformBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewUniformBufferEXT)'
# const 'GLEW_EXT_bindable_uniform' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_bindable_uniform)'
# const 'glBlendColorEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendColorEXT)'
# const 'GLEW_EXT_blend_color' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_color)'
# const 'glBlendEquationSeparateEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationSeparateEXT)'
# const 'GLEW_EXT_blend_equation_separate' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_equation_separate)'
# const 'glBindFragDataLocationIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewBindFragDataLocationIndexedEXT)'
# const 'glGetFragDataIndexEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFragDataIndexEXT)'
# const 'glGetProgramResourceLocationIndexEXT' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourceLocationIndexEXT)'
# const 'GLEW_EXT_blend_func_extended' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_func_extended)'
# const 'glBlendFuncSeparateEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncSeparateEXT)'
# const 'GLEW_EXT_blend_func_separate' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_func_separate)'
# const 'GLEW_EXT_blend_logic_op' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_logic_op)'
# const 'glBlendEquationEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationEXT)'
# const 'GLEW_EXT_blend_minmax' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_minmax)'
# const 'GLEW_EXT_blend_subtract' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_blend_subtract)'
# const 'glBufferStorageEXT' has unsupported value 'GLEW_GET_FUN(__glewBufferStorageEXT)'
# const 'glNamedBufferStorageEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferStorageEXT)'
# const 'GLEW_EXT_buffer_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_buffer_storage)'
# const 'glClearTexImageEXT' has unsupported value 'GLEW_GET_FUN(__glewClearTexImageEXT)'
# const 'glClearTexSubImageEXT' has unsupported value 'GLEW_GET_FUN(__glewClearTexSubImageEXT)'
# const 'GLEW_EXT_clear_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_clear_texture)'
# const 'GLEW_EXT_clip_cull_distance' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_clip_cull_distance)'
# const 'GLEW_EXT_clip_volume_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_clip_volume_hint)'
# const 'GLEW_EXT_cmyka' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_cmyka)'
# const 'GLEW_EXT_color_buffer_float' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_color_buffer_float)'
# const 'GLEW_EXT_color_buffer_half_float' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_color_buffer_half_float)'
# const 'glColorSubTableEXT' has unsupported value 'GLEW_GET_FUN(__glewColorSubTableEXT)'
# const 'glCopyColorSubTableEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyColorSubTableEXT)'
# const 'GLEW_EXT_color_subtable' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_color_subtable)'
# const 'glLockArraysEXT' has unsupported value 'GLEW_GET_FUN(__glewLockArraysEXT)'
# const 'glUnlockArraysEXT' has unsupported value 'GLEW_GET_FUN(__glewUnlockArraysEXT)'
# const 'GLEW_EXT_compiled_vertex_array' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_compiled_vertex_array)'
# const 'GLEW_EXT_compressed_ETC1_RGB8_sub_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_compressed_ETC1_RGB8_sub_texture)'
# const 'GLEW_EXT_conservative_depth' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_conservative_depth)'
# const 'glConvolutionFilter1DEXT' has unsupported value 'GLEW_GET_FUN(__glewConvolutionFilter1DEXT)'
# const 'glConvolutionFilter2DEXT' has unsupported value 'GLEW_GET_FUN(__glewConvolutionFilter2DEXT)'
# const 'glConvolutionParameterfEXT' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameterfEXT)'
# const 'glConvolutionParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameterfvEXT)'
# const 'glConvolutionParameteriEXT' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameteriEXT)'
# const 'glConvolutionParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewConvolutionParameterivEXT)'
# const 'glCopyConvolutionFilter1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyConvolutionFilter1DEXT)'
# const 'glCopyConvolutionFilter2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyConvolutionFilter2DEXT)'
# const 'glGetConvolutionFilterEXT' has unsupported value 'GLEW_GET_FUN(__glewGetConvolutionFilterEXT)'
# const 'glGetConvolutionParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetConvolutionParameterfvEXT)'
# const 'glGetConvolutionParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetConvolutionParameterivEXT)'
# const 'glGetSeparableFilterEXT' has unsupported value 'GLEW_GET_FUN(__glewGetSeparableFilterEXT)'
# const 'glSeparableFilter2DEXT' has unsupported value 'GLEW_GET_FUN(__glewSeparableFilter2DEXT)'
# const 'GLEW_EXT_convolution' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_convolution)'
# const 'glBinormalPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewBinormalPointerEXT)'
# const 'glTangentPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewTangentPointerEXT)'
# const 'GLEW_EXT_coordinate_frame' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_coordinate_frame)'
# const 'glCopyImageSubDataEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyImageSubDataEXT)'
# const 'GLEW_EXT_copy_image' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_copy_image)'
# const 'glCopyTexImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTexImage1DEXT)'
# const 'glCopyTexImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTexImage2DEXT)'
# const 'glCopyTexSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTexSubImage1DEXT)'
# const 'glCopyTexSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTexSubImage2DEXT)'
# const 'glCopyTexSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTexSubImage3DEXT)'
# const 'GLEW_EXT_copy_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_copy_texture)'
# const 'glCullParameterdvEXT' has unsupported value 'GLEW_GET_FUN(__glewCullParameterdvEXT)'
# const 'glCullParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewCullParameterfvEXT)'
# const 'GLEW_EXT_cull_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_cull_vertex)'
# const 'glGetObjectLabelEXT' has unsupported value 'GLEW_GET_FUN(__glewGetObjectLabelEXT)'
# const 'glLabelObjectEXT' has unsupported value 'GLEW_GET_FUN(__glewLabelObjectEXT)'
# const 'GLEW_EXT_debug_label' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_debug_label)'
# const 'glInsertEventMarkerEXT' has unsupported value 'GLEW_GET_FUN(__glewInsertEventMarkerEXT)'
# const 'glPopGroupMarkerEXT' has unsupported value 'GLEW_GET_FUN(__glewPopGroupMarkerEXT)'
# const 'glPushGroupMarkerEXT' has unsupported value 'GLEW_GET_FUN(__glewPushGroupMarkerEXT)'
# const 'GLEW_EXT_debug_marker' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_debug_marker)'
# const 'glDepthBoundsEXT' has unsupported value 'GLEW_GET_FUN(__glewDepthBoundsEXT)'
# const 'GLEW_EXT_depth_bounds_test' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_depth_bounds_test)'
# const 'glBindMultiTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewBindMultiTextureEXT)'
# const 'glCheckNamedFramebufferStatusEXT' has unsupported value 'GLEW_GET_FUN(__glewCheckNamedFramebufferStatusEXT)'
# const 'glClientAttribDefaultEXT' has unsupported value 'GLEW_GET_FUN(__glewClientAttribDefaultEXT)'
# const 'glCompressedMultiTexImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedMultiTexImage1DEXT)'
# const 'glCompressedMultiTexImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedMultiTexImage2DEXT)'
# const 'glCompressedMultiTexImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedMultiTexImage3DEXT)'
# const 'glCompressedMultiTexSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedMultiTexSubImage1DEXT)'
# const 'glCompressedMultiTexSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedMultiTexSubImage2DEXT)'
# const 'glCompressedMultiTexSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedMultiTexSubImage3DEXT)'
# const 'glCompressedTextureImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureImage1DEXT)'
# const 'glCompressedTextureImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureImage2DEXT)'
# const 'glCompressedTextureImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureImage3DEXT)'
# const 'glCompressedTextureSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureSubImage1DEXT)'
# const 'glCompressedTextureSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureSubImage2DEXT)'
# const 'glCompressedTextureSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCompressedTextureSubImage3DEXT)'
# const 'glCopyMultiTexImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyMultiTexImage1DEXT)'
# const 'glCopyMultiTexImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyMultiTexImage2DEXT)'
# const 'glCopyMultiTexSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyMultiTexSubImage1DEXT)'
# const 'glCopyMultiTexSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyMultiTexSubImage2DEXT)'
# const 'glCopyMultiTexSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyMultiTexSubImage3DEXT)'
# const 'glCopyTextureImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureImage1DEXT)'
# const 'glCopyTextureImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureImage2DEXT)'
# const 'glCopyTextureSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureSubImage1DEXT)'
# const 'glCopyTextureSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureSubImage2DEXT)'
# const 'glCopyTextureSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewCopyTextureSubImage3DEXT)'
# const 'glDisableClientStateIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableClientStateIndexedEXT)'
# const 'glDisableClientStateiEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableClientStateiEXT)'
# const 'glDisableVertexArrayAttribEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableVertexArrayAttribEXT)'
# const 'glDisableVertexArrayEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableVertexArrayEXT)'
# const 'glEnableClientStateIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableClientStateIndexedEXT)'
# const 'glEnableClientStateiEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableClientStateiEXT)'
# const 'glEnableVertexArrayAttribEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableVertexArrayAttribEXT)'
# const 'glEnableVertexArrayEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableVertexArrayEXT)'
# const 'glFlushMappedNamedBufferRangeEXT' has unsupported value 'GLEW_GET_FUN(__glewFlushMappedNamedBufferRangeEXT)'
# const 'glFramebufferDrawBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferDrawBufferEXT)'
# const 'glFramebufferDrawBuffersEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferDrawBuffersEXT)'
# const 'glFramebufferReadBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferReadBufferEXT)'
# const 'glGenerateMultiTexMipmapEXT' has unsupported value 'GLEW_GET_FUN(__glewGenerateMultiTexMipmapEXT)'
# const 'glGenerateTextureMipmapEXT' has unsupported value 'GLEW_GET_FUN(__glewGenerateTextureMipmapEXT)'
# const 'glGetCompressedMultiTexImageEXT' has unsupported value 'GLEW_GET_FUN(__glewGetCompressedMultiTexImageEXT)'
# const 'glGetCompressedTextureImageEXT' has unsupported value 'GLEW_GET_FUN(__glewGetCompressedTextureImageEXT)'
# const 'glGetDoubleIndexedvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetDoubleIndexedvEXT)'
# const 'glGetDoublei_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetDoublei_vEXT)'
# const 'glGetFloatIndexedvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFloatIndexedvEXT)'
# const 'glGetFloati_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFloati_vEXT)'
# const 'glGetFramebufferParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFramebufferParameterivEXT)'
# const 'glGetMultiTexEnvfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexEnvfvEXT)'
# const 'glGetMultiTexEnvivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexEnvivEXT)'
# const 'glGetMultiTexGendvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexGendvEXT)'
# const 'glGetMultiTexGenfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexGenfvEXT)'
# const 'glGetMultiTexGenivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexGenivEXT)'
# const 'glGetMultiTexImageEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexImageEXT)'
# const 'glGetMultiTexLevelParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexLevelParameterfvEXT)'
# const 'glGetMultiTexLevelParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexLevelParameterivEXT)'
# const 'glGetMultiTexParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexParameterIivEXT)'
# const 'glGetMultiTexParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexParameterIuivEXT)'
# const 'glGetMultiTexParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexParameterfvEXT)'
# const 'glGetMultiTexParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMultiTexParameterivEXT)'
# const 'glGetNamedBufferParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferParameterivEXT)'
# const 'glGetNamedBufferPointervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferPointervEXT)'
# const 'glGetNamedBufferSubDataEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferSubDataEXT)'
# const 'glGetNamedFramebufferAttachmentParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedFramebufferAttachmentParameterivEXT)'
# const 'glGetNamedProgramLocalParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedProgramLocalParameterIivEXT)'
# const 'glGetNamedProgramLocalParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedProgramLocalParameterIuivEXT)'
# const 'glGetNamedProgramLocalParameterdvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedProgramLocalParameterdvEXT)'
# const 'glGetNamedProgramLocalParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedProgramLocalParameterfvEXT)'
# const 'glGetNamedProgramStringEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedProgramStringEXT)'
# const 'glGetNamedProgramivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedProgramivEXT)'
# const 'glGetNamedRenderbufferParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetNamedRenderbufferParameterivEXT)'
# const 'glGetPointerIndexedvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetPointerIndexedvEXT)'
# const 'glGetPointeri_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetPointeri_vEXT)'
# const 'glGetTextureImageEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureImageEXT)'
# const 'glGetTextureLevelParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureLevelParameterfvEXT)'
# const 'glGetTextureLevelParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureLevelParameterivEXT)'
# const 'glGetTextureParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterIivEXT)'
# const 'glGetTextureParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterIuivEXT)'
# const 'glGetTextureParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterfvEXT)'
# const 'glGetTextureParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTextureParameterivEXT)'
# const 'glGetVertexArrayIntegeri_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayIntegeri_vEXT)'
# const 'glGetVertexArrayIntegervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayIntegervEXT)'
# const 'glGetVertexArrayPointeri_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayPointeri_vEXT)'
# const 'glGetVertexArrayPointervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexArrayPointervEXT)'
# const 'glMapNamedBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewMapNamedBufferEXT)'
# const 'glMapNamedBufferRangeEXT' has unsupported value 'GLEW_GET_FUN(__glewMapNamedBufferRangeEXT)'
# const 'glMatrixFrustumEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixFrustumEXT)'
# const 'glMatrixLoadIdentityEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoadIdentityEXT)'
# const 'glMatrixLoadTransposedEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoadTransposedEXT)'
# const 'glMatrixLoadTransposefEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoadTransposefEXT)'
# const 'glMatrixLoaddEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoaddEXT)'
# const 'glMatrixLoadfEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoadfEXT)'
# const 'glMatrixMultTransposedEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixMultTransposedEXT)'
# const 'glMatrixMultTransposefEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixMultTransposefEXT)'
# const 'glMatrixMultdEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixMultdEXT)'
# const 'glMatrixMultfEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixMultfEXT)'
# const 'glMatrixOrthoEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixOrthoEXT)'
# const 'glMatrixPopEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixPopEXT)'
# const 'glMatrixPushEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixPushEXT)'
# const 'glMatrixRotatedEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixRotatedEXT)'
# const 'glMatrixRotatefEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixRotatefEXT)'
# const 'glMatrixScaledEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixScaledEXT)'
# const 'glMatrixScalefEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixScalefEXT)'
# const 'glMatrixTranslatedEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixTranslatedEXT)'
# const 'glMatrixTranslatefEXT' has unsupported value 'GLEW_GET_FUN(__glewMatrixTranslatefEXT)'
# const 'glMultiTexBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexBufferEXT)'
# const 'glMultiTexCoordPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoordPointerEXT)'
# const 'glMultiTexEnvfEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexEnvfEXT)'
# const 'glMultiTexEnvfvEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexEnvfvEXT)'
# const 'glMultiTexEnviEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexEnviEXT)'
# const 'glMultiTexEnvivEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexEnvivEXT)'
# const 'glMultiTexGendEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexGendEXT)'
# const 'glMultiTexGendvEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexGendvEXT)'
# const 'glMultiTexGenfEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexGenfEXT)'
# const 'glMultiTexGenfvEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexGenfvEXT)'
# const 'glMultiTexGeniEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexGeniEXT)'
# const 'glMultiTexGenivEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexGenivEXT)'
# const 'glMultiTexImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexImage1DEXT)'
# const 'glMultiTexImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexImage2DEXT)'
# const 'glMultiTexImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexImage3DEXT)'
# const 'glMultiTexParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexParameterIivEXT)'
# const 'glMultiTexParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexParameterIuivEXT)'
# const 'glMultiTexParameterfEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexParameterfEXT)'
# const 'glMultiTexParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexParameterfvEXT)'
# const 'glMultiTexParameteriEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexParameteriEXT)'
# const 'glMultiTexParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexParameterivEXT)'
# const 'glMultiTexRenderbufferEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexRenderbufferEXT)'
# const 'glMultiTexSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexSubImage1DEXT)'
# const 'glMultiTexSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexSubImage2DEXT)'
# const 'glMultiTexSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiTexSubImage3DEXT)'
# const 'glNamedBufferDataEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferDataEXT)'
# const 'glNamedBufferSubDataEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferSubDataEXT)'
# const 'glNamedCopyBufferSubDataEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedCopyBufferSubDataEXT)'
# const 'glNamedFramebufferRenderbufferEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferRenderbufferEXT)'
# const 'glNamedFramebufferTexture1DEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTexture1DEXT)'
# const 'glNamedFramebufferTexture2DEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTexture2DEXT)'
# const 'glNamedFramebufferTexture3DEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTexture3DEXT)'
# const 'glNamedFramebufferTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTextureEXT)'
# const 'glNamedFramebufferTextureFaceEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTextureFaceEXT)'
# const 'glNamedFramebufferTextureLayerEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferTextureLayerEXT)'
# const 'glNamedProgramLocalParameter4dEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameter4dEXT)'
# const 'glNamedProgramLocalParameter4dvEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameter4dvEXT)'
# const 'glNamedProgramLocalParameter4fEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameter4fEXT)'
# const 'glNamedProgramLocalParameter4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameter4fvEXT)'
# const 'glNamedProgramLocalParameterI4iEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameterI4iEXT)'
# const 'glNamedProgramLocalParameterI4ivEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameterI4ivEXT)'
# const 'glNamedProgramLocalParameterI4uiEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameterI4uiEXT)'
# const 'glNamedProgramLocalParameterI4uivEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameterI4uivEXT)'
# const 'glNamedProgramLocalParameters4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParameters4fvEXT)'
# const 'glNamedProgramLocalParametersI4ivEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParametersI4ivEXT)'
# const 'glNamedProgramLocalParametersI4uivEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramLocalParametersI4uivEXT)'
# const 'glNamedProgramStringEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedProgramStringEXT)'
# const 'glNamedRenderbufferStorageEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedRenderbufferStorageEXT)'
# const 'glNamedRenderbufferStorageMultisampleCoverageEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedRenderbufferStorageMultisampleCoverageEXT)'
# const 'glNamedRenderbufferStorageMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedRenderbufferStorageMultisampleEXT)'
# const 'glProgramUniform1fEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1fEXT)'
# const 'glProgramUniform1fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1fvEXT)'
# const 'glProgramUniform1iEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1iEXT)'
# const 'glProgramUniform1ivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1ivEXT)'
# const 'glProgramUniform1uiEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1uiEXT)'
# const 'glProgramUniform1uivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1uivEXT)'
# const 'glProgramUniform2fEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2fEXT)'
# const 'glProgramUniform2fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2fvEXT)'
# const 'glProgramUniform2iEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2iEXT)'
# const 'glProgramUniform2ivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2ivEXT)'
# const 'glProgramUniform2uiEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2uiEXT)'
# const 'glProgramUniform2uivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2uivEXT)'
# const 'glProgramUniform3fEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3fEXT)'
# const 'glProgramUniform3fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3fvEXT)'
# const 'glProgramUniform3iEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3iEXT)'
# const 'glProgramUniform3ivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3ivEXT)'
# const 'glProgramUniform3uiEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3uiEXT)'
# const 'glProgramUniform3uivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3uivEXT)'
# const 'glProgramUniform4fEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4fEXT)'
# const 'glProgramUniform4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4fvEXT)'
# const 'glProgramUniform4iEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4iEXT)'
# const 'glProgramUniform4ivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4ivEXT)'
# const 'glProgramUniform4uiEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4uiEXT)'
# const 'glProgramUniform4uivEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4uivEXT)'
# const 'glProgramUniformMatrix2fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2fvEXT)'
# const 'glProgramUniformMatrix2x3fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2x3fvEXT)'
# const 'glProgramUniformMatrix2x4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix2x4fvEXT)'
# const 'glProgramUniformMatrix3fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3fvEXT)'
# const 'glProgramUniformMatrix3x2fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3x2fvEXT)'
# const 'glProgramUniformMatrix3x4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix3x4fvEXT)'
# const 'glProgramUniformMatrix4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4fvEXT)'
# const 'glProgramUniformMatrix4x2fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4x2fvEXT)'
# const 'glProgramUniformMatrix4x3fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformMatrix4x3fvEXT)'
# const 'glPushClientAttribDefaultEXT' has unsupported value 'GLEW_GET_FUN(__glewPushClientAttribDefaultEXT)'
# const 'glTextureBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureBufferEXT)'
# const 'glTextureImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureImage1DEXT)'
# const 'glTextureImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureImage2DEXT)'
# const 'glTextureImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureImage3DEXT)'
# const 'glTextureParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterIivEXT)'
# const 'glTextureParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterIuivEXT)'
# const 'glTextureParameterfEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterfEXT)'
# const 'glTextureParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterfvEXT)'
# const 'glTextureParameteriEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureParameteriEXT)'
# const 'glTextureParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureParameterivEXT)'
# const 'glTextureRenderbufferEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureRenderbufferEXT)'
# const 'glTextureSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureSubImage1DEXT)'
# const 'glTextureSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureSubImage2DEXT)'
# const 'glTextureSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureSubImage3DEXT)'
# const 'glUnmapNamedBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewUnmapNamedBufferEXT)'
# const 'glVertexArrayColorOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayColorOffsetEXT)'
# const 'glVertexArrayEdgeFlagOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayEdgeFlagOffsetEXT)'
# const 'glVertexArrayFogCoordOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayFogCoordOffsetEXT)'
# const 'glVertexArrayIndexOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayIndexOffsetEXT)'
# const 'glVertexArrayMultiTexCoordOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayMultiTexCoordOffsetEXT)'
# const 'glVertexArrayNormalOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayNormalOffsetEXT)'
# const 'glVertexArraySecondaryColorOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArraySecondaryColorOffsetEXT)'
# const 'glVertexArrayTexCoordOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayTexCoordOffsetEXT)'
# const 'glVertexArrayVertexAttribDivisorEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribDivisorEXT)'
# const 'glVertexArrayVertexAttribIOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribIOffsetEXT)'
# const 'glVertexArrayVertexAttribOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribOffsetEXT)'
# const 'glVertexArrayVertexOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexOffsetEXT)'
# const 'GLEW_EXT_direct_state_access' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_direct_state_access)'
# const 'glDiscardFramebufferEXT' has unsupported value 'GLEW_GET_FUN(__glewDiscardFramebufferEXT)'
# const 'GLEW_EXT_discard_framebuffer' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_discard_framebuffer)'
# const 'glDrawBuffersEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawBuffersEXT)'
# const 'GLEW_EXT_draw_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_draw_buffers)'
# const 'glColorMaskIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewColorMaskIndexedEXT)'
# const 'glDisableIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableIndexedEXT)'
# const 'glEnableIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableIndexedEXT)'
# const 'glGetBooleanIndexedvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetBooleanIndexedvEXT)'
# const 'glGetIntegerIndexedvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetIntegerIndexedvEXT)'
# const 'glIsEnabledIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewIsEnabledIndexedEXT)'
# const 'GLEW_EXT_draw_buffers2' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_draw_buffers2)'
# const 'glBlendEquationSeparateiEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationSeparateiEXT)'
# const 'glBlendEquationiEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendEquationiEXT)'
# const 'glBlendFuncSeparateiEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendFuncSeparateiEXT)'
# const 'glBlendFunciEXT' has unsupported value 'GLEW_GET_FUN(__glewBlendFunciEXT)'
# const 'glColorMaskiEXT' has unsupported value 'GLEW_GET_FUN(__glewColorMaskiEXT)'
# const 'glDisableiEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableiEXT)'
# const 'glEnableiEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableiEXT)'
# const 'glIsEnablediEXT' has unsupported value 'GLEW_GET_FUN(__glewIsEnablediEXT)'
# const 'GLEW_EXT_draw_buffers_indexed' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_draw_buffers_indexed)'
# const 'glDrawElementsBaseVertexEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsBaseVertexEXT)'
# const 'glDrawElementsInstancedBaseVertexEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedBaseVertexEXT)'
# const 'glDrawRangeElementsBaseVertexEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawRangeElementsBaseVertexEXT)'
# const 'glMultiDrawElementsBaseVertexEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsBaseVertexEXT)'
# const 'GLEW_EXT_draw_elements_base_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_draw_elements_base_vertex)'
# const 'glDrawArraysInstancedEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstancedEXT)'
# const 'glDrawElementsInstancedEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedEXT)'
# const 'GLEW_EXT_draw_instanced' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_draw_instanced)'
# const 'glDrawRangeElementsEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawRangeElementsEXT)'
# const 'GLEW_EXT_draw_range_elements' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_draw_range_elements)'
# const 'glBufferStorageExternalEXT' has unsupported value 'GLEW_GET_FUN(__glewBufferStorageExternalEXT)'
# const 'glNamedBufferStorageExternalEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferStorageExternalEXT)'
# const 'GLEW_EXT_external_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_external_buffer)'
# const 'GLEW_EXT_float_blend' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_float_blend)'
# const 'glFogCoordPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewFogCoordPointerEXT)'
# const 'glFogCoorddEXT' has unsupported value 'GLEW_GET_FUN(__glewFogCoorddEXT)'
# const 'glFogCoorddvEXT' has unsupported value 'GLEW_GET_FUN(__glewFogCoorddvEXT)'
# const 'glFogCoordfEXT' has unsupported value 'GLEW_GET_FUN(__glewFogCoordfEXT)'
# const 'glFogCoordfvEXT' has unsupported value 'GLEW_GET_FUN(__glewFogCoordfvEXT)'
# const 'GLEW_EXT_fog_coord' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_fog_coord)'
# const 'GLEW_EXT_frag_depth' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_frag_depth)'
# const 'glFragmentColorMaterialEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentColorMaterialEXT)'
# const 'glFragmentLightModelfEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModelfEXT)'
# const 'glFragmentLightModelfvEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModelfvEXT)'
# const 'glFragmentLightModeliEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModeliEXT)'
# const 'glFragmentLightModelivEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModelivEXT)'
# const 'glFragmentLightfEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightfEXT)'
# const 'glFragmentLightfvEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightfvEXT)'
# const 'glFragmentLightiEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightiEXT)'
# const 'glFragmentLightivEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightivEXT)'
# const 'glFragmentMaterialfEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialfEXT)'
# const 'glFragmentMaterialfvEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialfvEXT)'
# const 'glFragmentMaterialiEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialiEXT)'
# const 'glFragmentMaterialivEXT' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialivEXT)'
# const 'glGetFragmentLightfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentLightfvEXT)'
# const 'glGetFragmentLightivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentLightivEXT)'
# const 'glGetFragmentMaterialfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentMaterialfvEXT)'
# const 'glGetFragmentMaterialivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentMaterialivEXT)'
# const 'glLightEnviEXT' has unsupported value 'GLEW_GET_FUN(__glewLightEnviEXT)'
# const 'GLEW_EXT_fragment_lighting' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_fragment_lighting)'
# const 'glBlitFramebufferEXT' has unsupported value 'GLEW_GET_FUN(__glewBlitFramebufferEXT)'
# const 'GLEW_EXT_framebuffer_blit' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_framebuffer_blit)'
# const 'glRenderbufferStorageMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageMultisampleEXT)'
# const 'GLEW_EXT_framebuffer_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_framebuffer_multisample)'
# const 'GLEW_EXT_framebuffer_multisample_blit_scaled' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_framebuffer_multisample_blit_scaled)'
# const 'glBindFramebufferEXT' has unsupported value 'GLEW_GET_FUN(__glewBindFramebufferEXT)'
# const 'glBindRenderbufferEXT' has unsupported value 'GLEW_GET_FUN(__glewBindRenderbufferEXT)'
# const 'glCheckFramebufferStatusEXT' has unsupported value 'GLEW_GET_FUN(__glewCheckFramebufferStatusEXT)'
# const 'glDeleteFramebuffersEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteFramebuffersEXT)'
# const 'glDeleteRenderbuffersEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteRenderbuffersEXT)'
# const 'glFramebufferRenderbufferEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferRenderbufferEXT)'
# const 'glFramebufferTexture1DEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture1DEXT)'
# const 'glFramebufferTexture2DEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture2DEXT)'
# const 'glFramebufferTexture3DEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture3DEXT)'
# const 'glGenFramebuffersEXT' has unsupported value 'GLEW_GET_FUN(__glewGenFramebuffersEXT)'
# const 'glGenRenderbuffersEXT' has unsupported value 'GLEW_GET_FUN(__glewGenRenderbuffersEXT)'
# const 'glGenerateMipmapEXT' has unsupported value 'GLEW_GET_FUN(__glewGenerateMipmapEXT)'
# const 'glGetFramebufferAttachmentParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFramebufferAttachmentParameterivEXT)'
# const 'glGetRenderbufferParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetRenderbufferParameterivEXT)'
# const 'glIsFramebufferEXT' has unsupported value 'GLEW_GET_FUN(__glewIsFramebufferEXT)'
# const 'glIsRenderbufferEXT' has unsupported value 'GLEW_GET_FUN(__glewIsRenderbufferEXT)'
# const 'glRenderbufferStorageEXT' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageEXT)'
# const 'GLEW_EXT_framebuffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_framebuffer_object)'
# const 'GLEW_EXT_framebuffer_sRGB' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_framebuffer_sRGB)'
# const 'GLEW_EXT_geometry_point_size' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_geometry_point_size)'
# const 'GLEW_EXT_geometry_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_geometry_shader)'
# const 'glFramebufferTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureEXT)'
# const 'glFramebufferTextureFaceEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureFaceEXT)'
# const 'glProgramParameteriEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramParameteriEXT)'
# const 'GLEW_EXT_geometry_shader4' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_geometry_shader4)'
# const 'glProgramEnvParameters4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameters4fvEXT)'
# const 'glProgramLocalParameters4fvEXT' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameters4fvEXT)'
# const 'GLEW_EXT_gpu_program_parameters' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_gpu_program_parameters)'
# const 'glBindFragDataLocationEXT' has unsupported value 'GLEW_GET_FUN(__glewBindFragDataLocationEXT)'
# const 'glGetFragDataLocationEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFragDataLocationEXT)'
# const 'glGetUniformuivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetUniformuivEXT)'
# const 'glGetVertexAttribIivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribIivEXT)'
# const 'glGetVertexAttribIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribIuivEXT)'
# const 'glUniform1uiEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform1uiEXT)'
# const 'glUniform1uivEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform1uivEXT)'
# const 'glUniform2uiEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform2uiEXT)'
# const 'glUniform2uivEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform2uivEXT)'
# const 'glUniform3uiEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform3uiEXT)'
# const 'glUniform3uivEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform3uivEXT)'
# const 'glUniform4uiEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform4uiEXT)'
# const 'glUniform4uivEXT' has unsupported value 'GLEW_GET_FUN(__glewUniform4uivEXT)'
# const 'glVertexAttribI1iEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1iEXT)'
# const 'glVertexAttribI1ivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1ivEXT)'
# const 'glVertexAttribI1uiEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1uiEXT)'
# const 'glVertexAttribI1uivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI1uivEXT)'
# const 'glVertexAttribI2iEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2iEXT)'
# const 'glVertexAttribI2ivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2ivEXT)'
# const 'glVertexAttribI2uiEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2uiEXT)'
# const 'glVertexAttribI2uivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI2uivEXT)'
# const 'glVertexAttribI3iEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3iEXT)'
# const 'glVertexAttribI3ivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3ivEXT)'
# const 'glVertexAttribI3uiEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3uiEXT)'
# const 'glVertexAttribI3uivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI3uivEXT)'
# const 'glVertexAttribI4bvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4bvEXT)'
# const 'glVertexAttribI4iEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4iEXT)'
# const 'glVertexAttribI4ivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4ivEXT)'
# const 'glVertexAttribI4svEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4svEXT)'
# const 'glVertexAttribI4ubvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4ubvEXT)'
# const 'glVertexAttribI4uiEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4uiEXT)'
# const 'glVertexAttribI4uivEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4uivEXT)'
# const 'glVertexAttribI4usvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribI4usvEXT)'
# const 'glVertexAttribIPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribIPointerEXT)'
# const 'GLEW_EXT_gpu_shader4' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_gpu_shader4)'
# const 'GLEW_EXT_gpu_shader5' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_gpu_shader5)'
# const 'glGetHistogramEXT' has unsupported value 'GLEW_GET_FUN(__glewGetHistogramEXT)'
# const 'glGetHistogramParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetHistogramParameterfvEXT)'
# const 'glGetHistogramParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetHistogramParameterivEXT)'
# const 'glGetMinmaxEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMinmaxEXT)'
# const 'glGetMinmaxParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMinmaxParameterfvEXT)'
# const 'glGetMinmaxParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMinmaxParameterivEXT)'
# const 'glHistogramEXT' has unsupported value 'GLEW_GET_FUN(__glewHistogramEXT)'
# const 'glMinmaxEXT' has unsupported value 'GLEW_GET_FUN(__glewMinmaxEXT)'
# const 'glResetHistogramEXT' has unsupported value 'GLEW_GET_FUN(__glewResetHistogramEXT)'
# const 'glResetMinmaxEXT' has unsupported value 'GLEW_GET_FUN(__glewResetMinmaxEXT)'
# const 'GLEW_EXT_histogram' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_histogram)'
# const 'GLEW_EXT_index_array_formats' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_index_array_formats)'
# const 'glIndexFuncEXT' has unsupported value 'GLEW_GET_FUN(__glewIndexFuncEXT)'
# const 'GLEW_EXT_index_func' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_index_func)'
# const 'glIndexMaterialEXT' has unsupported value 'GLEW_GET_FUN(__glewIndexMaterialEXT)'
# const 'GLEW_EXT_index_material' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_index_material)'
# const 'GLEW_EXT_index_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_index_texture)'
# const 'glVertexAttribDivisorEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribDivisorEXT)'
# const 'GLEW_EXT_instanced_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_instanced_arrays)'
# const 'glApplyTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewApplyTextureEXT)'
# const 'glTextureLightEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureLightEXT)'
# const 'glTextureMaterialEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureMaterialEXT)'
# const 'GLEW_EXT_light_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_light_texture)'
# const 'glFlushMappedBufferRangeEXT' has unsupported value 'GLEW_GET_FUN(__glewFlushMappedBufferRangeEXT)'
# const 'glMapBufferRangeEXT' has unsupported value 'GLEW_GET_FUN(__glewMapBufferRangeEXT)'
# const 'GLEW_EXT_map_buffer_range' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_map_buffer_range)'
# const 'glBufferStorageMemEXT' has unsupported value 'GLEW_GET_FUN(__glewBufferStorageMemEXT)'
# const 'glCreateMemoryObjectsEXT' has unsupported value 'GLEW_GET_FUN(__glewCreateMemoryObjectsEXT)'
# const 'glDeleteMemoryObjectsEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteMemoryObjectsEXT)'
# const 'glGetMemoryObjectParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetMemoryObjectParameterivEXT)'
# const 'glGetUnsignedBytei_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetUnsignedBytei_vEXT)'
# const 'glGetUnsignedBytevEXT' has unsupported value 'GLEW_GET_FUN(__glewGetUnsignedBytevEXT)'
# const 'glIsMemoryObjectEXT' has unsupported value 'GLEW_GET_FUN(__glewIsMemoryObjectEXT)'
# const 'glMemoryObjectParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewMemoryObjectParameterivEXT)'
# const 'glNamedBufferStorageMemEXT' has unsupported value 'GLEW_GET_FUN(__glewNamedBufferStorageMemEXT)'
# const 'glTexStorageMem1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorageMem1DEXT)'
# const 'glTexStorageMem2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorageMem2DEXT)'
# const 'glTexStorageMem2DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorageMem2DMultisampleEXT)'
# const 'glTexStorageMem3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorageMem3DEXT)'
# const 'glTexStorageMem3DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorageMem3DMultisampleEXT)'
# const 'glTextureStorageMem1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorageMem1DEXT)'
# const 'glTextureStorageMem2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorageMem2DEXT)'
# const 'glTextureStorageMem2DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorageMem2DMultisampleEXT)'
# const 'glTextureStorageMem3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorageMem3DEXT)'
# const 'glTextureStorageMem3DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorageMem3DMultisampleEXT)'
# const 'GLEW_EXT_memory_object' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_memory_object)'
# const 'glImportMemoryFdEXT' has unsupported value 'GLEW_GET_FUN(__glewImportMemoryFdEXT)'
# const 'GLEW_EXT_memory_object_fd' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_memory_object_fd)'
# const 'glImportMemoryWin32HandleEXT' has unsupported value 'GLEW_GET_FUN(__glewImportMemoryWin32HandleEXT)'
# const 'glImportMemoryWin32NameEXT' has unsupported value 'GLEW_GET_FUN(__glewImportMemoryWin32NameEXT)'
# const 'GLEW_EXT_memory_object_win32' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_memory_object_win32)'
# const 'GLEW_EXT_misc_attribute' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_misc_attribute)'
# const 'glMultiDrawArraysEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysEXT)'
# const 'glMultiDrawElementsEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsEXT)'
# const 'GLEW_EXT_multi_draw_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multi_draw_arrays)'
# const 'glMultiDrawArraysIndirectEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirectEXT)'
# const 'glMultiDrawElementsIndirectEXT' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirectEXT)'
# const 'GLEW_EXT_multi_draw_indirect' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multi_draw_indirect)'
# const 'GLEW_EXT_multiple_textures' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multiple_textures)'
# const 'glSampleMaskEXT' has unsupported value 'GLEW_GET_FUN(__glewSampleMaskEXT)'
# const 'glSamplePatternEXT' has unsupported value 'GLEW_GET_FUN(__glewSamplePatternEXT)'
# const 'GLEW_EXT_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multisample)'
# const 'GLEW_EXT_multisample_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multisample_compatibility)'
# const 'glFramebufferTexture2DMultisampleEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTexture2DMultisampleEXT)'
# const 'GLEW_EXT_multisampled_render_to_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multisampled_render_to_texture)'
# const 'GLEW_EXT_multisampled_render_to_texture2' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multisampled_render_to_texture2)'
# const 'glDrawBuffersIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawBuffersIndexedEXT)'
# const 'glGetIntegeri_vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetIntegeri_vEXT)'
# const 'glReadBufferIndexedEXT' has unsupported value 'GLEW_GET_FUN(__glewReadBufferIndexedEXT)'
# const 'GLEW_EXT_multiview_draw_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_multiview_draw_buffers)'
# const 'GLEW_EXT_packed_depth_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_packed_depth_stencil)'
# const 'GLEW_EXT_packed_float' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_packed_float)'
# const 'GLEW_EXT_packed_pixels' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_packed_pixels)'
# const 'glColorTableEXT' has unsupported value 'GLEW_GET_FUN(__glewColorTableEXT)'
# const 'glGetColorTableEXT' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableEXT)'
# const 'glGetColorTableParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableParameterfvEXT)'
# const 'glGetColorTableParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableParameterivEXT)'
# const 'GLEW_EXT_paletted_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_paletted_texture)'
# const 'GLEW_EXT_pixel_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_pixel_buffer_object)'
# const 'glGetPixelTransformParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetPixelTransformParameterfvEXT)'
# const 'glGetPixelTransformParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetPixelTransformParameterivEXT)'
# const 'glPixelTransformParameterfEXT' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameterfEXT)'
# const 'glPixelTransformParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameterfvEXT)'
# const 'glPixelTransformParameteriEXT' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameteriEXT)'
# const 'glPixelTransformParameterivEXT' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameterivEXT)'
# const 'GLEW_EXT_pixel_transform' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_pixel_transform)'
# const 'GLEW_EXT_pixel_transform_color_table' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_pixel_transform_color_table)'
# const 'glPointParameterfEXT' has unsupported value 'GLEW_GET_FUN(__glewPointParameterfEXT)'
# const 'glPointParameterfvEXT' has unsupported value 'GLEW_GET_FUN(__glewPointParameterfvEXT)'
# const 'GLEW_EXT_point_parameters' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_point_parameters)'
# const 'glPolygonOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewPolygonOffsetEXT)'
# const 'GLEW_EXT_polygon_offset' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_polygon_offset)'
# const 'glPolygonOffsetClampEXT' has unsupported value 'GLEW_GET_FUN(__glewPolygonOffsetClampEXT)'
# const 'GLEW_EXT_polygon_offset_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_polygon_offset_clamp)'
# const 'GLEW_EXT_post_depth_coverage' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_post_depth_coverage)'
# const 'glProvokingVertexEXT' has unsupported value 'GLEW_GET_FUN(__glewProvokingVertexEXT)'
# const 'GLEW_EXT_provoking_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_provoking_vertex)'
# const 'GLEW_EXT_pvrtc_sRGB' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_pvrtc_sRGB)'
# const 'glCoverageModulationNV' has unsupported value 'GLEW_GET_FUN(__glewCoverageModulationNV)'
# const 'glCoverageModulationTableNV' has unsupported value 'GLEW_GET_FUN(__glewCoverageModulationTableNV)'
# const 'glGetCoverageModulationTableNV' has unsupported value 'GLEW_GET_FUN(__glewGetCoverageModulationTableNV)'
# const 'glRasterSamplesEXT' has unsupported value 'GLEW_GET_FUN(__glewRasterSamplesEXT)'
# const 'GLEW_EXT_raster_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_raster_multisample)'
# const 'GLEW_EXT_read_format_bgra' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_read_format_bgra)'
# const 'GLEW_EXT_render_snorm' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_render_snorm)'
# const 'GLEW_EXT_rescale_normal' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_rescale_normal)'
# const 'GLEW_EXT_sRGB' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_sRGB)'
# const 'GLEW_EXT_sRGB_write_control' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_sRGB_write_control)'
# const 'glBeginSceneEXT' has unsupported value 'GLEW_GET_FUN(__glewBeginSceneEXT)'
# const 'glEndSceneEXT' has unsupported value 'GLEW_GET_FUN(__glewEndSceneEXT)'
# const 'GLEW_EXT_scene_marker' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_scene_marker)'
# const 'glSecondaryColor3bEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3bEXT)'
# const 'glSecondaryColor3bvEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3bvEXT)'
# const 'glSecondaryColor3dEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3dEXT)'
# const 'glSecondaryColor3dvEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3dvEXT)'
# const 'glSecondaryColor3fEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3fEXT)'
# const 'glSecondaryColor3fvEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3fvEXT)'
# const 'glSecondaryColor3iEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3iEXT)'
# const 'glSecondaryColor3ivEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3ivEXT)'
# const 'glSecondaryColor3sEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3sEXT)'
# const 'glSecondaryColor3svEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3svEXT)'
# const 'glSecondaryColor3ubEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3ubEXT)'
# const 'glSecondaryColor3ubvEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3ubvEXT)'
# const 'glSecondaryColor3uiEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3uiEXT)'
# const 'glSecondaryColor3uivEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3uivEXT)'
# const 'glSecondaryColor3usEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3usEXT)'
# const 'glSecondaryColor3usvEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3usvEXT)'
# const 'glSecondaryColorPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColorPointerEXT)'
# const 'GLEW_EXT_secondary_color' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_secondary_color)'
# const 'glDeleteSemaphoresEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteSemaphoresEXT)'
# const 'glGenSemaphoresEXT' has unsupported value 'GLEW_GET_FUN(__glewGenSemaphoresEXT)'
# const 'glGetSemaphoreParameterui64vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetSemaphoreParameterui64vEXT)'
# const 'glIsSemaphoreEXT' has unsupported value 'GLEW_GET_FUN(__glewIsSemaphoreEXT)'
# const 'glSemaphoreParameterui64vEXT' has unsupported value 'GLEW_GET_FUN(__glewSemaphoreParameterui64vEXT)'
# const 'glSignalSemaphoreEXT' has unsupported value 'GLEW_GET_FUN(__glewSignalSemaphoreEXT)'
# const 'glWaitSemaphoreEXT' has unsupported value 'GLEW_GET_FUN(__glewWaitSemaphoreEXT)'
# const 'GLEW_EXT_semaphore' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_semaphore)'
# const 'glImportSemaphoreFdEXT' has unsupported value 'GLEW_GET_FUN(__glewImportSemaphoreFdEXT)'
# const 'GLEW_EXT_semaphore_fd' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_semaphore_fd)'
# const 'glImportSemaphoreWin32HandleEXT' has unsupported value 'GLEW_GET_FUN(__glewImportSemaphoreWin32HandleEXT)'
# const 'glImportSemaphoreWin32NameEXT' has unsupported value 'GLEW_GET_FUN(__glewImportSemaphoreWin32NameEXT)'
# const 'GLEW_EXT_semaphore_win32' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_semaphore_win32)'
# const 'glActiveProgramEXT' has unsupported value 'GLEW_GET_FUN(__glewActiveProgramEXT)'
# const 'glCreateShaderProgramEXT' has unsupported value 'GLEW_GET_FUN(__glewCreateShaderProgramEXT)'
# const 'glUseShaderProgramEXT' has unsupported value 'GLEW_GET_FUN(__glewUseShaderProgramEXT)'
# const 'GLEW_EXT_separate_shader_objects' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_separate_shader_objects)'
# const 'GLEW_EXT_separate_specular_color' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_separate_specular_color)'
# const 'GLEW_EXT_shader_framebuffer_fetch' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_framebuffer_fetch)'
# const 'GLEW_EXT_shader_group_vote' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_group_vote)'
# const 'GLEW_EXT_shader_image_load_formatted' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_image_load_formatted)'
# const 'glBindImageTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewBindImageTextureEXT)'
# const 'glMemoryBarrierEXT' has unsupported value 'GLEW_GET_FUN(__glewMemoryBarrierEXT)'
# const 'GLEW_EXT_shader_image_load_store' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_image_load_store)'
# const 'GLEW_EXT_shader_implicit_conversions' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_implicit_conversions)'
# const 'GLEW_EXT_shader_integer_mix' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_integer_mix)'
# const 'GLEW_EXT_shader_io_blocks' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_io_blocks)'
# const 'GLEW_EXT_shader_non_constant_global_initializers' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_non_constant_global_initializers)'
# const 'GLEW_EXT_shader_pixel_local_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_pixel_local_storage)'
# const 'glClearPixelLocalStorageuiEXT' has unsupported value 'GLEW_GET_FUN(__glewClearPixelLocalStorageuiEXT)'
# const 'glFramebufferPixelLocalStorageSizeEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferPixelLocalStorageSizeEXT)'
# const 'glGetFramebufferPixelLocalStorageSizeEXT' has unsupported value 'GLEW_GET_FUN(__glewGetFramebufferPixelLocalStorageSizeEXT)'
# const 'GLEW_EXT_shader_pixel_local_storage2' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_pixel_local_storage2)'
# const 'GLEW_EXT_shader_texture_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shader_texture_lod)'
# const 'GLEW_EXT_shadow_funcs' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shadow_funcs)'
# const 'GLEW_EXT_shadow_samplers' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shadow_samplers)'
# const 'GLEW_EXT_shared_texture_palette' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_shared_texture_palette)'
# const 'glTexPageCommitmentEXT' has unsupported value 'GLEW_GET_FUN(__glewTexPageCommitmentEXT)'
# const 'glTexturePageCommitmentEXT' has unsupported value 'GLEW_GET_FUN(__glewTexturePageCommitmentEXT)'
# const 'GLEW_EXT_sparse_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_sparse_texture)'
# const 'GLEW_EXT_sparse_texture2' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_sparse_texture2)'
# const 'GLEW_EXT_stencil_clear_tag' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_stencil_clear_tag)'
# const 'glActiveStencilFaceEXT' has unsupported value 'GLEW_GET_FUN(__glewActiveStencilFaceEXT)'
# const 'GLEW_EXT_stencil_two_side' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_stencil_two_side)'
# const 'GLEW_EXT_stencil_wrap' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_stencil_wrap)'
# const 'glTexSubImage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexSubImage1DEXT)'
# const 'glTexSubImage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexSubImage2DEXT)'
# const 'glTexSubImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexSubImage3DEXT)'
# const 'GLEW_EXT_subtexture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_subtexture)'
# const 'GLEW_EXT_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture)'
# const 'glTexImage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexImage3DEXT)'
# const 'GLEW_EXT_texture3D' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture3D)'
# const 'glFramebufferTextureLayerEXT' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureLayerEXT)'
# const 'GLEW_EXT_texture_array' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_array)'
# const 'glTexBufferEXT' has unsupported value 'GLEW_GET_FUN(__glewTexBufferEXT)'
# const 'GLEW_EXT_texture_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_buffer_object)'
# const 'GLEW_EXT_texture_compression_astc_decode_mode' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_astc_decode_mode)'
# const 'GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5)'
# const 'GLEW_EXT_texture_compression_bptc' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_bptc)'
# const 'GLEW_EXT_texture_compression_dxt1' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_dxt1)'
# const 'GLEW_EXT_texture_compression_latc' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_latc)'
# const 'GLEW_EXT_texture_compression_rgtc' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_rgtc)'
# const 'GLEW_EXT_texture_compression_s3tc' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_compression_s3tc)'
# const 'GLEW_EXT_texture_cube_map' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_cube_map)'
# const 'GLEW_EXT_texture_cube_map_array' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_cube_map_array)'
# const 'GLEW_EXT_texture_edge_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_edge_clamp)'
# const 'GLEW_EXT_texture_env' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_env)'
# const 'GLEW_EXT_texture_env_add' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_env_add)'
# const 'GLEW_EXT_texture_env_combine' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_env_combine)'
# const 'GLEW_EXT_texture_env_dot3' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_env_dot3)'
# const 'GLEW_EXT_texture_filter_anisotropic' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_filter_anisotropic)'
# const 'GLEW_EXT_texture_filter_minmax' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_filter_minmax)'
# const 'GLEW_EXT_texture_format_BGRA8888' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_format_BGRA8888)'
# const 'glClearColorIiEXT' has unsupported value 'GLEW_GET_FUN(__glewClearColorIiEXT)'
# const 'glClearColorIuiEXT' has unsupported value 'GLEW_GET_FUN(__glewClearColorIuiEXT)'
# const 'glGetTexParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTexParameterIivEXT)'
# const 'glGetTexParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTexParameterIuivEXT)'
# const 'glTexParameterIivEXT' has unsupported value 'GLEW_GET_FUN(__glewTexParameterIivEXT)'
# const 'glTexParameterIuivEXT' has unsupported value 'GLEW_GET_FUN(__glewTexParameterIuivEXT)'
# const 'GLEW_EXT_texture_integer' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_integer)'
# const 'GLEW_EXT_texture_lod_bias' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_lod_bias)'
# const 'GLEW_EXT_texture_mirror_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_mirror_clamp)'
# const 'GLEW_EXT_texture_norm16' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_norm16)'
# const 'glAreTexturesResidentEXT' has unsupported value 'GLEW_GET_FUN(__glewAreTexturesResidentEXT)'
# const 'glBindTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewBindTextureEXT)'
# const 'glDeleteTexturesEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteTexturesEXT)'
# const 'glGenTexturesEXT' has unsupported value 'GLEW_GET_FUN(__glewGenTexturesEXT)'
# const 'glIsTextureEXT' has unsupported value 'GLEW_GET_FUN(__glewIsTextureEXT)'
# const 'glPrioritizeTexturesEXT' has unsupported value 'GLEW_GET_FUN(__glewPrioritizeTexturesEXT)'
# const 'GLEW_EXT_texture_object' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_object)'
# const 'glTextureNormalEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureNormalEXT)'
# const 'GLEW_EXT_texture_perturb_normal' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_perturb_normal)'
# const 'GLEW_EXT_texture_rectangle' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_rectangle)'
# const 'GLEW_EXT_texture_rg' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_rg)'
# const 'GLEW_EXT_texture_sRGB' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_sRGB)'
# const 'GLEW_EXT_texture_sRGB_R8' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_R8)'
# const 'GLEW_EXT_texture_sRGB_RG8' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_RG8)'
# const 'GLEW_EXT_texture_sRGB_decode' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_decode)'
# const 'GLEW_EXT_texture_shared_exponent' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_shared_exponent)'
# const 'GLEW_EXT_texture_snorm' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_snorm)'
# const 'glTexStorage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorage1DEXT)'
# const 'glTexStorage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorage2DEXT)'
# const 'glTexStorage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTexStorage3DEXT)'
# const 'glTextureStorage1DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage1DEXT)'
# const 'glTextureStorage2DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage2DEXT)'
# const 'glTextureStorage3DEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureStorage3DEXT)'
# const 'GLEW_EXT_texture_storage' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_storage)'
# const 'GLEW_EXT_texture_swizzle' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_swizzle)'
# const 'GLEW_EXT_texture_type_2_10_10_10_REV' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_type_2_10_10_10_REV)'
# const 'glTextureViewEXT' has unsupported value 'GLEW_GET_FUN(__glewTextureViewEXT)'
# const 'GLEW_EXT_texture_view' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_texture_view)'
# const 'glGetQueryObjecti64vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjecti64vEXT)'
# const 'glGetQueryObjectui64vEXT' has unsupported value 'GLEW_GET_FUN(__glewGetQueryObjectui64vEXT)'
# const 'GLEW_EXT_timer_query' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_timer_query)'
# const 'glBeginTransformFeedbackEXT' has unsupported value 'GLEW_GET_FUN(__glewBeginTransformFeedbackEXT)'
# const 'glBindBufferBaseEXT' has unsupported value 'GLEW_GET_FUN(__glewBindBufferBaseEXT)'
# const 'glBindBufferOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewBindBufferOffsetEXT)'
# const 'glBindBufferRangeEXT' has unsupported value 'GLEW_GET_FUN(__glewBindBufferRangeEXT)'
# const 'glEndTransformFeedbackEXT' has unsupported value 'GLEW_GET_FUN(__glewEndTransformFeedbackEXT)'
# const 'glGetTransformFeedbackVaryingEXT' has unsupported value 'GLEW_GET_FUN(__glewGetTransformFeedbackVaryingEXT)'
# const 'glTransformFeedbackVaryingsEXT' has unsupported value 'GLEW_GET_FUN(__glewTransformFeedbackVaryingsEXT)'
# const 'GLEW_EXT_transform_feedback' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_transform_feedback)'
# const 'GLEW_EXT_unpack_subimage' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_unpack_subimage)'
# const 'glArrayElementEXT' has unsupported value 'GLEW_GET_FUN(__glewArrayElementEXT)'
# const 'glColorPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewColorPointerEXT)'
# const 'glDrawArraysEXT' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysEXT)'
# const 'glEdgeFlagPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewEdgeFlagPointerEXT)'
# const 'glIndexPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewIndexPointerEXT)'
# const 'glNormalPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewNormalPointerEXT)'
# const 'glTexCoordPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewTexCoordPointerEXT)'
# const 'glVertexPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexPointerEXT)'
# const 'GLEW_EXT_vertex_array' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_vertex_array)'
# const 'GLEW_EXT_vertex_array_bgra' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_vertex_array_bgra)'
# const 'glBindArraySetEXT' has unsupported value 'GLEW_GET_FUN(__glewBindArraySetEXT)'
# const 'glCreateArraySetExt' has unsupported value 'GLEW_GET_FUN(__glewCreateArraySetExt)'
# const 'glDeleteArraySetsEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteArraySetsEXT)'
# const 'GLEW_EXT_vertex_array_setXXX' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_vertex_array_setXXX)'
# const 'glGetVertexAttribLdvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribLdvEXT)'
# const 'glVertexArrayVertexAttribLOffsetEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayVertexAttribLOffsetEXT)'
# const 'glVertexAttribL1dEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1dEXT)'
# const 'glVertexAttribL1dvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1dvEXT)'
# const 'glVertexAttribL2dEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2dEXT)'
# const 'glVertexAttribL2dvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2dvEXT)'
# const 'glVertexAttribL3dEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3dEXT)'
# const 'glVertexAttribL3dvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3dvEXT)'
# const 'glVertexAttribL4dEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4dEXT)'
# const 'glVertexAttribL4dvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4dvEXT)'
# const 'glVertexAttribLPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribLPointerEXT)'
# const 'GLEW_EXT_vertex_attrib_64bit' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_vertex_attrib_64bit)'
# const 'glBeginVertexShaderEXT' has unsupported value 'GLEW_GET_FUN(__glewBeginVertexShaderEXT)'
# const 'glBindLightParameterEXT' has unsupported value 'GLEW_GET_FUN(__glewBindLightParameterEXT)'
# const 'glBindMaterialParameterEXT' has unsupported value 'GLEW_GET_FUN(__glewBindMaterialParameterEXT)'
# const 'glBindParameterEXT' has unsupported value 'GLEW_GET_FUN(__glewBindParameterEXT)'
# const 'glBindTexGenParameterEXT' has unsupported value 'GLEW_GET_FUN(__glewBindTexGenParameterEXT)'
# const 'glBindTextureUnitParameterEXT' has unsupported value 'GLEW_GET_FUN(__glewBindTextureUnitParameterEXT)'
# const 'glBindVertexShaderEXT' has unsupported value 'GLEW_GET_FUN(__glewBindVertexShaderEXT)'
# const 'glDeleteVertexShaderEXT' has unsupported value 'GLEW_GET_FUN(__glewDeleteVertexShaderEXT)'
# const 'glDisableVariantClientStateEXT' has unsupported value 'GLEW_GET_FUN(__glewDisableVariantClientStateEXT)'
# const 'glEnableVariantClientStateEXT' has unsupported value 'GLEW_GET_FUN(__glewEnableVariantClientStateEXT)'
# const 'glEndVertexShaderEXT' has unsupported value 'GLEW_GET_FUN(__glewEndVertexShaderEXT)'
# const 'glExtractComponentEXT' has unsupported value 'GLEW_GET_FUN(__glewExtractComponentEXT)'
# const 'glGenSymbolsEXT' has unsupported value 'GLEW_GET_FUN(__glewGenSymbolsEXT)'
# const 'glGenVertexShadersEXT' has unsupported value 'GLEW_GET_FUN(__glewGenVertexShadersEXT)'
# const 'glGetInvariantBooleanvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetInvariantBooleanvEXT)'
# const 'glGetInvariantFloatvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetInvariantFloatvEXT)'
# const 'glGetInvariantIntegervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetInvariantIntegervEXT)'
# const 'glGetLocalConstantBooleanvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetLocalConstantBooleanvEXT)'
# const 'glGetLocalConstantFloatvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetLocalConstantFloatvEXT)'
# const 'glGetLocalConstantIntegervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetLocalConstantIntegervEXT)'
# const 'glGetVariantBooleanvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVariantBooleanvEXT)'
# const 'glGetVariantFloatvEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVariantFloatvEXT)'
# const 'glGetVariantIntegervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVariantIntegervEXT)'
# const 'glGetVariantPointervEXT' has unsupported value 'GLEW_GET_FUN(__glewGetVariantPointervEXT)'
# const 'glInsertComponentEXT' has unsupported value 'GLEW_GET_FUN(__glewInsertComponentEXT)'
# const 'glIsVariantEnabledEXT' has unsupported value 'GLEW_GET_FUN(__glewIsVariantEnabledEXT)'
# const 'glSetInvariantEXT' has unsupported value 'GLEW_GET_FUN(__glewSetInvariantEXT)'
# const 'glSetLocalConstantEXT' has unsupported value 'GLEW_GET_FUN(__glewSetLocalConstantEXT)'
# const 'glShaderOp1EXT' has unsupported value 'GLEW_GET_FUN(__glewShaderOp1EXT)'
# const 'glShaderOp2EXT' has unsupported value 'GLEW_GET_FUN(__glewShaderOp2EXT)'
# const 'glShaderOp3EXT' has unsupported value 'GLEW_GET_FUN(__glewShaderOp3EXT)'
# const 'glSwizzleEXT' has unsupported value 'GLEW_GET_FUN(__glewSwizzleEXT)'
# const 'glVariantPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantPointerEXT)'
# const 'glVariantbvEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantbvEXT)'
# const 'glVariantdvEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantdvEXT)'
# const 'glVariantfvEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantfvEXT)'
# const 'glVariantivEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantivEXT)'
# const 'glVariantsvEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantsvEXT)'
# const 'glVariantubvEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantubvEXT)'
# const 'glVariantuivEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantuivEXT)'
# const 'glVariantusvEXT' has unsupported value 'GLEW_GET_FUN(__glewVariantusvEXT)'
# const 'glWriteMaskEXT' has unsupported value 'GLEW_GET_FUN(__glewWriteMaskEXT)'
# const 'GLEW_EXT_vertex_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_vertex_shader)'
# const 'glVertexWeightPointerEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexWeightPointerEXT)'
# const 'glVertexWeightfEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexWeightfEXT)'
# const 'glVertexWeightfvEXT' has unsupported value 'GLEW_GET_FUN(__glewVertexWeightfvEXT)'
# const 'GLEW_EXT_vertex_weighting' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_vertex_weighting)'
# const 'glAcquireKeyedMutexWin32EXT' has unsupported value 'GLEW_GET_FUN(__glewAcquireKeyedMutexWin32EXT)'
# const 'glReleaseKeyedMutexWin32EXT' has unsupported value 'GLEW_GET_FUN(__glewReleaseKeyedMutexWin32EXT)'
# const 'GLEW_EXT_win32_keyed_mutex' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_win32_keyed_mutex)'
# const 'glWindowRectanglesEXT' has unsupported value 'GLEW_GET_FUN(__glewWindowRectanglesEXT)'
# const 'GLEW_EXT_window_rectangles' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_window_rectangles)'
# const 'glImportSyncEXT' has unsupported value 'GLEW_GET_FUN(__glewImportSyncEXT)'
# const 'GLEW_EXT_x11_sync_object' has unsupported value 'GLEW_GET_VAR(__GLEW_EXT_x11_sync_object)'
# const 'glFrameTerminatorGREMEDY' has unsupported value 'GLEW_GET_FUN(__glewFrameTerminatorGREMEDY)'
# const 'GLEW_GREMEDY_frame_terminator' has unsupported value 'GLEW_GET_VAR(__GLEW_GREMEDY_frame_terminator)'
# const 'glStringMarkerGREMEDY' has unsupported value 'GLEW_GET_FUN(__glewStringMarkerGREMEDY)'
# const 'GLEW_GREMEDY_string_marker' has unsupported value 'GLEW_GET_VAR(__GLEW_GREMEDY_string_marker)'
# const 'GLEW_HP_convolution_border_modes' has unsupported value 'GLEW_GET_VAR(__GLEW_HP_convolution_border_modes)'
# const 'glGetImageTransformParameterfvHP' has unsupported value 'GLEW_GET_FUN(__glewGetImageTransformParameterfvHP)'
# const 'glGetImageTransformParameterivHP' has unsupported value 'GLEW_GET_FUN(__glewGetImageTransformParameterivHP)'
# const 'glImageTransformParameterfHP' has unsupported value 'GLEW_GET_FUN(__glewImageTransformParameterfHP)'
# const 'glImageTransformParameterfvHP' has unsupported value 'GLEW_GET_FUN(__glewImageTransformParameterfvHP)'
# const 'glImageTransformParameteriHP' has unsupported value 'GLEW_GET_FUN(__glewImageTransformParameteriHP)'
# const 'glImageTransformParameterivHP' has unsupported value 'GLEW_GET_FUN(__glewImageTransformParameterivHP)'
# const 'GLEW_HP_image_transform' has unsupported value 'GLEW_GET_VAR(__GLEW_HP_image_transform)'
# const 'GLEW_HP_occlusion_test' has unsupported value 'GLEW_GET_VAR(__GLEW_HP_occlusion_test)'
# const 'GLEW_HP_texture_lighting' has unsupported value 'GLEW_GET_VAR(__GLEW_HP_texture_lighting)'
# const 'GLEW_IBM_cull_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_IBM_cull_vertex)'
# const 'glMultiModeDrawArraysIBM' has unsupported value 'GLEW_GET_FUN(__glewMultiModeDrawArraysIBM)'
# const 'glMultiModeDrawElementsIBM' has unsupported value 'GLEW_GET_FUN(__glewMultiModeDrawElementsIBM)'
# const 'GLEW_IBM_multimode_draw_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_IBM_multimode_draw_arrays)'
# const 'GLEW_IBM_rasterpos_clip' has unsupported value 'GLEW_GET_VAR(__GLEW_IBM_rasterpos_clip)'
# const 'GLEW_IBM_static_data' has unsupported value 'GLEW_GET_VAR(__GLEW_IBM_static_data)'
# const 'GLEW_IBM_texture_mirrored_repeat' has unsupported value 'GLEW_GET_VAR(__GLEW_IBM_texture_mirrored_repeat)'
# const 'glColorPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewColorPointerListIBM)'
# const 'glEdgeFlagPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewEdgeFlagPointerListIBM)'
# const 'glFogCoordPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewFogCoordPointerListIBM)'
# const 'glIndexPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewIndexPointerListIBM)'
# const 'glNormalPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewNormalPointerListIBM)'
# const 'glSecondaryColorPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColorPointerListIBM)'
# const 'glTexCoordPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewTexCoordPointerListIBM)'
# const 'glVertexPointerListIBM' has unsupported value 'GLEW_GET_FUN(__glewVertexPointerListIBM)'
# const 'GLEW_IBM_vertex_array_lists' has unsupported value 'GLEW_GET_VAR(__GLEW_IBM_vertex_array_lists)'
# const 'GLEW_INGR_color_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_INGR_color_clamp)'
# const 'GLEW_INGR_interlace_read' has unsupported value 'GLEW_GET_VAR(__GLEW_INGR_interlace_read)'
# const 'GLEW_INTEL_conservative_rasterization' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_conservative_rasterization)'
# const 'GLEW_INTEL_fragment_shader_ordering' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_fragment_shader_ordering)'
# const 'GLEW_INTEL_framebuffer_CMAA' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_framebuffer_CMAA)'
# const 'glMapTexture2DINTEL' has unsupported value 'GLEW_GET_FUN(__glewMapTexture2DINTEL)'
# const 'glSyncTextureINTEL' has unsupported value 'GLEW_GET_FUN(__glewSyncTextureINTEL)'
# const 'glUnmapTexture2DINTEL' has unsupported value 'GLEW_GET_FUN(__glewUnmapTexture2DINTEL)'
# const 'GLEW_INTEL_map_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_map_texture)'
# const 'glColorPointervINTEL' has unsupported value 'GLEW_GET_FUN(__glewColorPointervINTEL)'
# const 'glNormalPointervINTEL' has unsupported value 'GLEW_GET_FUN(__glewNormalPointervINTEL)'
# const 'glTexCoordPointervINTEL' has unsupported value 'GLEW_GET_FUN(__glewTexCoordPointervINTEL)'
# const 'glVertexPointervINTEL' has unsupported value 'GLEW_GET_FUN(__glewVertexPointervINTEL)'
# const 'GLEW_INTEL_parallel_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_parallel_arrays)'
# const 'glBeginPerfQueryINTEL' has unsupported value 'GLEW_GET_FUN(__glewBeginPerfQueryINTEL)'
# const 'glCreatePerfQueryINTEL' has unsupported value 'GLEW_GET_FUN(__glewCreatePerfQueryINTEL)'
# const 'glDeletePerfQueryINTEL' has unsupported value 'GLEW_GET_FUN(__glewDeletePerfQueryINTEL)'
# const 'glEndPerfQueryINTEL' has unsupported value 'GLEW_GET_FUN(__glewEndPerfQueryINTEL)'
# const 'glGetFirstPerfQueryIdINTEL' has unsupported value 'GLEW_GET_FUN(__glewGetFirstPerfQueryIdINTEL)'
# const 'glGetNextPerfQueryIdINTEL' has unsupported value 'GLEW_GET_FUN(__glewGetNextPerfQueryIdINTEL)'
# const 'glGetPerfCounterInfoINTEL' has unsupported value 'GLEW_GET_FUN(__glewGetPerfCounterInfoINTEL)'
# const 'glGetPerfQueryDataINTEL' has unsupported value 'GLEW_GET_FUN(__glewGetPerfQueryDataINTEL)'
# const 'glGetPerfQueryIdByNameINTEL' has unsupported value 'GLEW_GET_FUN(__glewGetPerfQueryIdByNameINTEL)'
# const 'glGetPerfQueryInfoINTEL' has unsupported value 'GLEW_GET_FUN(__glewGetPerfQueryInfoINTEL)'
# const 'GLEW_INTEL_performance_query' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_performance_query)'
# const 'glTexScissorFuncINTEL' has unsupported value 'GLEW_GET_FUN(__glewTexScissorFuncINTEL)'
# const 'glTexScissorINTEL' has unsupported value 'GLEW_GET_FUN(__glewTexScissorINTEL)'
# const 'GLEW_INTEL_texture_scissor' has unsupported value 'GLEW_GET_VAR(__GLEW_INTEL_texture_scissor)'
# const 'glBlendBarrierKHR' has unsupported value 'GLEW_GET_FUN(__glewBlendBarrierKHR)'
# const 'GLEW_KHR_blend_equation_advanced' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_blend_equation_advanced)'
# const 'GLEW_KHR_blend_equation_advanced_coherent' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_blend_equation_advanced_coherent)'
# const 'GLEW_KHR_context_flush_control' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_context_flush_control)'
# const 'glDebugMessageCallback' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageCallback)'
# const 'glDebugMessageControl' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageControl)'
# const 'glDebugMessageInsert' has unsupported value 'GLEW_GET_FUN(__glewDebugMessageInsert)'
# const 'glGetDebugMessageLog' has unsupported value 'GLEW_GET_FUN(__glewGetDebugMessageLog)'
# const 'glGetObjectLabel' has unsupported value 'GLEW_GET_FUN(__glewGetObjectLabel)'
# const 'glGetObjectPtrLabel' has unsupported value 'GLEW_GET_FUN(__glewGetObjectPtrLabel)'
# const 'glObjectLabel' has unsupported value 'GLEW_GET_FUN(__glewObjectLabel)'
# const 'glObjectPtrLabel' has unsupported value 'GLEW_GET_FUN(__glewObjectPtrLabel)'
# const 'glPopDebugGroup' has unsupported value 'GLEW_GET_FUN(__glewPopDebugGroup)'
# const 'glPushDebugGroup' has unsupported value 'GLEW_GET_FUN(__glewPushDebugGroup)'
# const 'GLEW_KHR_debug' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_debug)'
# const 'GLEW_KHR_no_error' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_no_error)'
# const 'glMaxShaderCompilerThreadsKHR' has unsupported value 'GLEW_GET_FUN(__glewMaxShaderCompilerThreadsKHR)'
# const 'GLEW_KHR_parallel_shader_compile' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_parallel_shader_compile)'
# const 'GLEW_KHR_robust_buffer_access_behavior' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_robust_buffer_access_behavior)'
# const 'glGetnUniformfv' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformfv)'
# const 'glGetnUniformiv' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformiv)'
# const 'glGetnUniformuiv' has unsupported value 'GLEW_GET_FUN(__glewGetnUniformuiv)'
# const 'glReadnPixels' has unsupported value 'GLEW_GET_FUN(__glewReadnPixels)'
# const 'GLEW_KHR_robustness' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_robustness)'
# const 'GLEW_KHR_texture_compression_astc_hdr' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_hdr)'
# const 'GLEW_KHR_texture_compression_astc_ldr' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_ldr)'
# const 'GLEW_KHR_texture_compression_astc_sliced_3d' has unsupported value 'GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_sliced_3d)'
# const 'glBufferRegionEnabled' has unsupported value 'GLEW_GET_FUN(__glewBufferRegionEnabled)'
# const 'glDeleteBufferRegion' has unsupported value 'GLEW_GET_FUN(__glewDeleteBufferRegion)'
# const 'glDrawBufferRegion' has unsupported value 'GLEW_GET_FUN(__glewDrawBufferRegion)'
# const 'glNewBufferRegion' has unsupported value 'GLEW_GET_FUN(__glewNewBufferRegion)'
# const 'glReadBufferRegion' has unsupported value 'GLEW_GET_FUN(__glewReadBufferRegion)'
# const 'GLEW_KTX_buffer_region' has unsupported value 'GLEW_GET_VAR(__GLEW_KTX_buffer_region)'
# const 'GLEW_MESAX_texture_stack' has unsupported value 'GLEW_GET_VAR(__GLEW_MESAX_texture_stack)'
# const 'GLEW_MESA_pack_invert' has unsupported value 'GLEW_GET_VAR(__GLEW_MESA_pack_invert)'
# const 'glResizeBuffersMESA' has unsupported value 'GLEW_GET_FUN(__glewResizeBuffersMESA)'
# const 'GLEW_MESA_resize_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_MESA_resize_buffers)'
# const 'GLEW_MESA_shader_integer_functions' has unsupported value 'GLEW_GET_VAR(__GLEW_MESA_shader_integer_functions)'
# const 'glWindowPos2dMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2dMESA)'
# const 'glWindowPos2dvMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2dvMESA)'
# const 'glWindowPos2fMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2fMESA)'
# const 'glWindowPos2fvMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2fvMESA)'
# const 'glWindowPos2iMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2iMESA)'
# const 'glWindowPos2ivMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2ivMESA)'
# const 'glWindowPos2sMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2sMESA)'
# const 'glWindowPos2svMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos2svMESA)'
# const 'glWindowPos3dMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3dMESA)'
# const 'glWindowPos3dvMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3dvMESA)'
# const 'glWindowPos3fMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3fMESA)'
# const 'glWindowPos3fvMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3fvMESA)'
# const 'glWindowPos3iMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3iMESA)'
# const 'glWindowPos3ivMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3ivMESA)'
# const 'glWindowPos3sMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3sMESA)'
# const 'glWindowPos3svMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos3svMESA)'
# const 'glWindowPos4dMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4dMESA)'
# const 'glWindowPos4dvMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4dvMESA)'
# const 'glWindowPos4fMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4fMESA)'
# const 'glWindowPos4fvMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4fvMESA)'
# const 'glWindowPos4iMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4iMESA)'
# const 'glWindowPos4ivMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4ivMESA)'
# const 'glWindowPos4sMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4sMESA)'
# const 'glWindowPos4svMESA' has unsupported value 'GLEW_GET_FUN(__glewWindowPos4svMESA)'
# const 'GLEW_MESA_window_pos' has unsupported value 'GLEW_GET_VAR(__GLEW_MESA_window_pos)'
# const 'GLEW_MESA_ycbcr_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_MESA_ycbcr_texture)'
# const 'GLEW_NVX_blend_equation_advanced_multi_draw_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_NVX_blend_equation_advanced_multi_draw_buffers)'
# const 'glBeginConditionalRenderNVX' has unsupported value 'GLEW_GET_FUN(__glewBeginConditionalRenderNVX)'
# const 'glEndConditionalRenderNVX' has unsupported value 'GLEW_GET_FUN(__glewEndConditionalRenderNVX)'
# const 'GLEW_NVX_conditional_render' has unsupported value 'GLEW_GET_VAR(__GLEW_NVX_conditional_render)'
# const 'GLEW_NVX_gpu_memory_info' has unsupported value 'GLEW_GET_VAR(__GLEW_NVX_gpu_memory_info)'
# const 'glLGPUCopyImageSubDataNVX' has unsupported value 'GLEW_GET_FUN(__glewLGPUCopyImageSubDataNVX)'
# const 'glLGPUInterlockNVX' has unsupported value 'GLEW_GET_FUN(__glewLGPUInterlockNVX)'
# const 'glLGPUNamedBufferSubDataNVX' has unsupported value 'GLEW_GET_FUN(__glewLGPUNamedBufferSubDataNVX)'
# const 'GLEW_NVX_linked_gpu_multicast' has unsupported value 'GLEW_GET_VAR(__GLEW_NVX_linked_gpu_multicast)'
# const 'glStereoParameterfNV' has unsupported value 'GLEW_GET_FUN(__glewStereoParameterfNV)'
# const 'glStereoParameteriNV' has unsupported value 'GLEW_GET_FUN(__glewStereoParameteriNV)'
# const 'GLEW_NV_3dvision_settings' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_3dvision_settings)'
# const 'GLEW_NV_EGL_stream_consumer_external' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_EGL_stream_consumer_external)'
# const 'GLEW_NV_alpha_to_coverage_dither_control' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_alpha_to_coverage_dither_control)'
# const 'GLEW_NV_bgr' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_bgr)'
# const 'glMultiDrawArraysIndirectBindlessNV' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirectBindlessNV)'
# const 'glMultiDrawElementsIndirectBindlessNV' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirectBindlessNV)'
# const 'GLEW_NV_bindless_multi_draw_indirect' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_bindless_multi_draw_indirect)'
# const 'glMultiDrawArraysIndirectBindlessCountNV' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawArraysIndirectBindlessCountNV)'
# const 'glMultiDrawElementsIndirectBindlessCountNV' has unsupported value 'GLEW_GET_FUN(__glewMultiDrawElementsIndirectBindlessCountNV)'
# const 'GLEW_NV_bindless_multi_draw_indirect_count' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_bindless_multi_draw_indirect_count)'
# const 'glGetImageHandleNV' has unsupported value 'GLEW_GET_FUN(__glewGetImageHandleNV)'
# const 'glGetTextureHandleNV' has unsupported value 'GLEW_GET_FUN(__glewGetTextureHandleNV)'
# const 'glGetTextureSamplerHandleNV' has unsupported value 'GLEW_GET_FUN(__glewGetTextureSamplerHandleNV)'
# const 'glIsImageHandleResidentNV' has unsupported value 'GLEW_GET_FUN(__glewIsImageHandleResidentNV)'
# const 'glIsTextureHandleResidentNV' has unsupported value 'GLEW_GET_FUN(__glewIsTextureHandleResidentNV)'
# const 'glMakeImageHandleNonResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeImageHandleNonResidentNV)'
# const 'glMakeImageHandleResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeImageHandleResidentNV)'
# const 'glMakeTextureHandleNonResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeTextureHandleNonResidentNV)'
# const 'glMakeTextureHandleResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeTextureHandleResidentNV)'
# const 'glProgramUniformHandleui64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformHandleui64NV)'
# const 'glProgramUniformHandleui64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformHandleui64vNV)'
# const 'glUniformHandleui64NV' has unsupported value 'GLEW_GET_FUN(__glewUniformHandleui64NV)'
# const 'glUniformHandleui64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniformHandleui64vNV)'
# const 'GLEW_NV_bindless_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_bindless_texture)'
# const 'glBlendBarrierNV' has unsupported value 'GLEW_GET_FUN(__glewBlendBarrierNV)'
# const 'glBlendParameteriNV' has unsupported value 'GLEW_GET_FUN(__glewBlendParameteriNV)'
# const 'GLEW_NV_blend_equation_advanced' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_blend_equation_advanced)'
# const 'GLEW_NV_blend_equation_advanced_coherent' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_blend_equation_advanced_coherent)'
# const 'GLEW_NV_blend_minmax_factor' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_blend_minmax_factor)'
# const 'GLEW_NV_blend_square' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_blend_square)'
# const 'glViewportPositionWScaleNV' has unsupported value 'GLEW_GET_FUN(__glewViewportPositionWScaleNV)'
# const 'GLEW_NV_clip_space_w_scaling' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_clip_space_w_scaling)'
# const 'glCallCommandListNV' has unsupported value 'GLEW_GET_FUN(__glewCallCommandListNV)'
# const 'glCommandListSegmentsNV' has unsupported value 'GLEW_GET_FUN(__glewCommandListSegmentsNV)'
# const 'glCompileCommandListNV' has unsupported value 'GLEW_GET_FUN(__glewCompileCommandListNV)'
# const 'glCreateCommandListsNV' has unsupported value 'GLEW_GET_FUN(__glewCreateCommandListsNV)'
# const 'glCreateStatesNV' has unsupported value 'GLEW_GET_FUN(__glewCreateStatesNV)'
# const 'glDeleteCommandListsNV' has unsupported value 'GLEW_GET_FUN(__glewDeleteCommandListsNV)'
# const 'glDeleteStatesNV' has unsupported value 'GLEW_GET_FUN(__glewDeleteStatesNV)'
# const 'glDrawCommandsAddressNV' has unsupported value 'GLEW_GET_FUN(__glewDrawCommandsAddressNV)'
# const 'glDrawCommandsNV' has unsupported value 'GLEW_GET_FUN(__glewDrawCommandsNV)'
# const 'glDrawCommandsStatesAddressNV' has unsupported value 'GLEW_GET_FUN(__glewDrawCommandsStatesAddressNV)'
# const 'glDrawCommandsStatesNV' has unsupported value 'GLEW_GET_FUN(__glewDrawCommandsStatesNV)'
# const 'glGetCommandHeaderNV' has unsupported value 'GLEW_GET_FUN(__glewGetCommandHeaderNV)'
# const 'glGetStageIndexNV' has unsupported value 'GLEW_GET_FUN(__glewGetStageIndexNV)'
# const 'glIsCommandListNV' has unsupported value 'GLEW_GET_FUN(__glewIsCommandListNV)'
# const 'glIsStateNV' has unsupported value 'GLEW_GET_FUN(__glewIsStateNV)'
# const 'glListDrawCommandsStatesClientNV' has unsupported value 'GLEW_GET_FUN(__glewListDrawCommandsStatesClientNV)'
# const 'glStateCaptureNV' has unsupported value 'GLEW_GET_FUN(__glewStateCaptureNV)'
# const 'GLEW_NV_command_list' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_command_list)'
# const 'GLEW_NV_compute_program5' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_compute_program5)'
# const 'glBeginConditionalRenderNV' has unsupported value 'GLEW_GET_FUN(__glewBeginConditionalRenderNV)'
# const 'glEndConditionalRenderNV' has unsupported value 'GLEW_GET_FUN(__glewEndConditionalRenderNV)'
# const 'GLEW_NV_conditional_render' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_conditional_render)'
# const 'glSubpixelPrecisionBiasNV' has unsupported value 'GLEW_GET_FUN(__glewSubpixelPrecisionBiasNV)'
# const 'GLEW_NV_conservative_raster' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_conservative_raster)'
# const 'glConservativeRasterParameterfNV' has unsupported value 'GLEW_GET_FUN(__glewConservativeRasterParameterfNV)'
# const 'GLEW_NV_conservative_raster_dilate' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_conservative_raster_dilate)'
# const 'glConservativeRasterParameteriNV' has unsupported value 'GLEW_GET_FUN(__glewConservativeRasterParameteriNV)'
# const 'GLEW_NV_conservative_raster_pre_snap_triangles' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_conservative_raster_pre_snap_triangles)'
# const 'glCopyBufferSubDataNV' has unsupported value 'GLEW_GET_FUN(__glewCopyBufferSubDataNV)'
# const 'GLEW_NV_copy_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_copy_buffer)'
# const 'GLEW_NV_copy_depth_to_color' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_copy_depth_to_color)'
# const 'glCopyImageSubDataNV' has unsupported value 'GLEW_GET_FUN(__glewCopyImageSubDataNV)'
# const 'GLEW_NV_copy_image' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_copy_image)'
# const 'GLEW_NV_deep_texture3D' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_deep_texture3D)'
# const 'glClearDepthdNV' has unsupported value 'GLEW_GET_FUN(__glewClearDepthdNV)'
# const 'glDepthBoundsdNV' has unsupported value 'GLEW_GET_FUN(__glewDepthBoundsdNV)'
# const 'glDepthRangedNV' has unsupported value 'GLEW_GET_FUN(__glewDepthRangedNV)'
# const 'GLEW_NV_depth_buffer_float' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_depth_buffer_float)'
# const 'GLEW_NV_depth_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_depth_clamp)'
# const 'GLEW_NV_depth_range_unclamped' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_depth_range_unclamped)'
# const 'glDrawBuffersNV' has unsupported value 'GLEW_GET_FUN(__glewDrawBuffersNV)'
# const 'GLEW_NV_draw_buffers' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_draw_buffers)'
# const 'glDrawArraysInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewDrawArraysInstancedNV)'
# const 'glDrawElementsInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewDrawElementsInstancedNV)'
# const 'GLEW_NV_draw_instanced' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_draw_instanced)'
# const 'glDrawTextureNV' has unsupported value 'GLEW_GET_FUN(__glewDrawTextureNV)'
# const 'GLEW_NV_draw_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_draw_texture)'
# const 'glDrawVkImageNV' has unsupported value 'GLEW_GET_FUN(__glewDrawVkImageNV)'
# const 'glGetVkProcAddrNV' has unsupported value 'GLEW_GET_FUN(__glewGetVkProcAddrNV)'
# const 'glSignalVkFenceNV' has unsupported value 'GLEW_GET_FUN(__glewSignalVkFenceNV)'
# const 'glSignalVkSemaphoreNV' has unsupported value 'GLEW_GET_FUN(__glewSignalVkSemaphoreNV)'
# const 'glWaitVkSemaphoreNV' has unsupported value 'GLEW_GET_FUN(__glewWaitVkSemaphoreNV)'
# const 'GLEW_NV_draw_vulkan_image' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_draw_vulkan_image)'
# const 'glEvalMapsNV' has unsupported value 'GLEW_GET_FUN(__glewEvalMapsNV)'
# const 'glGetMapAttribParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetMapAttribParameterfvNV)'
# const 'glGetMapAttribParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewGetMapAttribParameterivNV)'
# const 'glGetMapControlPointsNV' has unsupported value 'GLEW_GET_FUN(__glewGetMapControlPointsNV)'
# const 'glGetMapParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetMapParameterfvNV)'
# const 'glGetMapParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewGetMapParameterivNV)'
# const 'glMapControlPointsNV' has unsupported value 'GLEW_GET_FUN(__glewMapControlPointsNV)'
# const 'glMapParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewMapParameterfvNV)'
# const 'glMapParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewMapParameterivNV)'
# const 'GLEW_NV_evaluators' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_evaluators)'
# const 'GLEW_NV_explicit_attrib_location' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_explicit_attrib_location)'
# const 'glGetMultisamplefvNV' has unsupported value 'GLEW_GET_FUN(__glewGetMultisamplefvNV)'
# const 'glSampleMaskIndexedNV' has unsupported value 'GLEW_GET_FUN(__glewSampleMaskIndexedNV)'
# const 'glTexRenderbufferNV' has unsupported value 'GLEW_GET_FUN(__glewTexRenderbufferNV)'
# const 'GLEW_NV_explicit_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_explicit_multisample)'
# const 'GLEW_NV_fbo_color_attachments' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fbo_color_attachments)'
# const 'glDeleteFencesNV' has unsupported value 'GLEW_GET_FUN(__glewDeleteFencesNV)'
# const 'glFinishFenceNV' has unsupported value 'GLEW_GET_FUN(__glewFinishFenceNV)'
# const 'glGenFencesNV' has unsupported value 'GLEW_GET_FUN(__glewGenFencesNV)'
# const 'glGetFenceivNV' has unsupported value 'GLEW_GET_FUN(__glewGetFenceivNV)'
# const 'glIsFenceNV' has unsupported value 'GLEW_GET_FUN(__glewIsFenceNV)'
# const 'glSetFenceNV' has unsupported value 'GLEW_GET_FUN(__glewSetFenceNV)'
# const 'glTestFenceNV' has unsupported value 'GLEW_GET_FUN(__glewTestFenceNV)'
# const 'GLEW_NV_fence' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fence)'
# const 'GLEW_NV_fill_rectangle' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fill_rectangle)'
# const 'GLEW_NV_float_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_float_buffer)'
# const 'GLEW_NV_fog_distance' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fog_distance)'
# const 'glFragmentCoverageColorNV' has unsupported value 'GLEW_GET_FUN(__glewFragmentCoverageColorNV)'
# const 'GLEW_NV_fragment_coverage_to_color' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fragment_coverage_to_color)'
# const 'glGetProgramNamedParameterdvNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramNamedParameterdvNV)'
# const 'glGetProgramNamedParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramNamedParameterfvNV)'
# const 'glProgramNamedParameter4dNV' has unsupported value 'GLEW_GET_FUN(__glewProgramNamedParameter4dNV)'
# const 'glProgramNamedParameter4dvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramNamedParameter4dvNV)'
# const 'glProgramNamedParameter4fNV' has unsupported value 'GLEW_GET_FUN(__glewProgramNamedParameter4fNV)'
# const 'glProgramNamedParameter4fvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramNamedParameter4fvNV)'
# const 'GLEW_NV_fragment_program' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fragment_program)'
# const 'GLEW_NV_fragment_program2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fragment_program2)'
# const 'GLEW_NV_fragment_program4' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fragment_program4)'
# const 'GLEW_NV_fragment_program_option' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fragment_program_option)'
# const 'GLEW_NV_fragment_shader_interlock' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_fragment_shader_interlock)'
# const 'glBlitFramebufferNV' has unsupported value 'GLEW_GET_FUN(__glewBlitFramebufferNV)'
# const 'GLEW_NV_framebuffer_blit' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_framebuffer_blit)'
# const 'GLEW_NV_framebuffer_mixed_samples' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_framebuffer_mixed_samples)'
# const 'glRenderbufferStorageMultisampleNV' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageMultisampleNV)'
# const 'GLEW_NV_framebuffer_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_framebuffer_multisample)'
# const 'glRenderbufferStorageMultisampleCoverageNV' has unsupported value 'GLEW_GET_FUN(__glewRenderbufferStorageMultisampleCoverageNV)'
# const 'GLEW_NV_framebuffer_multisample_coverage' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_framebuffer_multisample_coverage)'
# const 'GLEW_NV_generate_mipmap_sRGB' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_generate_mipmap_sRGB)'
# const 'glProgramVertexLimitNV' has unsupported value 'GLEW_GET_FUN(__glewProgramVertexLimitNV)'
# const 'GLEW_NV_geometry_program4' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_geometry_program4)'
# const 'GLEW_NV_geometry_shader4' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_geometry_shader4)'
# const 'GLEW_NV_geometry_shader_passthrough' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_geometry_shader_passthrough)'
# const 'glMulticastBarrierNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastBarrierNV)'
# const 'glMulticastBlitFramebufferNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastBlitFramebufferNV)'
# const 'glMulticastBufferSubDataNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastBufferSubDataNV)'
# const 'glMulticastCopyBufferSubDataNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastCopyBufferSubDataNV)'
# const 'glMulticastCopyImageSubDataNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastCopyImageSubDataNV)'
# const 'glMulticastFramebufferSampleLocationsfvNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastFramebufferSampleLocationsfvNV)'
# const 'glMulticastGetQueryObjecti64vNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastGetQueryObjecti64vNV)'
# const 'glMulticastGetQueryObjectivNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastGetQueryObjectivNV)'
# const 'glMulticastGetQueryObjectui64vNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastGetQueryObjectui64vNV)'
# const 'glMulticastGetQueryObjectuivNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastGetQueryObjectuivNV)'
# const 'glMulticastWaitSyncNV' has unsupported value 'GLEW_GET_FUN(__glewMulticastWaitSyncNV)'
# const 'glRenderGpuMaskNV' has unsupported value 'GLEW_GET_FUN(__glewRenderGpuMaskNV)'
# const 'GLEW_NV_gpu_multicast' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_gpu_multicast)'
# const 'glProgramEnvParameterI4iNV' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameterI4iNV)'
# const 'glProgramEnvParameterI4ivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameterI4ivNV)'
# const 'glProgramEnvParameterI4uiNV' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameterI4uiNV)'
# const 'glProgramEnvParameterI4uivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParameterI4uivNV)'
# const 'glProgramEnvParametersI4ivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParametersI4ivNV)'
# const 'glProgramEnvParametersI4uivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramEnvParametersI4uivNV)'
# const 'glProgramLocalParameterI4iNV' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameterI4iNV)'
# const 'glProgramLocalParameterI4ivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameterI4ivNV)'
# const 'glProgramLocalParameterI4uiNV' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameterI4uiNV)'
# const 'glProgramLocalParameterI4uivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParameterI4uivNV)'
# const 'glProgramLocalParametersI4ivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParametersI4ivNV)'
# const 'glProgramLocalParametersI4uivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramLocalParametersI4uivNV)'
# const 'GLEW_NV_gpu_program4' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_gpu_program4)'
# const 'GLEW_NV_gpu_program5' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_gpu_program5)'
# const 'GLEW_NV_gpu_program5_mem_extended' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_gpu_program5_mem_extended)'
# const 'GLEW_NV_gpu_program_fp64' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_gpu_program_fp64)'
# const 'glGetUniformi64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetUniformi64vNV)'
# const 'glGetUniformui64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetUniformui64vNV)'
# const 'glProgramUniform1i64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1i64NV)'
# const 'glProgramUniform1i64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1i64vNV)'
# const 'glProgramUniform1ui64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1ui64NV)'
# const 'glProgramUniform1ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform1ui64vNV)'
# const 'glProgramUniform2i64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2i64NV)'
# const 'glProgramUniform2i64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2i64vNV)'
# const 'glProgramUniform2ui64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2ui64NV)'
# const 'glProgramUniform2ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform2ui64vNV)'
# const 'glProgramUniform3i64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3i64NV)'
# const 'glProgramUniform3i64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3i64vNV)'
# const 'glProgramUniform3ui64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3ui64NV)'
# const 'glProgramUniform3ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform3ui64vNV)'
# const 'glProgramUniform4i64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4i64NV)'
# const 'glProgramUniform4i64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4i64vNV)'
# const 'glProgramUniform4ui64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4ui64NV)'
# const 'glProgramUniform4ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniform4ui64vNV)'
# const 'glUniform1i64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform1i64NV)'
# const 'glUniform1i64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform1i64vNV)'
# const 'glUniform1ui64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform1ui64NV)'
# const 'glUniform1ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform1ui64vNV)'
# const 'glUniform2i64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform2i64NV)'
# const 'glUniform2i64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform2i64vNV)'
# const 'glUniform2ui64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform2ui64NV)'
# const 'glUniform2ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform2ui64vNV)'
# const 'glUniform3i64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform3i64NV)'
# const 'glUniform3i64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform3i64vNV)'
# const 'glUniform3ui64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform3ui64NV)'
# const 'glUniform3ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform3ui64vNV)'
# const 'glUniform4i64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform4i64NV)'
# const 'glUniform4i64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform4i64vNV)'
# const 'glUniform4ui64NV' has unsupported value 'GLEW_GET_FUN(__glewUniform4ui64NV)'
# const 'glUniform4ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniform4ui64vNV)'
# const 'GLEW_NV_gpu_shader5' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_gpu_shader5)'
# const 'glColor3hNV' has unsupported value 'GLEW_GET_FUN(__glewColor3hNV)'
# const 'glColor3hvNV' has unsupported value 'GLEW_GET_FUN(__glewColor3hvNV)'
# const 'glColor4hNV' has unsupported value 'GLEW_GET_FUN(__glewColor4hNV)'
# const 'glColor4hvNV' has unsupported value 'GLEW_GET_FUN(__glewColor4hvNV)'
# const 'glFogCoordhNV' has unsupported value 'GLEW_GET_FUN(__glewFogCoordhNV)'
# const 'glFogCoordhvNV' has unsupported value 'GLEW_GET_FUN(__glewFogCoordhvNV)'
# const 'glMultiTexCoord1hNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1hNV)'
# const 'glMultiTexCoord1hvNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord1hvNV)'
# const 'glMultiTexCoord2hNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2hNV)'
# const 'glMultiTexCoord2hvNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord2hvNV)'
# const 'glMultiTexCoord3hNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3hNV)'
# const 'glMultiTexCoord3hvNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord3hvNV)'
# const 'glMultiTexCoord4hNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4hNV)'
# const 'glMultiTexCoord4hvNV' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4hvNV)'
# const 'glNormal3hNV' has unsupported value 'GLEW_GET_FUN(__glewNormal3hNV)'
# const 'glNormal3hvNV' has unsupported value 'GLEW_GET_FUN(__glewNormal3hvNV)'
# const 'glSecondaryColor3hNV' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3hNV)'
# const 'glSecondaryColor3hvNV' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColor3hvNV)'
# const 'glTexCoord1hNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord1hNV)'
# const 'glTexCoord1hvNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord1hvNV)'
# const 'glTexCoord2hNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2hNV)'
# const 'glTexCoord2hvNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2hvNV)'
# const 'glTexCoord3hNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord3hNV)'
# const 'glTexCoord3hvNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord3hvNV)'
# const 'glTexCoord4hNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord4hNV)'
# const 'glTexCoord4hvNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoord4hvNV)'
# const 'glVertex2hNV' has unsupported value 'GLEW_GET_FUN(__glewVertex2hNV)'
# const 'glVertex2hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertex2hvNV)'
# const 'glVertex3hNV' has unsupported value 'GLEW_GET_FUN(__glewVertex3hNV)'
# const 'glVertex3hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertex3hvNV)'
# const 'glVertex4hNV' has unsupported value 'GLEW_GET_FUN(__glewVertex4hNV)'
# const 'glVertex4hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertex4hvNV)'
# const 'glVertexAttrib1hNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1hNV)'
# const 'glVertexAttrib1hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1hvNV)'
# const 'glVertexAttrib2hNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2hNV)'
# const 'glVertexAttrib2hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2hvNV)'
# const 'glVertexAttrib3hNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3hNV)'
# const 'glVertexAttrib3hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3hvNV)'
# const 'glVertexAttrib4hNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4hNV)'
# const 'glVertexAttrib4hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4hvNV)'
# const 'glVertexAttribs1hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs1hvNV)'
# const 'glVertexAttribs2hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs2hvNV)'
# const 'glVertexAttribs3hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs3hvNV)'
# const 'glVertexAttribs4hvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs4hvNV)'
# const 'glVertexWeighthNV' has unsupported value 'GLEW_GET_FUN(__glewVertexWeighthNV)'
# const 'glVertexWeighthvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexWeighthvNV)'
# const 'GLEW_NV_half_float' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_half_float)'
# const 'GLEW_NV_image_formats' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_image_formats)'
# const 'glVertexAttribDivisorNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribDivisorNV)'
# const 'GLEW_NV_instanced_arrays' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_instanced_arrays)'
# const 'glGetInternalformatSampleivNV' has unsupported value 'GLEW_GET_FUN(__glewGetInternalformatSampleivNV)'
# const 'GLEW_NV_internalformat_sample_query' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_internalformat_sample_query)'
# const 'GLEW_NV_light_max_exponent' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_light_max_exponent)'
# const 'GLEW_NV_multisample_coverage' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_multisample_coverage)'
# const 'GLEW_NV_multisample_filter_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_multisample_filter_hint)'
# const 'glUniformMatrix2x3fvNV' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2x3fvNV)'
# const 'glUniformMatrix2x4fvNV' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix2x4fvNV)'
# const 'glUniformMatrix3x2fvNV' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3x2fvNV)'
# const 'glUniformMatrix3x4fvNV' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix3x4fvNV)'
# const 'glUniformMatrix4x2fvNV' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4x2fvNV)'
# const 'glUniformMatrix4x3fvNV' has unsupported value 'GLEW_GET_FUN(__glewUniformMatrix4x3fvNV)'
# const 'GLEW_NV_non_square_matrices' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_non_square_matrices)'
# const 'glBeginOcclusionQueryNV' has unsupported value 'GLEW_GET_FUN(__glewBeginOcclusionQueryNV)'
# const 'glDeleteOcclusionQueriesNV' has unsupported value 'GLEW_GET_FUN(__glewDeleteOcclusionQueriesNV)'
# const 'glEndOcclusionQueryNV' has unsupported value 'GLEW_GET_FUN(__glewEndOcclusionQueryNV)'
# const 'glGenOcclusionQueriesNV' has unsupported value 'GLEW_GET_FUN(__glewGenOcclusionQueriesNV)'
# const 'glGetOcclusionQueryivNV' has unsupported value 'GLEW_GET_FUN(__glewGetOcclusionQueryivNV)'
# const 'glGetOcclusionQueryuivNV' has unsupported value 'GLEW_GET_FUN(__glewGetOcclusionQueryuivNV)'
# const 'glIsOcclusionQueryNV' has unsupported value 'GLEW_GET_FUN(__glewIsOcclusionQueryNV)'
# const 'GLEW_NV_occlusion_query' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_occlusion_query)'
# const 'GLEW_NV_pack_subimage' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_pack_subimage)'
# const 'GLEW_NV_packed_depth_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_packed_depth_stencil)'
# const 'GLEW_NV_packed_float' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_packed_float)'
# const 'GLEW_NV_packed_float_linear' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_packed_float_linear)'
# const 'glProgramBufferParametersIivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramBufferParametersIivNV)'
# const 'glProgramBufferParametersIuivNV' has unsupported value 'GLEW_GET_FUN(__glewProgramBufferParametersIuivNV)'
# const 'glProgramBufferParametersfvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramBufferParametersfvNV)'
# const 'GLEW_NV_parameter_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_parameter_buffer_object)'
# const 'GLEW_NV_parameter_buffer_object2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_parameter_buffer_object2)'
# const 'glCopyPathNV' has unsupported value 'GLEW_GET_FUN(__glewCopyPathNV)'
# const 'glCoverFillPathInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewCoverFillPathInstancedNV)'
# const 'glCoverFillPathNV' has unsupported value 'GLEW_GET_FUN(__glewCoverFillPathNV)'
# const 'glCoverStrokePathInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewCoverStrokePathInstancedNV)'
# const 'glCoverStrokePathNV' has unsupported value 'GLEW_GET_FUN(__glewCoverStrokePathNV)'
# const 'glDeletePathsNV' has unsupported value 'GLEW_GET_FUN(__glewDeletePathsNV)'
# const 'glGenPathsNV' has unsupported value 'GLEW_GET_FUN(__glewGenPathsNV)'
# const 'glGetPathColorGenfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathColorGenfvNV)'
# const 'glGetPathColorGenivNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathColorGenivNV)'
# const 'glGetPathCommandsNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathCommandsNV)'
# const 'glGetPathCoordsNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathCoordsNV)'
# const 'glGetPathDashArrayNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathDashArrayNV)'
# const 'glGetPathLengthNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathLengthNV)'
# const 'glGetPathMetricRangeNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathMetricRangeNV)'
# const 'glGetPathMetricsNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathMetricsNV)'
# const 'glGetPathParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathParameterfvNV)'
# const 'glGetPathParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathParameterivNV)'
# const 'glGetPathSpacingNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathSpacingNV)'
# const 'glGetPathTexGenfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathTexGenfvNV)'
# const 'glGetPathTexGenivNV' has unsupported value 'GLEW_GET_FUN(__glewGetPathTexGenivNV)'
# const 'glGetProgramResourcefvNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramResourcefvNV)'
# const 'glInterpolatePathsNV' has unsupported value 'GLEW_GET_FUN(__glewInterpolatePathsNV)'
# const 'glIsPathNV' has unsupported value 'GLEW_GET_FUN(__glewIsPathNV)'
# const 'glIsPointInFillPathNV' has unsupported value 'GLEW_GET_FUN(__glewIsPointInFillPathNV)'
# const 'glIsPointInStrokePathNV' has unsupported value 'GLEW_GET_FUN(__glewIsPointInStrokePathNV)'
# const 'glMatrixLoad3x2fNV' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoad3x2fNV)'
# const 'glMatrixLoad3x3fNV' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoad3x3fNV)'
# const 'glMatrixLoadTranspose3x3fNV' has unsupported value 'GLEW_GET_FUN(__glewMatrixLoadTranspose3x3fNV)'
# const 'glMatrixMult3x2fNV' has unsupported value 'GLEW_GET_FUN(__glewMatrixMult3x2fNV)'
# const 'glMatrixMult3x3fNV' has unsupported value 'GLEW_GET_FUN(__glewMatrixMult3x3fNV)'
# const 'glMatrixMultTranspose3x3fNV' has unsupported value 'GLEW_GET_FUN(__glewMatrixMultTranspose3x3fNV)'
# const 'glPathColorGenNV' has unsupported value 'GLEW_GET_FUN(__glewPathColorGenNV)'
# const 'glPathCommandsNV' has unsupported value 'GLEW_GET_FUN(__glewPathCommandsNV)'
# const 'glPathCoordsNV' has unsupported value 'GLEW_GET_FUN(__glewPathCoordsNV)'
# const 'glPathCoverDepthFuncNV' has unsupported value 'GLEW_GET_FUN(__glewPathCoverDepthFuncNV)'
# const 'glPathDashArrayNV' has unsupported value 'GLEW_GET_FUN(__glewPathDashArrayNV)'
# const 'glPathFogGenNV' has unsupported value 'GLEW_GET_FUN(__glewPathFogGenNV)'
# const 'glPathGlyphIndexArrayNV' has unsupported value 'GLEW_GET_FUN(__glewPathGlyphIndexArrayNV)'
# const 'glPathGlyphIndexRangeNV' has unsupported value 'GLEW_GET_FUN(__glewPathGlyphIndexRangeNV)'
# const 'glPathGlyphRangeNV' has unsupported value 'GLEW_GET_FUN(__glewPathGlyphRangeNV)'
# const 'glPathGlyphsNV' has unsupported value 'GLEW_GET_FUN(__glewPathGlyphsNV)'
# const 'glPathMemoryGlyphIndexArrayNV' has unsupported value 'GLEW_GET_FUN(__glewPathMemoryGlyphIndexArrayNV)'
# const 'glPathParameterfNV' has unsupported value 'GLEW_GET_FUN(__glewPathParameterfNV)'
# const 'glPathParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewPathParameterfvNV)'
# const 'glPathParameteriNV' has unsupported value 'GLEW_GET_FUN(__glewPathParameteriNV)'
# const 'glPathParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewPathParameterivNV)'
# const 'glPathStencilDepthOffsetNV' has unsupported value 'GLEW_GET_FUN(__glewPathStencilDepthOffsetNV)'
# const 'glPathStencilFuncNV' has unsupported value 'GLEW_GET_FUN(__glewPathStencilFuncNV)'
# const 'glPathStringNV' has unsupported value 'GLEW_GET_FUN(__glewPathStringNV)'
# const 'glPathSubCommandsNV' has unsupported value 'GLEW_GET_FUN(__glewPathSubCommandsNV)'
# const 'glPathSubCoordsNV' has unsupported value 'GLEW_GET_FUN(__glewPathSubCoordsNV)'
# const 'glPathTexGenNV' has unsupported value 'GLEW_GET_FUN(__glewPathTexGenNV)'
# const 'glPointAlongPathNV' has unsupported value 'GLEW_GET_FUN(__glewPointAlongPathNV)'
# const 'glProgramPathFragmentInputGenNV' has unsupported value 'GLEW_GET_FUN(__glewProgramPathFragmentInputGenNV)'
# const 'glStencilFillPathInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewStencilFillPathInstancedNV)'
# const 'glStencilFillPathNV' has unsupported value 'GLEW_GET_FUN(__glewStencilFillPathNV)'
# const 'glStencilStrokePathInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewStencilStrokePathInstancedNV)'
# const 'glStencilStrokePathNV' has unsupported value 'GLEW_GET_FUN(__glewStencilStrokePathNV)'
# const 'glStencilThenCoverFillPathInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewStencilThenCoverFillPathInstancedNV)'
# const 'glStencilThenCoverFillPathNV' has unsupported value 'GLEW_GET_FUN(__glewStencilThenCoverFillPathNV)'
# const 'glStencilThenCoverStrokePathInstancedNV' has unsupported value 'GLEW_GET_FUN(__glewStencilThenCoverStrokePathInstancedNV)'
# const 'glStencilThenCoverStrokePathNV' has unsupported value 'GLEW_GET_FUN(__glewStencilThenCoverStrokePathNV)'
# const 'glTransformPathNV' has unsupported value 'GLEW_GET_FUN(__glewTransformPathNV)'
# const 'glWeightPathsNV' has unsupported value 'GLEW_GET_FUN(__glewWeightPathsNV)'
# const 'GLEW_NV_path_rendering' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_path_rendering)'
# const 'GLEW_NV_path_rendering_shared_edge' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_path_rendering_shared_edge)'
# const 'GLEW_NV_pixel_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_pixel_buffer_object)'
# const 'glFlushPixelDataRangeNV' has unsupported value 'GLEW_GET_FUN(__glewFlushPixelDataRangeNV)'
# const 'glPixelDataRangeNV' has unsupported value 'GLEW_GET_FUN(__glewPixelDataRangeNV)'
# const 'GLEW_NV_pixel_data_range' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_pixel_data_range)'
# const 'GLEW_NV_platform_binary' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_platform_binary)'
# const 'glPointParameteriNV' has unsupported value 'GLEW_GET_FUN(__glewPointParameteriNV)'
# const 'glPointParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewPointParameterivNV)'
# const 'GLEW_NV_point_sprite' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_point_sprite)'
# const 'glPolygonModeNV' has unsupported value 'GLEW_GET_FUN(__glewPolygonModeNV)'
# const 'GLEW_NV_polygon_mode' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_polygon_mode)'
# const 'glGetVideoi64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoi64vNV)'
# const 'glGetVideoivNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoivNV)'
# const 'glGetVideoui64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoui64vNV)'
# const 'glGetVideouivNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideouivNV)'
# const 'glPresentFrameDualFillNV' has unsupported value 'GLEW_GET_FUN(__glewPresentFrameDualFillNV)'
# const 'glPresentFrameKeyedNV' has unsupported value 'GLEW_GET_FUN(__glewPresentFrameKeyedNV)'
# const 'GLEW_NV_present_video' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_present_video)'
# const 'glPrimitiveRestartIndexNV' has unsupported value 'GLEW_GET_FUN(__glewPrimitiveRestartIndexNV)'
# const 'glPrimitiveRestartNV' has unsupported value 'GLEW_GET_FUN(__glewPrimitiveRestartNV)'
# const 'GLEW_NV_primitive_restart' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_primitive_restart)'
# const 'GLEW_NV_read_depth' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_read_depth)'
# const 'GLEW_NV_read_depth_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_read_depth_stencil)'
# const 'GLEW_NV_read_stencil' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_read_stencil)'
# const 'glCombinerInputNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerInputNV)'
# const 'glCombinerOutputNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerOutputNV)'
# const 'glCombinerParameterfNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerParameterfNV)'
# const 'glCombinerParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerParameterfvNV)'
# const 'glCombinerParameteriNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerParameteriNV)'
# const 'glCombinerParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerParameterivNV)'
# const 'glFinalCombinerInputNV' has unsupported value 'GLEW_GET_FUN(__glewFinalCombinerInputNV)'
# const 'glGetCombinerInputParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetCombinerInputParameterfvNV)'
# const 'glGetCombinerInputParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewGetCombinerInputParameterivNV)'
# const 'glGetCombinerOutputParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetCombinerOutputParameterfvNV)'
# const 'glGetCombinerOutputParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewGetCombinerOutputParameterivNV)'
# const 'glGetFinalCombinerInputParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetFinalCombinerInputParameterfvNV)'
# const 'glGetFinalCombinerInputParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewGetFinalCombinerInputParameterivNV)'
# const 'GLEW_NV_register_combiners' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_register_combiners)'
# const 'glCombinerStageParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewCombinerStageParameterfvNV)'
# const 'glGetCombinerStageParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetCombinerStageParameterfvNV)'
# const 'GLEW_NV_register_combiners2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_register_combiners2)'
# const 'GLEW_NV_robustness_video_memory_purge' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_robustness_video_memory_purge)'
# const 'GLEW_NV_sRGB_formats' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_sRGB_formats)'
# const 'glFramebufferSampleLocationsfvNV' has unsupported value 'GLEW_GET_FUN(__glewFramebufferSampleLocationsfvNV)'
# const 'glNamedFramebufferSampleLocationsfvNV' has unsupported value 'GLEW_GET_FUN(__glewNamedFramebufferSampleLocationsfvNV)'
# const 'GLEW_NV_sample_locations' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_sample_locations)'
# const 'GLEW_NV_sample_mask_override_coverage' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_sample_mask_override_coverage)'
# const 'GLEW_NV_shader_atomic_counters' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_atomic_counters)'
# const 'GLEW_NV_shader_atomic_float' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_atomic_float)'
# const 'GLEW_NV_shader_atomic_float64' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_atomic_float64)'
# const 'GLEW_NV_shader_atomic_fp16_vector' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_atomic_fp16_vector)'
# const 'GLEW_NV_shader_atomic_int64' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_atomic_int64)'
# const 'glGetBufferParameterui64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetBufferParameterui64vNV)'
# const 'glGetIntegerui64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetIntegerui64vNV)'
# const 'glGetNamedBufferParameterui64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetNamedBufferParameterui64vNV)'
# const 'glIsBufferResidentNV' has unsupported value 'GLEW_GET_FUN(__glewIsBufferResidentNV)'
# const 'glIsNamedBufferResidentNV' has unsupported value 'GLEW_GET_FUN(__glewIsNamedBufferResidentNV)'
# const 'glMakeBufferNonResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeBufferNonResidentNV)'
# const 'glMakeBufferResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeBufferResidentNV)'
# const 'glMakeNamedBufferNonResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeNamedBufferNonResidentNV)'
# const 'glMakeNamedBufferResidentNV' has unsupported value 'GLEW_GET_FUN(__glewMakeNamedBufferResidentNV)'
# const 'glProgramUniformui64NV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformui64NV)'
# const 'glProgramUniformui64vNV' has unsupported value 'GLEW_GET_FUN(__glewProgramUniformui64vNV)'
# const 'glUniformui64NV' has unsupported value 'GLEW_GET_FUN(__glewUniformui64NV)'
# const 'glUniformui64vNV' has unsupported value 'GLEW_GET_FUN(__glewUniformui64vNV)'
# const 'GLEW_NV_shader_buffer_load' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_buffer_load)'
# const 'GLEW_NV_shader_noperspective_interpolation' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_noperspective_interpolation)'
# const 'GLEW_NV_shader_storage_buffer_object' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_storage_buffer_object)'
# const 'GLEW_NV_shader_thread_group' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_thread_group)'
# const 'GLEW_NV_shader_thread_shuffle' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shader_thread_shuffle)'
# const 'GLEW_NV_shadow_samplers_array' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shadow_samplers_array)'
# const 'GLEW_NV_shadow_samplers_cube' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_shadow_samplers_cube)'
# const 'GLEW_NV_stereo_view_rendering' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_stereo_view_rendering)'
# const 'GLEW_NV_tessellation_program5' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_tessellation_program5)'
# const 'GLEW_NV_texgen_emboss' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texgen_emboss)'
# const 'GLEW_NV_texgen_reflection' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texgen_reflection)'
# const 'glCompressedTexImage3DNV' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexImage3DNV)'
# const 'glCompressedTexSubImage3DNV' has unsupported value 'GLEW_GET_FUN(__glewCompressedTexSubImage3DNV)'
# const 'glCopyTexSubImage3DNV' has unsupported value 'GLEW_GET_FUN(__glewCopyTexSubImage3DNV)'
# const 'glFramebufferTextureLayerNV' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureLayerNV)'
# const 'glTexImage3DNV' has unsupported value 'GLEW_GET_FUN(__glewTexImage3DNV)'
# const 'glTexSubImage3DNV' has unsupported value 'GLEW_GET_FUN(__glewTexSubImage3DNV)'
# const 'GLEW_NV_texture_array' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_array)'
# const 'glTextureBarrierNV' has unsupported value 'GLEW_GET_FUN(__glewTextureBarrierNV)'
# const 'GLEW_NV_texture_barrier' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_barrier)'
# const 'GLEW_NV_texture_border_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_border_clamp)'
# const 'GLEW_NV_texture_compression_latc' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_compression_latc)'
# const 'GLEW_NV_texture_compression_s3tc' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_compression_s3tc)'
# const 'GLEW_NV_texture_compression_s3tc_update' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_compression_s3tc_update)'
# const 'GLEW_NV_texture_compression_vtc' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_compression_vtc)'
# const 'GLEW_NV_texture_env_combine4' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_env_combine4)'
# const 'GLEW_NV_texture_expand_normal' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_expand_normal)'
# const 'glTexImage2DMultisampleCoverageNV' has unsupported value 'GLEW_GET_FUN(__glewTexImage2DMultisampleCoverageNV)'
# const 'glTexImage3DMultisampleCoverageNV' has unsupported value 'GLEW_GET_FUN(__glewTexImage3DMultisampleCoverageNV)'
# const 'glTextureImage2DMultisampleCoverageNV' has unsupported value 'GLEW_GET_FUN(__glewTextureImage2DMultisampleCoverageNV)'
# const 'glTextureImage2DMultisampleNV' has unsupported value 'GLEW_GET_FUN(__glewTextureImage2DMultisampleNV)'
# const 'glTextureImage3DMultisampleCoverageNV' has unsupported value 'GLEW_GET_FUN(__glewTextureImage3DMultisampleCoverageNV)'
# const 'glTextureImage3DMultisampleNV' has unsupported value 'GLEW_GET_FUN(__glewTextureImage3DMultisampleNV)'
# const 'GLEW_NV_texture_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_multisample)'
# const 'GLEW_NV_texture_npot_2D_mipmap' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_npot_2D_mipmap)'
# const 'GLEW_NV_texture_rectangle' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_rectangle)'
# const 'GLEW_NV_texture_rectangle_compressed' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_rectangle_compressed)'
# const 'GLEW_NV_texture_shader' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_shader)'
# const 'GLEW_NV_texture_shader2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_shader2)'
# const 'GLEW_NV_texture_shader3' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_texture_shader3)'
# const 'glActiveVaryingNV' has unsupported value 'GLEW_GET_FUN(__glewActiveVaryingNV)'
# const 'glBeginTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewBeginTransformFeedbackNV)'
# const 'glBindBufferBaseNV' has unsupported value 'GLEW_GET_FUN(__glewBindBufferBaseNV)'
# const 'glBindBufferOffsetNV' has unsupported value 'GLEW_GET_FUN(__glewBindBufferOffsetNV)'
# const 'glBindBufferRangeNV' has unsupported value 'GLEW_GET_FUN(__glewBindBufferRangeNV)'
# const 'glEndTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewEndTransformFeedbackNV)'
# const 'glGetActiveVaryingNV' has unsupported value 'GLEW_GET_FUN(__glewGetActiveVaryingNV)'
# const 'glGetTransformFeedbackVaryingNV' has unsupported value 'GLEW_GET_FUN(__glewGetTransformFeedbackVaryingNV)'
# const 'glGetVaryingLocationNV' has unsupported value 'GLEW_GET_FUN(__glewGetVaryingLocationNV)'
# const 'glTransformFeedbackAttribsNV' has unsupported value 'GLEW_GET_FUN(__glewTransformFeedbackAttribsNV)'
# const 'glTransformFeedbackVaryingsNV' has unsupported value 'GLEW_GET_FUN(__glewTransformFeedbackVaryingsNV)'
# const 'GLEW_NV_transform_feedback' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_transform_feedback)'
# const 'glBindTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewBindTransformFeedbackNV)'
# const 'glDeleteTransformFeedbacksNV' has unsupported value 'GLEW_GET_FUN(__glewDeleteTransformFeedbacksNV)'
# const 'glDrawTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewDrawTransformFeedbackNV)'
# const 'glGenTransformFeedbacksNV' has unsupported value 'GLEW_GET_FUN(__glewGenTransformFeedbacksNV)'
# const 'glIsTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewIsTransformFeedbackNV)'
# const 'glPauseTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewPauseTransformFeedbackNV)'
# const 'glResumeTransformFeedbackNV' has unsupported value 'GLEW_GET_FUN(__glewResumeTransformFeedbackNV)'
# const 'GLEW_NV_transform_feedback2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_transform_feedback2)'
# const 'GLEW_NV_uniform_buffer_unified_memory' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_uniform_buffer_unified_memory)'
# const 'glVDPAUFiniNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUFiniNV)'
# const 'glVDPAUGetSurfaceivNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUGetSurfaceivNV)'
# const 'glVDPAUInitNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUInitNV)'
# const 'glVDPAUIsSurfaceNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUIsSurfaceNV)'
# const 'glVDPAUMapSurfacesNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUMapSurfacesNV)'
# const 'glVDPAURegisterOutputSurfaceNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAURegisterOutputSurfaceNV)'
# const 'glVDPAURegisterVideoSurfaceNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAURegisterVideoSurfaceNV)'
# const 'glVDPAUSurfaceAccessNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUSurfaceAccessNV)'
# const 'glVDPAUUnmapSurfacesNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUUnmapSurfacesNV)'
# const 'glVDPAUUnregisterSurfaceNV' has unsupported value 'GLEW_GET_FUN(__glewVDPAUUnregisterSurfaceNV)'
# const 'GLEW_NV_vdpau_interop' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vdpau_interop)'
# const 'glFlushVertexArrayRangeNV' has unsupported value 'GLEW_GET_FUN(__glewFlushVertexArrayRangeNV)'
# const 'glVertexArrayRangeNV' has unsupported value 'GLEW_GET_FUN(__glewVertexArrayRangeNV)'
# const 'GLEW_NV_vertex_array_range' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_array_range)'
# const 'GLEW_NV_vertex_array_range2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_array_range2)'
# const 'glGetVertexAttribLi64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribLi64vNV)'
# const 'glGetVertexAttribLui64vNV' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribLui64vNV)'
# const 'glVertexAttribL1i64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1i64NV)'
# const 'glVertexAttribL1i64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1i64vNV)'
# const 'glVertexAttribL1ui64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1ui64NV)'
# const 'glVertexAttribL1ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL1ui64vNV)'
# const 'glVertexAttribL2i64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2i64NV)'
# const 'glVertexAttribL2i64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2i64vNV)'
# const 'glVertexAttribL2ui64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2ui64NV)'
# const 'glVertexAttribL2ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL2ui64vNV)'
# const 'glVertexAttribL3i64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3i64NV)'
# const 'glVertexAttribL3i64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3i64vNV)'
# const 'glVertexAttribL3ui64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3ui64NV)'
# const 'glVertexAttribL3ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL3ui64vNV)'
# const 'glVertexAttribL4i64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4i64NV)'
# const 'glVertexAttribL4i64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4i64vNV)'
# const 'glVertexAttribL4ui64NV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4ui64NV)'
# const 'glVertexAttribL4ui64vNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribL4ui64vNV)'
# const 'glVertexAttribLFormatNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribLFormatNV)'
# const 'GLEW_NV_vertex_attrib_integer_64bit' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_attrib_integer_64bit)'
# const 'glBufferAddressRangeNV' has unsupported value 'GLEW_GET_FUN(__glewBufferAddressRangeNV)'
# const 'glColorFormatNV' has unsupported value 'GLEW_GET_FUN(__glewColorFormatNV)'
# const 'glEdgeFlagFormatNV' has unsupported value 'GLEW_GET_FUN(__glewEdgeFlagFormatNV)'
# const 'glFogCoordFormatNV' has unsupported value 'GLEW_GET_FUN(__glewFogCoordFormatNV)'
# const 'glGetIntegerui64i_vNV' has unsupported value 'GLEW_GET_FUN(__glewGetIntegerui64i_vNV)'
# const 'glIndexFormatNV' has unsupported value 'GLEW_GET_FUN(__glewIndexFormatNV)'
# const 'glNormalFormatNV' has unsupported value 'GLEW_GET_FUN(__glewNormalFormatNV)'
# const 'glSecondaryColorFormatNV' has unsupported value 'GLEW_GET_FUN(__glewSecondaryColorFormatNV)'
# const 'glTexCoordFormatNV' has unsupported value 'GLEW_GET_FUN(__glewTexCoordFormatNV)'
# const 'glVertexAttribFormatNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribFormatNV)'
# const 'glVertexAttribIFormatNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribIFormatNV)'
# const 'glVertexFormatNV' has unsupported value 'GLEW_GET_FUN(__glewVertexFormatNV)'
# const 'GLEW_NV_vertex_buffer_unified_memory' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_buffer_unified_memory)'
# const 'glAreProgramsResidentNV' has unsupported value 'GLEW_GET_FUN(__glewAreProgramsResidentNV)'
# const 'glBindProgramNV' has unsupported value 'GLEW_GET_FUN(__glewBindProgramNV)'
# const 'glDeleteProgramsNV' has unsupported value 'GLEW_GET_FUN(__glewDeleteProgramsNV)'
# const 'glExecuteProgramNV' has unsupported value 'GLEW_GET_FUN(__glewExecuteProgramNV)'
# const 'glGenProgramsNV' has unsupported value 'GLEW_GET_FUN(__glewGenProgramsNV)'
# const 'glGetProgramParameterdvNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramParameterdvNV)'
# const 'glGetProgramParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramParameterfvNV)'
# const 'glGetProgramStringNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramStringNV)'
# const 'glGetProgramivNV' has unsupported value 'GLEW_GET_FUN(__glewGetProgramivNV)'
# const 'glGetTrackMatrixivNV' has unsupported value 'GLEW_GET_FUN(__glewGetTrackMatrixivNV)'
# const 'glGetVertexAttribPointervNV' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribPointervNV)'
# const 'glGetVertexAttribdvNV' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribdvNV)'
# const 'glGetVertexAttribfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribfvNV)'
# const 'glGetVertexAttribivNV' has unsupported value 'GLEW_GET_FUN(__glewGetVertexAttribivNV)'
# const 'glIsProgramNV' has unsupported value 'GLEW_GET_FUN(__glewIsProgramNV)'
# const 'glLoadProgramNV' has unsupported value 'GLEW_GET_FUN(__glewLoadProgramNV)'
# const 'glProgramParameter4dNV' has unsupported value 'GLEW_GET_FUN(__glewProgramParameter4dNV)'
# const 'glProgramParameter4dvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramParameter4dvNV)'
# const 'glProgramParameter4fNV' has unsupported value 'GLEW_GET_FUN(__glewProgramParameter4fNV)'
# const 'glProgramParameter4fvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramParameter4fvNV)'
# const 'glProgramParameters4dvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramParameters4dvNV)'
# const 'glProgramParameters4fvNV' has unsupported value 'GLEW_GET_FUN(__glewProgramParameters4fvNV)'
# const 'glRequestResidentProgramsNV' has unsupported value 'GLEW_GET_FUN(__glewRequestResidentProgramsNV)'
# const 'glTrackMatrixNV' has unsupported value 'GLEW_GET_FUN(__glewTrackMatrixNV)'
# const 'glVertexAttrib1dNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1dNV)'
# const 'glVertexAttrib1dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1dvNV)'
# const 'glVertexAttrib1fNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1fNV)'
# const 'glVertexAttrib1fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1fvNV)'
# const 'glVertexAttrib1sNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1sNV)'
# const 'glVertexAttrib1svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib1svNV)'
# const 'glVertexAttrib2dNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2dNV)'
# const 'glVertexAttrib2dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2dvNV)'
# const 'glVertexAttrib2fNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2fNV)'
# const 'glVertexAttrib2fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2fvNV)'
# const 'glVertexAttrib2sNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2sNV)'
# const 'glVertexAttrib2svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib2svNV)'
# const 'glVertexAttrib3dNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3dNV)'
# const 'glVertexAttrib3dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3dvNV)'
# const 'glVertexAttrib3fNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3fNV)'
# const 'glVertexAttrib3fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3fvNV)'
# const 'glVertexAttrib3sNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3sNV)'
# const 'glVertexAttrib3svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib3svNV)'
# const 'glVertexAttrib4dNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4dNV)'
# const 'glVertexAttrib4dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4dvNV)'
# const 'glVertexAttrib4fNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4fNV)'
# const 'glVertexAttrib4fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4fvNV)'
# const 'glVertexAttrib4sNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4sNV)'
# const 'glVertexAttrib4svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4svNV)'
# const 'glVertexAttrib4ubNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4ubNV)'
# const 'glVertexAttrib4ubvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttrib4ubvNV)'
# const 'glVertexAttribPointerNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribPointerNV)'
# const 'glVertexAttribs1dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs1dvNV)'
# const 'glVertexAttribs1fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs1fvNV)'
# const 'glVertexAttribs1svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs1svNV)'
# const 'glVertexAttribs2dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs2dvNV)'
# const 'glVertexAttribs2fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs2fvNV)'
# const 'glVertexAttribs2svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs2svNV)'
# const 'glVertexAttribs3dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs3dvNV)'
# const 'glVertexAttribs3fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs3fvNV)'
# const 'glVertexAttribs3svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs3svNV)'
# const 'glVertexAttribs4dvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs4dvNV)'
# const 'glVertexAttribs4fvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs4fvNV)'
# const 'glVertexAttribs4svNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs4svNV)'
# const 'glVertexAttribs4ubvNV' has unsupported value 'GLEW_GET_FUN(__glewVertexAttribs4ubvNV)'
# const 'GLEW_NV_vertex_program' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_program)'
# const 'GLEW_NV_vertex_program1_1' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_program1_1)'
# const 'GLEW_NV_vertex_program2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_program2)'
# const 'GLEW_NV_vertex_program2_option' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_program2_option)'
# const 'GLEW_NV_vertex_program3' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_program3)'
# const 'GLEW_NV_vertex_program4' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_vertex_program4)'
# const 'glBeginVideoCaptureNV' has unsupported value 'GLEW_GET_FUN(__glewBeginVideoCaptureNV)'
# const 'glBindVideoCaptureStreamBufferNV' has unsupported value 'GLEW_GET_FUN(__glewBindVideoCaptureStreamBufferNV)'
# const 'glBindVideoCaptureStreamTextureNV' has unsupported value 'GLEW_GET_FUN(__glewBindVideoCaptureStreamTextureNV)'
# const 'glEndVideoCaptureNV' has unsupported value 'GLEW_GET_FUN(__glewEndVideoCaptureNV)'
# const 'glGetVideoCaptureStreamdvNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoCaptureStreamdvNV)'
# const 'glGetVideoCaptureStreamfvNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoCaptureStreamfvNV)'
# const 'glGetVideoCaptureStreamivNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoCaptureStreamivNV)'
# const 'glGetVideoCaptureivNV' has unsupported value 'GLEW_GET_FUN(__glewGetVideoCaptureivNV)'
# const 'glVideoCaptureNV' has unsupported value 'GLEW_GET_FUN(__glewVideoCaptureNV)'
# const 'glVideoCaptureStreamParameterdvNV' has unsupported value 'GLEW_GET_FUN(__glewVideoCaptureStreamParameterdvNV)'
# const 'glVideoCaptureStreamParameterfvNV' has unsupported value 'GLEW_GET_FUN(__glewVideoCaptureStreamParameterfvNV)'
# const 'glVideoCaptureStreamParameterivNV' has unsupported value 'GLEW_GET_FUN(__glewVideoCaptureStreamParameterivNV)'
# const 'GLEW_NV_video_capture' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_video_capture)'
# const 'glDepthRangeArrayfvNV' has unsupported value 'GLEW_GET_FUN(__glewDepthRangeArrayfvNV)'
# const 'glDepthRangeIndexedfNV' has unsupported value 'GLEW_GET_FUN(__glewDepthRangeIndexedfNV)'
# const 'glDisableiNV' has unsupported value 'GLEW_GET_FUN(__glewDisableiNV)'
# const 'glEnableiNV' has unsupported value 'GLEW_GET_FUN(__glewEnableiNV)'
# const 'glGetFloati_vNV' has unsupported value 'GLEW_GET_FUN(__glewGetFloati_vNV)'
# const 'glIsEnablediNV' has unsupported value 'GLEW_GET_FUN(__glewIsEnablediNV)'
# const 'glScissorArrayvNV' has unsupported value 'GLEW_GET_FUN(__glewScissorArrayvNV)'
# const 'glScissorIndexedNV' has unsupported value 'GLEW_GET_FUN(__glewScissorIndexedNV)'
# const 'glScissorIndexedvNV' has unsupported value 'GLEW_GET_FUN(__glewScissorIndexedvNV)'
# const 'glViewportArrayvNV' has unsupported value 'GLEW_GET_FUN(__glewViewportArrayvNV)'
# const 'glViewportIndexedfNV' has unsupported value 'GLEW_GET_FUN(__glewViewportIndexedfNV)'
# const 'glViewportIndexedfvNV' has unsupported value 'GLEW_GET_FUN(__glewViewportIndexedfvNV)'
# const 'GLEW_NV_viewport_array' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_viewport_array)'
# const 'GLEW_NV_viewport_array2' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_viewport_array2)'
# const 'glViewportSwizzleNV' has unsupported value 'GLEW_GET_FUN(__glewViewportSwizzleNV)'
# const 'GLEW_NV_viewport_swizzle' has unsupported value 'GLEW_GET_VAR(__GLEW_NV_viewport_swizzle)'
# const 'GLEW_OES_byte_coordinates' has unsupported value 'GLEW_GET_VAR(__GLEW_OES_byte_coordinates)'
# const 'GLEW_OML_interlace' has unsupported value 'GLEW_GET_VAR(__GLEW_OML_interlace)'
# const 'GLEW_OML_resample' has unsupported value 'GLEW_GET_VAR(__GLEW_OML_resample)'
# const 'GLEW_OML_subsample' has unsupported value 'GLEW_GET_VAR(__GLEW_OML_subsample)'
# const 'glFramebufferTextureMultiviewOVR' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureMultiviewOVR)'
# const 'GLEW_OVR_multiview' has unsupported value 'GLEW_GET_VAR(__GLEW_OVR_multiview)'
# const 'GLEW_OVR_multiview2' has unsupported value 'GLEW_GET_VAR(__GLEW_OVR_multiview2)'
# const 'glFramebufferTextureMultisampleMultiviewOVR' has unsupported value 'GLEW_GET_FUN(__glewFramebufferTextureMultisampleMultiviewOVR)'
# const 'GLEW_OVR_multiview_multisampled_render_to_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_OVR_multiview_multisampled_render_to_texture)'
# const 'GLEW_PGI_misc_hints' has unsupported value 'GLEW_GET_VAR(__GLEW_PGI_misc_hints)'
# const 'GLEW_PGI_vertex_hints' has unsupported value 'GLEW_GET_VAR(__GLEW_PGI_vertex_hints)'
# const 'glAlphaFuncQCOM' has unsupported value 'GLEW_GET_FUN(__glewAlphaFuncQCOM)'
# const 'GLEW_QCOM_alpha_test' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_alpha_test)'
# const 'GLEW_QCOM_binning_control' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_binning_control)'
# const 'glDisableDriverControlQCOM' has unsupported value 'GLEW_GET_FUN(__glewDisableDriverControlQCOM)'
# const 'glEnableDriverControlQCOM' has unsupported value 'GLEW_GET_FUN(__glewEnableDriverControlQCOM)'
# const 'glGetDriverControlStringQCOM' has unsupported value 'GLEW_GET_FUN(__glewGetDriverControlStringQCOM)'
# const 'glGetDriverControlsQCOM' has unsupported value 'GLEW_GET_FUN(__glewGetDriverControlsQCOM)'
# const 'GLEW_QCOM_driver_control' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_driver_control)'
# const 'glExtGetBufferPointervQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetBufferPointervQCOM)'
# const 'glExtGetBuffersQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetBuffersQCOM)'
# const 'glExtGetFramebuffersQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetFramebuffersQCOM)'
# const 'glExtGetRenderbuffersQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetRenderbuffersQCOM)'
# const 'glExtGetTexLevelParameterivQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetTexLevelParameterivQCOM)'
# const 'glExtGetTexSubImageQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetTexSubImageQCOM)'
# const 'glExtGetTexturesQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetTexturesQCOM)'
# const 'glExtTexObjectStateOverrideiQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtTexObjectStateOverrideiQCOM)'
# const 'GLEW_QCOM_extended_get' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_extended_get)'
# const 'glExtGetProgramBinarySourceQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetProgramBinarySourceQCOM)'
# const 'glExtGetProgramsQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetProgramsQCOM)'
# const 'glExtGetShadersQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtGetShadersQCOM)'
# const 'glExtIsProgramBinaryQCOM' has unsupported value 'GLEW_GET_FUN(__glewExtIsProgramBinaryQCOM)'
# const 'GLEW_QCOM_extended_get2' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_extended_get2)'
# const 'glFramebufferFoveationConfigQCOM' has unsupported value 'GLEW_GET_FUN(__glewFramebufferFoveationConfigQCOM)'
# const 'glFramebufferFoveationParametersQCOM' has unsupported value 'GLEW_GET_FUN(__glewFramebufferFoveationParametersQCOM)'
# const 'GLEW_QCOM_framebuffer_foveated' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_framebuffer_foveated)'
# const 'GLEW_QCOM_perfmon_global_mode' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_perfmon_global_mode)'
# const 'glFramebufferFetchBarrierQCOM' has unsupported value 'GLEW_GET_FUN(__glewFramebufferFetchBarrierQCOM)'
# const 'GLEW_QCOM_shader_framebuffer_fetch_noncoherent' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_shader_framebuffer_fetch_noncoherent)'
# const 'glEndTilingQCOM' has unsupported value 'GLEW_GET_FUN(__glewEndTilingQCOM)'
# const 'glStartTilingQCOM' has unsupported value 'GLEW_GET_FUN(__glewStartTilingQCOM)'
# const 'GLEW_QCOM_tiled_rendering' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_tiled_rendering)'
# const 'GLEW_QCOM_writeonly_rendering' has unsupported value 'GLEW_GET_VAR(__GLEW_QCOM_writeonly_rendering)'
# const 'glAlphaFuncx' has unsupported value 'GLEW_GET_FUN(__glewAlphaFuncx)'
# const 'glClearColorx' has unsupported value 'GLEW_GET_FUN(__glewClearColorx)'
# const 'glClearDepthx' has unsupported value 'GLEW_GET_FUN(__glewClearDepthx)'
# const 'glColor4x' has unsupported value 'GLEW_GET_FUN(__glewColor4x)'
# const 'glDepthRangex' has unsupported value 'GLEW_GET_FUN(__glewDepthRangex)'
# const 'glFogx' has unsupported value 'GLEW_GET_FUN(__glewFogx)'
# const 'glFogxv' has unsupported value 'GLEW_GET_FUN(__glewFogxv)'
# const 'glFrustumf' has unsupported value 'GLEW_GET_FUN(__glewFrustumf)'
# const 'glFrustumx' has unsupported value 'GLEW_GET_FUN(__glewFrustumx)'
# const 'glLightModelx' has unsupported value 'GLEW_GET_FUN(__glewLightModelx)'
# const 'glLightModelxv' has unsupported value 'GLEW_GET_FUN(__glewLightModelxv)'
# const 'glLightx' has unsupported value 'GLEW_GET_FUN(__glewLightx)'
# const 'glLightxv' has unsupported value 'GLEW_GET_FUN(__glewLightxv)'
# const 'glLineWidthx' has unsupported value 'GLEW_GET_FUN(__glewLineWidthx)'
# const 'glLoadMatrixx' has unsupported value 'GLEW_GET_FUN(__glewLoadMatrixx)'
# const 'glMaterialx' has unsupported value 'GLEW_GET_FUN(__glewMaterialx)'
# const 'glMaterialxv' has unsupported value 'GLEW_GET_FUN(__glewMaterialxv)'
# const 'glMultMatrixx' has unsupported value 'GLEW_GET_FUN(__glewMultMatrixx)'
# const 'glMultiTexCoord4x' has unsupported value 'GLEW_GET_FUN(__glewMultiTexCoord4x)'
# const 'glNormal3x' has unsupported value 'GLEW_GET_FUN(__glewNormal3x)'
# const 'glOrthof' has unsupported value 'GLEW_GET_FUN(__glewOrthof)'
# const 'glOrthox' has unsupported value 'GLEW_GET_FUN(__glewOrthox)'
# const 'glPointSizex' has unsupported value 'GLEW_GET_FUN(__glewPointSizex)'
# const 'glPolygonOffsetx' has unsupported value 'GLEW_GET_FUN(__glewPolygonOffsetx)'
# const 'glRotatex' has unsupported value 'GLEW_GET_FUN(__glewRotatex)'
# const 'glSampleCoveragex' has unsupported value 'GLEW_GET_FUN(__glewSampleCoveragex)'
# const 'glScalex' has unsupported value 'GLEW_GET_FUN(__glewScalex)'
# const 'glTexEnvx' has unsupported value 'GLEW_GET_FUN(__glewTexEnvx)'
# const 'glTexEnvxv' has unsupported value 'GLEW_GET_FUN(__glewTexEnvxv)'
# const 'glTexParameterx' has unsupported value 'GLEW_GET_FUN(__glewTexParameterx)'
# const 'glTranslatex' has unsupported value 'GLEW_GET_FUN(__glewTranslatex)'
# const 'GLEW_REGAL_ES1_0_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_ES1_0_compatibility)'
# const 'glClipPlanef' has unsupported value 'GLEW_GET_FUN(__glewClipPlanef)'
# const 'glClipPlanex' has unsupported value 'GLEW_GET_FUN(__glewClipPlanex)'
# const 'glGetClipPlanef' has unsupported value 'GLEW_GET_FUN(__glewGetClipPlanef)'
# const 'glGetClipPlanex' has unsupported value 'GLEW_GET_FUN(__glewGetClipPlanex)'
# const 'glGetFixedv' has unsupported value 'GLEW_GET_FUN(__glewGetFixedv)'
# const 'glGetLightxv' has unsupported value 'GLEW_GET_FUN(__glewGetLightxv)'
# const 'glGetMaterialxv' has unsupported value 'GLEW_GET_FUN(__glewGetMaterialxv)'
# const 'glGetTexEnvxv' has unsupported value 'GLEW_GET_FUN(__glewGetTexEnvxv)'
# const 'glGetTexParameterxv' has unsupported value 'GLEW_GET_FUN(__glewGetTexParameterxv)'
# const 'glPointParameterx' has unsupported value 'GLEW_GET_FUN(__glewPointParameterx)'
# const 'glPointParameterxv' has unsupported value 'GLEW_GET_FUN(__glewPointParameterxv)'
# const 'glPointSizePointerOES' has unsupported value 'GLEW_GET_FUN(__glewPointSizePointerOES)'
# const 'glTexParameterxv' has unsupported value 'GLEW_GET_FUN(__glewTexParameterxv)'
# const 'GLEW_REGAL_ES1_1_compatibility' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_ES1_1_compatibility)'
# const 'GLEW_REGAL_enable' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_enable)'
# const 'glErrorStringREGAL' has unsupported value 'GLEW_GET_FUN(__glewErrorStringREGAL)'
# const 'GLEW_REGAL_error_string' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_error_string)'
# const 'glGetExtensionREGAL' has unsupported value 'GLEW_GET_FUN(__glewGetExtensionREGAL)'
# const 'glIsSupportedREGAL' has unsupported value 'GLEW_GET_FUN(__glewIsSupportedREGAL)'
# const 'GLEW_REGAL_extension_query' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_extension_query)'
# const 'glLogMessageCallbackREGAL' has unsupported value 'GLEW_GET_FUN(__glewLogMessageCallbackREGAL)'
# const 'GLEW_REGAL_log' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_log)'
# const 'glGetProcAddressREGAL' has unsupported value 'GLEW_GET_FUN(__glewGetProcAddressREGAL)'
# const 'GLEW_REGAL_proc_address' has unsupported value 'GLEW_GET_VAR(__GLEW_REGAL_proc_address)'
# const 'GLEW_REND_screen_coordinates' has unsupported value 'GLEW_GET_VAR(__GLEW_REND_screen_coordinates)'
# const 'GLEW_S3_s3tc' has unsupported value 'GLEW_GET_VAR(__GLEW_S3_s3tc)'
# const 'GLEW_SGIS_clip_band_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_clip_band_hint)'
# const 'GLEW_SGIS_color_range' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_color_range)'
# const 'glDetailTexFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewDetailTexFuncSGIS)'
# const 'glGetDetailTexFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewGetDetailTexFuncSGIS)'
# const 'GLEW_SGIS_detail_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_detail_texture)'
# const 'glFogFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewFogFuncSGIS)'
# const 'glGetFogFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewGetFogFuncSGIS)'
# const 'GLEW_SGIS_fog_function' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_fog_function)'
# const 'GLEW_SGIS_generate_mipmap' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_generate_mipmap)'
# const 'GLEW_SGIS_line_texgen' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_line_texgen)'
# const 'glSampleMaskSGIS' has unsupported value 'GLEW_GET_FUN(__glewSampleMaskSGIS)'
# const 'glSamplePatternSGIS' has unsupported value 'GLEW_GET_FUN(__glewSamplePatternSGIS)'
# const 'GLEW_SGIS_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_multisample)'
# const 'glInterleavedTextureCoordSetsSGIS' has unsupported value 'GLEW_GET_FUN(__glewInterleavedTextureCoordSetsSGIS)'
# const 'glSelectTextureCoordSetSGIS' has unsupported value 'GLEW_GET_FUN(__glewSelectTextureCoordSetSGIS)'
# const 'glSelectTextureSGIS' has unsupported value 'GLEW_GET_FUN(__glewSelectTextureSGIS)'
# const 'glSelectTextureTransformSGIS' has unsupported value 'GLEW_GET_FUN(__glewSelectTextureTransformSGIS)'
# const 'GLEW_SGIS_multitexture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_multitexture)'
# const 'GLEW_SGIS_pixel_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_pixel_texture)'
# const 'GLEW_SGIS_point_line_texgen' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_point_line_texgen)'
# const 'glMultisampleSubRectPosSGIS' has unsupported value 'GLEW_GET_FUN(__glewMultisampleSubRectPosSGIS)'
# const 'GLEW_SGIS_shared_multisample' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_shared_multisample)'
# const 'glGetSharpenTexFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewGetSharpenTexFuncSGIS)'
# const 'glSharpenTexFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewSharpenTexFuncSGIS)'
# const 'GLEW_SGIS_sharpen_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_sharpen_texture)'
# const 'glTexImage4DSGIS' has unsupported value 'GLEW_GET_FUN(__glewTexImage4DSGIS)'
# const 'glTexSubImage4DSGIS' has unsupported value 'GLEW_GET_FUN(__glewTexSubImage4DSGIS)'
# const 'GLEW_SGIS_texture4D' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_texture4D)'
# const 'GLEW_SGIS_texture_border_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_texture_border_clamp)'
# const 'GLEW_SGIS_texture_edge_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_texture_edge_clamp)'
# const 'glGetTexFilterFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewGetTexFilterFuncSGIS)'
# const 'glTexFilterFuncSGIS' has unsupported value 'GLEW_GET_FUN(__glewTexFilterFuncSGIS)'
# const 'GLEW_SGIS_texture_filter4' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_texture_filter4)'
# const 'GLEW_SGIS_texture_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_texture_lod)'
# const 'GLEW_SGIS_texture_select' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIS_texture_select)'
# const 'glAsyncMarkerSGIX' has unsupported value 'GLEW_GET_FUN(__glewAsyncMarkerSGIX)'
# const 'glDeleteAsyncMarkersSGIX' has unsupported value 'GLEW_GET_FUN(__glewDeleteAsyncMarkersSGIX)'
# const 'glFinishAsyncSGIX' has unsupported value 'GLEW_GET_FUN(__glewFinishAsyncSGIX)'
# const 'glGenAsyncMarkersSGIX' has unsupported value 'GLEW_GET_FUN(__glewGenAsyncMarkersSGIX)'
# const 'glIsAsyncMarkerSGIX' has unsupported value 'GLEW_GET_FUN(__glewIsAsyncMarkerSGIX)'
# const 'glPollAsyncSGIX' has unsupported value 'GLEW_GET_FUN(__glewPollAsyncSGIX)'
# const 'GLEW_SGIX_async' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_async)'
# const 'GLEW_SGIX_async_histogram' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_async_histogram)'
# const 'GLEW_SGIX_async_pixel' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_async_pixel)'
# const 'GLEW_SGIX_bali_g_instruments' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_bali_g_instruments)'
# const 'GLEW_SGIX_bali_r_instruments' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_bali_r_instruments)'
# const 'GLEW_SGIX_bali_timer_instruments' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_bali_timer_instruments)'
# const 'GLEW_SGIX_blend_alpha_minmax' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_blend_alpha_minmax)'
# const 'GLEW_SGIX_blend_cadd' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_blend_cadd)'
# const 'GLEW_SGIX_blend_cmultiply' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_blend_cmultiply)'
# const 'GLEW_SGIX_calligraphic_fragment' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_calligraphic_fragment)'
# const 'GLEW_SGIX_clipmap' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_clipmap)'
# const 'GLEW_SGIX_color_matrix_accuracy' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_color_matrix_accuracy)'
# const 'GLEW_SGIX_color_table_index_mode' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_color_table_index_mode)'
# const 'GLEW_SGIX_complex_polar' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_complex_polar)'
# const 'GLEW_SGIX_convolution_accuracy' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_convolution_accuracy)'
# const 'GLEW_SGIX_cube_map' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_cube_map)'
# const 'GLEW_SGIX_cylinder_texgen' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_cylinder_texgen)'
# const 'glAddressSpace' has unsupported value 'GLEW_GET_FUN(__glewAddressSpace)'
# const 'glDataPipe' has unsupported value 'GLEW_GET_FUN(__glewDataPipe)'
# const 'GLEW_SGIX_datapipe' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_datapipe)'
# const 'GLEW_SGIX_decimation' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_decimation)'
# const 'GLEW_SGIX_depth_pass_instrument' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_depth_pass_instrument)'
# const 'GLEW_SGIX_depth_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_depth_texture)'
# const 'GLEW_SGIX_dvc' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_dvc)'
# const 'glFlushRasterSGIX' has unsupported value 'GLEW_GET_FUN(__glewFlushRasterSGIX)'
# const 'GLEW_SGIX_flush_raster' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_flush_raster)'
# const 'GLEW_SGIX_fog_blend' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_blend)'
# const 'GLEW_SGIX_fog_factor_to_alpha' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_factor_to_alpha)'
# const 'glFogLayersSGIX' has unsupported value 'GLEW_GET_FUN(__glewFogLayersSGIX)'
# const 'glGetFogLayersSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetFogLayersSGIX)'
# const 'GLEW_SGIX_fog_layers' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_layers)'
# const 'GLEW_SGIX_fog_offset' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_offset)'
# const 'GLEW_SGIX_fog_patchy' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_patchy)'
# const 'GLEW_SGIX_fog_scale' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_scale)'
# const 'glTextureFogSGIX' has unsupported value 'GLEW_GET_FUN(__glewTextureFogSGIX)'
# const 'GLEW_SGIX_fog_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fog_texture)'
# const 'GLEW_SGIX_fragment_lighting_space' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fragment_lighting_space)'
# const 'glFragmentColorMaterialSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentColorMaterialSGIX)'
# const 'glFragmentLightModelfSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModelfSGIX)'
# const 'glFragmentLightModelfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModelfvSGIX)'
# const 'glFragmentLightModeliSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModeliSGIX)'
# const 'glFragmentLightModelivSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightModelivSGIX)'
# const 'glFragmentLightfSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightfSGIX)'
# const 'glFragmentLightfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightfvSGIX)'
# const 'glFragmentLightiSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightiSGIX)'
# const 'glFragmentLightivSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentLightivSGIX)'
# const 'glFragmentMaterialfSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialfSGIX)'
# const 'glFragmentMaterialfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialfvSGIX)'
# const 'glFragmentMaterialiSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialiSGIX)'
# const 'glFragmentMaterialivSGIX' has unsupported value 'GLEW_GET_FUN(__glewFragmentMaterialivSGIX)'
# const 'glGetFragmentLightfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentLightfvSGIX)'
# const 'glGetFragmentLightivSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentLightivSGIX)'
# const 'glGetFragmentMaterialfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentMaterialfvSGIX)'
# const 'glGetFragmentMaterialivSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetFragmentMaterialivSGIX)'
# const 'GLEW_SGIX_fragment_specular_lighting' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fragment_specular_lighting)'
# const 'GLEW_SGIX_fragments_instrument' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_fragments_instrument)'
# const 'glFrameZoomSGIX' has unsupported value 'GLEW_GET_FUN(__glewFrameZoomSGIX)'
# const 'GLEW_SGIX_framezoom' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_framezoom)'
# const 'GLEW_SGIX_icc_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_icc_texture)'
# const 'glIglooInterfaceSGIX' has unsupported value 'GLEW_GET_FUN(__glewIglooInterfaceSGIX)'
# const 'GLEW_SGIX_igloo_interface' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_igloo_interface)'
# const 'GLEW_SGIX_image_compression' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_image_compression)'
# const 'GLEW_SGIX_impact_pixel_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_impact_pixel_texture)'
# const 'GLEW_SGIX_instrument_error' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_instrument_error)'
# const 'GLEW_SGIX_interlace' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_interlace)'
# const 'GLEW_SGIX_ir_instrument1' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_ir_instrument1)'
# const 'GLEW_SGIX_line_quality_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_line_quality_hint)'
# const 'GLEW_SGIX_list_priority' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_list_priority)'
# const 'glAllocMPEGPredictorsSGIX' has unsupported value 'GLEW_GET_FUN(__glewAllocMPEGPredictorsSGIX)'
# const 'glDeleteMPEGPredictorsSGIX' has unsupported value 'GLEW_GET_FUN(__glewDeleteMPEGPredictorsSGIX)'
# const 'glGenMPEGPredictorsSGIX' has unsupported value 'GLEW_GET_FUN(__glewGenMPEGPredictorsSGIX)'
# const 'glGetMPEGParameterfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetMPEGParameterfvSGIX)'
# const 'glGetMPEGParameterivSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetMPEGParameterivSGIX)'
# const 'glGetMPEGPredictorSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetMPEGPredictorSGIX)'
# const 'glGetMPEGQuantTableubv' has unsupported value 'GLEW_GET_FUN(__glewGetMPEGQuantTableubv)'
# const 'glIsMPEGPredictorSGIX' has unsupported value 'GLEW_GET_FUN(__glewIsMPEGPredictorSGIX)'
# const 'glMPEGPredictorSGIX' has unsupported value 'GLEW_GET_FUN(__glewMPEGPredictorSGIX)'
# const 'glMPEGQuantTableubv' has unsupported value 'GLEW_GET_FUN(__glewMPEGQuantTableubv)'
# const 'glSwapMPEGPredictorsSGIX' has unsupported value 'GLEW_GET_FUN(__glewSwapMPEGPredictorsSGIX)'
# const 'GLEW_SGIX_mpeg1' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_mpeg1)'
# const 'GLEW_SGIX_mpeg2' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_mpeg2)'
# const 'glGetNonlinLightfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetNonlinLightfvSGIX)'
# const 'glGetNonlinMaterialfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetNonlinMaterialfvSGIX)'
# const 'glNonlinLightfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewNonlinLightfvSGIX)'
# const 'glNonlinMaterialfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewNonlinMaterialfvSGIX)'
# const 'GLEW_SGIX_nonlinear_lighting_pervertex' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_nonlinear_lighting_pervertex)'
# const 'GLEW_SGIX_nurbs_eval' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_nurbs_eval)'
# const 'GLEW_SGIX_occlusion_instrument' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_occlusion_instrument)'
# const 'GLEW_SGIX_packed_6bytes' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_packed_6bytes)'
# const 'glPixelTexGenSGIX' has unsupported value 'GLEW_GET_FUN(__glewPixelTexGenSGIX)'
# const 'GLEW_SGIX_pixel_texture' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_pixel_texture)'
# const 'GLEW_SGIX_pixel_texture_bits' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_pixel_texture_bits)'
# const 'GLEW_SGIX_pixel_texture_lod' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_pixel_texture_lod)'
# const 'GLEW_SGIX_pixel_tiles' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_pixel_tiles)'
# const 'glDeformSGIX' has unsupported value 'GLEW_GET_FUN(__glewDeformSGIX)'
# const 'glLoadIdentityDeformationMapSGIX' has unsupported value 'GLEW_GET_FUN(__glewLoadIdentityDeformationMapSGIX)'
# const 'GLEW_SGIX_polynomial_ffd' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_polynomial_ffd)'
# const 'glMeshBreadthSGIX' has unsupported value 'GLEW_GET_FUN(__glewMeshBreadthSGIX)'
# const 'glMeshStrideSGIX' has unsupported value 'GLEW_GET_FUN(__glewMeshStrideSGIX)'
# const 'GLEW_SGIX_quad_mesh' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_quad_mesh)'
# const 'glReferencePlaneSGIX' has unsupported value 'GLEW_GET_FUN(__glewReferencePlaneSGIX)'
# const 'GLEW_SGIX_reference_plane' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_reference_plane)'
# const 'GLEW_SGIX_resample' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_resample)'
# const 'GLEW_SGIX_scalebias_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_scalebias_hint)'
# const 'GLEW_SGIX_shadow' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_shadow)'
# const 'GLEW_SGIX_shadow_ambient' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_shadow_ambient)'
# const 'GLEW_SGIX_slim' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_slim)'
# const 'GLEW_SGIX_spotlight_cutoff' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_spotlight_cutoff)'
# const 'glSpriteParameterfSGIX' has unsupported value 'GLEW_GET_FUN(__glewSpriteParameterfSGIX)'
# const 'glSpriteParameterfvSGIX' has unsupported value 'GLEW_GET_FUN(__glewSpriteParameterfvSGIX)'
# const 'glSpriteParameteriSGIX' has unsupported value 'GLEW_GET_FUN(__glewSpriteParameteriSGIX)'
# const 'glSpriteParameterivSGIX' has unsupported value 'GLEW_GET_FUN(__glewSpriteParameterivSGIX)'
# const 'GLEW_SGIX_sprite' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_sprite)'
# const 'GLEW_SGIX_subdiv_patch' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_subdiv_patch)'
# const 'GLEW_SGIX_subsample' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_subsample)'
# const 'glTagSampleBufferSGIX' has unsupported value 'GLEW_GET_FUN(__glewTagSampleBufferSGIX)'
# const 'GLEW_SGIX_tag_sample_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_tag_sample_buffer)'
# const 'GLEW_SGIX_texture_add_env' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_add_env)'
# const 'GLEW_SGIX_texture_coordinate_clamp' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_coordinate_clamp)'
# const 'GLEW_SGIX_texture_lod_bias' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_lod_bias)'
# const 'GLEW_SGIX_texture_mipmap_anisotropic' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_mipmap_anisotropic)'
# const 'GLEW_SGIX_texture_multi_buffer' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_multi_buffer)'
# const 'GLEW_SGIX_texture_phase' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_phase)'
# const 'GLEW_SGIX_texture_range' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_range)'
# const 'GLEW_SGIX_texture_scale_bias' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_scale_bias)'
# const 'GLEW_SGIX_texture_supersample' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_texture_supersample)'
# const 'glGetVectorOperationSGIX' has unsupported value 'GLEW_GET_FUN(__glewGetVectorOperationSGIX)'
# const 'glVectorOperationSGIX' has unsupported value 'GLEW_GET_FUN(__glewVectorOperationSGIX)'
# const 'GLEW_SGIX_vector_ops' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_vector_ops)'
# const 'glAreVertexArraysResidentSGIX' has unsupported value 'GLEW_GET_FUN(__glewAreVertexArraysResidentSGIX)'
# const 'glBindVertexArraySGIX' has unsupported value 'GLEW_GET_FUN(__glewBindVertexArraySGIX)'
# const 'glDeleteVertexArraysSGIX' has unsupported value 'GLEW_GET_FUN(__glewDeleteVertexArraysSGIX)'
# const 'glGenVertexArraysSGIX' has unsupported value 'GLEW_GET_FUN(__glewGenVertexArraysSGIX)'
# const 'glIsVertexArraySGIX' has unsupported value 'GLEW_GET_FUN(__glewIsVertexArraySGIX)'
# const 'glPrioritizeVertexArraysSGIX' has unsupported value 'GLEW_GET_FUN(__glewPrioritizeVertexArraysSGIX)'
# const 'GLEW_SGIX_vertex_array_object' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_vertex_array_object)'
# const 'GLEW_SGIX_vertex_preclip' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_vertex_preclip)'
# const 'GLEW_SGIX_vertex_preclip_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_vertex_preclip_hint)'
# const 'GLEW_SGIX_ycrcb' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_ycrcb)'
# const 'GLEW_SGIX_ycrcb_subsample' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_ycrcb_subsample)'
# const 'GLEW_SGIX_ycrcba' has unsupported value 'GLEW_GET_VAR(__GLEW_SGIX_ycrcba)'
# const 'GLEW_SGI_color_matrix' has unsupported value 'GLEW_GET_VAR(__GLEW_SGI_color_matrix)'
# const 'glColorTableParameterfvSGI' has unsupported value 'GLEW_GET_FUN(__glewColorTableParameterfvSGI)'
# const 'glColorTableParameterivSGI' has unsupported value 'GLEW_GET_FUN(__glewColorTableParameterivSGI)'
# const 'glColorTableSGI' has unsupported value 'GLEW_GET_FUN(__glewColorTableSGI)'
# const 'glCopyColorTableSGI' has unsupported value 'GLEW_GET_FUN(__glewCopyColorTableSGI)'
# const 'glGetColorTableParameterfvSGI' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableParameterfvSGI)'
# const 'glGetColorTableParameterivSGI' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableParameterivSGI)'
# const 'glGetColorTableSGI' has unsupported value 'GLEW_GET_FUN(__glewGetColorTableSGI)'
# const 'GLEW_SGI_color_table' has unsupported value 'GLEW_GET_VAR(__GLEW_SGI_color_table)'
# const 'GLEW_SGI_complex' has unsupported value 'GLEW_GET_VAR(__GLEW_SGI_complex)'
# const 'GLEW_SGI_complex_type' has unsupported value 'GLEW_GET_VAR(__GLEW_SGI_complex_type)'
# const 'glGetPixelTransformParameterfvSGI' has unsupported value 'GLEW_GET_FUN(__glewGetPixelTransformParameterfvSGI)'
# const 'glGetPixelTransformParameterivSGI' has unsupported value 'GLEW_GET_FUN(__glewGetPixelTransformParameterivSGI)'
# const 'glPixelTransformParameterfSGI' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameterfSGI)'
# const 'glPixelTransformParameterfvSGI' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameterfvSGI)'
# const 'glPixelTransformParameteriSGI' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameteriSGI)'
# const 'glPixelTransformParameterivSGI' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformParameterivSGI)'
# const 'glPixelTransformSGI' has unsupported value 'GLEW_GET_FUN(__glewPixelTransformSGI)'
# const 'GLEW_SGI_fft' has unsupported value 'GLEW_GET_VAR(__GLEW_SGI_fft)'
# const 'GLEW_SGI_texture_color_table' has unsupported value 'GLEW_GET_VAR(__GLEW_SGI_texture_color_table)'
# const 'glFinishTextureSUNX' has unsupported value 'GLEW_GET_FUN(__glewFinishTextureSUNX)'
# const 'GLEW_SUNX_constant_data' has unsupported value 'GLEW_GET_VAR(__GLEW_SUNX_constant_data)'
# const 'GLEW_SUN_convolution_border_modes' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_convolution_border_modes)'
# const 'glGlobalAlphaFactorbSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactorbSUN)'
# const 'glGlobalAlphaFactordSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactordSUN)'
# const 'glGlobalAlphaFactorfSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactorfSUN)'
# const 'glGlobalAlphaFactoriSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactoriSUN)'
# const 'glGlobalAlphaFactorsSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactorsSUN)'
# const 'glGlobalAlphaFactorubSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactorubSUN)'
# const 'glGlobalAlphaFactoruiSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactoruiSUN)'
# const 'glGlobalAlphaFactorusSUN' has unsupported value 'GLEW_GET_FUN(__glewGlobalAlphaFactorusSUN)'
# const 'GLEW_SUN_global_alpha' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_global_alpha)'
# const 'GLEW_SUN_mesh_array' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_mesh_array)'
# const 'glReadVideoPixelsSUN' has unsupported value 'GLEW_GET_FUN(__glewReadVideoPixelsSUN)'
# const 'GLEW_SUN_read_video_pixels' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_read_video_pixels)'
# const 'GLEW_SUN_slice_accum' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_slice_accum)'
# const 'glReplacementCodePointerSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodePointerSUN)'
# const 'glReplacementCodeubSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeubSUN)'
# const 'glReplacementCodeubvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeubvSUN)'
# const 'glReplacementCodeuiSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiSUN)'
# const 'glReplacementCodeuivSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuivSUN)'
# const 'glReplacementCodeusSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeusSUN)'
# const 'glReplacementCodeusvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeusvSUN)'
# const 'GLEW_SUN_triangle_list' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_triangle_list)'
# const 'glColor3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewColor3fVertex3fSUN)'
# const 'glColor3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewColor3fVertex3fvSUN)'
# const 'glColor4fNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewColor4fNormal3fVertex3fSUN)'
# const 'glColor4fNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewColor4fNormal3fVertex3fvSUN)'
# const 'glColor4ubVertex2fSUN' has unsupported value 'GLEW_GET_FUN(__glewColor4ubVertex2fSUN)'
# const 'glColor4ubVertex2fvSUN' has unsupported value 'GLEW_GET_FUN(__glewColor4ubVertex2fvSUN)'
# const 'glColor4ubVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewColor4ubVertex3fSUN)'
# const 'glColor4ubVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewColor4ubVertex3fvSUN)'
# const 'glNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewNormal3fVertex3fSUN)'
# const 'glNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewNormal3fVertex3fvSUN)'
# const 'glReplacementCodeuiColor3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiColor3fVertex3fSUN)'
# const 'glReplacementCodeuiColor3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiColor3fVertex3fvSUN)'
# const 'glReplacementCodeuiColor4fNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiColor4fNormal3fVertex3fSUN)'
# const 'glReplacementCodeuiColor4fNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN)'
# const 'glReplacementCodeuiColor4ubVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiColor4ubVertex3fSUN)'
# const 'glReplacementCodeuiColor4ubVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiColor4ubVertex3fvSUN)'
# const 'glReplacementCodeuiNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiNormal3fVertex3fSUN)'
# const 'glReplacementCodeuiNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiNormal3fVertex3fvSUN)'
# const 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)'
# const 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)'
# const 'glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)'
# const 'glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)'
# const 'glReplacementCodeuiTexCoord2fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiTexCoord2fVertex3fSUN)'
# const 'glReplacementCodeuiTexCoord2fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiTexCoord2fVertex3fvSUN)'
# const 'glReplacementCodeuiVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiVertex3fSUN)'
# const 'glReplacementCodeuiVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewReplacementCodeuiVertex3fvSUN)'
# const 'glTexCoord2fColor3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fColor3fVertex3fSUN)'
# const 'glTexCoord2fColor3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fColor3fVertex3fvSUN)'
# const 'glTexCoord2fColor4fNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fColor4fNormal3fVertex3fSUN)'
# const 'glTexCoord2fColor4fNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fColor4fNormal3fVertex3fvSUN)'
# const 'glTexCoord2fColor4ubVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fColor4ubVertex3fSUN)'
# const 'glTexCoord2fColor4ubVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fColor4ubVertex3fvSUN)'
# const 'glTexCoord2fNormal3fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fNormal3fVertex3fSUN)'
# const 'glTexCoord2fNormal3fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fNormal3fVertex3fvSUN)'
# const 'glTexCoord2fVertex3fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fVertex3fSUN)'
# const 'glTexCoord2fVertex3fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord2fVertex3fvSUN)'
# const 'glTexCoord4fColor4fNormal3fVertex4fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord4fColor4fNormal3fVertex4fSUN)'
# const 'glTexCoord4fColor4fNormal3fVertex4fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord4fColor4fNormal3fVertex4fvSUN)'
# const 'glTexCoord4fVertex4fSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord4fVertex4fSUN)'
# const 'glTexCoord4fVertex4fvSUN' has unsupported value 'GLEW_GET_FUN(__glewTexCoord4fVertex4fvSUN)'
# const 'GLEW_SUN_vertex' has unsupported value 'GLEW_GET_VAR(__GLEW_SUN_vertex)'
# const 'GLEW_WIN_phong_shading' has unsupported value 'GLEW_GET_VAR(__GLEW_WIN_phong_shading)'
# const 'GLEW_WIN_scene_markerXXX' has unsupported value 'GLEW_GET_VAR(__GLEW_WIN_scene_markerXXX)'
# const 'GLEW_WIN_specular_fog' has unsupported value 'GLEW_GET_VAR(__GLEW_WIN_specular_fog)'
# const 'glAddSwapHintRectWIN' has unsupported value 'GLEW_GET_FUN(__glewAddSwapHintRectWIN)'
# const 'GLEW_WIN_swap_hint' has unsupported value 'GLEW_GET_VAR(__GLEW_WIN_swap_hint)'
{.push hint[ConvFromXtoItselfNotNeeded]: off.}


{.experimental: "codeReordering".}
{.passC: "-I/home/john/.cache/nim/nimterop/nimglew/glew/include".}
{.passL: "/home/john/.cache/nim/nimterop/nimglew/glew/lib/libGLEW.a".}
const
  GL_VERSION_1_1* = 1
  GL_ZERO* = 0
  GL_FALSE* = 0
  GL_LOGIC_OP* = 0x00000BF1
  GL_NONE* = 0
  GL_TEXTURE_COMPONENTS* = 0x00001003
  GL_NO_ERROR* = 0
  GL_POINTS* = 0x00000000
  GL_CURRENT_BIT* = 0x00000001
  GL_TRUE* = 1
  GL_ONE* = 1
  GL_CLIENT_PIXEL_STORE_BIT* = 0x00000001
  GL_LINES* = 0x00000001
  GL_LINE_LOOP* = 0x00000002
  GL_POINT_BIT* = 0x00000002
  GL_CLIENT_VERTEX_ARRAY_BIT* = 0x00000002
  GL_LINE_STRIP* = 0x00000003
  GL_LINE_BIT* = 0x00000004
  GL_TRIANGLES* = 0x00000004
  GL_TRIANGLE_STRIP* = 0x00000005
  GL_TRIANGLE_FAN* = 0x00000006
  GL_QUADS* = 0x00000007
  GL_QUAD_STRIP* = 0x00000008
  GL_POLYGON_BIT* = 0x00000008
  GL_POLYGON* = 0x00000009
  GL_POLYGON_STIPPLE_BIT* = 0x00000010
  GL_PIXEL_MODE_BIT* = 0x00000020
  GL_LIGHTING_BIT* = 0x00000040
  GL_FOG_BIT* = 0x00000080
  GL_DEPTH_BUFFER_BIT* = 0x00000100
  GL_ACCUM* = 0x00000100
  GL_LOAD* = 0x00000101
  GL_RETURN* = 0x00000102
  GL_MULT* = 0x00000103
  GL_ADD* = 0x00000104
  GL_NEVER* = 0x00000200
  GL_ACCUM_BUFFER_BIT* = 0x00000200
  GL_LESS* = 0x00000201
  GL_EQUAL* = 0x00000202
  GL_LEQUAL* = 0x00000203
  GL_GREATER* = 0x00000204
  GL_NOTEQUAL* = 0x00000205
  GL_GEQUAL* = 0x00000206
  GL_ALWAYS* = 0x00000207
  GL_SRC_COLOR* = 0x00000300
  GL_ONE_MINUS_SRC_COLOR* = 0x00000301
  GL_SRC_ALPHA* = 0x00000302
  GL_ONE_MINUS_SRC_ALPHA* = 0x00000303
  GL_DST_ALPHA* = 0x00000304
  GL_ONE_MINUS_DST_ALPHA* = 0x00000305
  GL_DST_COLOR* = 0x00000306
  GL_ONE_MINUS_DST_COLOR* = 0x00000307
  GL_SRC_ALPHA_SATURATE* = 0x00000308
  GL_STENCIL_BUFFER_BIT* = 0x00000400
  GL_FRONT_LEFT* = 0x00000400
  GL_FRONT_RIGHT* = 0x00000401
  GL_BACK_LEFT* = 0x00000402
  GL_BACK_RIGHT* = 0x00000403
  GL_FRONT* = 0x00000404
  GL_BACK* = 0x00000405
  GL_LEFT* = 0x00000406
  GL_RIGHT* = 0x00000407
  GL_FRONT_AND_BACK* = 0x00000408
  GL_AUX0* = 0x00000409
  GL_AUX1* = 0x0000040A
  GL_AUX2* = 0x0000040B
  GL_AUX3* = 0x0000040C
  GL_INVALID_ENUM* = 0x00000500
  GL_INVALID_VALUE* = 0x00000501
  GL_INVALID_OPERATION* = 0x00000502
  GL_STACK_OVERFLOW* = 0x00000503
  GL_STACK_UNDERFLOW* = 0x00000504
  GL_OUT_OF_MEMORY* = 0x00000505
  GL_2D* = 0x00000600
  GL_3D* = 0x00000601
  GL_3D_COLOR* = 0x00000602
  GL_3D_COLOR_TEXTURE* = 0x00000603
  GL_4D_COLOR_TEXTURE* = 0x00000604
  GL_PASS_THROUGH_TOKEN* = 0x00000700
  GL_POINT_TOKEN* = 0x00000701
  GL_LINE_TOKEN* = 0x00000702
  GL_POLYGON_TOKEN* = 0x00000703
  GL_BITMAP_TOKEN* = 0x00000704
  GL_DRAW_PIXEL_TOKEN* = 0x00000705
  GL_COPY_PIXEL_TOKEN* = 0x00000706
  GL_LINE_RESET_TOKEN* = 0x00000707
  GL_EXP* = 0x00000800
  GL_VIEWPORT_BIT* = 0x00000800
  GL_EXP2* = 0x00000801
  GL_CW* = 0x00000900
  GL_CCW* = 0x00000901
  GL_COEFF* = 0x00000A00
  GL_ORDER* = 0x00000A01
  GL_DOMAIN* = 0x00000A02
  GL_CURRENT_COLOR* = 0x00000B00
  GL_CURRENT_INDEX* = 0x00000B01
  GL_CURRENT_NORMAL* = 0x00000B02
  GL_CURRENT_TEXTURE_COORDS* = 0x00000B03
  GL_CURRENT_RASTER_COLOR* = 0x00000B04
  GL_CURRENT_RASTER_INDEX* = 0x00000B05
  GL_CURRENT_RASTER_TEXTURE_COORDS* = 0x00000B06
  GL_CURRENT_RASTER_POSITION* = 0x00000B07
  GL_CURRENT_RASTER_POSITION_VALID* = 0x00000B08
  GL_CURRENT_RASTER_DISTANCE* = 0x00000B09
  GL_POINT_SMOOTH* = 0x00000B10
  GL_POINT_SIZE* = 0x00000B11
  GL_POINT_SIZE_RANGE* = 0x00000B12
  GL_POINT_SIZE_GRANULARITY* = 0x00000B13
  GL_LINE_SMOOTH* = 0x00000B20
  GL_LINE_WIDTH* = 0x00000B21
  GL_LINE_WIDTH_RANGE* = 0x00000B22
  GL_LINE_WIDTH_GRANULARITY* = 0x00000B23
  GL_LINE_STIPPLE* = 0x00000B24
  GL_LINE_STIPPLE_PATTERN* = 0x00000B25
  GL_LINE_STIPPLE_REPEAT* = 0x00000B26
  GL_LIST_MODE* = 0x00000B30
  GL_MAX_LIST_NESTING* = 0x00000B31
  GL_LIST_BASE* = 0x00000B32
  GL_LIST_INDEX* = 0x00000B33
  GL_POLYGON_MODE* = 0x00000B40
  GL_POLYGON_SMOOTH* = 0x00000B41
  GL_POLYGON_STIPPLE* = 0x00000B42
  GL_EDGE_FLAG* = 0x00000B43
  GL_CULL_FACE* = 0x00000B44
  GL_CULL_FACE_MODE* = 0x00000B45
  GL_FRONT_FACE* = 0x00000B46
  GL_LIGHTING* = 0x00000B50
  GL_LIGHT_MODEL_LOCAL_VIEWER* = 0x00000B51
  GL_LIGHT_MODEL_TWO_SIDE* = 0x00000B52
  GL_LIGHT_MODEL_AMBIENT* = 0x00000B53
  GL_SHADE_MODEL* = 0x00000B54
  GL_COLOR_MATERIAL_FACE* = 0x00000B55
  GL_COLOR_MATERIAL_PARAMETER* = 0x00000B56
  GL_COLOR_MATERIAL* = 0x00000B57
  GL_FOG* = 0x00000B60
  GL_FOG_INDEX* = 0x00000B61
  GL_FOG_DENSITY* = 0x00000B62
  GL_FOG_START* = 0x00000B63
  GL_FOG_END* = 0x00000B64
  GL_FOG_MODE* = 0x00000B65
  GL_FOG_COLOR* = 0x00000B66
  GL_DEPTH_RANGE* = 0x00000B70
  GL_DEPTH_TEST* = 0x00000B71
  GL_DEPTH_WRITEMASK* = 0x00000B72
  GL_DEPTH_CLEAR_VALUE* = 0x00000B73
  GL_DEPTH_FUNC* = 0x00000B74
  GL_ACCUM_CLEAR_VALUE* = 0x00000B80
  GL_STENCIL_TEST* = 0x00000B90
  GL_STENCIL_CLEAR_VALUE* = 0x00000B91
  GL_STENCIL_FUNC* = 0x00000B92
  GL_STENCIL_VALUE_MASK* = 0x00000B93
  GL_STENCIL_FAIL* = 0x00000B94
  GL_STENCIL_PASS_DEPTH_FAIL* = 0x00000B95
  GL_STENCIL_PASS_DEPTH_PASS* = 0x00000B96
  GL_STENCIL_REF* = 0x00000B97
  GL_STENCIL_WRITEMASK* = 0x00000B98
  GL_MATRIX_MODE* = 0x00000BA0
  GL_NORMALIZE* = 0x00000BA1
  GL_VIEWPORT* = 0x00000BA2
  GL_MODELVIEW_STACK_DEPTH* = 0x00000BA3
  GL_PROJECTION_STACK_DEPTH* = 0x00000BA4
  GL_TEXTURE_STACK_DEPTH* = 0x00000BA5
  GL_MODELVIEW_MATRIX* = 0x00000BA6
  GL_PROJECTION_MATRIX* = 0x00000BA7
  GL_TEXTURE_MATRIX* = 0x00000BA8
  GL_ATTRIB_STACK_DEPTH* = 0x00000BB0
  GL_CLIENT_ATTRIB_STACK_DEPTH* = 0x00000BB1
  GL_ALPHA_TEST* = 0x00000BC0
  GL_ALPHA_TEST_FUNC* = 0x00000BC1
  GL_ALPHA_TEST_REF* = 0x00000BC2
  GL_DITHER* = 0x00000BD0
  GL_BLEND_DST* = 0x00000BE0
  GL_BLEND_SRC* = 0x00000BE1
  GL_BLEND* = 0x00000BE2
  GL_LOGIC_OP_MODE* = 0x00000BF0
  GL_INDEX_LOGIC_OP* = 0x00000BF1
  GL_COLOR_LOGIC_OP* = 0x00000BF2
  GL_AUX_BUFFERS* = 0x00000C00
  GL_DRAW_BUFFER* = 0x00000C01
  GL_READ_BUFFER* = 0x00000C02
  GL_SCISSOR_BOX* = 0x00000C10
  GL_SCISSOR_TEST* = 0x00000C11
  GL_INDEX_CLEAR_VALUE* = 0x00000C20
  GL_INDEX_WRITEMASK* = 0x00000C21
  GL_COLOR_CLEAR_VALUE* = 0x00000C22
  GL_COLOR_WRITEMASK* = 0x00000C23
  GL_INDEX_MODE* = 0x00000C30
  GL_RGBA_MODE* = 0x00000C31
  CGL_DOUBLE* = 0x00000C32
  GL_STEREO* = 0x00000C33
  GL_RENDER_MODE* = 0x00000C40
  GL_PERSPECTIVE_CORRECTION_HINT* = 0x00000C50
  GL_POINT_SMOOTH_HINT* = 0x00000C51
  GL_LINE_SMOOTH_HINT* = 0x00000C52
  GL_POLYGON_SMOOTH_HINT* = 0x00000C53
  GL_FOG_HINT* = 0x00000C54
  GL_TEXTURE_GEN_S* = 0x00000C60
  GL_TEXTURE_GEN_T* = 0x00000C61
  GL_TEXTURE_GEN_R* = 0x00000C62
  GL_TEXTURE_GEN_Q* = 0x00000C63
  GL_PIXEL_MAP_I_TO_I* = 0x00000C70
  GL_PIXEL_MAP_S_TO_S* = 0x00000C71
  GL_PIXEL_MAP_I_TO_R* = 0x00000C72
  GL_PIXEL_MAP_I_TO_G* = 0x00000C73
  GL_PIXEL_MAP_I_TO_B* = 0x00000C74
  GL_PIXEL_MAP_I_TO_A* = 0x00000C75
  GL_PIXEL_MAP_R_TO_R* = 0x00000C76
  GL_PIXEL_MAP_G_TO_G* = 0x00000C77
  GL_PIXEL_MAP_B_TO_B* = 0x00000C78
  GL_PIXEL_MAP_A_TO_A* = 0x00000C79
  GL_PIXEL_MAP_I_TO_I_SIZE* = 0x00000CB0
  GL_PIXEL_MAP_S_TO_S_SIZE* = 0x00000CB1
  GL_PIXEL_MAP_I_TO_R_SIZE* = 0x00000CB2
  GL_PIXEL_MAP_I_TO_G_SIZE* = 0x00000CB3
  GL_PIXEL_MAP_I_TO_B_SIZE* = 0x00000CB4
  GL_PIXEL_MAP_I_TO_A_SIZE* = 0x00000CB5
  GL_PIXEL_MAP_R_TO_R_SIZE* = 0x00000CB6
  GL_PIXEL_MAP_G_TO_G_SIZE* = 0x00000CB7
  GL_PIXEL_MAP_B_TO_B_SIZE* = 0x00000CB8
  GL_PIXEL_MAP_A_TO_A_SIZE* = 0x00000CB9
  GL_UNPACK_SWAP_BYTES* = 0x00000CF0
  GL_UNPACK_LSB_FIRST* = 0x00000CF1
  GL_UNPACK_ROW_LENGTH* = 0x00000CF2
  GL_UNPACK_SKIP_ROWS* = 0x00000CF3
  GL_UNPACK_SKIP_PIXELS* = 0x00000CF4
  GL_UNPACK_ALIGNMENT* = 0x00000CF5
  GL_PACK_SWAP_BYTES* = 0x00000D00
  GL_PACK_LSB_FIRST* = 0x00000D01
  GL_PACK_ROW_LENGTH* = 0x00000D02
  GL_PACK_SKIP_ROWS* = 0x00000D03
  GL_PACK_SKIP_PIXELS* = 0x00000D04
  GL_PACK_ALIGNMENT* = 0x00000D05
  GL_MAP_COLOR* = 0x00000D10
  GL_MAP_STENCIL* = 0x00000D11
  GL_INDEX_SHIFT* = 0x00000D12
  GL_INDEX_OFFSET* = 0x00000D13
  GL_RED_SCALE* = 0x00000D14
  GL_RED_BIAS* = 0x00000D15
  GL_ZOOM_X* = 0x00000D16
  GL_ZOOM_Y* = 0x00000D17
  GL_GREEN_SCALE* = 0x00000D18
  GL_GREEN_BIAS* = 0x00000D19
  GL_BLUE_SCALE* = 0x00000D1A
  GL_BLUE_BIAS* = 0x00000D1B
  GL_ALPHA_SCALE* = 0x00000D1C
  GL_ALPHA_BIAS* = 0x00000D1D
  GL_DEPTH_SCALE* = 0x00000D1E
  GL_DEPTH_BIAS* = 0x00000D1F
  GL_MAX_EVAL_ORDER* = 0x00000D30
  GL_MAX_LIGHTS* = 0x00000D31
  GL_MAX_CLIP_PLANES* = 0x00000D32
  GL_MAX_TEXTURE_SIZE* = 0x00000D33
  GL_MAX_PIXEL_MAP_TABLE* = 0x00000D34
  GL_MAX_ATTRIB_STACK_DEPTH* = 0x00000D35
  GL_MAX_MODELVIEW_STACK_DEPTH* = 0x00000D36
  GL_MAX_NAME_STACK_DEPTH* = 0x00000D37
  GL_MAX_PROJECTION_STACK_DEPTH* = 0x00000D38
  GL_MAX_TEXTURE_STACK_DEPTH* = 0x00000D39
  GL_MAX_VIEWPORT_DIMS* = 0x00000D3A
  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH* = 0x00000D3B
  GL_SUBPIXEL_BITS* = 0x00000D50
  GL_INDEX_BITS* = 0x00000D51
  GL_RED_BITS* = 0x00000D52
  GL_GREEN_BITS* = 0x00000D53
  GL_BLUE_BITS* = 0x00000D54
  GL_ALPHA_BITS* = 0x00000D55
  GL_DEPTH_BITS* = 0x00000D56
  GL_STENCIL_BITS* = 0x00000D57
  GL_ACCUM_RED_BITS* = 0x00000D58
  GL_ACCUM_GREEN_BITS* = 0x00000D59
  GL_ACCUM_BLUE_BITS* = 0x00000D5A
  GL_ACCUM_ALPHA_BITS* = 0x00000D5B
  GL_NAME_STACK_DEPTH* = 0x00000D70
  GL_AUTO_NORMAL* = 0x00000D80
  GL_MAP1_COLOR_4* = 0x00000D90
  GL_MAP1_INDEX* = 0x00000D91
  GL_MAP1_NORMAL* = 0x00000D92
  GL_MAP1_TEXTURE_COORD_1* = 0x00000D93
  GL_MAP1_TEXTURE_COORD_2* = 0x00000D94
  GL_MAP1_TEXTURE_COORD_3* = 0x00000D95
  GL_MAP1_TEXTURE_COORD_4* = 0x00000D96
  GL_MAP1_VERTEX_3* = 0x00000D97
  GL_MAP1_VERTEX_4* = 0x00000D98
  GL_MAP2_COLOR_4* = 0x00000DB0
  GL_MAP2_INDEX* = 0x00000DB1
  GL_MAP2_NORMAL* = 0x00000DB2
  GL_MAP2_TEXTURE_COORD_1* = 0x00000DB3
  GL_MAP2_TEXTURE_COORD_2* = 0x00000DB4
  GL_MAP2_TEXTURE_COORD_3* = 0x00000DB5
  GL_MAP2_TEXTURE_COORD_4* = 0x00000DB6
  GL_MAP2_VERTEX_3* = 0x00000DB7
  GL_MAP2_VERTEX_4* = 0x00000DB8
  GL_MAP1_GRID_DOMAIN* = 0x00000DD0
  GL_MAP1_GRID_SEGMENTS* = 0x00000DD1
  GL_MAP2_GRID_DOMAIN* = 0x00000DD2
  GL_MAP2_GRID_SEGMENTS* = 0x00000DD3
  GL_TEXTURE_1D* = 0x00000DE0
  GL_TEXTURE_2D* = 0x00000DE1
  GL_FEEDBACK_BUFFER_POINTER* = 0x00000DF0
  GL_FEEDBACK_BUFFER_SIZE* = 0x00000DF1
  GL_FEEDBACK_BUFFER_TYPE* = 0x00000DF2
  GL_SELECTION_BUFFER_POINTER* = 0x00000DF3
  GL_SELECTION_BUFFER_SIZE* = 0x00000DF4
  GL_TEXTURE_WIDTH* = 0x00001000
  GL_TRANSFORM_BIT* = 0x00001000
  GL_TEXTURE_HEIGHT* = 0x00001001
  GL_TEXTURE_INTERNAL_FORMAT* = 0x00001003
  GL_TEXTURE_BORDER_COLOR* = 0x00001004
  GL_TEXTURE_BORDER* = 0x00001005
  GL_DONT_CARE* = 0x00001100
  GL_FASTEST* = 0x00001101
  GL_NICEST* = 0x00001102
  GL_AMBIENT* = 0x00001200
  GL_DIFFUSE* = 0x00001201
  GL_SPECULAR* = 0x00001202
  GL_POSITION* = 0x00001203
  GL_SPOT_DIRECTION* = 0x00001204
  GL_SPOT_EXPONENT* = 0x00001205
  GL_SPOT_CUTOFF* = 0x00001206
  GL_CONSTANT_ATTENUATION* = 0x00001207
  GL_LINEAR_ATTENUATION* = 0x00001208
  GL_QUADRATIC_ATTENUATION* = 0x00001209
  GL_COMPILE* = 0x00001300
  GL_COMPILE_AND_EXECUTE* = 0x00001301
  CGL_BYTE* = 0x00001400
  GL_UNSIGNED_BYTE* = 0x00001401
  CGL_SHORT* = 0x00001402
  GL_UNSIGNED_SHORT* = 0x00001403
  CGL_INT* = 0x00001404
  GL_UNSIGNED_INT* = 0x00001405
  CGL_FLOAT* = 0x00001406
  GL_2_BYTES* = 0x00001407
  GL_3_BYTES* = 0x00001408
  GL_4_BYTES* = 0x00001409
  GL_CLEAR* = 0x00001500
  GL_AND* = 0x00001501
  GL_AND_REVERSE* = 0x00001502
  GL_COPY* = 0x00001503
  GL_AND_INVERTED* = 0x00001504
  GL_NOOP* = 0x00001505
  GL_XOR* = 0x00001506
  GL_OR* = 0x00001507
  GL_NOR* = 0x00001508
  GL_EQUIV* = 0x00001509
  GL_INVERT* = 0x0000150A
  GL_OR_REVERSE* = 0x0000150B
  GL_COPY_INVERTED* = 0x0000150C
  GL_OR_INVERTED* = 0x0000150D
  GL_NAND* = 0x0000150E
  GL_SET* = 0x0000150F
  GL_EMISSION* = 0x00001600
  GL_SHININESS* = 0x00001601
  GL_AMBIENT_AND_DIFFUSE* = 0x00001602
  GL_COLOR_INDEXES* = 0x00001603
  GL_MODELVIEW* = 0x00001700
  GL_PROJECTION* = 0x00001701
  GL_TEXTURE* = 0x00001702
  GL_COLOR* = 0x00001800
  GL_DEPTH* = 0x00001801
  GL_STENCIL* = 0x00001802
  GL_COLOR_INDEX* = 0x00001900
  GL_STENCIL_INDEX* = 0x00001901
  GL_DEPTH_COMPONENT* = 0x00001902
  GL_RED* = 0x00001903
  GL_GREEN* = 0x00001904
  GL_BLUE* = 0x00001905
  GL_ALPHA* = 0x00001906
  GL_RGB* = 0x00001907
  GL_RGBA* = 0x00001908
  GL_LUMINANCE* = 0x00001909
  GL_LUMINANCE_ALPHA* = 0x0000190A
  GL_BITMAP* = 0x00001A00
  GL_POINT* = 0x00001B00
  GL_LINE* = 0x00001B01
  GL_FILL* = 0x00001B02
  GL_RENDER* = 0x00001C00
  GL_FEEDBACK* = 0x00001C01
  GL_SELECT* = 0x00001C02
  GL_FLAT* = 0x00001D00
  GL_SMOOTH* = 0x00001D01
  GL_KEEP* = 0x00001E00
  GL_REPLACE* = 0x00001E01
  GL_INCR* = 0x00001E02
  GL_DECR* = 0x00001E03
  GL_VENDOR* = 0x00001F00
  GL_RENDERER* = 0x00001F01
  GL_VERSION* = 0x00001F02
  GL_EXTENSIONS* = 0x00001F03
  GL_S* = 0x00002000
  GL_ENABLE_BIT* = 0x00002000
  GL_T* = 0x00002001
  GL_R* = 0x00002002
  GL_Q* = 0x00002003
  GL_MODULATE* = 0x00002100
  GL_DECAL* = 0x00002101
  GL_TEXTURE_ENV_MODE* = 0x00002200
  GL_TEXTURE_ENV_COLOR* = 0x00002201
  GL_TEXTURE_ENV* = 0x00002300
  GL_EYE_LINEAR* = 0x00002400
  GL_OBJECT_LINEAR* = 0x00002401
  GL_SPHERE_MAP* = 0x00002402
  GL_TEXTURE_GEN_MODE* = 0x00002500
  GL_OBJECT_PLANE* = 0x00002501
  GL_EYE_PLANE* = 0x00002502
  GL_NEAREST* = 0x00002600
  GL_LINEAR* = 0x00002601
  GL_NEAREST_MIPMAP_NEAREST* = 0x00002700
  GL_LINEAR_MIPMAP_NEAREST* = 0x00002701
  GL_NEAREST_MIPMAP_LINEAR* = 0x00002702
  GL_LINEAR_MIPMAP_LINEAR* = 0x00002703
  GL_TEXTURE_MAG_FILTER* = 0x00002800
  GL_TEXTURE_MIN_FILTER* = 0x00002801
  GL_TEXTURE_WRAP_S* = 0x00002802
  GL_TEXTURE_WRAP_T* = 0x00002803
  GL_CLAMP* = 0x00002900
  GL_REPEAT* = 0x00002901
  GL_POLYGON_OFFSET_UNITS* = 0x00002A00
  GL_POLYGON_OFFSET_POINT* = 0x00002A01
  GL_POLYGON_OFFSET_LINE* = 0x00002A02
  GL_R3_G3_B2* = 0x00002A10
  GL_V2F* = 0x00002A20
  GL_V3F* = 0x00002A21
  GL_C4UB_V2F* = 0x00002A22
  GL_C4UB_V3F* = 0x00002A23
  GL_C3F_V3F* = 0x00002A24
  GL_N3F_V3F* = 0x00002A25
  GL_C4F_N3F_V3F* = 0x00002A26
  GL_T2F_V3F* = 0x00002A27
  GL_T4F_V4F* = 0x00002A28
  GL_T2F_C4UB_V3F* = 0x00002A29
  GL_T2F_C3F_V3F* = 0x00002A2A
  GL_T2F_N3F_V3F* = 0x00002A2B
  GL_T2F_C4F_N3F_V3F* = 0x00002A2C
  GL_T4F_C4F_N3F_V4F* = 0x00002A2D
  GL_CLIP_PLANE0* = 0x00003000
  GL_CLIP_PLANE1* = 0x00003001
  GL_CLIP_PLANE2* = 0x00003002
  GL_CLIP_PLANE3* = 0x00003003
  GL_CLIP_PLANE4* = 0x00003004
  GL_CLIP_PLANE5* = 0x00003005
  GL_LIGHT0* = 0x00004000
  GL_COLOR_BUFFER_BIT* = 0x00004000
  GL_LIGHT1* = 0x00004001
  GL_LIGHT2* = 0x00004002
  GL_LIGHT3* = 0x00004003
  GL_LIGHT4* = 0x00004004
  GL_LIGHT5* = 0x00004005
  GL_LIGHT6* = 0x00004006
  GL_LIGHT7* = 0x00004007
  GL_HINT_BIT* = 0x00008000
  GL_POLYGON_OFFSET_FILL* = 0x00008037
  GL_POLYGON_OFFSET_FACTOR* = 0x00008038
  GL_ALPHA4* = 0x0000803B
  GL_ALPHA8* = 0x0000803C
  GL_ALPHA12* = 0x0000803D
  GL_ALPHA16* = 0x0000803E
  GL_LUMINANCE4* = 0x0000803F
  GL_LUMINANCE8* = 0x00008040
  GL_LUMINANCE12* = 0x00008041
  GL_LUMINANCE16* = 0x00008042
  GL_LUMINANCE4_ALPHA4* = 0x00008043
  GL_LUMINANCE6_ALPHA2* = 0x00008044
  GL_LUMINANCE8_ALPHA8* = 0x00008045
  GL_LUMINANCE12_ALPHA4* = 0x00008046
  GL_LUMINANCE12_ALPHA12* = 0x00008047
  GL_LUMINANCE16_ALPHA16* = 0x00008048
  GL_RGB4* = 0x0000804F
  GL_RGB5* = 0x00008050
  GL_RGB8* = 0x00008051
  GL_RGB10* = 0x00008052
  GL_RGB12* = 0x00008053
  GL_RGB16* = 0x00008054
  GL_RGBA2* = 0x00008055
  GL_RGBA4* = 0x00008056
  GL_RGB5_A1* = 0x00008057
  GL_RGBA8* = 0x00008058
  GL_RGB10_A2* = 0x00008059
  GL_RGBA12* = 0x0000805A
  GL_RGBA16* = 0x0000805B
  GL_TEXTURE_RED_SIZE* = 0x0000805C
  GL_TEXTURE_GREEN_SIZE* = 0x0000805D
  GL_TEXTURE_BLUE_SIZE* = 0x0000805E
  GL_TEXTURE_ALPHA_SIZE* = 0x0000805F
  GL_TEXTURE_LUMINANCE_SIZE* = 0x00008060
  GL_TEXTURE_INTENSITY_SIZE* = 0x00008061
  GL_PROXY_TEXTURE_1D* = 0x00008063
  GL_PROXY_TEXTURE_2D* = 0x00008064
  GL_TEXTURE_PRIORITY* = 0x00008066
  GL_TEXTURE_RESIDENT* = 0x00008067
  GL_TEXTURE_BINDING_1D* = 0x00008068
  GL_TEXTURE_BINDING_2D* = 0x00008069
  GL_VERTEX_ARRAY* = 0x00008074
  GL_NORMAL_ARRAY* = 0x00008075
  GL_COLOR_ARRAY* = 0x00008076
  GL_INDEX_ARRAY* = 0x00008077
  GL_TEXTURE_COORD_ARRAY* = 0x00008078
  GL_EDGE_FLAG_ARRAY* = 0x00008079
  GL_VERTEX_ARRAY_SIZE* = 0x0000807A
  GL_VERTEX_ARRAY_TYPE* = 0x0000807B
  GL_VERTEX_ARRAY_STRIDE* = 0x0000807C
  GL_NORMAL_ARRAY_TYPE* = 0x0000807E
  GL_NORMAL_ARRAY_STRIDE* = 0x0000807F
  GL_COLOR_ARRAY_SIZE* = 0x00008081
  GL_COLOR_ARRAY_TYPE* = 0x00008082
  GL_COLOR_ARRAY_STRIDE* = 0x00008083
  GL_INDEX_ARRAY_TYPE* = 0x00008085
  GL_INDEX_ARRAY_STRIDE* = 0x00008086
  GL_TEXTURE_COORD_ARRAY_SIZE* = 0x00008088
  GL_TEXTURE_COORD_ARRAY_TYPE* = 0x00008089
  GL_TEXTURE_COORD_ARRAY_STRIDE* = 0x0000808A
  GL_EDGE_FLAG_ARRAY_STRIDE* = 0x0000808C
  GL_VERTEX_ARRAY_POINTER* = 0x0000808E
  GL_NORMAL_ARRAY_POINTER* = 0x0000808F
  GL_COLOR_ARRAY_POINTER* = 0x00008090
  GL_INDEX_ARRAY_POINTER* = 0x00008091
  GL_TEXTURE_COORD_ARRAY_POINTER* = 0x00008092
  GL_EDGE_FLAG_ARRAY_POINTER* = 0x00008093
  GL_COLOR_INDEX1_EXT* = 0x000080E2
  GL_COLOR_INDEX2_EXT* = 0x000080E3
  GL_COLOR_INDEX4_EXT* = 0x000080E4
  GL_COLOR_INDEX8_EXT* = 0x000080E5
  GL_COLOR_INDEX12_EXT* = 0x000080E6
  GL_COLOR_INDEX16_EXT* = 0x000080E7
  GL_EVAL_BIT* = 0x00010000
  GL_LIST_BIT* = 0x00020000
  GL_TEXTURE_BIT* = 0x00040000
  GL_SCISSOR_BIT* = 0x00080000
  GL_ALL_ATTRIB_BITS* = 0x000FFFFF
  GL_CLIENT_ALL_ATTRIB_BITS* = 0xFFFFFFFF
  GL_VERSION_1_2* = 1
  GL_SMOOTH_POINT_SIZE_RANGE* = 0x00000B12
  GL_SMOOTH_POINT_SIZE_GRANULARITY* = 0x00000B13
  GL_SMOOTH_LINE_WIDTH_RANGE* = 0x00000B22
  GL_SMOOTH_LINE_WIDTH_GRANULARITY* = 0x00000B23
  GL_UNSIGNED_BYTE_3_3_2* = 0x00008032
  GL_UNSIGNED_SHORT_4_4_4_4* = 0x00008033
  GL_UNSIGNED_SHORT_5_5_5_1* = 0x00008034
  GL_UNSIGNED_INT_8_8_8_8* = 0x00008035
  GL_UNSIGNED_INT_10_10_10_2* = 0x00008036
  GL_RESCALE_NORMAL* = 0x0000803A
  GL_TEXTURE_BINDING_3D* = 0x0000806A
  GL_PACK_SKIP_IMAGES* = 0x0000806B
  GL_PACK_IMAGE_HEIGHT* = 0x0000806C
  GL_UNPACK_SKIP_IMAGES* = 0x0000806D
  GL_UNPACK_IMAGE_HEIGHT* = 0x0000806E
  GL_TEXTURE_3D* = 0x0000806F
  GL_PROXY_TEXTURE_3D* = 0x00008070
  GL_TEXTURE_DEPTH* = 0x00008071
  GL_TEXTURE_WRAP_R* = 0x00008072
  GL_MAX_3D_TEXTURE_SIZE* = 0x00008073
  GL_BGR* = 0x000080E0
  GL_BGRA* = 0x000080E1
  GL_MAX_ELEMENTS_VERTICES* = 0x000080E8
  GL_MAX_ELEMENTS_INDICES* = 0x000080E9
  GL_CLAMP_TO_EDGE* = 0x0000812F
  GL_TEXTURE_MIN_LOD* = 0x0000813A
  GL_TEXTURE_MAX_LOD* = 0x0000813B
  GL_TEXTURE_BASE_LEVEL* = 0x0000813C
  GL_TEXTURE_MAX_LEVEL* = 0x0000813D
  GL_LIGHT_MODEL_COLOR_CONTROL* = 0x000081F8
  GL_SINGLE_COLOR* = 0x000081F9
  GL_SEPARATE_SPECULAR_COLOR* = 0x000081FA
  GL_UNSIGNED_BYTE_2_3_3_REV* = 0x00008362
  GL_UNSIGNED_SHORT_5_6_5* = 0x00008363
  GL_UNSIGNED_SHORT_5_6_5_REV* = 0x00008364
  GL_UNSIGNED_SHORT_4_4_4_4_REV* = 0x00008365
  GL_UNSIGNED_SHORT_1_5_5_5_REV* = 0x00008366
  GL_UNSIGNED_INT_8_8_8_8_REV* = 0x00008367
  GL_ALIASED_POINT_SIZE_RANGE* = 0x0000846D
  GL_ALIASED_LINE_WIDTH_RANGE* = 0x0000846E
  GL_VERSION_1_2_1* = 1
  GL_VERSION_1_3* = 1
  GL_MULTISAMPLE* = 0x0000809D
  GL_SAMPLE_ALPHA_TO_COVERAGE* = 0x0000809E
  GL_SAMPLE_ALPHA_TO_ONE* = 0x0000809F
  GL_SAMPLE_COVERAGE* = 0x000080A0
  GL_SAMPLE_BUFFERS* = 0x000080A8
  GL_SAMPLES* = 0x000080A9
  GL_SAMPLE_COVERAGE_VALUE* = 0x000080AA
  GL_SAMPLE_COVERAGE_INVERT* = 0x000080AB
  GL_CLAMP_TO_BORDER* = 0x0000812D
  GL_TEXTURE0* = 0x000084C0
  GL_TEXTURE1* = 0x000084C1
  GL_TEXTURE2* = 0x000084C2
  GL_TEXTURE3* = 0x000084C3
  GL_TEXTURE4* = 0x000084C4
  GL_TEXTURE5* = 0x000084C5
  GL_TEXTURE6* = 0x000084C6
  GL_TEXTURE7* = 0x000084C7
  GL_TEXTURE8* = 0x000084C8
  GL_TEXTURE9* = 0x000084C9
  GL_TEXTURE10* = 0x000084CA
  GL_TEXTURE11* = 0x000084CB
  GL_TEXTURE12* = 0x000084CC
  GL_TEXTURE13* = 0x000084CD
  GL_TEXTURE14* = 0x000084CE
  GL_TEXTURE15* = 0x000084CF
  GL_TEXTURE16* = 0x000084D0
  GL_TEXTURE17* = 0x000084D1
  GL_TEXTURE18* = 0x000084D2
  GL_TEXTURE19* = 0x000084D3
  GL_TEXTURE20* = 0x000084D4
  GL_TEXTURE21* = 0x000084D5
  GL_TEXTURE22* = 0x000084D6
  GL_TEXTURE23* = 0x000084D7
  GL_TEXTURE24* = 0x000084D8
  GL_TEXTURE25* = 0x000084D9
  GL_TEXTURE26* = 0x000084DA
  GL_TEXTURE27* = 0x000084DB
  GL_TEXTURE28* = 0x000084DC
  GL_TEXTURE29* = 0x000084DD
  GL_TEXTURE30* = 0x000084DE
  GL_TEXTURE31* = 0x000084DF
  GL_ACTIVE_TEXTURE* = 0x000084E0
  GL_CLIENT_ACTIVE_TEXTURE* = 0x000084E1
  GL_MAX_TEXTURE_UNITS* = 0x000084E2
  GL_TRANSPOSE_MODELVIEW_MATRIX* = 0x000084E3
  GL_TRANSPOSE_PROJECTION_MATRIX* = 0x000084E4
  GL_TRANSPOSE_TEXTURE_MATRIX* = 0x000084E5
  GL_TRANSPOSE_COLOR_MATRIX* = 0x000084E6
  GL_SUBTRACT* = 0x000084E7
  GL_COMPRESSED_ALPHA* = 0x000084E9
  GL_COMPRESSED_LUMINANCE* = 0x000084EA
  GL_COMPRESSED_LUMINANCE_ALPHA* = 0x000084EB
  GL_COMPRESSED_INTENSITY* = 0x000084EC
  GL_COMPRESSED_RGB* = 0x000084ED
  GL_COMPRESSED_RGBA* = 0x000084EE
  GL_TEXTURE_COMPRESSION_HINT* = 0x000084EF
  GL_NORMAL_MAP* = 0x00008511
  GL_REFLECTION_MAP* = 0x00008512
  GL_TEXTURE_CUBE_MAP* = 0x00008513
  GL_TEXTURE_BINDING_CUBE_MAP* = 0x00008514
  GL_TEXTURE_CUBE_MAP_POSITIVE_X* = 0x00008515
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X* = 0x00008516
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y* = 0x00008517
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y* = 0x00008518
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z* = 0x00008519
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z* = 0x0000851A
  GL_PROXY_TEXTURE_CUBE_MAP* = 0x0000851B
  GL_MAX_CUBE_MAP_TEXTURE_SIZE* = 0x0000851C
  GL_COMBINE* = 0x00008570
  GL_COMBINE_RGB* = 0x00008571
  GL_COMBINE_ALPHA* = 0x00008572
  GL_RGB_SCALE* = 0x00008573
  GL_ADD_SIGNED* = 0x00008574
  GL_CONSTANT* = 0x00008576
  GL_PRIMARY_COLOR* = 0x00008577
  GL_PREVIOUS* = 0x00008578
  GL_SOURCE0_RGB* = 0x00008580
  GL_SOURCE1_RGB* = 0x00008581
  GL_SOURCE2_RGB* = 0x00008582
  GL_SOURCE0_ALPHA* = 0x00008588
  GL_SOURCE1_ALPHA* = 0x00008589
  GL_SOURCE2_ALPHA* = 0x0000858A
  GL_OPERAND0_RGB* = 0x00008590
  GL_OPERAND1_RGB* = 0x00008591
  GL_OPERAND2_RGB* = 0x00008592
  GL_OPERAND0_ALPHA* = 0x00008598
  GL_OPERAND1_ALPHA* = 0x00008599
  GL_OPERAND2_ALPHA* = 0x0000859A
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE* = 0x000086A0
  GL_TEXTURE_COMPRESSED* = 0x000086A1
  GL_NUM_COMPRESSED_TEXTURE_FORMATS* = 0x000086A2
  GL_COMPRESSED_TEXTURE_FORMATS* = 0x000086A3
  GL_DOT3_RGB* = 0x000086AE
  GL_DOT3_RGBA* = 0x000086AF
  GL_MULTISAMPLE_BIT* = 0x20000000
  GL_VERSION_1_4* = 1
  GL_BLEND_DST_RGB* = 0x000080C8
  GL_BLEND_SRC_RGB* = 0x000080C9
  GL_BLEND_DST_ALPHA* = 0x000080CA
  GL_BLEND_SRC_ALPHA* = 0x000080CB
  GL_POINT_SIZE_MIN* = 0x00008126
  GL_POINT_SIZE_MAX* = 0x00008127
  GL_POINT_FADE_THRESHOLD_SIZE* = 0x00008128
  GL_POINT_DISTANCE_ATTENUATION* = 0x00008129
  GL_GENERATE_MIPMAP* = 0x00008191
  GL_GENERATE_MIPMAP_HINT* = 0x00008192
  GL_DEPTH_COMPONENT16* = 0x000081A5
  GL_DEPTH_COMPONENT24* = 0x000081A6
  GL_DEPTH_COMPONENT32* = 0x000081A7
  GL_MIRRORED_REPEAT* = 0x00008370
  GL_FOG_COORDINATE_SOURCE* = 0x00008450
  GL_FOG_COORDINATE* = 0x00008451
  GL_FRAGMENT_DEPTH* = 0x00008452
  GL_CURRENT_FOG_COORDINATE* = 0x00008453
  GL_FOG_COORDINATE_ARRAY_TYPE* = 0x00008454
  GL_FOG_COORDINATE_ARRAY_STRIDE* = 0x00008455
  GL_FOG_COORDINATE_ARRAY_POINTER* = 0x00008456
  GL_FOG_COORDINATE_ARRAY* = 0x00008457
  GL_COLOR_SUM* = 0x00008458
  GL_CURRENT_SECONDARY_COLOR* = 0x00008459
  GL_SECONDARY_COLOR_ARRAY_SIZE* = 0x0000845A
  GL_SECONDARY_COLOR_ARRAY_TYPE* = 0x0000845B
  GL_SECONDARY_COLOR_ARRAY_STRIDE* = 0x0000845C
  GL_SECONDARY_COLOR_ARRAY_POINTER* = 0x0000845D
  GL_SECONDARY_COLOR_ARRAY* = 0x0000845E
  GL_MAX_TEXTURE_LOD_BIAS* = 0x000084FD
  GL_TEXTURE_FILTER_CONTROL* = 0x00008500
  GL_TEXTURE_LOD_BIAS* = 0x00008501
  GL_INCR_WRAP* = 0x00008507
  GL_DECR_WRAP* = 0x00008508
  GL_TEXTURE_DEPTH_SIZE* = 0x0000884A
  GL_DEPTH_TEXTURE_MODE* = 0x0000884B
  GL_TEXTURE_COMPARE_MODE* = 0x0000884C
  GL_TEXTURE_COMPARE_FUNC* = 0x0000884D
  GL_COMPARE_R_TO_TEXTURE* = 0x0000884E
  GL_VERSION_1_5* = 1
  GL_BUFFER_SIZE* = 0x00008764
  GL_BUFFER_USAGE* = 0x00008765
  GL_QUERY_COUNTER_BITS* = 0x00008864
  GL_CURRENT_QUERY* = 0x00008865
  GL_QUERY_RESULT* = 0x00008866
  GL_QUERY_RESULT_AVAILABLE* = 0x00008867
  GL_ARRAY_BUFFER* = 0x00008892
  GL_ELEMENT_ARRAY_BUFFER* = 0x00008893
  GL_ARRAY_BUFFER_BINDING* = 0x00008894
  GL_ELEMENT_ARRAY_BUFFER_BINDING* = 0x00008895
  GL_VERTEX_ARRAY_BUFFER_BINDING* = 0x00008896
  GL_NORMAL_ARRAY_BUFFER_BINDING* = 0x00008897
  GL_COLOR_ARRAY_BUFFER_BINDING* = 0x00008898
  GL_INDEX_ARRAY_BUFFER_BINDING* = 0x00008899
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING* = 0x0000889A
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING* = 0x0000889B
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING* = 0x0000889C
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING* = 0x0000889D
  GL_WEIGHT_ARRAY_BUFFER_BINDING* = 0x0000889E
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING* = 0x0000889F
  GL_READ_ONLY* = 0x000088B8
  GL_WRITE_ONLY* = 0x000088B9
  GL_READ_WRITE* = 0x000088BA
  GL_BUFFER_ACCESS* = 0x000088BB
  GL_BUFFER_MAPPED* = 0x000088BC
  GL_BUFFER_MAP_POINTER* = 0x000088BD
  GL_STREAM_DRAW* = 0x000088E0
  GL_STREAM_READ* = 0x000088E1
  GL_STREAM_COPY* = 0x000088E2
  GL_STATIC_DRAW* = 0x000088E4
  GL_STATIC_READ* = 0x000088E5
  GL_STATIC_COPY* = 0x000088E6
  GL_DYNAMIC_DRAW* = 0x000088E8
  GL_DYNAMIC_READ* = 0x000088E9
  GL_DYNAMIC_COPY* = 0x000088EA
  GL_SAMPLES_PASSED* = 0x00008914
  GL_VERSION_2_0* = 1
  GL_VERTEX_ATTRIB_ARRAY_ENABLED* = 0x00008622
  GL_VERTEX_ATTRIB_ARRAY_SIZE* = 0x00008623
  GL_VERTEX_ATTRIB_ARRAY_STRIDE* = 0x00008624
  GL_VERTEX_ATTRIB_ARRAY_TYPE* = 0x00008625
  GL_CURRENT_VERTEX_ATTRIB* = 0x00008626
  GL_VERTEX_PROGRAM_POINT_SIZE* = 0x00008642
  GL_VERTEX_PROGRAM_TWO_SIDE* = 0x00008643
  GL_VERTEX_ATTRIB_ARRAY_POINTER* = 0x00008645
  GL_STENCIL_BACK_FUNC* = 0x00008800
  GL_STENCIL_BACK_FAIL* = 0x00008801
  GL_STENCIL_BACK_PASS_DEPTH_FAIL* = 0x00008802
  GL_STENCIL_BACK_PASS_DEPTH_PASS* = 0x00008803
  GL_MAX_DRAW_BUFFERS* = 0x00008824
  GL_DRAW_BUFFER0* = 0x00008825
  GL_DRAW_BUFFER1* = 0x00008826
  GL_DRAW_BUFFER2* = 0x00008827
  GL_DRAW_BUFFER3* = 0x00008828
  GL_DRAW_BUFFER4* = 0x00008829
  GL_DRAW_BUFFER5* = 0x0000882A
  GL_DRAW_BUFFER6* = 0x0000882B
  GL_DRAW_BUFFER7* = 0x0000882C
  GL_DRAW_BUFFER8* = 0x0000882D
  GL_DRAW_BUFFER9* = 0x0000882E
  GL_DRAW_BUFFER10* = 0x0000882F
  GL_DRAW_BUFFER11* = 0x00008830
  GL_DRAW_BUFFER12* = 0x00008831
  GL_DRAW_BUFFER13* = 0x00008832
  GL_DRAW_BUFFER14* = 0x00008833
  GL_DRAW_BUFFER15* = 0x00008834
  GL_BLEND_EQUATION_ALPHA* = 0x0000883D
  GL_POINT_SPRITE* = 0x00008861
  GL_COORD_REPLACE* = 0x00008862
  GL_MAX_VERTEX_ATTRIBS* = 0x00008869
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED* = 0x0000886A
  GL_MAX_TEXTURE_COORDS* = 0x00008871
  GL_MAX_TEXTURE_IMAGE_UNITS* = 0x00008872
  GL_FRAGMENT_SHADER* = 0x00008B30
  GL_VERTEX_SHADER* = 0x00008B31
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS* = 0x00008B49
  GL_MAX_VERTEX_UNIFORM_COMPONENTS* = 0x00008B4A
  GL_MAX_VARYING_FLOATS* = 0x00008B4B
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS* = 0x00008B4C
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS* = 0x00008B4D
  GL_SHADER_TYPE* = 0x00008B4F
  GL_BOOL* = 0x00008B56
  GL_BOOL_VEC2* = 0x00008B57
  GL_BOOL_VEC3* = 0x00008B58
  GL_BOOL_VEC4* = 0x00008B59
  GL_SAMPLER_1D* = 0x00008B5D
  GL_SAMPLER_2D* = 0x00008B5E
  GL_SAMPLER_3D* = 0x00008B5F
  GL_SAMPLER_CUBE* = 0x00008B60
  GL_SAMPLER_1D_SHADOW* = 0x00008B61
  GL_SAMPLER_2D_SHADOW* = 0x00008B62
  GL_DELETE_STATUS* = 0x00008B80
  GL_COMPILE_STATUS* = 0x00008B81
  GL_LINK_STATUS* = 0x00008B82
  GL_VALIDATE_STATUS* = 0x00008B83
  GL_INFO_LOG_LENGTH* = 0x00008B84
  GL_ATTACHED_SHADERS* = 0x00008B85
  GL_ACTIVE_UNIFORMS* = 0x00008B86
  GL_ACTIVE_UNIFORM_MAX_LENGTH* = 0x00008B87
  GL_SHADER_SOURCE_LENGTH* = 0x00008B88
  GL_ACTIVE_ATTRIBUTES* = 0x00008B89
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH* = 0x00008B8A
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT* = 0x00008B8B
  GL_SHADING_LANGUAGE_VERSION* = 0x00008B8C
  GL_CURRENT_PROGRAM* = 0x00008B8D
  GL_POINT_SPRITE_COORD_ORIGIN* = 0x00008CA0
  GL_LOWER_LEFT* = 0x00008CA1
  GL_UPPER_LEFT* = 0x00008CA2
  GL_STENCIL_BACK_REF* = 0x00008CA3
  GL_STENCIL_BACK_VALUE_MASK* = 0x00008CA4
  GL_STENCIL_BACK_WRITEMASK* = 0x00008CA5
  GL_VERSION_2_1* = 1
  GL_CURRENT_RASTER_SECONDARY_COLOR* = 0x0000845F
  GL_PIXEL_PACK_BUFFER* = 0x000088EB
  GL_PIXEL_UNPACK_BUFFER* = 0x000088EC
  GL_PIXEL_PACK_BUFFER_BINDING* = 0x000088ED
  GL_PIXEL_UNPACK_BUFFER_BINDING* = 0x000088EF
  GL_SRGB* = 0x00008C40
  GL_SRGB8* = 0x00008C41
  GL_SRGB_ALPHA* = 0x00008C42
  GL_SRGB8_ALPHA8* = 0x00008C43
  GL_SLUMINANCE_ALPHA* = 0x00008C44
  GL_SLUMINANCE8_ALPHA8* = 0x00008C45
  GL_SLUMINANCE* = 0x00008C46
  GL_SLUMINANCE8* = 0x00008C47
  GL_COMPRESSED_SRGB* = 0x00008C48
  GL_COMPRESSED_SRGB_ALPHA* = 0x00008C49
  GL_COMPRESSED_SLUMINANCE* = 0x00008C4A
  GL_COMPRESSED_SLUMINANCE_ALPHA* = 0x00008C4B
  GL_VERSION_3_0* = 1
  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT* = 0x00000001
  GL_MAJOR_VERSION* = 0x0000821B
  GL_MINOR_VERSION* = 0x0000821C
  GL_NUM_EXTENSIONS* = 0x0000821D
  GL_CONTEXT_FLAGS* = 0x0000821E
  GL_DEPTH_BUFFER* = 0x00008223
  GL_STENCIL_BUFFER* = 0x00008224
  GL_RGBA32F* = 0x00008814
  GL_RGB32F* = 0x00008815
  GL_RGBA16F* = 0x0000881A
  GL_RGB16F* = 0x0000881B
  GL_VERTEX_ATTRIB_ARRAY_INTEGER* = 0x000088FD
  GL_MAX_ARRAY_TEXTURE_LAYERS* = 0x000088FF
  GL_MIN_PROGRAM_TEXEL_OFFSET* = 0x00008904
  GL_MAX_PROGRAM_TEXEL_OFFSET* = 0x00008905
  GL_CLAMP_VERTEX_COLOR* = 0x0000891A
  GL_CLAMP_FRAGMENT_COLOR* = 0x0000891B
  GL_CLAMP_READ_COLOR* = 0x0000891C
  CGL_FIXED* = 0x0000891D
  GL_TEXTURE_RED_TYPE* = 0x00008C10
  GL_TEXTURE_GREEN_TYPE* = 0x00008C11
  GL_TEXTURE_BLUE_TYPE* = 0x00008C12
  GL_TEXTURE_ALPHA_TYPE* = 0x00008C13
  GL_TEXTURE_LUMINANCE_TYPE* = 0x00008C14
  GL_TEXTURE_INTENSITY_TYPE* = 0x00008C15
  GL_TEXTURE_DEPTH_TYPE* = 0x00008C16
  GL_TEXTURE_1D_ARRAY* = 0x00008C18
  GL_PROXY_TEXTURE_1D_ARRAY* = 0x00008C19
  GL_TEXTURE_2D_ARRAY* = 0x00008C1A
  GL_PROXY_TEXTURE_2D_ARRAY* = 0x00008C1B
  GL_TEXTURE_BINDING_1D_ARRAY* = 0x00008C1C
  GL_TEXTURE_BINDING_2D_ARRAY* = 0x00008C1D
  GL_R11F_G11F_B10F* = 0x00008C3A
  GL_UNSIGNED_INT_10F_11F_11F_REV* = 0x00008C3B
  GL_RGB9_E5* = 0x00008C3D
  GL_UNSIGNED_INT_5_9_9_9_REV* = 0x00008C3E
  GL_TEXTURE_SHARED_SIZE* = 0x00008C3F
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH* = 0x00008C76
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE* = 0x00008C7F
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS* = 0x00008C80
  GL_TRANSFORM_FEEDBACK_VARYINGS* = 0x00008C83
  GL_TRANSFORM_FEEDBACK_BUFFER_START* = 0x00008C84
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE* = 0x00008C85
  GL_PRIMITIVES_GENERATED* = 0x00008C87
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN* = 0x00008C88
  GL_RASTERIZER_DISCARD* = 0x00008C89
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS* = 0x00008C8A
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS* = 0x00008C8B
  GL_SEPARATE_ATTRIBS* = 0x00008C8D
  GL_TRANSFORM_FEEDBACK_BUFFER* = 0x00008C8E
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING* = 0x00008C8F
  GL_RGBA32UI* = 0x00008D70
  GL_RGB32UI* = 0x00008D71
  GL_RGBA16UI* = 0x00008D76
  GL_RGB16UI* = 0x00008D77
  GL_RGBA8UI* = 0x00008D7C
  GL_RGB8UI* = 0x00008D7D
  GL_RGBA32I* = 0x00008D82
  GL_RGB32I* = 0x00008D83
  GL_RGBA16I* = 0x00008D88
  GL_RGB16I* = 0x00008D89
  GL_RGBA8I* = 0x00008D8E
  GL_RGB8I* = 0x00008D8F
  GL_RED_INTEGER* = 0x00008D94
  GL_GREEN_INTEGER* = 0x00008D95
  GL_BLUE_INTEGER* = 0x00008D96
  GL_ALPHA_INTEGER* = 0x00008D97
  GL_RGB_INTEGER* = 0x00008D98
  GL_RGBA_INTEGER* = 0x00008D99
  GL_BGR_INTEGER* = 0x00008D9A
  GL_BGRA_INTEGER* = 0x00008D9B
  GL_SAMPLER_1D_ARRAY* = 0x00008DC0
  GL_SAMPLER_2D_ARRAY* = 0x00008DC1
  GL_SAMPLER_1D_ARRAY_SHADOW* = 0x00008DC3
  GL_SAMPLER_2D_ARRAY_SHADOW* = 0x00008DC4
  GL_SAMPLER_CUBE_SHADOW* = 0x00008DC5
  GL_UNSIGNED_INT_VEC2* = 0x00008DC6
  GL_UNSIGNED_INT_VEC3* = 0x00008DC7
  GL_UNSIGNED_INT_VEC4* = 0x00008DC8
  GL_UNSIGNED_INT_SAMPLER_1D* = 0x00008DD1
  GL_UNSIGNED_INT_SAMPLER_2D* = 0x00008DD2
  GL_UNSIGNED_INT_SAMPLER_3D* = 0x00008DD3
  GL_UNSIGNED_INT_SAMPLER_CUBE* = 0x00008DD4
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY* = 0x00008DD6
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY* = 0x00008DD7
  GL_QUERY_WAIT* = 0x00008E13
  GL_QUERY_NO_WAIT* = 0x00008E14
  GL_QUERY_BY_REGION_WAIT* = 0x00008E15
  GL_QUERY_BY_REGION_NO_WAIT* = 0x00008E16
  GL_VERSION_3_1* = 1
  GL_TEXTURE_RECTANGLE* = 0x000084F5
  GL_TEXTURE_BINDING_RECTANGLE* = 0x000084F6
  GL_PROXY_TEXTURE_RECTANGLE* = 0x000084F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE* = 0x000084F8
  GL_SAMPLER_2D_RECT* = 0x00008B63
  GL_SAMPLER_2D_RECT_SHADOW* = 0x00008B64
  GL_TEXTURE_BUFFER* = 0x00008C2A
  GL_MAX_TEXTURE_BUFFER_SIZE* = 0x00008C2B
  GL_TEXTURE_BINDING_BUFFER* = 0x00008C2C
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING* = 0x00008C2D
  GL_TEXTURE_BUFFER_FORMAT* = 0x00008C2E
  GL_SAMPLER_BUFFER* = 0x00008DC2
  GL_UNSIGNED_INT_SAMPLER_2D_RECT* = 0x00008DD5
  GL_UNSIGNED_INT_SAMPLER_BUFFER* = 0x00008DD8
  GL_RED_SNORM* = 0x00008F90
  GL_RG_SNORM* = 0x00008F91
  GL_RGB_SNORM* = 0x00008F92
  GL_RGBA_SNORM* = 0x00008F93
  GL_R8_SNORM* = 0x00008F94
  GL_RG8_SNORM* = 0x00008F95
  GL_RGB8_SNORM* = 0x00008F96
  GL_RGBA8_SNORM* = 0x00008F97
  GL_R16_SNORM* = 0x00008F98
  GL_RG16_SNORM* = 0x00008F99
  GL_RGB16_SNORM* = 0x00008F9A
  GL_RGBA16_SNORM* = 0x00008F9B
  GL_SIGNED_NORMALIZED* = 0x00008F9C
  GL_PRIMITIVE_RESTART* = 0x00008F9D
  GL_PRIMITIVE_RESTART_INDEX* = 0x00008F9E
  GL_BUFFER_ACCESS_FLAGS* = 0x0000911F
  GL_BUFFER_MAP_LENGTH* = 0x00009120
  GL_BUFFER_MAP_OFFSET* = 0x00009121
  GL_VERSION_3_2* = 1
  GL_CONTEXT_CORE_PROFILE_BIT* = 0x00000001
  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT* = 0x00000002
  GL_LINES_ADJACENCY* = 0x0000000A
  GL_LINE_STRIP_ADJACENCY* = 0x0000000B
  GL_TRIANGLES_ADJACENCY* = 0x0000000C
  GL_TRIANGLE_STRIP_ADJACENCY* = 0x0000000D
  GL_PROGRAM_POINT_SIZE* = 0x00008642
  GL_GEOMETRY_VERTICES_OUT* = 0x00008916
  GL_GEOMETRY_INPUT_TYPE* = 0x00008917
  GL_GEOMETRY_OUTPUT_TYPE* = 0x00008918
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS* = 0x00008C29
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED* = 0x00008DA7
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS* = 0x00008DA8
  GL_GEOMETRY_SHADER* = 0x00008DD9
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS* = 0x00008DDF
  GL_MAX_GEOMETRY_OUTPUT_VERTICES* = 0x00008DE0
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS* = 0x00008DE1
  GL_MAX_VERTEX_OUTPUT_COMPONENTS* = 0x00009122
  GL_MAX_GEOMETRY_INPUT_COMPONENTS* = 0x00009123
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS* = 0x00009124
  GL_MAX_FRAGMENT_INPUT_COMPONENTS* = 0x00009125
  GL_CONTEXT_PROFILE_MASK* = 0x00009126
  GL_VERSION_3_3* = 1
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR* = 0x000088FE
  GL_RGB10_A2UI* = 0x0000906F
  GL_VERSION_4_0* = 1
  GL_SAMPLE_SHADING* = 0x00008C36
  GL_MIN_SAMPLE_SHADING_VALUE* = 0x00008C37
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET* = 0x00008E5E
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET* = 0x00008E5F
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS* = 0x00008F9F
  GL_TEXTURE_CUBE_MAP_ARRAY* = 0x00009009
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY* = 0x0000900A
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY* = 0x0000900B
  GL_SAMPLER_CUBE_MAP_ARRAY* = 0x0000900C
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW* = 0x0000900D
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY* = 0x0000900F
  GL_VERSION_4_1* = 1
  GL_VERSION_4_2* = 1
  GL_TRANSFORM_FEEDBACK_PAUSED* = 0x00008E23
  GL_TRANSFORM_FEEDBACK_ACTIVE* = 0x00008E24
  GL_COMPRESSED_RGBA_BPTC_UNORM* = 0x00008E8C
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM* = 0x00008E8D
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT* = 0x00008E8E
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT* = 0x00008E8F
  GL_COPY_READ_BUFFER_BINDING* = 0x00008F36
  GL_COPY_WRITE_BUFFER_BINDING* = 0x00008F37
  GL_VERSION_4_3* = 1
  GL_NUM_SHADING_LANGUAGE_VERSIONS* = 0x000082E9
  GL_VERTEX_ATTRIB_ARRAY_LONG* = 0x0000874E
  GL_VERSION_4_4* = 1
  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED* = 0x00008221
  GL_MAX_VERTEX_ATTRIB_STRIDE* = 0x000082E5
  GL_TEXTURE_BUFFER_BINDING* = 0x00008C2A
  GL_VERSION_4_5* = 1
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT* = 0x00000004
  GL_VERSION_4_6* = 1
  GL_CONTEXT_FLAG_NO_ERROR_BIT* = 0x00000008
  GL_PARAMETER_BUFFER* = 0x000080EE
  GL_PARAMETER_BUFFER_BINDING* = 0x000080EF
  GL_TRANSFORM_FEEDBACK_OVERFLOW* = 0x000082EC
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW* = 0x000082ED
  GL_VERTICES_SUBMITTED* = 0x000082EE
  GL_PRIMITIVES_SUBMITTED* = 0x000082EF
  GL_VERTEX_SHADER_INVOCATIONS* = 0x000082F0
  GL_TESS_CONTROL_SHADER_PATCHES* = 0x000082F1
  GL_TESS_EVALUATION_SHADER_INVOCATIONS* = 0x000082F2
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED* = 0x000082F3
  GL_FRAGMENT_SHADER_INVOCATIONS* = 0x000082F4
  GL_COMPUTE_SHADER_INVOCATIONS* = 0x000082F5
  GL_CLIPPING_INPUT_PRIMITIVES* = 0x000082F6
  GL_CLIPPING_OUTPUT_PRIMITIVES* = 0x000082F7
  GL_TEXTURE_MAX_ANISOTROPY* = 0x000084FE
  GL_MAX_TEXTURE_MAX_ANISOTROPY* = 0x000084FF
  GL_POLYGON_OFFSET_CLAMP* = 0x00008E1B
  GL_SHADER_BINARY_FORMAT_SPIR_V* = 0x00009551
  GL_SPIR_V_BINARY* = 0x00009552
  GL_SPIR_V_EXTENSIONS* = 0x00009553
  GL_NUM_SPIR_V_EXTENSIONS* = 0x00009554
  GL_3DFX_multisample* = 1
  GL_MULTISAMPLE_3DFX* = 0x000086B2
  GL_SAMPLE_BUFFERS_3DFX* = 0x000086B3
  GL_SAMPLES_3DFX* = 0x000086B4
  GL_MULTISAMPLE_BIT_3DFX* = 0x20000000
  GL_3DFX_tbuffer* = 1
  GL_3DFX_texture_compression_FXT1* = 1
  GL_COMPRESSED_RGB_FXT1_3DFX* = 0x000086B0
  GL_COMPRESSED_RGBA_FXT1_3DFX* = 0x000086B1
  GL_AMD_blend_minmax_factor* = 1
  GL_FACTOR_MIN_AMD* = 0x0000901C
  GL_FACTOR_MAX_AMD* = 0x0000901D
  GL_AMD_compressed_3DC_texture* = 1
  GL_3DC_X_AMD* = 0x000087F9
  GL_3DC_XY_AMD* = 0x000087FA
  GL_AMD_compressed_ATC_texture* = 1
  GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD* = 0x000087EE
  GL_ATC_RGB_AMD* = 0x00008C92
  GL_ATC_RGBA_EXPLICIT_ALPHA_AMD* = 0x00008C93
  GL_AMD_conservative_depth* = 1
  GL_AMD_debug_output* = 1
  GL_MAX_DEBUG_MESSAGE_LENGTH_AMD* = 0x00009143
  GL_MAX_DEBUG_LOGGED_MESSAGES_AMD* = 0x00009144
  GL_DEBUG_LOGGED_MESSAGES_AMD* = 0x00009145
  GL_DEBUG_SEVERITY_HIGH_AMD* = 0x00009146
  GL_DEBUG_SEVERITY_MEDIUM_AMD* = 0x00009147
  GL_DEBUG_SEVERITY_LOW_AMD* = 0x00009148
  GL_DEBUG_CATEGORY_API_ERROR_AMD* = 0x00009149
  GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD* = 0x0000914A
  GL_DEBUG_CATEGORY_DEPRECATION_AMD* = 0x0000914B
  GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD* = 0x0000914C
  GL_DEBUG_CATEGORY_PERFORMANCE_AMD* = 0x0000914D
  GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD* = 0x0000914E
  GL_DEBUG_CATEGORY_APPLICATION_AMD* = 0x0000914F
  GL_DEBUG_CATEGORY_OTHER_AMD* = 0x00009150
  GL_AMD_depth_clamp_separate* = 1
  GL_DEPTH_CLAMP_NEAR_AMD* = 0x0000901E
  GL_DEPTH_CLAMP_FAR_AMD* = 0x0000901F
  GL_AMD_draw_buffers_blend* = 1
  GL_AMD_framebuffer_sample_positions* = 1
  GL_SUBSAMPLE_DISTANCE_AMD* = 0x0000883F
  GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD* = 0x000091AE
  GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD* = 0x000091AF
  GL_ALL_PIXELS_AMD* = 0xFFFFFFFF
  GL_AMD_gcn_shader* = 1
  GL_AMD_gpu_shader_half_float* = 1
  GL_AMD_gpu_shader_int16* = 1
  GL_AMD_gpu_shader_int64* = 1
  GL_AMD_interleaved_elements* = 1
  GL_RG8UI* = 0x00008238
  GL_RG16UI* = 0x0000823A
  GL_VERTEX_ELEMENT_SWIZZLE_AMD* = 0x000091A4
  GL_VERTEX_ID_SWIZZLE_AMD* = 0x000091A5
  GL_AMD_multi_draw_indirect* = 1
  GL_AMD_name_gen_delete* = 1
  GL_DATA_BUFFER_AMD* = 0x00009151
  GL_PERFORMANCE_MONITOR_AMD* = 0x00009152
  GL_QUERY_OBJECT_AMD* = 0x00009153
  GL_VERTEX_ARRAY_OBJECT_AMD* = 0x00009154
  GL_SAMPLER_OBJECT_AMD* = 0x00009155
  GL_AMD_occlusion_query_event* = 1
  GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD* = 0x00000001
  GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD* = 0x00000002
  GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD* = 0x00000004
  GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD* = 0x00000008
  GL_OCCLUSION_QUERY_EVENT_MASK_AMD* = 0x0000874F
  GL_QUERY_ALL_EVENT_BITS_AMD* = 0xFFFFFFFF
  GL_AMD_performance_monitor* = 1
  GL_COUNTER_TYPE_AMD* = 0x00008BC0
  GL_COUNTER_RANGE_AMD* = 0x00008BC1
  GL_UNSIGNED_INT64_AMD* = 0x00008BC2
  GL_PERCENTAGE_AMD* = 0x00008BC3
  GL_PERFMON_RESULT_AVAILABLE_AMD* = 0x00008BC4
  GL_PERFMON_RESULT_SIZE_AMD* = 0x00008BC5
  GL_PERFMON_RESULT_AMD* = 0x00008BC6
  GL_AMD_pinned_memory* = 1
  GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD* = 0x00009160
  GL_AMD_program_binary_Z400* = 1
  GL_Z400_BINARY_AMD* = 0x00008740
  GL_AMD_query_buffer_object* = 1
  GL_QUERY_BUFFER_AMD* = 0x00009192
  GL_QUERY_BUFFER_BINDING_AMD* = 0x00009193
  GL_QUERY_RESULT_NO_WAIT_AMD* = 0x00009194
  GL_AMD_sample_positions* = 1
  GL_AMD_seamless_cubemap_per_texture* = 1
  GL_TEXTURE_CUBE_MAP_SEAMLESS* = 0x0000884F
  GL_AMD_shader_atomic_counter_ops* = 1
  GL_AMD_shader_ballot* = 1
  GL_AMD_shader_explicit_vertex_parameter* = 1
  GL_AMD_shader_stencil_export* = 1
  GL_AMD_shader_stencil_value_export* = 1
  GL_AMD_shader_trinary_minmax* = 1
  GL_AMD_sparse_texture* = 1
  GL_TEXTURE_STORAGE_SPARSE_BIT_AMD* = 0x00000001
  GL_VIRTUAL_PAGE_SIZE_X_AMD* = 0x00009195
  GL_VIRTUAL_PAGE_SIZE_Y_AMD* = 0x00009196
  GL_VIRTUAL_PAGE_SIZE_Z_AMD* = 0x00009197
  GL_MAX_SPARSE_TEXTURE_SIZE_AMD* = 0x00009198
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD* = 0x00009199
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS* = 0x0000919A
  GL_MIN_SPARSE_LEVEL_AMD* = 0x0000919B
  GL_MIN_LOD_WARNING_AMD* = 0x0000919C
  GL_AMD_stencil_operation_extended* = 1
  GL_SET_AMD* = 0x0000874A
  GL_REPLACE_VALUE_AMD* = 0x0000874B
  GL_STENCIL_OP_VALUE_AMD* = 0x0000874C
  GL_STENCIL_BACK_OP_VALUE_AMD* = 0x0000874D
  GL_AMD_texture_gather_bias_lod* = 1
  GL_AMD_texture_texture4* = 1
  GL_AMD_transform_feedback3_lines_triangles* = 1
  GL_AMD_transform_feedback4* = 1
  GL_STREAM_RASTERIZATION_AMD* = 0x000091A0
  GL_AMD_vertex_shader_layer* = 1
  GL_AMD_vertex_shader_tessellator* = 1
  GL_SAMPLER_BUFFER_AMD* = 0x00009001
  GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD* = 0x00009003
  GL_TESSELLATION_MODE_AMD* = 0x00009004
  GL_TESSELLATION_FACTOR_AMD* = 0x00009005
  GL_DISCRETE_AMD* = 0x00009006
  GL_CONTINUOUS_AMD* = 0x00009007
  GL_AMD_vertex_shader_viewport_index* = 1
  GL_ANDROID_extension_pack_es31a* = 1
  GL_ANGLE_depth_texture* = 1
  GL_ANGLE_framebuffer_blit* = 1
  GL_DRAW_FRAMEBUFFER_BINDING_ANGLE* = 0x00008CA6
  GL_READ_FRAMEBUFFER_ANGLE* = 0x00008CA8
  GL_DRAW_FRAMEBUFFER_ANGLE* = 0x00008CA9
  GL_READ_FRAMEBUFFER_BINDING_ANGLE* = 0x00008CAA
  GL_ANGLE_framebuffer_multisample* = 1
  GL_RENDERBUFFER_SAMPLES_ANGLE* = 0x00008CAB
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE* = 0x00008D56
  GL_MAX_SAMPLES_ANGLE* = 0x00008D57
  GL_ANGLE_instanced_arrays* = 1
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE* = 0x000088FE
  GL_ANGLE_pack_reverse_row_order* = 1
  GL_PACK_REVERSE_ROW_ORDER_ANGLE* = 0x000093A4
  GL_ANGLE_program_binary* = 1
  GL_PROGRAM_BINARY_ANGLE* = 0x000093A6
  GL_ANGLE_texture_compression_dxt1* = 1
  GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE* = 0x000083F0
  GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE* = 0x000083F1
  GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE* = 0x000083F2
  GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE* = 0x000083F3
  GL_ANGLE_texture_compression_dxt3* = 1
  GL_ANGLE_texture_compression_dxt5* = 1
  GL_ANGLE_texture_usage* = 1
  GL_TEXTURE_USAGE_ANGLE* = 0x000093A2
  GL_FRAMEBUFFER_ATTACHMENT_ANGLE* = 0x000093A3
  GL_ANGLE_timer_query* = 1
  GL_QUERY_COUNTER_BITS_ANGLE* = 0x00008864
  GL_CURRENT_QUERY_ANGLE* = 0x00008865
  GL_QUERY_RESULT_ANGLE* = 0x00008866
  GL_QUERY_RESULT_AVAILABLE_ANGLE* = 0x00008867
  GL_TIME_ELAPSED_ANGLE* = 0x000088BF
  GL_TIMESTAMP_ANGLE* = 0x00008E28
  GL_ANGLE_translated_shader_source* = 1
  GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE* = 0x000093A0
  GL_APPLE_aux_depth_stencil* = 1
  GL_AUX_DEPTH_STENCIL_APPLE* = 0x00008A14
  GL_APPLE_client_storage* = 1
  GL_UNPACK_CLIENT_STORAGE_APPLE* = 0x000085B2
  GL_APPLE_clip_distance* = 1
  GL_MAX_CLIP_DISTANCES_APPLE* = 0x00000D32
  GL_CLIP_DISTANCE0_APPLE* = 0x00003000
  GL_CLIP_DISTANCE1_APPLE* = 0x00003001
  GL_CLIP_DISTANCE2_APPLE* = 0x00003002
  GL_CLIP_DISTANCE3_APPLE* = 0x00003003
  GL_CLIP_DISTANCE4_APPLE* = 0x00003004
  GL_CLIP_DISTANCE5_APPLE* = 0x00003005
  GL_CLIP_DISTANCE6_APPLE* = 0x00003006
  GL_CLIP_DISTANCE7_APPLE* = 0x00003007
  GL_APPLE_color_buffer_packed_float* = 1
  GL_APPLE_copy_texture_levels* = 1
  GL_APPLE_element_array* = 1
  GL_ELEMENT_ARRAY_APPLE* = 0x00008A0C
  GL_ELEMENT_ARRAY_TYPE_APPLE* = 0x00008A0D
  GL_ELEMENT_ARRAY_POINTER_APPLE* = 0x00008A0E
  GL_APPLE_fence* = 1
  GL_DRAW_PIXELS_APPLE* = 0x00008A0A
  GL_FENCE_APPLE* = 0x00008A0B
  GL_APPLE_float_pixels* = 1
  GL_HALF_APPLE* = 0x0000140B
  GL_RGBA_FLOAT32_APPLE* = 0x00008814
  GL_RGB_FLOAT32_APPLE* = 0x00008815
  GL_ALPHA_FLOAT32_APPLE* = 0x00008816
  GL_LUMINANCE_FLOAT32_APPLE* = 0x00008818
  GL_LUMINANCE_ALPHA_FLOAT32_APPLE* = 0x00008819
  GL_RGBA_FLOAT16_APPLE* = 0x0000881A
  GL_RGB_FLOAT16_APPLE* = 0x0000881B
  GL_ALPHA_FLOAT16_APPLE* = 0x0000881C
  GL_LUMINANCE_FLOAT16_APPLE* = 0x0000881E
  GL_LUMINANCE_ALPHA_FLOAT16_APPLE* = 0x0000881F
  GL_COLOR_FLOAT_APPLE* = 0x00008A0F
  GL_APPLE_flush_buffer_range* = 1
  GL_BUFFER_SERIALIZED_MODIFY_APPLE* = 0x00008A12
  GL_BUFFER_FLUSHING_UNMAP_APPLE* = 0x00008A13
  GL_APPLE_framebuffer_multisample* = 1
  GL_DRAW_FRAMEBUFFER_BINDING_APPLE* = 0x00008CA6
  GL_READ_FRAMEBUFFER_APPLE* = 0x00008CA8
  GL_DRAW_FRAMEBUFFER_APPLE* = 0x00008CA9
  GL_READ_FRAMEBUFFER_BINDING_APPLE* = 0x00008CAA
  GL_RENDERBUFFER_SAMPLES_APPLE* = 0x00008CAB
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE* = 0x00008D56
  GL_MAX_SAMPLES_APPLE* = 0x00008D57
  GL_APPLE_object_purgeable* = 1
  GL_BUFFER_OBJECT_APPLE* = 0x000085B3
  GL_RELEASED_APPLE* = 0x00008A19
  GL_VOLATILE_APPLE* = 0x00008A1A
  GL_RETAINED_APPLE* = 0x00008A1B
  GL_UNDEFINED_APPLE* = 0x00008A1C
  GL_PURGEABLE_APPLE* = 0x00008A1D
  GL_APPLE_pixel_buffer* = 1
  GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE* = 0x00008A10
  GL_APPLE_rgb_422* = 1
  GL_UNSIGNED_SHORT_8_8_APPLE* = 0x000085BA
  GL_UNSIGNED_SHORT_8_8_REV_APPLE* = 0x000085BB
  GL_RGB_422_APPLE* = 0x00008A1F
  GL_RGB_RAW_422_APPLE* = 0x00008A51
  GL_APPLE_row_bytes* = 1
  GL_PACK_ROW_BYTES_APPLE* = 0x00008A15
  GL_UNPACK_ROW_BYTES_APPLE* = 0x00008A16
  GL_APPLE_specular_vector* = 1
  GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE* = 0x000085B0
  GL_APPLE_sync* = 1
  GL_SYNC_FLUSH_COMMANDS_BIT_APPLE* = 0x00000001
  GL_SYNC_OBJECT_APPLE* = 0x00008A53
  GL_MAX_SERVER_WAIT_TIMEOUT_APPLE* = 0x00009111
  GL_OBJECT_TYPE_APPLE* = 0x00009112
  GL_SYNC_CONDITION_APPLE* = 0x00009113
  GL_SYNC_STATUS_APPLE* = 0x00009114
  GL_SYNC_FLAGS_APPLE* = 0x00009115
  GL_SYNC_FENCE_APPLE* = 0x00009116
  GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE* = 0x00009117
  GL_UNSIGNALED_APPLE* = 0x00009118
  GL_SIGNALED_APPLE* = 0x00009119
  GL_ALREADY_SIGNALED_APPLE* = 0x0000911A
  GL_TIMEOUT_EXPIRED_APPLE* = 0x0000911B
  GL_CONDITION_SATISFIED_APPLE* = 0x0000911C
  GL_WAIT_FAILED_APPLE* = 0x0000911D
  GL_TIMEOUT_IGNORED_APPLE* = 0xFFFFFFFFFFFFFFFF'u64
  GL_APPLE_texture_2D_limited_npot* = 1
  GL_APPLE_texture_format_BGRA8888* = 1
  GL_BGRA_EXT* = 0x000080E1
  GL_BGRA8_EXT* = 0x000093A1
  GL_APPLE_texture_max_level* = 1
  GL_TEXTURE_MAX_LEVEL_APPLE* = 0x0000813D
  GL_APPLE_texture_packed_float* = 1
  GL_R11F_G11F_B10F_APPLE* = 0x00008C3A
  GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE* = 0x00008C3B
  GL_RGB9_E5_APPLE* = 0x00008C3D
  GL_UNSIGNED_INT_5_9_9_9_REV_APPLE* = 0x00008C3E
  GL_APPLE_texture_range* = 1
  GL_TEXTURE_RANGE_LENGTH_APPLE* = 0x000085B7
  GL_TEXTURE_RANGE_POINTER_APPLE* = 0x000085B8
  GL_TEXTURE_STORAGE_HINT_APPLE* = 0x000085BC
  GL_STORAGE_PRIVATE_APPLE* = 0x000085BD
  GL_STORAGE_CACHED_APPLE* = 0x000085BE
  GL_STORAGE_SHARED_APPLE* = 0x000085BF
  GL_APPLE_transform_hint* = 1
  GL_TRANSFORM_HINT_APPLE* = 0x000085B1
  GL_APPLE_vertex_array_object* = 1
  GL_VERTEX_ARRAY_BINDING_APPLE* = 0x000085B5
  GL_APPLE_vertex_array_range* = 1
  GL_VERTEX_ARRAY_RANGE_APPLE* = 0x0000851D
  GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE* = 0x0000851E
  GL_VERTEX_ARRAY_STORAGE_HINT_APPLE* = 0x0000851F
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE* = 0x00008520
  GL_VERTEX_ARRAY_RANGE_POINTER_APPLE* = 0x00008521
  GL_STORAGE_CLIENT_APPLE* = 0x000085B4
  GL_APPLE_vertex_program_evaluators* = 1
  GL_VERTEX_ATTRIB_MAP1_APPLE* = 0x00008A00
  GL_VERTEX_ATTRIB_MAP2_APPLE* = 0x00008A01
  GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE* = 0x00008A02
  GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE* = 0x00008A03
  GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE* = 0x00008A04
  GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE* = 0x00008A05
  GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE* = 0x00008A06
  GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE* = 0x00008A07
  GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE* = 0x00008A08
  GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE* = 0x00008A09
  GL_APPLE_ycbcr_422* = 1
  GL_YCBCR_422_APPLE* = 0x000085B9
  GL_ARB_ES2_compatibility* = 1
  GL_IMPLEMENTATION_COLOR_READ_TYPE* = 0x00008B9A
  GL_IMPLEMENTATION_COLOR_READ_FORMAT* = 0x00008B9B
  GL_RGB565* = 0x00008D62
  GL_LOW_FLOAT* = 0x00008DF0
  GL_MEDIUM_FLOAT* = 0x00008DF1
  GL_HIGH_FLOAT* = 0x00008DF2
  GL_LOW_INT* = 0x00008DF3
  GL_MEDIUM_INT* = 0x00008DF4
  GL_HIGH_INT* = 0x00008DF5
  GL_SHADER_BINARY_FORMATS* = 0x00008DF8
  GL_NUM_SHADER_BINARY_FORMATS* = 0x00008DF9
  GL_SHADER_COMPILER* = 0x00008DFA
  GL_MAX_VERTEX_UNIFORM_VECTORS* = 0x00008DFB
  GL_MAX_VARYING_VECTORS* = 0x00008DFC
  GL_MAX_FRAGMENT_UNIFORM_VECTORS* = 0x00008DFD
  GL_ARB_ES3_1_compatibility* = 1
  GL_ARB_ES3_2_compatibility* = 1
  GL_PRIMITIVE_BOUNDING_BOX_ARB* = 0x000092BE
  GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB* = 0x00009381
  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB* = 0x00009382
  GL_ARB_ES3_compatibility* = 1
  GL_TEXTURE_IMMUTABLE_LEVELS* = 0x000082DF
  GL_PRIMITIVE_RESTART_FIXED_INDEX* = 0x00008D69
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE* = 0x00008D6A
  GL_MAX_ELEMENT_INDEX* = 0x00008D6B
  GL_COMPRESSED_R11_EAC* = 0x00009270
  GL_COMPRESSED_SIGNED_R11_EAC* = 0x00009271
  GL_COMPRESSED_RG11_EAC* = 0x00009272
  GL_COMPRESSED_SIGNED_RG11_EAC* = 0x00009273
  GL_COMPRESSED_RGB8_ETC2* = 0x00009274
  GL_COMPRESSED_SRGB8_ETC2* = 0x00009275
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2* = 0x00009276
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2* = 0x00009277
  GL_COMPRESSED_RGBA8_ETC2_EAC* = 0x00009278
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC* = 0x00009279
  GL_ARB_arrays_of_arrays* = 1
  GL_ARB_base_instance* = 1
  GL_ARB_bindless_texture* = 1
  GL_UNSIGNED_INT64_ARB* = 0x0000140F
  GL_ARB_blend_func_extended* = 1
  GL_SRC1_COLOR* = 0x000088F9
  GL_ONE_MINUS_SRC1_COLOR* = 0x000088FA
  GL_ONE_MINUS_SRC1_ALPHA* = 0x000088FB
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS* = 0x000088FC
  GL_ARB_buffer_storage* = 1
  GL_MAP_READ_BIT* = 0x00000001
  GL_MAP_WRITE_BIT* = 0x00000002
  GL_MAP_PERSISTENT_BIT* = 0x00000040
  GL_MAP_COHERENT_BIT* = 0x00000080
  GL_DYNAMIC_STORAGE_BIT* = 0x00000100
  GL_CLIENT_STORAGE_BIT* = 0x00000200
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT* = 0x00004000
  GL_BUFFER_IMMUTABLE_STORAGE* = 0x0000821F
  GL_BUFFER_STORAGE_FLAGS* = 0x00008220
  GL_ARB_cl_event* = 1
  GL_SYNC_CL_EVENT_ARB* = 0x00008240
  GL_SYNC_CL_EVENT_COMPLETE_ARB* = 0x00008241
  GL_ARB_clear_buffer_object* = 1
  GL_ARB_clear_texture* = 1
  GL_CLEAR_TEXTURE* = 0x00009365
  GL_ARB_clip_control* = 1
  GL_CLIP_ORIGIN* = 0x0000935C
  GL_CLIP_DEPTH_MODE* = 0x0000935D
  GL_NEGATIVE_ONE_TO_ONE* = 0x0000935E
  GL_ZERO_TO_ONE* = 0x0000935F
  GL_ARB_color_buffer_float* = 1
  GL_RGBA_FLOAT_MODE_ARB* = 0x00008820
  GL_CLAMP_VERTEX_COLOR_ARB* = 0x0000891A
  GL_CLAMP_FRAGMENT_COLOR_ARB* = 0x0000891B
  GL_CLAMP_READ_COLOR_ARB* = 0x0000891C
  GL_ARB_compatibility* = 1
  GL_ARB_compressed_texture_pixel_storage* = 1
  GL_UNPACK_COMPRESSED_BLOCK_WIDTH* = 0x00009127
  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT* = 0x00009128
  GL_UNPACK_COMPRESSED_BLOCK_DEPTH* = 0x00009129
  GL_UNPACK_COMPRESSED_BLOCK_SIZE* = 0x0000912A
  GL_PACK_COMPRESSED_BLOCK_WIDTH* = 0x0000912B
  GL_PACK_COMPRESSED_BLOCK_HEIGHT* = 0x0000912C
  GL_PACK_COMPRESSED_BLOCK_DEPTH* = 0x0000912D
  GL_PACK_COMPRESSED_BLOCK_SIZE* = 0x0000912E
  GL_ARB_compute_shader* = 1
  GL_COMPUTE_SHADER_BIT* = 0x00000020
  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE* = 0x00008262
  GL_MAX_COMPUTE_UNIFORM_COMPONENTS* = 0x00008263
  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS* = 0x00008264
  GL_MAX_COMPUTE_ATOMIC_COUNTERS* = 0x00008265
  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS* = 0x00008266
  GL_COMPUTE_WORK_GROUP_SIZE* = 0x00008267
  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS* = 0x000090EB
  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER* = 0x000090EC
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER* = 0x000090ED
  GL_DISPATCH_INDIRECT_BUFFER* = 0x000090EE
  GL_DISPATCH_INDIRECT_BUFFER_BINDING* = 0x000090EF
  GL_COMPUTE_SHADER* = 0x000091B9
  GL_MAX_COMPUTE_UNIFORM_BLOCKS* = 0x000091BB
  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS* = 0x000091BC
  GL_MAX_COMPUTE_IMAGE_UNIFORMS* = 0x000091BD
  GL_MAX_COMPUTE_WORK_GROUP_COUNT* = 0x000091BE
  GL_MAX_COMPUTE_WORK_GROUP_SIZE* = 0x000091BF
  GL_ARB_compute_variable_group_size* = 1
  GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB* = 0x000090EB
  GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB* = 0x000091BF
  GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB* = 0x00009344
  GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB* = 0x00009345
  GL_ARB_conditional_render_inverted* = 1
  GL_QUERY_WAIT_INVERTED* = 0x00008E17
  GL_QUERY_NO_WAIT_INVERTED* = 0x00008E18
  GL_QUERY_BY_REGION_WAIT_INVERTED* = 0x00008E19
  GL_QUERY_BY_REGION_NO_WAIT_INVERTED* = 0x00008E1A
  GL_ARB_conservative_depth* = 1
  GL_ARB_copy_buffer* = 1
  GL_COPY_READ_BUFFER* = 0x00008F36
  GL_COPY_WRITE_BUFFER* = 0x00008F37
  GL_ARB_copy_image* = 1
  GL_ARB_cull_distance* = 1
  GL_MAX_CULL_DISTANCES* = 0x000082F9
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES* = 0x000082FA
  GL_ARB_debug_output* = 1
  GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB* = 0x00008242
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB* = 0x00008243
  GL_DEBUG_CALLBACK_FUNCTION_ARB* = 0x00008244
  GL_DEBUG_CALLBACK_USER_PARAM_ARB* = 0x00008245
  GL_DEBUG_SOURCE_API_ARB* = 0x00008246
  GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB* = 0x00008247
  GL_DEBUG_SOURCE_SHADER_COMPILER_ARB* = 0x00008248
  GL_DEBUG_SOURCE_THIRD_PARTY_ARB* = 0x00008249
  GL_DEBUG_SOURCE_APPLICATION_ARB* = 0x0000824A
  GL_DEBUG_SOURCE_OTHER_ARB* = 0x0000824B
  GL_DEBUG_TYPE_ERROR_ARB* = 0x0000824C
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB* = 0x0000824D
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB* = 0x0000824E
  GL_DEBUG_TYPE_PORTABILITY_ARB* = 0x0000824F
  GL_DEBUG_TYPE_PERFORMANCE_ARB* = 0x00008250
  GL_DEBUG_TYPE_OTHER_ARB* = 0x00008251
  GL_MAX_DEBUG_MESSAGE_LENGTH_ARB* = 0x00009143
  GL_MAX_DEBUG_LOGGED_MESSAGES_ARB* = 0x00009144
  GL_DEBUG_LOGGED_MESSAGES_ARB* = 0x00009145
  GL_DEBUG_SEVERITY_HIGH_ARB* = 0x00009146
  GL_DEBUG_SEVERITY_MEDIUM_ARB* = 0x00009147
  GL_DEBUG_SEVERITY_LOW_ARB* = 0x00009148
  GL_ARB_depth_buffer_float* = 1
  GL_DEPTH_COMPONENT32F* = 0x00008CAC
  GL_DEPTH32F_STENCIL8* = 0x00008CAD
  GL_ARB_depth_clamp* = 1
  GL_DEPTH_CLAMP* = 0x0000864F
  GL_ARB_depth_texture* = 1
  GL_DEPTH_COMPONENT16_ARB* = 0x000081A5
  GL_DEPTH_COMPONENT24_ARB* = 0x000081A6
  GL_DEPTH_COMPONENT32_ARB* = 0x000081A7
  GL_TEXTURE_DEPTH_SIZE_ARB* = 0x0000884A
  GL_DEPTH_TEXTURE_MODE_ARB* = 0x0000884B
  GL_ARB_derivative_control* = 1
  GL_ARB_direct_state_access* = 1
  GL_TEXTURE_TARGET* = 0x00001006
  GL_QUERY_TARGET* = 0x000082EA
  GL_ARB_draw_buffers* = 1
  GL_MAX_DRAW_BUFFERS_ARB* = 0x00008824
  GL_DRAW_BUFFER0_ARB* = 0x00008825
  GL_DRAW_BUFFER1_ARB* = 0x00008826
  GL_DRAW_BUFFER2_ARB* = 0x00008827
  GL_DRAW_BUFFER3_ARB* = 0x00008828
  GL_DRAW_BUFFER4_ARB* = 0x00008829
  GL_DRAW_BUFFER5_ARB* = 0x0000882A
  GL_DRAW_BUFFER6_ARB* = 0x0000882B
  GL_DRAW_BUFFER7_ARB* = 0x0000882C
  GL_DRAW_BUFFER8_ARB* = 0x0000882D
  GL_DRAW_BUFFER9_ARB* = 0x0000882E
  GL_DRAW_BUFFER10_ARB* = 0x0000882F
  GL_DRAW_BUFFER11_ARB* = 0x00008830
  GL_DRAW_BUFFER12_ARB* = 0x00008831
  GL_DRAW_BUFFER13_ARB* = 0x00008832
  GL_DRAW_BUFFER14_ARB* = 0x00008833
  GL_DRAW_BUFFER15_ARB* = 0x00008834
  GL_ARB_draw_buffers_blend* = 1
  GL_ARB_draw_elements_base_vertex* = 1
  GL_ARB_draw_indirect* = 1
  GL_DRAW_INDIRECT_BUFFER* = 0x00008F3F
  GL_DRAW_INDIRECT_BUFFER_BINDING* = 0x00008F43
  GL_ARB_draw_instanced* = 1
  GL_ARB_enhanced_layouts* = 1
  GL_LOCATION_COMPONENT* = 0x0000934A
  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX* = 0x0000934B
  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE* = 0x0000934C
  GL_ARB_explicit_attrib_location* = 1
  GL_ARB_explicit_uniform_location* = 1
  GL_MAX_UNIFORM_LOCATIONS* = 0x0000826E
  GL_ARB_fragment_coord_conventions* = 1
  GL_ARB_fragment_layer_viewport* = 1
  GL_ARB_fragment_program* = 1
  GL_FRAGMENT_PROGRAM_ARB* = 0x00008804
  GL_PROGRAM_ALU_INSTRUCTIONS_ARB* = 0x00008805
  GL_PROGRAM_TEX_INSTRUCTIONS_ARB* = 0x00008806
  GL_PROGRAM_TEX_INDIRECTIONS_ARB* = 0x00008807
  GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB* = 0x00008808
  GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB* = 0x00008809
  GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB* = 0x0000880A
  GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB* = 0x0000880B
  GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB* = 0x0000880C
  GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB* = 0x0000880D
  GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB* = 0x0000880E
  GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB* = 0x0000880F
  GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB* = 0x00008810
  GL_MAX_TEXTURE_COORDS_ARB* = 0x00008871
  GL_MAX_TEXTURE_IMAGE_UNITS_ARB* = 0x00008872
  GL_ARB_fragment_program_shadow* = 1
  GL_ARB_fragment_shader* = 1
  GL_FRAGMENT_SHADER_ARB* = 0x00008B30
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB* = 0x00008B49
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB* = 0x00008B8B
  GL_ARB_fragment_shader_interlock* = 1
  GL_ARB_framebuffer_no_attachments* = 1
  GL_FRAMEBUFFER_DEFAULT_WIDTH* = 0x00009310
  GL_FRAMEBUFFER_DEFAULT_HEIGHT* = 0x00009311
  GL_FRAMEBUFFER_DEFAULT_LAYERS* = 0x00009312
  GL_FRAMEBUFFER_DEFAULT_SAMPLES* = 0x00009313
  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS* = 0x00009314
  GL_MAX_FRAMEBUFFER_WIDTH* = 0x00009315
  GL_MAX_FRAMEBUFFER_HEIGHT* = 0x00009316
  GL_MAX_FRAMEBUFFER_LAYERS* = 0x00009317
  GL_MAX_FRAMEBUFFER_SAMPLES* = 0x00009318
  GL_ARB_framebuffer_object* = 1
  GL_INVALID_FRAMEBUFFER_OPERATION* = 0x00000506
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING* = 0x00008210
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE* = 0x00008211
  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE* = 0x00008212
  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE* = 0x00008213
  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE* = 0x00008214
  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE* = 0x00008215
  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE* = 0x00008216
  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE* = 0x00008217
  GL_FRAMEBUFFER_DEFAULT* = 0x00008218
  GL_FRAMEBUFFER_UNDEFINED* = 0x00008219
  GL_DEPTH_STENCIL_ATTACHMENT* = 0x0000821A
  GL_INDEX* = 0x00008222
  GL_MAX_RENDERBUFFER_SIZE* = 0x000084E8
  GL_DEPTH_STENCIL* = 0x000084F9
  GL_UNSIGNED_INT_24_8* = 0x000084FA
  GL_DEPTH24_STENCIL8* = 0x000088F0
  GL_TEXTURE_STENCIL_SIZE* = 0x000088F1
  GL_UNSIGNED_NORMALIZED* = 0x00008C17
  GL_DRAW_FRAMEBUFFER_BINDING* = 0x00008CA6
  GL_FRAMEBUFFER_BINDING* = 0x00008CA6
  GL_RENDERBUFFER_BINDING* = 0x00008CA7
  GL_READ_FRAMEBUFFER* = 0x00008CA8
  GL_DRAW_FRAMEBUFFER* = 0x00008CA9
  GL_READ_FRAMEBUFFER_BINDING* = 0x00008CAA
  GL_RENDERBUFFER_SAMPLES* = 0x00008CAB
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE* = 0x00008CD0
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME* = 0x00008CD1
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL* = 0x00008CD2
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE* = 0x00008CD3
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER* = 0x00008CD4
  GL_FRAMEBUFFER_COMPLETE* = 0x00008CD5
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT* = 0x00008CD6
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT* = 0x00008CD7
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER* = 0x00008CDB
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER* = 0x00008CDC
  GL_FRAMEBUFFER_UNSUPPORTED* = 0x00008CDD
  GL_MAX_COLOR_ATTACHMENTS* = 0x00008CDF
  GL_COLOR_ATTACHMENT0* = 0x00008CE0
  GL_COLOR_ATTACHMENT1* = 0x00008CE1
  GL_COLOR_ATTACHMENT2* = 0x00008CE2
  GL_COLOR_ATTACHMENT3* = 0x00008CE3
  GL_COLOR_ATTACHMENT4* = 0x00008CE4
  GL_COLOR_ATTACHMENT5* = 0x00008CE5
  GL_COLOR_ATTACHMENT6* = 0x00008CE6
  GL_COLOR_ATTACHMENT7* = 0x00008CE7
  GL_COLOR_ATTACHMENT8* = 0x00008CE8
  GL_COLOR_ATTACHMENT9* = 0x00008CE9
  GL_COLOR_ATTACHMENT10* = 0x00008CEA
  GL_COLOR_ATTACHMENT11* = 0x00008CEB
  GL_COLOR_ATTACHMENT12* = 0x00008CEC
  GL_COLOR_ATTACHMENT13* = 0x00008CED
  GL_COLOR_ATTACHMENT14* = 0x00008CEE
  GL_COLOR_ATTACHMENT15* = 0x00008CEF
  GL_DEPTH_ATTACHMENT* = 0x00008D00
  GL_STENCIL_ATTACHMENT* = 0x00008D20
  GL_FRAMEBUFFER* = 0x00008D40
  GL_RENDERBUFFER* = 0x00008D41
  GL_RENDERBUFFER_WIDTH* = 0x00008D42
  GL_RENDERBUFFER_HEIGHT* = 0x00008D43
  GL_RENDERBUFFER_INTERNAL_FORMAT* = 0x00008D44
  GL_STENCIL_INDEX1* = 0x00008D46
  GL_STENCIL_INDEX4* = 0x00008D47
  GL_STENCIL_INDEX8* = 0x00008D48
  GL_STENCIL_INDEX16* = 0x00008D49
  GL_RENDERBUFFER_RED_SIZE* = 0x00008D50
  GL_RENDERBUFFER_GREEN_SIZE* = 0x00008D51
  GL_RENDERBUFFER_BLUE_SIZE* = 0x00008D52
  GL_RENDERBUFFER_ALPHA_SIZE* = 0x00008D53
  GL_RENDERBUFFER_DEPTH_SIZE* = 0x00008D54
  GL_RENDERBUFFER_STENCIL_SIZE* = 0x00008D55
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE* = 0x00008D56
  GL_MAX_SAMPLES* = 0x00008D57
  GL_ARB_framebuffer_sRGB* = 1
  GL_FRAMEBUFFER_SRGB* = 0x00008DB9
  GL_ARB_geometry_shader4* = 1
  GL_LINES_ADJACENCY_ARB* = 0x0000000A
  GL_LINE_STRIP_ADJACENCY_ARB* = 0x0000000B
  GL_TRIANGLES_ADJACENCY_ARB* = 0x0000000C
  GL_TRIANGLE_STRIP_ADJACENCY_ARB* = 0x0000000D
  GL_PROGRAM_POINT_SIZE_ARB* = 0x00008642
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB* = 0x00008C29
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB* = 0x00008DA7
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB* = 0x00008DA8
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB* = 0x00008DA9
  GL_GEOMETRY_SHADER_ARB* = 0x00008DD9
  GL_GEOMETRY_VERTICES_OUT_ARB* = 0x00008DDA
  GL_GEOMETRY_INPUT_TYPE_ARB* = 0x00008DDB
  GL_GEOMETRY_OUTPUT_TYPE_ARB* = 0x00008DDC
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB* = 0x00008DDD
  GL_MAX_VERTEX_VARYING_COMPONENTS_ARB* = 0x00008DDE
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB* = 0x00008DDF
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB* = 0x00008DE0
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB* = 0x00008DE1
  GL_ARB_get_program_binary* = 1
  GL_PROGRAM_BINARY_RETRIEVABLE_HINT* = 0x00008257
  GL_PROGRAM_BINARY_LENGTH* = 0x00008741
  GL_NUM_PROGRAM_BINARY_FORMATS* = 0x000087FE
  GL_PROGRAM_BINARY_FORMATS* = 0x000087FF
  GL_ARB_get_texture_sub_image* = 1
  GL_ARB_gl_spirv* = 1
  GL_SHADER_BINARY_FORMAT_SPIR_V_ARB* = 0x00009551
  GL_SPIR_V_BINARY_ARB* = 0x00009552
  GL_ARB_gpu_shader5* = 1
  GL_GEOMETRY_SHADER_INVOCATIONS* = 0x0000887F
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS* = 0x00008E5A
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET* = 0x00008E5B
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET* = 0x00008E5C
  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS* = 0x00008E5D
  GL_MAX_VERTEX_STREAMS* = 0x00008E71
  GL_ARB_gpu_shader_fp64* = 1
  GL_ARB_gpu_shader_int64* = 1
  GL_UNSIGNED_INT64_VEC2_ARB* = 0x00008FF5
  GL_UNSIGNED_INT64_VEC3_ARB* = 0x00008FF6
  GL_UNSIGNED_INT64_VEC4_ARB* = 0x00008FF7
  GL_ARB_half_float_pixel* = 1
  GL_HALF_FLOAT_ARB* = 0x0000140B
  GL_ARB_half_float_vertex* = 1
  GL_HALF_FLOAT* = 0x0000140B
  GL_ARB_imaging* = 1
  GL_CONSTANT_COLOR* = 0x00008001
  GL_ONE_MINUS_CONSTANT_COLOR* = 0x00008002
  GL_CONSTANT_ALPHA* = 0x00008003
  GL_ONE_MINUS_CONSTANT_ALPHA* = 0x00008004
  GL_BLEND_COLOR* = 0x00008005
  GL_FUNC_ADD* = 0x00008006
  GL_MIN* = 0x00008007
  GL_MAX* = 0x00008008
  GL_BLEND_EQUATION* = 0x00008009
  GL_FUNC_SUBTRACT* = 0x0000800A
  GL_FUNC_REVERSE_SUBTRACT* = 0x0000800B
  GL_CONVOLUTION_1D* = 0x00008010
  GL_CONVOLUTION_2D* = 0x00008011
  GL_SEPARABLE_2D* = 0x00008012
  GL_CONVOLUTION_BORDER_MODE* = 0x00008013
  GL_CONVOLUTION_FILTER_SCALE* = 0x00008014
  GL_CONVOLUTION_FILTER_BIAS* = 0x00008015
  GL_REDUCE* = 0x00008016
  GL_CONVOLUTION_FORMAT* = 0x00008017
  GL_CONVOLUTION_WIDTH* = 0x00008018
  GL_CONVOLUTION_HEIGHT* = 0x00008019
  GL_MAX_CONVOLUTION_WIDTH* = 0x0000801A
  GL_MAX_CONVOLUTION_HEIGHT* = 0x0000801B
  GL_POST_CONVOLUTION_RED_SCALE* = 0x0000801C
  GL_POST_CONVOLUTION_GREEN_SCALE* = 0x0000801D
  GL_POST_CONVOLUTION_BLUE_SCALE* = 0x0000801E
  GL_POST_CONVOLUTION_ALPHA_SCALE* = 0x0000801F
  GL_POST_CONVOLUTION_RED_BIAS* = 0x00008020
  GL_POST_CONVOLUTION_GREEN_BIAS* = 0x00008021
  GL_POST_CONVOLUTION_BLUE_BIAS* = 0x00008022
  GL_POST_CONVOLUTION_ALPHA_BIAS* = 0x00008023
  GL_HISTOGRAM* = 0x00008024
  GL_PROXY_HISTOGRAM* = 0x00008025
  GL_HISTOGRAM_WIDTH* = 0x00008026
  GL_HISTOGRAM_FORMAT* = 0x00008027
  GL_HISTOGRAM_RED_SIZE* = 0x00008028
  GL_HISTOGRAM_GREEN_SIZE* = 0x00008029
  GL_HISTOGRAM_BLUE_SIZE* = 0x0000802A
  GL_HISTOGRAM_ALPHA_SIZE* = 0x0000802B
  GL_HISTOGRAM_LUMINANCE_SIZE* = 0x0000802C
  GL_HISTOGRAM_SINK* = 0x0000802D
  GL_MINMAX* = 0x0000802E
  GL_MINMAX_FORMAT* = 0x0000802F
  GL_MINMAX_SINK* = 0x00008030
  GL_TABLE_TOO_LARGE* = 0x00008031
  GL_COLOR_MATRIX* = 0x000080B1
  GL_COLOR_MATRIX_STACK_DEPTH* = 0x000080B2
  GL_MAX_COLOR_MATRIX_STACK_DEPTH* = 0x000080B3
  GL_POST_COLOR_MATRIX_RED_SCALE* = 0x000080B4
  GL_POST_COLOR_MATRIX_GREEN_SCALE* = 0x000080B5
  GL_POST_COLOR_MATRIX_BLUE_SCALE* = 0x000080B6
  GL_POST_COLOR_MATRIX_ALPHA_SCALE* = 0x000080B7
  GL_POST_COLOR_MATRIX_RED_BIAS* = 0x000080B8
  GL_POST_COLOR_MATRIX_GREEN_BIAS* = 0x000080B9
  GL_POST_COLOR_MATRIX_BLUE_BIAS* = 0x000080BA
  GL_POST_COLOR_MATRIX_ALPHA_BIAS* = 0x000080BB
  GL_COLOR_TABLE* = 0x000080D0
  GL_POST_CONVOLUTION_COLOR_TABLE* = 0x000080D1
  GL_POST_COLOR_MATRIX_COLOR_TABLE* = 0x000080D2
  GL_PROXY_COLOR_TABLE* = 0x000080D3
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE* = 0x000080D4
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE* = 0x000080D5
  GL_COLOR_TABLE_SCALE* = 0x000080D6
  GL_COLOR_TABLE_BIAS* = 0x000080D7
  GL_COLOR_TABLE_FORMAT* = 0x000080D8
  GL_COLOR_TABLE_WIDTH* = 0x000080D9
  GL_COLOR_TABLE_RED_SIZE* = 0x000080DA
  GL_COLOR_TABLE_GREEN_SIZE* = 0x000080DB
  GL_COLOR_TABLE_BLUE_SIZE* = 0x000080DC
  GL_COLOR_TABLE_ALPHA_SIZE* = 0x000080DD
  GL_COLOR_TABLE_LUMINANCE_SIZE* = 0x000080DE
  GL_COLOR_TABLE_INTENSITY_SIZE* = 0x000080DF
  GL_IGNORE_BORDER* = 0x00008150
  GL_CONSTANT_BORDER* = 0x00008151
  GL_WRAP_BORDER* = 0x00008152
  GL_REPLICATE_BORDER* = 0x00008153
  GL_CONVOLUTION_BORDER_COLOR* = 0x00008154
  GL_ARB_indirect_parameters* = 1
  GL_PARAMETER_BUFFER_ARB* = 0x000080EE
  GL_PARAMETER_BUFFER_BINDING_ARB* = 0x000080EF
  GL_ARB_instanced_arrays* = 1
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB* = 0x000088FE
  GL_ARB_internalformat_query* = 1
  GL_NUM_SAMPLE_COUNTS* = 0x00009380
  GL_ARB_internalformat_query2* = 1
  GL_MAX_WIDTH* = 0x0000827E
  GL_MAX_HEIGHT* = 0x0000827F
  GL_MAX_DEPTH* = 0x00008280
  GL_MAX_LAYERS* = 0x00008281
  GL_MAX_COMBINED_DIMENSIONS* = 0x00008282
  GL_COLOR_COMPONENTS* = 0x00008283
  GL_DEPTH_COMPONENTS* = 0x00008284
  GL_STENCIL_COMPONENTS* = 0x00008285
  GL_COLOR_RENDERABLE* = 0x00008286
  GL_DEPTH_RENDERABLE* = 0x00008287
  GL_STENCIL_RENDERABLE* = 0x00008288
  GL_FRAMEBUFFER_RENDERABLE* = 0x00008289
  GL_FRAMEBUFFER_RENDERABLE_LAYERED* = 0x0000828A
  GL_FRAMEBUFFER_BLEND* = 0x0000828B
  GL_READ_PIXELS* = 0x0000828C
  GL_READ_PIXELS_FORMAT* = 0x0000828D
  GL_READ_PIXELS_TYPE* = 0x0000828E
  GL_TEXTURE_IMAGE_FORMAT* = 0x0000828F
  GL_TEXTURE_IMAGE_TYPE* = 0x00008290
  GL_GET_TEXTURE_IMAGE_FORMAT* = 0x00008291
  GL_GET_TEXTURE_IMAGE_TYPE* = 0x00008292
  GL_MIPMAP* = 0x00008293
  GL_MANUAL_GENERATE_MIPMAP* = 0x00008294
  GL_AUTO_GENERATE_MIPMAP* = 0x00008295
  GL_COLOR_ENCODING* = 0x00008296
  GL_SRGB_READ* = 0x00008297
  GL_SRGB_WRITE* = 0x00008298
  GL_SRGB_DECODE_ARB* = 0x00008299
  GL_FILTER* = 0x0000829A
  GL_VERTEX_TEXTURE* = 0x0000829B
  GL_TESS_CONTROL_TEXTURE* = 0x0000829C
  GL_TESS_EVALUATION_TEXTURE* = 0x0000829D
  GL_GEOMETRY_TEXTURE* = 0x0000829E
  GL_FRAGMENT_TEXTURE* = 0x0000829F
  GL_COMPUTE_TEXTURE* = 0x000082A0
  GL_TEXTURE_SHADOW* = 0x000082A1
  GL_TEXTURE_GATHER* = 0x000082A2
  GL_TEXTURE_GATHER_SHADOW* = 0x000082A3
  GL_SHADER_IMAGE_LOAD* = 0x000082A4
  GL_SHADER_IMAGE_STORE* = 0x000082A5
  GL_SHADER_IMAGE_ATOMIC* = 0x000082A6
  GL_IMAGE_TEXEL_SIZE* = 0x000082A7
  GL_IMAGE_COMPATIBILITY_CLASS* = 0x000082A8
  GL_IMAGE_PIXEL_FORMAT* = 0x000082A9
  GL_IMAGE_PIXEL_TYPE* = 0x000082AA
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST* = 0x000082AC
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST* = 0x000082AD
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE* = 0x000082AE
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE* = 0x000082AF
  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH* = 0x000082B1
  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT* = 0x000082B2
  GL_TEXTURE_COMPRESSED_BLOCK_SIZE* = 0x000082B3
  GL_CLEAR_BUFFER* = 0x000082B4
  GL_TEXTURE_VIEW* = 0x000082B5
  GL_VIEW_COMPATIBILITY_CLASS* = 0x000082B6
  GL_FULL_SUPPORT* = 0x000082B7
  GL_CAVEAT_SUPPORT* = 0x000082B8
  GL_IMAGE_CLASS_4_X_32* = 0x000082B9
  GL_IMAGE_CLASS_2_X_32* = 0x000082BA
  GL_IMAGE_CLASS_1_X_32* = 0x000082BB
  GL_IMAGE_CLASS_4_X_16* = 0x000082BC
  GL_IMAGE_CLASS_2_X_16* = 0x000082BD
  GL_IMAGE_CLASS_1_X_16* = 0x000082BE
  GL_IMAGE_CLASS_4_X_8* = 0x000082BF
  GL_IMAGE_CLASS_2_X_8* = 0x000082C0
  GL_IMAGE_CLASS_1_X_8* = 0x000082C1
  GL_IMAGE_CLASS_11_11_10* = 0x000082C2
  GL_IMAGE_CLASS_10_10_10_2* = 0x000082C3
  GL_VIEW_CLASS_128_BITS* = 0x000082C4
  GL_VIEW_CLASS_96_BITS* = 0x000082C5
  GL_VIEW_CLASS_64_BITS* = 0x000082C6
  GL_VIEW_CLASS_48_BITS* = 0x000082C7
  GL_VIEW_CLASS_32_BITS* = 0x000082C8
  GL_VIEW_CLASS_24_BITS* = 0x000082C9
  GL_VIEW_CLASS_16_BITS* = 0x000082CA
  GL_VIEW_CLASS_8_BITS* = 0x000082CB
  GL_VIEW_CLASS_S3TC_DXT1_RGB* = 0x000082CC
  GL_VIEW_CLASS_S3TC_DXT1_RGBA* = 0x000082CD
  GL_VIEW_CLASS_S3TC_DXT3_RGBA* = 0x000082CE
  GL_VIEW_CLASS_S3TC_DXT5_RGBA* = 0x000082CF
  GL_VIEW_CLASS_RGTC1_RED* = 0x000082D0
  GL_VIEW_CLASS_RGTC2_RG* = 0x000082D1
  GL_VIEW_CLASS_BPTC_UNORM* = 0x000082D2
  GL_VIEW_CLASS_BPTC_FLOAT* = 0x000082D3
  GL_ARB_invalidate_subdata* = 1
  GL_ARB_map_buffer_alignment* = 1
  GL_MIN_MAP_BUFFER_ALIGNMENT* = 0x000090BC
  GL_ARB_map_buffer_range* = 1
  GL_MAP_INVALIDATE_RANGE_BIT* = 0x00000004
  GL_MAP_INVALIDATE_BUFFER_BIT* = 0x00000008
  GL_MAP_FLUSH_EXPLICIT_BIT* = 0x00000010
  GL_MAP_UNSYNCHRONIZED_BIT* = 0x00000020
  GL_ARB_matrix_palette* = 1
  GL_MATRIX_PALETTE_ARB* = 0x00008840
  GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB* = 0x00008841
  GL_MAX_PALETTE_MATRICES_ARB* = 0x00008842
  GL_CURRENT_PALETTE_MATRIX_ARB* = 0x00008843
  GL_MATRIX_INDEX_ARRAY_ARB* = 0x00008844
  GL_CURRENT_MATRIX_INDEX_ARB* = 0x00008845
  GL_MATRIX_INDEX_ARRAY_SIZE_ARB* = 0x00008846
  GL_MATRIX_INDEX_ARRAY_TYPE_ARB* = 0x00008847
  GL_MATRIX_INDEX_ARRAY_STRIDE_ARB* = 0x00008848
  GL_MATRIX_INDEX_ARRAY_POINTER_ARB* = 0x00008849
  GL_ARB_multi_bind* = 1
  GL_ARB_multi_draw_indirect* = 1
  GL_ARB_multisample* = 1
  GL_MULTISAMPLE_ARB* = 0x0000809D
  GL_SAMPLE_ALPHA_TO_COVERAGE_ARB* = 0x0000809E
  GL_SAMPLE_ALPHA_TO_ONE_ARB* = 0x0000809F
  GL_SAMPLE_COVERAGE_ARB* = 0x000080A0
  GL_SAMPLE_BUFFERS_ARB* = 0x000080A8
  GL_SAMPLES_ARB* = 0x000080A9
  GL_SAMPLE_COVERAGE_VALUE_ARB* = 0x000080AA
  GL_SAMPLE_COVERAGE_INVERT_ARB* = 0x000080AB
  GL_MULTISAMPLE_BIT_ARB* = 0x20000000
  GL_ARB_multitexture* = 1
  GL_TEXTURE0_ARB* = 0x000084C0
  GL_TEXTURE1_ARB* = 0x000084C1
  GL_TEXTURE2_ARB* = 0x000084C2
  GL_TEXTURE3_ARB* = 0x000084C3
  GL_TEXTURE4_ARB* = 0x000084C4
  GL_TEXTURE5_ARB* = 0x000084C5
  GL_TEXTURE6_ARB* = 0x000084C6
  GL_TEXTURE7_ARB* = 0x000084C7
  GL_TEXTURE8_ARB* = 0x000084C8
  GL_TEXTURE9_ARB* = 0x000084C9
  GL_TEXTURE10_ARB* = 0x000084CA
  GL_TEXTURE11_ARB* = 0x000084CB
  GL_TEXTURE12_ARB* = 0x000084CC
  GL_TEXTURE13_ARB* = 0x000084CD
  GL_TEXTURE14_ARB* = 0x000084CE
  GL_TEXTURE15_ARB* = 0x000084CF
  GL_TEXTURE16_ARB* = 0x000084D0
  GL_TEXTURE17_ARB* = 0x000084D1
  GL_TEXTURE18_ARB* = 0x000084D2
  GL_TEXTURE19_ARB* = 0x000084D3
  GL_TEXTURE20_ARB* = 0x000084D4
  GL_TEXTURE21_ARB* = 0x000084D5
  GL_TEXTURE22_ARB* = 0x000084D6
  GL_TEXTURE23_ARB* = 0x000084D7
  GL_TEXTURE24_ARB* = 0x000084D8
  GL_TEXTURE25_ARB* = 0x000084D9
  GL_TEXTURE26_ARB* = 0x000084DA
  GL_TEXTURE27_ARB* = 0x000084DB
  GL_TEXTURE28_ARB* = 0x000084DC
  GL_TEXTURE29_ARB* = 0x000084DD
  GL_TEXTURE30_ARB* = 0x000084DE
  GL_TEXTURE31_ARB* = 0x000084DF
  GL_ACTIVE_TEXTURE_ARB* = 0x000084E0
  GL_CLIENT_ACTIVE_TEXTURE_ARB* = 0x000084E1
  GL_MAX_TEXTURE_UNITS_ARB* = 0x000084E2
  GL_ARB_occlusion_query* = 1
  GL_QUERY_COUNTER_BITS_ARB* = 0x00008864
  GL_CURRENT_QUERY_ARB* = 0x00008865
  GL_QUERY_RESULT_ARB* = 0x00008866
  GL_QUERY_RESULT_AVAILABLE_ARB* = 0x00008867
  GL_SAMPLES_PASSED_ARB* = 0x00008914
  GL_ARB_occlusion_query2* = 1
  GL_ANY_SAMPLES_PASSED* = 0x00008C2F
  GL_ARB_parallel_shader_compile* = 1
  GL_MAX_SHADER_COMPILER_THREADS_ARB* = 0x000091B0
  GL_COMPLETION_STATUS_ARB* = 0x000091B1
  GL_ARB_pipeline_statistics_query* = 1
  GL_VERTICES_SUBMITTED_ARB* = 0x000082EE
  GL_PRIMITIVES_SUBMITTED_ARB* = 0x000082EF
  GL_VERTEX_SHADER_INVOCATIONS_ARB* = 0x000082F0
  GL_TESS_CONTROL_SHADER_PATCHES_ARB* = 0x000082F1
  GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB* = 0x000082F2
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB* = 0x000082F3
  GL_FRAGMENT_SHADER_INVOCATIONS_ARB* = 0x000082F4
  GL_COMPUTE_SHADER_INVOCATIONS_ARB* = 0x000082F5
  GL_CLIPPING_INPUT_PRIMITIVES_ARB* = 0x000082F6
  GL_CLIPPING_OUTPUT_PRIMITIVES_ARB* = 0x000082F7
  GL_ARB_pixel_buffer_object* = 1
  GL_PIXEL_PACK_BUFFER_ARB* = 0x000088EB
  GL_PIXEL_UNPACK_BUFFER_ARB* = 0x000088EC
  GL_PIXEL_PACK_BUFFER_BINDING_ARB* = 0x000088ED
  GL_PIXEL_UNPACK_BUFFER_BINDING_ARB* = 0x000088EF
  GL_ARB_point_parameters* = 1
  GL_POINT_SIZE_MIN_ARB* = 0x00008126
  GL_POINT_SIZE_MAX_ARB* = 0x00008127
  GL_POINT_FADE_THRESHOLD_SIZE_ARB* = 0x00008128
  GL_POINT_DISTANCE_ATTENUATION_ARB* = 0x00008129
  GL_ARB_point_sprite* = 1
  GL_POINT_SPRITE_ARB* = 0x00008861
  GL_COORD_REPLACE_ARB* = 0x00008862
  GL_ARB_polygon_offset_clamp* = 1
  GL_ARB_post_depth_coverage* = 1
  GL_ARB_program_interface_query* = 1
  GL_UNIFORM* = 0x000092E1
  GL_UNIFORM_BLOCK* = 0x000092E2
  GL_PROGRAM_INPUT* = 0x000092E3
  GL_PROGRAM_OUTPUT* = 0x000092E4
  GL_BUFFER_VARIABLE* = 0x000092E5
  GL_SHADER_STORAGE_BLOCK* = 0x000092E6
  GL_IS_PER_PATCH* = 0x000092E7
  GL_VERTEX_SUBROUTINE* = 0x000092E8
  GL_TESS_CONTROL_SUBROUTINE* = 0x000092E9
  GL_TESS_EVALUATION_SUBROUTINE* = 0x000092EA
  GL_GEOMETRY_SUBROUTINE* = 0x000092EB
  GL_FRAGMENT_SUBROUTINE* = 0x000092EC
  GL_COMPUTE_SUBROUTINE* = 0x000092ED
  GL_VERTEX_SUBROUTINE_UNIFORM* = 0x000092EE
  GL_TESS_CONTROL_SUBROUTINE_UNIFORM* = 0x000092EF
  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM* = 0x000092F0
  GL_GEOMETRY_SUBROUTINE_UNIFORM* = 0x000092F1
  GL_FRAGMENT_SUBROUTINE_UNIFORM* = 0x000092F2
  GL_COMPUTE_SUBROUTINE_UNIFORM* = 0x000092F3
  GL_TRANSFORM_FEEDBACK_VARYING* = 0x000092F4
  GL_ACTIVE_RESOURCES* = 0x000092F5
  GL_MAX_NAME_LENGTH* = 0x000092F6
  GL_MAX_NUM_ACTIVE_VARIABLES* = 0x000092F7
  GL_MAX_NUM_COMPATIBLE_SUBROUTINES* = 0x000092F8
  GL_NAME_LENGTH* = 0x000092F9
  GL_TYPE* = 0x000092FA
  GL_ARRAY_SIZE* = 0x000092FB
  GL_OFFSET* = 0x000092FC
  GL_BLOCK_INDEX* = 0x000092FD
  GL_ARRAY_STRIDE* = 0x000092FE
  GL_MATRIX_STRIDE* = 0x000092FF
  GL_IS_ROW_MAJOR* = 0x00009300
  GL_ATOMIC_COUNTER_BUFFER_INDEX* = 0x00009301
  GL_BUFFER_BINDING* = 0x00009302
  GL_BUFFER_DATA_SIZE* = 0x00009303
  GL_NUM_ACTIVE_VARIABLES* = 0x00009304
  GL_ACTIVE_VARIABLES* = 0x00009305
  GL_REFERENCED_BY_VERTEX_SHADER* = 0x00009306
  GL_REFERENCED_BY_TESS_CONTROL_SHADER* = 0x00009307
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER* = 0x00009308
  GL_REFERENCED_BY_GEOMETRY_SHADER* = 0x00009309
  GL_REFERENCED_BY_FRAGMENT_SHADER* = 0x0000930A
  GL_REFERENCED_BY_COMPUTE_SHADER* = 0x0000930B
  GL_TOP_LEVEL_ARRAY_SIZE* = 0x0000930C
  GL_TOP_LEVEL_ARRAY_STRIDE* = 0x0000930D
  GL_LOCATION* = 0x0000930E
  GL_LOCATION_INDEX* = 0x0000930F
  GL_ARB_provoking_vertex* = 1
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION* = 0x00008E4C
  GL_FIRST_VERTEX_CONVENTION* = 0x00008E4D
  GL_LAST_VERTEX_CONVENTION* = 0x00008E4E
  GL_PROVOKING_VERTEX* = 0x00008E4F
  GL_ARB_query_buffer_object* = 1
  GL_QUERY_BUFFER_BARRIER_BIT* = 0x00008000
  GL_QUERY_BUFFER* = 0x00009192
  GL_QUERY_BUFFER_BINDING* = 0x00009193
  GL_QUERY_RESULT_NO_WAIT* = 0x00009194
  GL_ARB_robust_buffer_access_behavior* = 1
  GL_ARB_robustness* = 1
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB* = 0x00000004
  GL_LOSE_CONTEXT_ON_RESET_ARB* = 0x00008252
  GL_GUILTY_CONTEXT_RESET_ARB* = 0x00008253
  GL_INNOCENT_CONTEXT_RESET_ARB* = 0x00008254
  GL_UNKNOWN_CONTEXT_RESET_ARB* = 0x00008255
  GL_RESET_NOTIFICATION_STRATEGY_ARB* = 0x00008256
  GL_NO_RESET_NOTIFICATION_ARB* = 0x00008261
  GL_ARB_robustness_application_isolation* = 1
  GL_ARB_robustness_share_group_isolation* = 1
  GL_ARB_sample_locations* = 1
  GL_SAMPLE_LOCATION_ARB* = 0x00008E50
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB* = 0x0000933D
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB* = 0x0000933E
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB* = 0x0000933F
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB* = 0x00009340
  GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB* = 0x00009341
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB* = 0x00009342
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB* = 0x00009343
  GL_ARB_sample_shading* = 1
  GL_SAMPLE_SHADING_ARB* = 0x00008C36
  GL_MIN_SAMPLE_SHADING_VALUE_ARB* = 0x00008C37
  GL_ARB_sampler_objects* = 1
  GL_SAMPLER_BINDING* = 0x00008919
  GL_ARB_seamless_cube_map* = 1
  GL_ARB_seamless_cubemap_per_texture* = 1
  GL_ARB_separate_shader_objects* = 1
  GL_VERTEX_SHADER_BIT* = 0x00000001
  GL_FRAGMENT_SHADER_BIT* = 0x00000002
  GL_GEOMETRY_SHADER_BIT* = 0x00000004
  GL_TESS_CONTROL_SHADER_BIT* = 0x00000008
  GL_TESS_EVALUATION_SHADER_BIT* = 0x00000010
  GL_PROGRAM_SEPARABLE* = 0x00008258
  GL_ACTIVE_PROGRAM* = 0x00008259
  GL_PROGRAM_PIPELINE_BINDING* = 0x0000825A
  GL_ALL_SHADER_BITS* = 0xFFFFFFFF
  GL_ARB_shader_atomic_counter_ops* = 1
  GL_ARB_shader_atomic_counters* = 1
  GL_ATOMIC_COUNTER_BUFFER* = 0x000092C0
  GL_ATOMIC_COUNTER_BUFFER_BINDING* = 0x000092C1
  GL_ATOMIC_COUNTER_BUFFER_START* = 0x000092C2
  GL_ATOMIC_COUNTER_BUFFER_SIZE* = 0x000092C3
  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE* = 0x000092C4
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS* = 0x000092C5
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES* = 0x000092C6
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER* = 0x000092C7
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER* = 0x000092C8
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER* = 0x000092C9
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER* = 0x000092CA
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER* = 0x000092CB
  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS* = 0x000092CC
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS* = 0x000092CD
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS* = 0x000092CE
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS* = 0x000092CF
  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS* = 0x000092D0
  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS* = 0x000092D1
  GL_MAX_VERTEX_ATOMIC_COUNTERS* = 0x000092D2
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS* = 0x000092D3
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS* = 0x000092D4
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS* = 0x000092D5
  GL_MAX_FRAGMENT_ATOMIC_COUNTERS* = 0x000092D6
  GL_MAX_COMBINED_ATOMIC_COUNTERS* = 0x000092D7
  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE* = 0x000092D8
  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS* = 0x000092D9
  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX* = 0x000092DA
  GL_UNSIGNED_INT_ATOMIC_COUNTER* = 0x000092DB
  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS* = 0x000092DC
  GL_ARB_shader_ballot* = 1
  GL_ARB_shader_bit_encoding* = 1
  GL_ARB_shader_clock* = 1
  GL_ARB_shader_draw_parameters* = 1
  GL_ARB_shader_group_vote* = 1
  GL_ARB_shader_image_load_store* = 1
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT* = 0x00000001
  GL_ELEMENT_ARRAY_BARRIER_BIT* = 0x00000002
  GL_UNIFORM_BARRIER_BIT* = 0x00000004
  GL_TEXTURE_FETCH_BARRIER_BIT* = 0x00000008
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT* = 0x00000020
  GL_COMMAND_BARRIER_BIT* = 0x00000040
  GL_PIXEL_BUFFER_BARRIER_BIT* = 0x00000080
  GL_TEXTURE_UPDATE_BARRIER_BIT* = 0x00000100
  GL_BUFFER_UPDATE_BARRIER_BIT* = 0x00000200
  GL_FRAMEBUFFER_BARRIER_BIT* = 0x00000400
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT* = 0x00000800
  GL_ATOMIC_COUNTER_BARRIER_BIT* = 0x00001000
  GL_MAX_IMAGE_UNITS* = 0x00008F38
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS* = 0x00008F39
  GL_IMAGE_BINDING_NAME* = 0x00008F3A
  GL_IMAGE_BINDING_LEVEL* = 0x00008F3B
  GL_IMAGE_BINDING_LAYERED* = 0x00008F3C
  GL_IMAGE_BINDING_LAYER* = 0x00008F3D
  GL_IMAGE_BINDING_ACCESS* = 0x00008F3E
  GL_IMAGE_1D* = 0x0000904C
  GL_IMAGE_2D* = 0x0000904D
  GL_IMAGE_3D* = 0x0000904E
  GL_IMAGE_2D_RECT* = 0x0000904F
  GL_IMAGE_CUBE* = 0x00009050
  GL_IMAGE_BUFFER* = 0x00009051
  GL_IMAGE_1D_ARRAY* = 0x00009052
  GL_IMAGE_2D_ARRAY* = 0x00009053
  GL_IMAGE_CUBE_MAP_ARRAY* = 0x00009054
  GL_IMAGE_2D_MULTISAMPLE* = 0x00009055
  GL_IMAGE_2D_MULTISAMPLE_ARRAY* = 0x00009056
  GL_UNSIGNED_INT_IMAGE_1D* = 0x00009062
  GL_UNSIGNED_INT_IMAGE_2D* = 0x00009063
  GL_UNSIGNED_INT_IMAGE_3D* = 0x00009064
  GL_UNSIGNED_INT_IMAGE_2D_RECT* = 0x00009065
  GL_UNSIGNED_INT_IMAGE_CUBE* = 0x00009066
  GL_UNSIGNED_INT_IMAGE_BUFFER* = 0x00009067
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY* = 0x00009068
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY* = 0x00009069
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY* = 0x0000906A
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE* = 0x0000906B
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY* = 0x0000906C
  GL_MAX_IMAGE_SAMPLES* = 0x0000906D
  GL_IMAGE_BINDING_FORMAT* = 0x0000906E
  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE* = 0x000090C7
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE* = 0x000090C8
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS* = 0x000090C9
  GL_MAX_VERTEX_IMAGE_UNIFORMS* = 0x000090CA
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS* = 0x000090CB
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS* = 0x000090CC
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS* = 0x000090CD
  GL_MAX_FRAGMENT_IMAGE_UNIFORMS* = 0x000090CE
  GL_MAX_COMBINED_IMAGE_UNIFORMS* = 0x000090CF
  GL_ALL_BARRIER_BITS* = 0xFFFFFFFF
  GL_ARB_shader_image_size* = 1
  GL_ARB_shader_objects* = 1
  GL_PROGRAM_OBJECT_ARB* = 0x00008B40
  GL_SHADER_OBJECT_ARB* = 0x00008B48
  GL_OBJECT_TYPE_ARB* = 0x00008B4E
  GL_OBJECT_SUBTYPE_ARB* = 0x00008B4F
  GL_BOOL_ARB* = 0x00008B56
  GL_BOOL_VEC2_ARB* = 0x00008B57
  GL_BOOL_VEC3_ARB* = 0x00008B58
  GL_BOOL_VEC4_ARB* = 0x00008B59
  GL_SAMPLER_1D_ARB* = 0x00008B5D
  GL_SAMPLER_2D_ARB* = 0x00008B5E
  GL_SAMPLER_3D_ARB* = 0x00008B5F
  GL_SAMPLER_CUBE_ARB* = 0x00008B60
  GL_SAMPLER_1D_SHADOW_ARB* = 0x00008B61
  GL_SAMPLER_2D_SHADOW_ARB* = 0x00008B62
  GL_SAMPLER_2D_RECT_ARB* = 0x00008B63
  GL_SAMPLER_2D_RECT_SHADOW_ARB* = 0x00008B64
  GL_OBJECT_DELETE_STATUS_ARB* = 0x00008B80
  GL_OBJECT_COMPILE_STATUS_ARB* = 0x00008B81
  GL_OBJECT_LINK_STATUS_ARB* = 0x00008B82
  GL_OBJECT_VALIDATE_STATUS_ARB* = 0x00008B83
  GL_OBJECT_INFO_LOG_LENGTH_ARB* = 0x00008B84
  GL_OBJECT_ATTACHED_OBJECTS_ARB* = 0x00008B85
  GL_OBJECT_ACTIVE_UNIFORMS_ARB* = 0x00008B86
  GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB* = 0x00008B87
  GL_OBJECT_SHADER_SOURCE_LENGTH_ARB* = 0x00008B88
  GL_ARB_shader_precision* = 1
  GL_ARB_shader_stencil_export* = 1
  GL_ARB_shader_storage_buffer_object* = 1
  GL_SHADER_STORAGE_BARRIER_BIT* = 0x00002000
  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES* = 0x00008F39
  GL_SHADER_STORAGE_BUFFER* = 0x000090D2
  GL_SHADER_STORAGE_BUFFER_BINDING* = 0x000090D3
  GL_SHADER_STORAGE_BUFFER_START* = 0x000090D4
  GL_SHADER_STORAGE_BUFFER_SIZE* = 0x000090D5
  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS* = 0x000090D6
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS* = 0x000090D7
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS* = 0x000090D8
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS* = 0x000090D9
  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS* = 0x000090DA
  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS* = 0x000090DB
  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS* = 0x000090DC
  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS* = 0x000090DD
  GL_MAX_SHADER_STORAGE_BLOCK_SIZE* = 0x000090DE
  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT* = 0x000090DF
  GL_ARB_shader_subroutine* = 1
  GL_ACTIVE_SUBROUTINES* = 0x00008DE5
  GL_ACTIVE_SUBROUTINE_UNIFORMS* = 0x00008DE6
  GL_MAX_SUBROUTINES* = 0x00008DE7
  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS* = 0x00008DE8
  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS* = 0x00008E47
  GL_ACTIVE_SUBROUTINE_MAX_LENGTH* = 0x00008E48
  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH* = 0x00008E49
  GL_NUM_COMPATIBLE_SUBROUTINES* = 0x00008E4A
  GL_COMPATIBLE_SUBROUTINES* = 0x00008E4B
  GL_ARB_shader_texture_image_samples* = 1
  GL_ARB_shader_texture_lod* = 1
  GL_ARB_shader_viewport_layer_array* = 1
  GL_ARB_shading_language_100* = 1
  GL_SHADING_LANGUAGE_VERSION_ARB* = 0x00008B8C
  GL_ARB_shading_language_420pack* = 1
  GL_ARB_shading_language_include* = 1
  GL_SHADER_INCLUDE_ARB* = 0x00008DAE
  GL_NAMED_STRING_LENGTH_ARB* = 0x00008DE9
  GL_NAMED_STRING_TYPE_ARB* = 0x00008DEA
  GL_ARB_shading_language_packing* = 1
  GL_ARB_shadow* = 1
  GL_TEXTURE_COMPARE_MODE_ARB* = 0x0000884C
  GL_TEXTURE_COMPARE_FUNC_ARB* = 0x0000884D
  GL_COMPARE_R_TO_TEXTURE_ARB* = 0x0000884E
  GL_ARB_shadow_ambient* = 1
  GL_TEXTURE_COMPARE_FAIL_VALUE_ARB* = 0x000080BF
  GL_ARB_sparse_buffer* = 1
  GL_SPARSE_STORAGE_BIT_ARB* = 0x00000400
  GL_SPARSE_BUFFER_PAGE_SIZE_ARB* = 0x000082F8
  GL_ARB_sparse_texture* = 1
  GL_VIRTUAL_PAGE_SIZE_X_ARB* = 0x00009195
  GL_VIRTUAL_PAGE_SIZE_Y_ARB* = 0x00009196
  GL_VIRTUAL_PAGE_SIZE_Z_ARB* = 0x00009197
  GL_MAX_SPARSE_TEXTURE_SIZE_ARB* = 0x00009198
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB* = 0x00009199
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB* = 0x0000919A
  GL_TEXTURE_SPARSE_ARB* = 0x000091A6
  GL_VIRTUAL_PAGE_SIZE_INDEX_ARB* = 0x000091A7
  GL_NUM_VIRTUAL_PAGE_SIZES_ARB* = 0x000091A8
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB* = 0x000091A9
  GL_NUM_SPARSE_LEVELS_ARB* = 0x000091AA
  GL_ARB_sparse_texture2* = 1
  GL_ARB_sparse_texture_clamp* = 1
  GL_ARB_spirv_extensions* = 1
  GL_ARB_stencil_texturing* = 1
  GL_DEPTH_STENCIL_TEXTURE_MODE* = 0x000090EA
  GL_ARB_sync* = 1
  GL_SYNC_FLUSH_COMMANDS_BIT* = 0x00000001
  GL_MAX_SERVER_WAIT_TIMEOUT* = 0x00009111
  GL_OBJECT_TYPE* = 0x00009112
  GL_SYNC_CONDITION* = 0x00009113
  GL_SYNC_STATUS* = 0x00009114
  GL_SYNC_FLAGS* = 0x00009115
  GL_SYNC_FENCE* = 0x00009116
  GL_SYNC_GPU_COMMANDS_COMPLETE* = 0x00009117
  GL_UNSIGNALED* = 0x00009118
  GL_SIGNALED* = 0x00009119
  GL_ALREADY_SIGNALED* = 0x0000911A
  GL_TIMEOUT_EXPIRED* = 0x0000911B
  GL_CONDITION_SATISFIED* = 0x0000911C
  GL_WAIT_FAILED* = 0x0000911D
  GL_TIMEOUT_IGNORED* = 0xFFFFFFFFFFFFFFFF'u64
  GL_ARB_tessellation_shader* = 1
  GL_PATCHES* = 0x0000000E
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER* = 0x000084F0
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER* = 0x000084F1
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS* = 0x0000886C
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS* = 0x0000886D
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS* = 0x00008E1E
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS* = 0x00008E1F
  GL_PATCH_VERTICES* = 0x00008E72
  GL_PATCH_DEFAULT_INNER_LEVEL* = 0x00008E73
  GL_PATCH_DEFAULT_OUTER_LEVEL* = 0x00008E74
  GL_TESS_CONTROL_OUTPUT_VERTICES* = 0x00008E75
  GL_TESS_GEN_MODE* = 0x00008E76
  GL_TESS_GEN_SPACING* = 0x00008E77
  GL_TESS_GEN_VERTEX_ORDER* = 0x00008E78
  GL_TESS_GEN_POINT_MODE* = 0x00008E79
  GL_ISOLINES* = 0x00008E7A
  GL_FRACTIONAL_ODD* = 0x00008E7B
  GL_FRACTIONAL_EVEN* = 0x00008E7C
  GL_MAX_PATCH_VERTICES* = 0x00008E7D
  GL_MAX_TESS_GEN_LEVEL* = 0x00008E7E
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS* = 0x00008E7F
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS* = 0x00008E80
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS* = 0x00008E81
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS* = 0x00008E82
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS* = 0x00008E83
  GL_MAX_TESS_PATCH_COMPONENTS* = 0x00008E84
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS* = 0x00008E85
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS* = 0x00008E86
  GL_TESS_EVALUATION_SHADER* = 0x00008E87
  GL_TESS_CONTROL_SHADER* = 0x00008E88
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS* = 0x00008E89
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS* = 0x00008E8A
  GL_ARB_texture_barrier* = 1
  GL_ARB_texture_border_clamp* = 1
  GL_CLAMP_TO_BORDER_ARB* = 0x0000812D
  GL_ARB_texture_buffer_object* = 1
  GL_TEXTURE_BUFFER_ARB* = 0x00008C2A
  GL_MAX_TEXTURE_BUFFER_SIZE_ARB* = 0x00008C2B
  GL_TEXTURE_BINDING_BUFFER_ARB* = 0x00008C2C
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB* = 0x00008C2D
  GL_TEXTURE_BUFFER_FORMAT_ARB* = 0x00008C2E
  GL_ARB_texture_buffer_object_rgb32* = 1
  GL_ARB_texture_buffer_range* = 1
  GL_TEXTURE_BUFFER_OFFSET* = 0x0000919D
  GL_TEXTURE_BUFFER_SIZE* = 0x0000919E
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT* = 0x0000919F
  GL_ARB_texture_compression* = 1
  GL_COMPRESSED_ALPHA_ARB* = 0x000084E9
  GL_COMPRESSED_LUMINANCE_ARB* = 0x000084EA
  GL_COMPRESSED_LUMINANCE_ALPHA_ARB* = 0x000084EB
  GL_COMPRESSED_INTENSITY_ARB* = 0x000084EC
  GL_COMPRESSED_RGB_ARB* = 0x000084ED
  GL_COMPRESSED_RGBA_ARB* = 0x000084EE
  GL_TEXTURE_COMPRESSION_HINT_ARB* = 0x000084EF
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB* = 0x000086A0
  GL_TEXTURE_COMPRESSED_ARB* = 0x000086A1
  GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB* = 0x000086A2
  GL_COMPRESSED_TEXTURE_FORMATS_ARB* = 0x000086A3
  GL_ARB_texture_compression_bptc* = 1
  GL_COMPRESSED_RGBA_BPTC_UNORM_ARB* = 0x00008E8C
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB* = 0x00008E8D
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB* = 0x00008E8E
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB* = 0x00008E8F
  GL_ARB_texture_compression_rgtc* = 1
  GL_COMPRESSED_RED_RGTC1* = 0x00008DBB
  GL_COMPRESSED_SIGNED_RED_RGTC1* = 0x00008DBC
  GL_COMPRESSED_RG_RGTC2* = 0x00008DBD
  GL_COMPRESSED_SIGNED_RG_RGTC2* = 0x00008DBE
  GL_ARB_texture_cube_map* = 1
  GL_NORMAL_MAP_ARB* = 0x00008511
  GL_REFLECTION_MAP_ARB* = 0x00008512
  GL_TEXTURE_CUBE_MAP_ARB* = 0x00008513
  GL_TEXTURE_BINDING_CUBE_MAP_ARB* = 0x00008514
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB* = 0x00008515
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB* = 0x00008516
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB* = 0x00008517
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB* = 0x00008518
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB* = 0x00008519
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB* = 0x0000851A
  GL_PROXY_TEXTURE_CUBE_MAP_ARB* = 0x0000851B
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB* = 0x0000851C
  GL_ARB_texture_cube_map_array* = 1
  GL_TEXTURE_CUBE_MAP_ARRAY_ARB* = 0x00009009
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB* = 0x0000900A
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB* = 0x0000900B
  GL_SAMPLER_CUBE_MAP_ARRAY_ARB* = 0x0000900C
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB* = 0x0000900D
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB* = 0x0000900F
  GL_ARB_texture_env_add* = 1
  GL_ARB_texture_env_combine* = 1
  GL_SUBTRACT_ARB* = 0x000084E7
  GL_COMBINE_ARB* = 0x00008570
  GL_COMBINE_RGB_ARB* = 0x00008571
  GL_COMBINE_ALPHA_ARB* = 0x00008572
  GL_RGB_SCALE_ARB* = 0x00008573
  GL_ADD_SIGNED_ARB* = 0x00008574
  GL_CONSTANT_ARB* = 0x00008576
  GL_PRIMARY_COLOR_ARB* = 0x00008577
  GL_PREVIOUS_ARB* = 0x00008578
  GL_SOURCE0_RGB_ARB* = 0x00008580
  GL_SOURCE1_RGB_ARB* = 0x00008581
  GL_SOURCE2_RGB_ARB* = 0x00008582
  GL_SOURCE0_ALPHA_ARB* = 0x00008588
  GL_SOURCE1_ALPHA_ARB* = 0x00008589
  GL_SOURCE2_ALPHA_ARB* = 0x0000858A
  GL_OPERAND0_RGB_ARB* = 0x00008590
  GL_OPERAND1_RGB_ARB* = 0x00008591
  GL_OPERAND2_RGB_ARB* = 0x00008592
  GL_OPERAND0_ALPHA_ARB* = 0x00008598
  GL_OPERAND1_ALPHA_ARB* = 0x00008599
  GL_OPERAND2_ALPHA_ARB* = 0x0000859A
  GL_ARB_texture_env_crossbar* = 1
  GL_ARB_texture_env_dot3* = 1
  GL_DOT3_RGB_ARB* = 0x000086AE
  GL_DOT3_RGBA_ARB* = 0x000086AF
  GL_ARB_texture_filter_anisotropic* = 1
  GL_ARB_texture_filter_minmax* = 1
  GL_TEXTURE_REDUCTION_MODE_ARB* = 0x00009366
  GL_WEIGHTED_AVERAGE_ARB* = 0x00009367
  GL_ARB_texture_float* = 1
  GL_RGBA32F_ARB* = 0x00008814
  GL_RGB32F_ARB* = 0x00008815
  GL_ALPHA32F_ARB* = 0x00008816
  GL_LUMINANCE32F_ARB* = 0x00008818
  GL_LUMINANCE_ALPHA32F_ARB* = 0x00008819
  GL_RGBA16F_ARB* = 0x0000881A
  GL_RGB16F_ARB* = 0x0000881B
  GL_ALPHA16F_ARB* = 0x0000881C
  GL_LUMINANCE16F_ARB* = 0x0000881E
  GL_LUMINANCE_ALPHA16F_ARB* = 0x0000881F
  GL_TEXTURE_RED_TYPE_ARB* = 0x00008C10
  GL_TEXTURE_GREEN_TYPE_ARB* = 0x00008C11
  GL_TEXTURE_BLUE_TYPE_ARB* = 0x00008C12
  GL_TEXTURE_ALPHA_TYPE_ARB* = 0x00008C13
  GL_TEXTURE_LUMINANCE_TYPE_ARB* = 0x00008C14
  GL_TEXTURE_INTENSITY_TYPE_ARB* = 0x00008C15
  GL_TEXTURE_DEPTH_TYPE_ARB* = 0x00008C16
  GL_UNSIGNED_NORMALIZED_ARB* = 0x00008C17
  GL_ARB_texture_gather* = 1
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB* = 0x00008E5E
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB* = 0x00008E5F
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB* = 0x00008F9F
  GL_ARB_texture_mirror_clamp_to_edge* = 1
  GL_MIRROR_CLAMP_TO_EDGE* = 0x00008743
  GL_ARB_texture_mirrored_repeat* = 1
  GL_MIRRORED_REPEAT_ARB* = 0x00008370
  GL_ARB_texture_multisample* = 1
  GL_SAMPLE_POSITION* = 0x00008E50
  GL_SAMPLE_MASK* = 0x00008E51
  GL_SAMPLE_MASK_VALUE* = 0x00008E52
  GL_MAX_SAMPLE_MASK_WORDS* = 0x00008E59
  GL_TEXTURE_2D_MULTISAMPLE* = 0x00009100
  GL_PROXY_TEXTURE_2D_MULTISAMPLE* = 0x00009101
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY* = 0x00009102
  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY* = 0x00009103
  GL_TEXTURE_BINDING_2D_MULTISAMPLE* = 0x00009104
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY* = 0x00009105
  GL_TEXTURE_SAMPLES* = 0x00009106
  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS* = 0x00009107
  GL_SAMPLER_2D_MULTISAMPLE* = 0x00009108
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE* = 0x0000910A
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY* = 0x0000910B
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY* = 0x0000910D
  GL_MAX_COLOR_TEXTURE_SAMPLES* = 0x0000910E
  GL_MAX_DEPTH_TEXTURE_SAMPLES* = 0x0000910F
  GL_MAX_INTEGER_SAMPLES* = 0x00009110
  GL_ARB_texture_non_power_of_two* = 1
  GL_ARB_texture_query_levels* = 1
  GL_ARB_texture_query_lod* = 1
  GL_ARB_texture_rectangle* = 1
  GL_TEXTURE_RECTANGLE_ARB* = 0x000084F5
  GL_TEXTURE_BINDING_RECTANGLE_ARB* = 0x000084F6
  GL_PROXY_TEXTURE_RECTANGLE_ARB* = 0x000084F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB* = 0x000084F8
  GL_ARB_texture_rg* = 1
  GL_COMPRESSED_RED* = 0x00008225
  GL_COMPRESSED_RG* = 0x00008226
  GL_RG* = 0x00008227
  GL_RG_INTEGER* = 0x00008228
  GL_R8* = 0x00008229
  GL_R16* = 0x0000822A
  GL_RG8* = 0x0000822B
  GL_RG16* = 0x0000822C
  GL_R16F* = 0x0000822D
  GL_R32F* = 0x0000822E
  GL_RG16F* = 0x0000822F
  GL_RG32F* = 0x00008230
  GL_R8I* = 0x00008231
  GL_R8UI* = 0x00008232
  GL_R16I* = 0x00008233
  GL_R16UI* = 0x00008234
  GL_R32I* = 0x00008235
  GL_R32UI* = 0x00008236
  GL_RG8I* = 0x00008237
  GL_RG16I* = 0x00008239
  GL_RG32I* = 0x0000823B
  GL_RG32UI* = 0x0000823C
  GL_ARB_texture_rgb10_a2ui* = 1
  GL_ARB_texture_stencil8* = 1
  GL_ARB_texture_storage* = 1
  GL_TEXTURE_IMMUTABLE_FORMAT* = 0x0000912F
  GL_ARB_texture_storage_multisample* = 1
  GL_ARB_texture_swizzle* = 1
  GL_TEXTURE_SWIZZLE_R* = 0x00008E42
  GL_TEXTURE_SWIZZLE_G* = 0x00008E43
  GL_TEXTURE_SWIZZLE_B* = 0x00008E44
  GL_TEXTURE_SWIZZLE_A* = 0x00008E45
  GL_TEXTURE_SWIZZLE_RGBA* = 0x00008E46
  GL_ARB_texture_view* = 1
  GL_TEXTURE_VIEW_MIN_LEVEL* = 0x000082DB
  GL_TEXTURE_VIEW_NUM_LEVELS* = 0x000082DC
  GL_TEXTURE_VIEW_MIN_LAYER* = 0x000082DD
  GL_TEXTURE_VIEW_NUM_LAYERS* = 0x000082DE
  GL_ARB_timer_query* = 1
  GL_TIME_ELAPSED* = 0x000088BF
  GL_TIMESTAMP* = 0x00008E28
  GL_ARB_transform_feedback2* = 1
  GL_TRANSFORM_FEEDBACK* = 0x00008E22
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED* = 0x00008E23
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE* = 0x00008E24
  GL_TRANSFORM_FEEDBACK_BINDING* = 0x00008E25
  GL_ARB_transform_feedback3* = 1
  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS* = 0x00008E70
  GL_ARB_transform_feedback_instanced* = 1
  GL_ARB_transform_feedback_overflow_query* = 1
  GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB* = 0x000082EC
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB* = 0x000082ED
  GL_ARB_transpose_matrix* = 1
  GL_TRANSPOSE_MODELVIEW_MATRIX_ARB* = 0x000084E3
  GL_TRANSPOSE_PROJECTION_MATRIX_ARB* = 0x000084E4
  GL_TRANSPOSE_TEXTURE_MATRIX_ARB* = 0x000084E5
  GL_TRANSPOSE_COLOR_MATRIX_ARB* = 0x000084E6
  GL_ARB_uniform_buffer_object* = 1
  GL_UNIFORM_BUFFER* = 0x00008A11
  GL_UNIFORM_BUFFER_BINDING* = 0x00008A28
  GL_UNIFORM_BUFFER_START* = 0x00008A29
  GL_UNIFORM_BUFFER_SIZE* = 0x00008A2A
  GL_MAX_VERTEX_UNIFORM_BLOCKS* = 0x00008A2B
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS* = 0x00008A2C
  GL_MAX_FRAGMENT_UNIFORM_BLOCKS* = 0x00008A2D
  GL_MAX_COMBINED_UNIFORM_BLOCKS* = 0x00008A2E
  GL_MAX_UNIFORM_BUFFER_BINDINGS* = 0x00008A2F
  GL_MAX_UNIFORM_BLOCK_SIZE* = 0x00008A30
  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS* = 0x00008A31
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS* = 0x00008A32
  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS* = 0x00008A33
  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT* = 0x00008A34
  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH* = 0x00008A35
  GL_ACTIVE_UNIFORM_BLOCKS* = 0x00008A36
  GL_UNIFORM_TYPE* = 0x00008A37
  GL_UNIFORM_SIZE* = 0x00008A38
  GL_UNIFORM_NAME_LENGTH* = 0x00008A39
  GL_UNIFORM_BLOCK_INDEX* = 0x00008A3A
  GL_UNIFORM_OFFSET* = 0x00008A3B
  GL_UNIFORM_ARRAY_STRIDE* = 0x00008A3C
  GL_UNIFORM_MATRIX_STRIDE* = 0x00008A3D
  GL_UNIFORM_IS_ROW_MAJOR* = 0x00008A3E
  GL_UNIFORM_BLOCK_BINDING* = 0x00008A3F
  GL_UNIFORM_BLOCK_DATA_SIZE* = 0x00008A40
  GL_UNIFORM_BLOCK_NAME_LENGTH* = 0x00008A41
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS* = 0x00008A42
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES* = 0x00008A43
  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER* = 0x00008A44
  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER* = 0x00008A45
  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER* = 0x00008A46
  GL_INVALID_INDEX* = 0xFFFFFFFF'u
  GL_ARB_vertex_array_bgra* = 1
  GL_ARB_vertex_array_object* = 1
  GL_VERTEX_ARRAY_BINDING* = 0x000085B5
  GL_ARB_vertex_attrib_64bit* = 1
  GL_ARB_vertex_attrib_binding* = 1
  GL_VERTEX_ATTRIB_BINDING* = 0x000082D4
  GL_VERTEX_ATTRIB_RELATIVE_OFFSET* = 0x000082D5
  GL_VERTEX_BINDING_DIVISOR* = 0x000082D6
  GL_VERTEX_BINDING_OFFSET* = 0x000082D7
  GL_VERTEX_BINDING_STRIDE* = 0x000082D8
  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET* = 0x000082D9
  GL_MAX_VERTEX_ATTRIB_BINDINGS* = 0x000082DA
  GL_VERTEX_BINDING_BUFFER* = 0x00008F4F
  GL_ARB_vertex_blend* = 1
  GL_MODELVIEW0_ARB* = 0x00001700
  GL_MODELVIEW1_ARB* = 0x0000850A
  GL_MAX_VERTEX_UNITS_ARB* = 0x000086A4
  GL_ACTIVE_VERTEX_UNITS_ARB* = 0x000086A5
  GL_WEIGHT_SUM_UNITY_ARB* = 0x000086A6
  GL_VERTEX_BLEND_ARB* = 0x000086A7
  GL_CURRENT_WEIGHT_ARB* = 0x000086A8
  GL_WEIGHT_ARRAY_TYPE_ARB* = 0x000086A9
  GL_WEIGHT_ARRAY_STRIDE_ARB* = 0x000086AA
  GL_WEIGHT_ARRAY_SIZE_ARB* = 0x000086AB
  GL_WEIGHT_ARRAY_POINTER_ARB* = 0x000086AC
  GL_WEIGHT_ARRAY_ARB* = 0x000086AD
  GL_MODELVIEW2_ARB* = 0x00008722
  GL_MODELVIEW3_ARB* = 0x00008723
  GL_MODELVIEW4_ARB* = 0x00008724
  GL_MODELVIEW5_ARB* = 0x00008725
  GL_MODELVIEW6_ARB* = 0x00008726
  GL_MODELVIEW7_ARB* = 0x00008727
  GL_MODELVIEW8_ARB* = 0x00008728
  GL_MODELVIEW9_ARB* = 0x00008729
  GL_MODELVIEW10_ARB* = 0x0000872A
  GL_MODELVIEW11_ARB* = 0x0000872B
  GL_MODELVIEW12_ARB* = 0x0000872C
  GL_MODELVIEW13_ARB* = 0x0000872D
  GL_MODELVIEW14_ARB* = 0x0000872E
  GL_MODELVIEW15_ARB* = 0x0000872F
  GL_MODELVIEW16_ARB* = 0x00008730
  GL_MODELVIEW17_ARB* = 0x00008731
  GL_MODELVIEW18_ARB* = 0x00008732
  GL_MODELVIEW19_ARB* = 0x00008733
  GL_MODELVIEW20_ARB* = 0x00008734
  GL_MODELVIEW21_ARB* = 0x00008735
  GL_MODELVIEW22_ARB* = 0x00008736
  GL_MODELVIEW23_ARB* = 0x00008737
  GL_MODELVIEW24_ARB* = 0x00008738
  GL_MODELVIEW25_ARB* = 0x00008739
  GL_MODELVIEW26_ARB* = 0x0000873A
  GL_MODELVIEW27_ARB* = 0x0000873B
  GL_MODELVIEW28_ARB* = 0x0000873C
  GL_MODELVIEW29_ARB* = 0x0000873D
  GL_MODELVIEW30_ARB* = 0x0000873E
  GL_MODELVIEW31_ARB* = 0x0000873F
  GL_ARB_vertex_buffer_object* = 1
  GL_BUFFER_SIZE_ARB* = 0x00008764
  GL_BUFFER_USAGE_ARB* = 0x00008765
  GL_ARRAY_BUFFER_ARB* = 0x00008892
  GL_ELEMENT_ARRAY_BUFFER_ARB* = 0x00008893
  GL_ARRAY_BUFFER_BINDING_ARB* = 0x00008894
  GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB* = 0x00008895
  GL_VERTEX_ARRAY_BUFFER_BINDING_ARB* = 0x00008896
  GL_NORMAL_ARRAY_BUFFER_BINDING_ARB* = 0x00008897
  GL_COLOR_ARRAY_BUFFER_BINDING_ARB* = 0x00008898
  GL_INDEX_ARRAY_BUFFER_BINDING_ARB* = 0x00008899
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB* = 0x0000889A
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB* = 0x0000889B
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB* = 0x0000889C
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB* = 0x0000889D
  GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB* = 0x0000889E
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB* = 0x0000889F
  GL_READ_ONLY_ARB* = 0x000088B8
  GL_WRITE_ONLY_ARB* = 0x000088B9
  GL_READ_WRITE_ARB* = 0x000088BA
  GL_BUFFER_ACCESS_ARB* = 0x000088BB
  GL_BUFFER_MAPPED_ARB* = 0x000088BC
  GL_BUFFER_MAP_POINTER_ARB* = 0x000088BD
  GL_STREAM_DRAW_ARB* = 0x000088E0
  GL_STREAM_READ_ARB* = 0x000088E1
  GL_STREAM_COPY_ARB* = 0x000088E2
  GL_STATIC_DRAW_ARB* = 0x000088E4
  GL_STATIC_READ_ARB* = 0x000088E5
  GL_STATIC_COPY_ARB* = 0x000088E6
  GL_DYNAMIC_DRAW_ARB* = 0x000088E8
  GL_DYNAMIC_READ_ARB* = 0x000088E9
  GL_DYNAMIC_COPY_ARB* = 0x000088EA
  GL_ARB_vertex_program* = 1
  GL_COLOR_SUM_ARB* = 0x00008458
  GL_VERTEX_PROGRAM_ARB* = 0x00008620
  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB* = 0x00008622
  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB* = 0x00008623
  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB* = 0x00008624
  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB* = 0x00008625
  GL_CURRENT_VERTEX_ATTRIB_ARB* = 0x00008626
  GL_PROGRAM_LENGTH_ARB* = 0x00008627
  GL_PROGRAM_STRING_ARB* = 0x00008628
  GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB* = 0x0000862E
  GL_MAX_PROGRAM_MATRICES_ARB* = 0x0000862F
  GL_CURRENT_MATRIX_STACK_DEPTH_ARB* = 0x00008640
  GL_CURRENT_MATRIX_ARB* = 0x00008641
  GL_VERTEX_PROGRAM_POINT_SIZE_ARB* = 0x00008642
  GL_VERTEX_PROGRAM_TWO_SIDE_ARB* = 0x00008643
  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB* = 0x00008645
  GL_PROGRAM_ERROR_POSITION_ARB* = 0x0000864B
  GL_PROGRAM_BINDING_ARB* = 0x00008677
  GL_MAX_VERTEX_ATTRIBS_ARB* = 0x00008869
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB* = 0x0000886A
  GL_PROGRAM_ERROR_STRING_ARB* = 0x00008874
  GL_PROGRAM_FORMAT_ASCII_ARB* = 0x00008875
  GL_PROGRAM_FORMAT_ARB* = 0x00008876
  GL_PROGRAM_INSTRUCTIONS_ARB* = 0x000088A0
  GL_MAX_PROGRAM_INSTRUCTIONS_ARB* = 0x000088A1
  GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB* = 0x000088A2
  GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB* = 0x000088A3
  GL_PROGRAM_TEMPORARIES_ARB* = 0x000088A4
  GL_MAX_PROGRAM_TEMPORARIES_ARB* = 0x000088A5
  GL_PROGRAM_NATIVE_TEMPORARIES_ARB* = 0x000088A6
  GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB* = 0x000088A7
  GL_PROGRAM_PARAMETERS_ARB* = 0x000088A8
  GL_MAX_PROGRAM_PARAMETERS_ARB* = 0x000088A9
  GL_PROGRAM_NATIVE_PARAMETERS_ARB* = 0x000088AA
  GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB* = 0x000088AB
  GL_PROGRAM_ATTRIBS_ARB* = 0x000088AC
  GL_MAX_PROGRAM_ATTRIBS_ARB* = 0x000088AD
  GL_PROGRAM_NATIVE_ATTRIBS_ARB* = 0x000088AE
  GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB* = 0x000088AF
  GL_PROGRAM_ADDRESS_REGISTERS_ARB* = 0x000088B0
  GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB* = 0x000088B1
  GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB* = 0x000088B2
  GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB* = 0x000088B3
  GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB* = 0x000088B4
  GL_MAX_PROGRAM_ENV_PARAMETERS_ARB* = 0x000088B5
  GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB* = 0x000088B6
  GL_TRANSPOSE_CURRENT_MATRIX_ARB* = 0x000088B7
  GL_MATRIX0_ARB* = 0x000088C0
  GL_MATRIX1_ARB* = 0x000088C1
  GL_MATRIX2_ARB* = 0x000088C2
  GL_MATRIX3_ARB* = 0x000088C3
  GL_MATRIX4_ARB* = 0x000088C4
  GL_MATRIX5_ARB* = 0x000088C5
  GL_MATRIX6_ARB* = 0x000088C6
  GL_MATRIX7_ARB* = 0x000088C7
  GL_MATRIX8_ARB* = 0x000088C8
  GL_MATRIX9_ARB* = 0x000088C9
  GL_MATRIX10_ARB* = 0x000088CA
  GL_MATRIX11_ARB* = 0x000088CB
  GL_MATRIX12_ARB* = 0x000088CC
  GL_MATRIX13_ARB* = 0x000088CD
  GL_MATRIX14_ARB* = 0x000088CE
  GL_MATRIX15_ARB* = 0x000088CF
  GL_MATRIX16_ARB* = 0x000088D0
  GL_MATRIX17_ARB* = 0x000088D1
  GL_MATRIX18_ARB* = 0x000088D2
  GL_MATRIX19_ARB* = 0x000088D3
  GL_MATRIX20_ARB* = 0x000088D4
  GL_MATRIX21_ARB* = 0x000088D5
  GL_MATRIX22_ARB* = 0x000088D6
  GL_MATRIX23_ARB* = 0x000088D7
  GL_MATRIX24_ARB* = 0x000088D8
  GL_MATRIX25_ARB* = 0x000088D9
  GL_MATRIX26_ARB* = 0x000088DA
  GL_MATRIX27_ARB* = 0x000088DB
  GL_MATRIX28_ARB* = 0x000088DC
  GL_MATRIX29_ARB* = 0x000088DD
  GL_MATRIX30_ARB* = 0x000088DE
  GL_MATRIX31_ARB* = 0x000088DF
  GL_ARB_vertex_shader* = 1
  GL_VERTEX_SHADER_ARB* = 0x00008B31
  GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB* = 0x00008B4A
  GL_MAX_VARYING_FLOATS_ARB* = 0x00008B4B
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB* = 0x00008B4C
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB* = 0x00008B4D
  GL_OBJECT_ACTIVE_ATTRIBUTES_ARB* = 0x00008B89
  GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB* = 0x00008B8A
  GL_ARB_vertex_type_10f_11f_11f_rev* = 1
  GL_ARB_vertex_type_2_10_10_10_rev* = 1
  GL_UNSIGNED_INT_2_10_10_10_REV* = 0x00008368
  GL_ARB_viewport_array* = 1
  GL_MAX_VIEWPORTS* = 0x0000825B
  GL_VIEWPORT_SUBPIXEL_BITS* = 0x0000825C
  GL_VIEWPORT_BOUNDS_RANGE* = 0x0000825D
  GL_LAYER_PROVOKING_VERTEX* = 0x0000825E
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX* = 0x0000825F
  GL_UNDEFINED_VERTEX* = 0x00008260
  GL_ARB_window_pos* = 1
  GL_ARM_mali_program_binary* = 1
  GL_MALI_PROGRAM_BINARY_ARM* = 0x00008F61
  GL_ARM_mali_shader_binary* = 1
  GL_MALI_SHADER_BINARY_ARM* = 0x00008F60
  GL_ARM_rgba8* = 1
  GL_RGBA8_OES* = 0x00008058
  GL_ARM_shader_framebuffer_fetch* = 1
  GL_FETCH_PER_SAMPLE_ARM* = 0x00008F65
  GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM* = 0x00008F66
  GL_ARM_shader_framebuffer_fetch_depth_stencil* = 1
  GL_ATIX_point_sprites* = 1
  GL_TEXTURE_POINT_MODE_ATIX* = 0x000060B0
  GL_TEXTURE_POINT_ONE_COORD_ATIX* = 0x000060B1
  GL_TEXTURE_POINT_SPRITE_ATIX* = 0x000060B2
  GL_POINT_SPRITE_CULL_MODE_ATIX* = 0x000060B3
  GL_POINT_SPRITE_CULL_CENTER_ATIX* = 0x000060B4
  GL_POINT_SPRITE_CULL_CLIP_ATIX* = 0x000060B5
  GL_ATIX_texture_env_combine3* = 1
  GL_MODULATE_ADD_ATIX* = 0x00008744
  GL_MODULATE_SIGNED_ADD_ATIX* = 0x00008745
  GL_MODULATE_SUBTRACT_ATIX* = 0x00008746
  GL_ATIX_texture_env_route* = 1
  GL_SECONDARY_COLOR_ATIX* = 0x00008747
  GL_TEXTURE_OUTPUT_RGB_ATIX* = 0x00008748
  GL_TEXTURE_OUTPUT_ALPHA_ATIX* = 0x00008749
  GL_ATIX_vertex_shader_output_point_size* = 1
  GL_OUTPUT_POINT_SIZE_ATIX* = 0x0000610E
  GL_ATI_draw_buffers* = 1
  GL_MAX_DRAW_BUFFERS_ATI* = 0x00008824
  GL_DRAW_BUFFER0_ATI* = 0x00008825
  GL_DRAW_BUFFER1_ATI* = 0x00008826
  GL_DRAW_BUFFER2_ATI* = 0x00008827
  GL_DRAW_BUFFER3_ATI* = 0x00008828
  GL_DRAW_BUFFER4_ATI* = 0x00008829
  GL_DRAW_BUFFER5_ATI* = 0x0000882A
  GL_DRAW_BUFFER6_ATI* = 0x0000882B
  GL_DRAW_BUFFER7_ATI* = 0x0000882C
  GL_DRAW_BUFFER8_ATI* = 0x0000882D
  GL_DRAW_BUFFER9_ATI* = 0x0000882E
  GL_DRAW_BUFFER10_ATI* = 0x0000882F
  GL_DRAW_BUFFER11_ATI* = 0x00008830
  GL_DRAW_BUFFER12_ATI* = 0x00008831
  GL_DRAW_BUFFER13_ATI* = 0x00008832
  GL_DRAW_BUFFER14_ATI* = 0x00008833
  GL_DRAW_BUFFER15_ATI* = 0x00008834
  GL_ATI_element_array* = 1
  GL_ELEMENT_ARRAY_ATI* = 0x00008768
  GL_ELEMENT_ARRAY_TYPE_ATI* = 0x00008769
  GL_ELEMENT_ARRAY_POINTER_ATI* = 0x0000876A
  GL_ATI_envmap_bumpmap* = 1
  GL_BUMP_ROT_MATRIX_ATI* = 0x00008775
  GL_BUMP_ROT_MATRIX_SIZE_ATI* = 0x00008776
  GL_BUMP_NUM_TEX_UNITS_ATI* = 0x00008777
  GL_BUMP_TEX_UNITS_ATI* = 0x00008778
  GL_DUDV_ATI* = 0x00008779
  GL_DU8DV8_ATI* = 0x0000877A
  GL_BUMP_ENVMAP_ATI* = 0x0000877B
  GL_BUMP_TARGET_ATI* = 0x0000877C
  GL_ATI_fragment_shader* = 1
  GL_2X_BIT_ATI* = 0x00000001
  GL_RED_BIT_ATI* = 0x00000001
  GL_4X_BIT_ATI* = 0x00000002
  GL_COMP_BIT_ATI* = 0x00000002
  GL_GREEN_BIT_ATI* = 0x00000002
  GL_8X_BIT_ATI* = 0x00000004
  GL_BLUE_BIT_ATI* = 0x00000004
  GL_NEGATE_BIT_ATI* = 0x00000004
  GL_BIAS_BIT_ATI* = 0x00000008
  GL_HALF_BIT_ATI* = 0x00000008
  GL_QUARTER_BIT_ATI* = 0x00000010
  GL_EIGHTH_BIT_ATI* = 0x00000020
  GL_SATURATE_BIT_ATI* = 0x00000040
  GL_FRAGMENT_SHADER_ATI* = 0x00008920
  GL_REG_0_ATI* = 0x00008921
  GL_REG_1_ATI* = 0x00008922
  GL_REG_2_ATI* = 0x00008923
  GL_REG_3_ATI* = 0x00008924
  GL_REG_4_ATI* = 0x00008925
  GL_REG_5_ATI* = 0x00008926
  GL_CON_0_ATI* = 0x00008941
  GL_CON_1_ATI* = 0x00008942
  GL_CON_2_ATI* = 0x00008943
  GL_CON_3_ATI* = 0x00008944
  GL_CON_4_ATI* = 0x00008945
  GL_CON_5_ATI* = 0x00008946
  GL_CON_6_ATI* = 0x00008947
  GL_CON_7_ATI* = 0x00008948
  GL_MOV_ATI* = 0x00008961
  GL_ADD_ATI* = 0x00008963
  GL_MUL_ATI* = 0x00008964
  GL_SUB_ATI* = 0x00008965
  GL_DOT3_ATI* = 0x00008966
  GL_DOT4_ATI* = 0x00008967
  GL_MAD_ATI* = 0x00008968
  GL_LERP_ATI* = 0x00008969
  GL_CND_ATI* = 0x0000896A
  GL_CND0_ATI* = 0x0000896B
  GL_DOT2_ADD_ATI* = 0x0000896C
  GL_SECONDARY_INTERPOLATOR_ATI* = 0x0000896D
  GL_NUM_FRAGMENT_REGISTERS_ATI* = 0x0000896E
  GL_NUM_FRAGMENT_CONSTANTS_ATI* = 0x0000896F
  GL_NUM_PASSES_ATI* = 0x00008970
  GL_NUM_INSTRUCTIONS_PER_PASS_ATI* = 0x00008971
  GL_NUM_INSTRUCTIONS_TOTAL_ATI* = 0x00008972
  GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI* = 0x00008973
  GL_NUM_LOOPBACK_COMPONENTS_ATI* = 0x00008974
  GL_COLOR_ALPHA_PAIRING_ATI* = 0x00008975
  GL_SWIZZLE_STR_ATI* = 0x00008976
  GL_SWIZZLE_STQ_ATI* = 0x00008977
  GL_SWIZZLE_STR_DR_ATI* = 0x00008978
  GL_SWIZZLE_STQ_DQ_ATI* = 0x00008979
  GL_SWIZZLE_STRQ_ATI* = 0x0000897A
  GL_SWIZZLE_STRQ_DQ_ATI* = 0x0000897B
  GL_ATI_map_object_buffer* = 1
  GL_ATI_meminfo* = 1
  GL_VBO_FREE_MEMORY_ATI* = 0x000087FB
  GL_TEXTURE_FREE_MEMORY_ATI* = 0x000087FC
  GL_RENDERBUFFER_FREE_MEMORY_ATI* = 0x000087FD
  GL_ATI_pn_triangles* = 1
  GL_PN_TRIANGLES_ATI* = 0x000087F0
  GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI* = 0x000087F1
  GL_PN_TRIANGLES_POINT_MODE_ATI* = 0x000087F2
  GL_PN_TRIANGLES_NORMAL_MODE_ATI* = 0x000087F3
  GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI* = 0x000087F4
  GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI* = 0x000087F5
  GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI* = 0x000087F6
  GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI* = 0x000087F7
  GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI* = 0x000087F8
  GL_ATI_separate_stencil* = 1
  GL_STENCIL_BACK_FUNC_ATI* = 0x00008800
  GL_STENCIL_BACK_FAIL_ATI* = 0x00008801
  GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI* = 0x00008802
  GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI* = 0x00008803
  GL_ATI_shader_texture_lod* = 1
  GL_ATI_text_fragment_shader* = 1
  GL_TEXT_FRAGMENT_SHADER_ATI* = 0x00008200
  GL_ATI_texture_compression_3dc* = 1
  GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI* = 0x00008837
  GL_ATI_texture_env_combine3* = 1
  GL_MODULATE_ADD_ATI* = 0x00008744
  GL_MODULATE_SIGNED_ADD_ATI* = 0x00008745
  GL_MODULATE_SUBTRACT_ATI* = 0x00008746
  GL_ATI_texture_float* = 1
  GL_RGBA_FLOAT32_ATI* = 0x00008814
  GL_RGB_FLOAT32_ATI* = 0x00008815
  GL_ALPHA_FLOAT32_ATI* = 0x00008816
  GL_LUMINANCE_FLOAT32_ATI* = 0x00008818
  GL_LUMINANCE_ALPHA_FLOAT32_ATI* = 0x00008819
  GL_RGBA_FLOAT16_ATI* = 0x0000881A
  GL_RGB_FLOAT16_ATI* = 0x0000881B
  GL_ALPHA_FLOAT16_ATI* = 0x0000881C
  GL_LUMINANCE_FLOAT16_ATI* = 0x0000881E
  GL_LUMINANCE_ALPHA_FLOAT16_ATI* = 0x0000881F
  GL_ATI_texture_mirror_once* = 1
  GL_MIRROR_CLAMP_ATI* = 0x00008742
  GL_MIRROR_CLAMP_TO_EDGE_ATI* = 0x00008743
  GL_ATI_vertex_array_object* = 1
  GL_STATIC_ATI* = 0x00008760
  GL_DYNAMIC_ATI* = 0x00008761
  GL_PRESERVE_ATI* = 0x00008762
  GL_DISCARD_ATI* = 0x00008763
  GL_OBJECT_BUFFER_SIZE_ATI* = 0x00008764
  GL_OBJECT_BUFFER_USAGE_ATI* = 0x00008765
  GL_ARRAY_OBJECT_BUFFER_ATI* = 0x00008766
  GL_ARRAY_OBJECT_OFFSET_ATI* = 0x00008767
  GL_ATI_vertex_attrib_array_object* = 1
  GL_ATI_vertex_streams* = 1
  GL_MAX_VERTEX_STREAMS_ATI* = 0x0000876B
  GL_VERTEX_SOURCE_ATI* = 0x0000876C
  GL_VERTEX_STREAM0_ATI* = 0x0000876D
  GL_VERTEX_STREAM1_ATI* = 0x0000876E
  GL_VERTEX_STREAM2_ATI* = 0x0000876F
  GL_VERTEX_STREAM3_ATI* = 0x00008770
  GL_VERTEX_STREAM4_ATI* = 0x00008771
  GL_VERTEX_STREAM5_ATI* = 0x00008772
  GL_VERTEX_STREAM6_ATI* = 0x00008773
  GL_VERTEX_STREAM7_ATI* = 0x00008774
  GL_EGL_KHR_context_flush_control* = 1
  GL_EGL_NV_robustness_video_memory_purge* = 1
  GL_EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV* = 0x0000334C
  GL_PURGED_CONTEXT_RESET_NV* = 0x000092BB
  GL_EXT_422_pixels* = 1
  GL_422_EXT* = 0x000080CC
  GL_422_REV_EXT* = 0x000080CD
  GL_422_AVERAGE_EXT* = 0x000080CE
  GL_422_REV_AVERAGE_EXT* = 0x000080CF
  GL_EXT_Cg_shader* = 1
  GL_CG_VERTEX_SHADER_EXT* = 0x0000890E
  GL_CG_FRAGMENT_SHADER_EXT* = 0x0000890F
  GL_EXT_EGL_image_array* = 1
  GL_EXT_YUV_target* = 1
  GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT* = 0x00008BE7
  GL_EXT_abgr* = 1
  GL_ABGR_EXT* = 0x00008000
  GL_EXT_base_instance* = 1
  GL_EXT_bgra* = 1
  GL_BGR_EXT* = 0x000080E0
  GL_EXT_bindable_uniform* = 1
  GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT* = 0x00008DE2
  GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT* = 0x00008DE3
  GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT* = 0x00008DE4
  GL_MAX_BINDABLE_UNIFORM_SIZE_EXT* = 0x00008DED
  GL_UNIFORM_BUFFER_EXT* = 0x00008DEE
  GL_UNIFORM_BUFFER_BINDING_EXT* = 0x00008DEF
  GL_EXT_blend_color* = 1
  GL_CONSTANT_COLOR_EXT* = 0x00008001
  GL_ONE_MINUS_CONSTANT_COLOR_EXT* = 0x00008002
  GL_CONSTANT_ALPHA_EXT* = 0x00008003
  GL_ONE_MINUS_CONSTANT_ALPHA_EXT* = 0x00008004
  GL_BLEND_COLOR_EXT* = 0x00008005
  GL_EXT_blend_equation_separate* = 1
  GL_BLEND_EQUATION_RGB_EXT* = 0x00008009
  GL_BLEND_EQUATION_ALPHA_EXT* = 0x0000883D
  GL_EXT_blend_func_extended* = 1
  GL_SRC_ALPHA_SATURATE_EXT* = 0x00000308
  GL_SRC1_ALPHA_EXT* = 0x00008589
  GL_SRC1_COLOR_EXT* = 0x000088F9
  GL_ONE_MINUS_SRC1_COLOR_EXT* = 0x000088FA
  GL_ONE_MINUS_SRC1_ALPHA_EXT* = 0x000088FB
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT* = 0x000088FC
  GL_LOCATION_INDEX_EXT* = 0x0000930F
  GL_EXT_blend_func_separate* = 1
  GL_BLEND_DST_RGB_EXT* = 0x000080C8
  GL_BLEND_SRC_RGB_EXT* = 0x000080C9
  GL_BLEND_DST_ALPHA_EXT* = 0x000080CA
  GL_BLEND_SRC_ALPHA_EXT* = 0x000080CB
  GL_EXT_blend_logic_op* = 1
  GL_EXT_blend_minmax* = 1
  GL_FUNC_ADD_EXT* = 0x00008006
  GL_MIN_EXT* = 0x00008007
  GL_MAX_EXT* = 0x00008008
  GL_BLEND_EQUATION_EXT* = 0x00008009
  GL_EXT_blend_subtract* = 1
  GL_FUNC_SUBTRACT_EXT* = 0x0000800A
  GL_FUNC_REVERSE_SUBTRACT_EXT* = 0x0000800B
  GL_EXT_buffer_storage* = 1
  GL_MAP_PERSISTENT_BIT_EXT* = 0x00000040
  GL_MAP_COHERENT_BIT_EXT* = 0x00000080
  GL_DYNAMIC_STORAGE_BIT_EXT* = 0x00000100
  GL_CLIENT_STORAGE_BIT_EXT* = 0x00000200
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT* = 0x00004000
  GL_BUFFER_IMMUTABLE_STORAGE_EXT* = 0x0000821F
  GL_BUFFER_STORAGE_FLAGS_EXT* = 0x00008220
  GL_EXT_clear_texture* = 1
  GL_EXT_clip_cull_distance* = 1
  GL_MAX_CLIP_DISTANCES_EXT* = 0x00000D32
  GL_CLIP_DISTANCE0_EXT* = 0x00003000
  GL_CLIP_DISTANCE1_EXT* = 0x00003001
  GL_CLIP_DISTANCE2_EXT* = 0x00003002
  GL_CLIP_DISTANCE3_EXT* = 0x00003003
  GL_CLIP_DISTANCE4_EXT* = 0x00003004
  GL_CLIP_DISTANCE5_EXT* = 0x00003005
  GL_CLIP_DISTANCE6_EXT* = 0x00003006
  GL_CLIP_DISTANCE7_EXT* = 0x00003007
  GL_MAX_CULL_DISTANCES_EXT* = 0x000082F9
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT* = 0x000082FA
  GL_EXT_clip_volume_hint* = 1
  GL_CLIP_VOLUME_CLIPPING_HINT_EXT* = 0x000080F0
  GL_EXT_cmyka* = 1
  GL_CMYK_EXT* = 0x0000800C
  GL_CMYKA_EXT* = 0x0000800D
  GL_PACK_CMYK_HINT_EXT* = 0x0000800E
  GL_UNPACK_CMYK_HINT_EXT* = 0x0000800F
  GL_EXT_color_buffer_float* = 1
  GL_EXT_color_buffer_half_float* = 1
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT* = 0x00008211
  GL_R16F_EXT* = 0x0000822D
  GL_RG16F_EXT* = 0x0000822F
  GL_RGBA16F_EXT* = 0x0000881A
  GL_RGB16F_EXT* = 0x0000881B
  GL_UNSIGNED_NORMALIZED_EXT* = 0x00008C17
  GL_EXT_color_subtable* = 1
  GL_EXT_compiled_vertex_array* = 1
  GL_ARRAY_ELEMENT_LOCK_FIRST_EXT* = 0x000081A8
  GL_ARRAY_ELEMENT_LOCK_COUNT_EXT* = 0x000081A9
  GL_EXT_compressed_ETC1_RGB8_sub_texture* = 1
  GL_EXT_conservative_depth* = 1
  GL_EXT_convolution* = 1
  GL_CONVOLUTION_1D_EXT* = 0x00008010
  GL_CONVOLUTION_2D_EXT* = 0x00008011
  GL_SEPARABLE_2D_EXT* = 0x00008012
  GL_CONVOLUTION_BORDER_MODE_EXT* = 0x00008013
  GL_CONVOLUTION_FILTER_SCALE_EXT* = 0x00008014
  GL_CONVOLUTION_FILTER_BIAS_EXT* = 0x00008015
  GL_REDUCE_EXT* = 0x00008016
  GL_CONVOLUTION_FORMAT_EXT* = 0x00008017
  GL_CONVOLUTION_WIDTH_EXT* = 0x00008018
  GL_CONVOLUTION_HEIGHT_EXT* = 0x00008019
  GL_MAX_CONVOLUTION_WIDTH_EXT* = 0x0000801A
  GL_MAX_CONVOLUTION_HEIGHT_EXT* = 0x0000801B
  GL_POST_CONVOLUTION_RED_SCALE_EXT* = 0x0000801C
  GL_POST_CONVOLUTION_GREEN_SCALE_EXT* = 0x0000801D
  GL_POST_CONVOLUTION_BLUE_SCALE_EXT* = 0x0000801E
  GL_POST_CONVOLUTION_ALPHA_SCALE_EXT* = 0x0000801F
  GL_POST_CONVOLUTION_RED_BIAS_EXT* = 0x00008020
  GL_POST_CONVOLUTION_GREEN_BIAS_EXT* = 0x00008021
  GL_POST_CONVOLUTION_BLUE_BIAS_EXT* = 0x00008022
  GL_POST_CONVOLUTION_ALPHA_BIAS_EXT* = 0x00008023
  GL_EXT_coordinate_frame* = 1
  GL_TANGENT_ARRAY_EXT* = 0x00008439
  GL_BINORMAL_ARRAY_EXT* = 0x0000843A
  GL_CURRENT_TANGENT_EXT* = 0x0000843B
  GL_CURRENT_BINORMAL_EXT* = 0x0000843C
  GL_TANGENT_ARRAY_TYPE_EXT* = 0x0000843E
  GL_TANGENT_ARRAY_STRIDE_EXT* = 0x0000843F
  GL_BINORMAL_ARRAY_TYPE_EXT* = 0x00008440
  GL_BINORMAL_ARRAY_STRIDE_EXT* = 0x00008441
  GL_TANGENT_ARRAY_POINTER_EXT* = 0x00008442
  GL_BINORMAL_ARRAY_POINTER_EXT* = 0x00008443
  GL_MAP1_TANGENT_EXT* = 0x00008444
  GL_MAP2_TANGENT_EXT* = 0x00008445
  GL_MAP1_BINORMAL_EXT* = 0x00008446
  GL_MAP2_BINORMAL_EXT* = 0x00008447
  GL_EXT_copy_image* = 1
  GL_EXT_copy_texture* = 1
  GL_EXT_cull_vertex* = 1
  GL_CULL_VERTEX_EXT* = 0x000081AA
  GL_CULL_VERTEX_EYE_POSITION_EXT* = 0x000081AB
  GL_CULL_VERTEX_OBJECT_POSITION_EXT* = 0x000081AC
  GL_EXT_debug_label* = 1
  GL_PROGRAM_PIPELINE_OBJECT_EXT* = 0x00008A4F
  GL_PROGRAM_OBJECT_EXT* = 0x00008B40
  GL_SHADER_OBJECT_EXT* = 0x00008B48
  GL_BUFFER_OBJECT_EXT* = 0x00009151
  GL_QUERY_OBJECT_EXT* = 0x00009153
  GL_VERTEX_ARRAY_OBJECT_EXT* = 0x00009154
  GL_EXT_debug_marker* = 1
  GL_EXT_depth_bounds_test* = 1
  GL_DEPTH_BOUNDS_TEST_EXT* = 0x00008890
  GL_DEPTH_BOUNDS_EXT* = 0x00008891
  GL_EXT_direct_state_access* = 1
  GL_PROGRAM_MATRIX_EXT* = 0x00008E2D
  GL_TRANSPOSE_PROGRAM_MATRIX_EXT* = 0x00008E2E
  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT* = 0x00008E2F
  GL_EXT_discard_framebuffer* = 1
  GL_COLOR_EXT* = 0x00001800
  GL_DEPTH_EXT* = 0x00001801
  GL_STENCIL_EXT* = 0x00001802
  GL_EXT_draw_buffers* = 1
  GL_MAX_DRAW_BUFFERS_EXT* = 0x00008824
  GL_DRAW_BUFFER0_EXT* = 0x00008825
  GL_DRAW_BUFFER1_EXT* = 0x00008826
  GL_DRAW_BUFFER2_EXT* = 0x00008827
  GL_DRAW_BUFFER3_EXT* = 0x00008828
  GL_DRAW_BUFFER4_EXT* = 0x00008829
  GL_DRAW_BUFFER5_EXT* = 0x0000882A
  GL_DRAW_BUFFER6_EXT* = 0x0000882B
  GL_DRAW_BUFFER7_EXT* = 0x0000882C
  GL_DRAW_BUFFER8_EXT* = 0x0000882D
  GL_DRAW_BUFFER9_EXT* = 0x0000882E
  GL_DRAW_BUFFER10_EXT* = 0x0000882F
  GL_DRAW_BUFFER11_EXT* = 0x00008830
  GL_DRAW_BUFFER12_EXT* = 0x00008831
  GL_DRAW_BUFFER13_EXT* = 0x00008832
  GL_DRAW_BUFFER14_EXT* = 0x00008833
  GL_DRAW_BUFFER15_EXT* = 0x00008834
  GL_MAX_COLOR_ATTACHMENTS_EXT* = 0x00008CDF
  GL_COLOR_ATTACHMENT0_EXT* = 0x00008CE0
  GL_COLOR_ATTACHMENT1_EXT* = 0x00008CE1
  GL_COLOR_ATTACHMENT2_EXT* = 0x00008CE2
  GL_COLOR_ATTACHMENT3_EXT* = 0x00008CE3
  GL_COLOR_ATTACHMENT4_EXT* = 0x00008CE4
  GL_COLOR_ATTACHMENT5_EXT* = 0x00008CE5
  GL_COLOR_ATTACHMENT6_EXT* = 0x00008CE6
  GL_COLOR_ATTACHMENT7_EXT* = 0x00008CE7
  GL_COLOR_ATTACHMENT8_EXT* = 0x00008CE8
  GL_COLOR_ATTACHMENT9_EXT* = 0x00008CE9
  GL_COLOR_ATTACHMENT10_EXT* = 0x00008CEA
  GL_COLOR_ATTACHMENT11_EXT* = 0x00008CEB
  GL_COLOR_ATTACHMENT12_EXT* = 0x00008CEC
  GL_COLOR_ATTACHMENT13_EXT* = 0x00008CED
  GL_COLOR_ATTACHMENT14_EXT* = 0x00008CEE
  GL_COLOR_ATTACHMENT15_EXT* = 0x00008CEF
  GL_EXT_draw_buffers2* = 1
  GL_EXT_draw_buffers_indexed* = 1
  GL_EXT_draw_elements_base_vertex* = 1
  GL_EXT_draw_instanced* = 1
  GL_EXT_draw_range_elements* = 1
  GL_MAX_ELEMENTS_VERTICES_EXT* = 0x000080E8
  GL_MAX_ELEMENTS_INDICES_EXT* = 0x000080E9
  GL_EXT_external_buffer* = 1
  GL_EXT_float_blend* = 1
  GL_EXT_fog_coord* = 1
  GL_FOG_COORDINATE_SOURCE_EXT* = 0x00008450
  GL_FOG_COORDINATE_EXT* = 0x00008451
  GL_FRAGMENT_DEPTH_EXT* = 0x00008452
  GL_CURRENT_FOG_COORDINATE_EXT* = 0x00008453
  GL_FOG_COORDINATE_ARRAY_TYPE_EXT* = 0x00008454
  GL_FOG_COORDINATE_ARRAY_STRIDE_EXT* = 0x00008455
  GL_FOG_COORDINATE_ARRAY_POINTER_EXT* = 0x00008456
  GL_FOG_COORDINATE_ARRAY_EXT* = 0x00008457
  GL_EXT_frag_depth* = 1
  GL_EXT_fragment_lighting* = 1
  GL_FRAGMENT_LIGHTING_EXT* = 0x00008400
  GL_FRAGMENT_COLOR_MATERIAL_EXT* = 0x00008401
  GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT* = 0x00008402
  GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT* = 0x00008403
  GL_MAX_FRAGMENT_LIGHTS_EXT* = 0x00008404
  GL_MAX_ACTIVE_LIGHTS_EXT* = 0x00008405
  GL_CURRENT_RASTER_NORMAL_EXT* = 0x00008406
  GL_LIGHT_ENV_MODE_EXT* = 0x00008407
  GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT* = 0x00008408
  GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT* = 0x00008409
  GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT* = 0x0000840A
  GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT* = 0x0000840B
  GL_FRAGMENT_LIGHT0_EXT* = 0x0000840C
  GL_FRAGMENT_LIGHT7_EXT* = 0x00008413
  GL_EXT_framebuffer_blit* = 1
  GL_DRAW_FRAMEBUFFER_BINDING_EXT* = 0x00008CA6
  GL_READ_FRAMEBUFFER_EXT* = 0x00008CA8
  GL_DRAW_FRAMEBUFFER_EXT* = 0x00008CA9
  GL_READ_FRAMEBUFFER_BINDING_EXT* = 0x00008CAA
  GL_EXT_framebuffer_multisample* = 1
  GL_RENDERBUFFER_SAMPLES_EXT* = 0x00008CAB
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT* = 0x00008D56
  GL_MAX_SAMPLES_EXT* = 0x00008D57
  GL_EXT_framebuffer_multisample_blit_scaled* = 1
  GL_SCALED_RESOLVE_FASTEST_EXT* = 0x000090BA
  GL_SCALED_RESOLVE_NICEST_EXT* = 0x000090BB
  GL_EXT_framebuffer_object* = 1
  GL_INVALID_FRAMEBUFFER_OPERATION_EXT* = 0x00000506
  GL_MAX_RENDERBUFFER_SIZE_EXT* = 0x000084E8
  GL_FRAMEBUFFER_BINDING_EXT* = 0x00008CA6
  GL_RENDERBUFFER_BINDING_EXT* = 0x00008CA7
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT* = 0x00008CD0
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT* = 0x00008CD1
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT* = 0x00008CD2
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT* = 0x00008CD3
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT* = 0x00008CD4
  GL_FRAMEBUFFER_COMPLETE_EXT* = 0x00008CD5
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT* = 0x00008CD6
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT* = 0x00008CD7
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT* = 0x00008CD9
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT* = 0x00008CDA
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT* = 0x00008CDB
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT* = 0x00008CDC
  GL_FRAMEBUFFER_UNSUPPORTED_EXT* = 0x00008CDD
  GL_DEPTH_ATTACHMENT_EXT* = 0x00008D00
  GL_STENCIL_ATTACHMENT_EXT* = 0x00008D20
  GL_FRAMEBUFFER_EXT* = 0x00008D40
  GL_RENDERBUFFER_EXT* = 0x00008D41
  GL_RENDERBUFFER_WIDTH_EXT* = 0x00008D42
  GL_RENDERBUFFER_HEIGHT_EXT* = 0x00008D43
  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT* = 0x00008D44
  GL_STENCIL_INDEX1_EXT* = 0x00008D46
  GL_STENCIL_INDEX4_EXT* = 0x00008D47
  GL_STENCIL_INDEX8_EXT* = 0x00008D48
  GL_STENCIL_INDEX16_EXT* = 0x00008D49
  GL_RENDERBUFFER_RED_SIZE_EXT* = 0x00008D50
  GL_RENDERBUFFER_GREEN_SIZE_EXT* = 0x00008D51
  GL_RENDERBUFFER_BLUE_SIZE_EXT* = 0x00008D52
  GL_RENDERBUFFER_ALPHA_SIZE_EXT* = 0x00008D53
  GL_RENDERBUFFER_DEPTH_SIZE_EXT* = 0x00008D54
  GL_RENDERBUFFER_STENCIL_SIZE_EXT* = 0x00008D55
  GL_EXT_framebuffer_sRGB* = 1
  GL_FRAMEBUFFER_SRGB_EXT* = 0x00008DB9
  GL_FRAMEBUFFER_SRGB_CAPABLE_EXT* = 0x00008DBA
  GL_EXT_geometry_point_size* = 1
  GL_GEOMETRY_SHADER_BIT_EXT* = 0x00000004
  GL_LINES_ADJACENCY_EXT* = 0x0000000A
  GL_LINE_STRIP_ADJACENCY_EXT* = 0x0000000B
  GL_TRIANGLES_ADJACENCY_EXT* = 0x0000000C
  GL_TRIANGLE_STRIP_ADJACENCY_EXT* = 0x0000000D
  GL_LAYER_PROVOKING_VERTEX_EXT* = 0x0000825E
  GL_UNDEFINED_VERTEX_EXT* = 0x00008260
  GL_GEOMETRY_SHADER_INVOCATIONS_EXT* = 0x0000887F
  GL_GEOMETRY_LINKED_VERTICES_OUT_EXT* = 0x00008916
  GL_GEOMETRY_LINKED_INPUT_TYPE_EXT* = 0x00008917
  GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT* = 0x00008918
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT* = 0x00008A2C
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT* = 0x00008A32
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT* = 0x00008C29
  GL_PRIMITIVES_GENERATED_EXT* = 0x00008C87
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT* = 0x00008DA7
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT* = 0x00008DA8
  GL_GEOMETRY_SHADER_EXT* = 0x00008DD9
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT* = 0x00008DDF
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT* = 0x00008DE0
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT* = 0x00008DE1
  GL_FIRST_VERTEX_CONVENTION_EXT* = 0x00008E4D
  GL_LAST_VERTEX_CONVENTION_EXT* = 0x00008E4E
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT* = 0x00008E5A
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT* = 0x000090CD
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT* = 0x000090D7
  GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT* = 0x00009123
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT* = 0x00009124
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT* = 0x000092CF
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT* = 0x000092D5
  GL_REFERENCED_BY_GEOMETRY_SHADER_EXT* = 0x00009309
  GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT* = 0x00009312
  GL_MAX_FRAMEBUFFER_LAYERS_EXT* = 0x00009317
  GL_EXT_geometry_shader* = 1
  GL_EXT_geometry_shader4* = 1
  GL_PROGRAM_POINT_SIZE_EXT* = 0x00008642
  GL_MAX_VARYING_COMPONENTS_EXT* = 0x00008B4B
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT* = 0x00008CD4
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT* = 0x00008DA9
  GL_GEOMETRY_VERTICES_OUT_EXT* = 0x00008DDA
  GL_GEOMETRY_INPUT_TYPE_EXT* = 0x00008DDB
  GL_GEOMETRY_OUTPUT_TYPE_EXT* = 0x00008DDC
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT* = 0x00008DDD
  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT* = 0x00008DDE
  GL_EXT_gpu_program_parameters* = 1
  GL_EXT_gpu_shader4* = 1
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT* = 0x000088FD
  GL_SAMPLER_1D_ARRAY_EXT* = 0x00008DC0
  GL_SAMPLER_2D_ARRAY_EXT* = 0x00008DC1
  GL_SAMPLER_BUFFER_EXT* = 0x00008DC2
  GL_SAMPLER_1D_ARRAY_SHADOW_EXT* = 0x00008DC3
  GL_SAMPLER_2D_ARRAY_SHADOW_EXT* = 0x00008DC4
  GL_SAMPLER_CUBE_SHADOW_EXT* = 0x00008DC5
  GL_UNSIGNED_INT_VEC2_EXT* = 0x00008DC6
  GL_UNSIGNED_INT_VEC3_EXT* = 0x00008DC7
  GL_UNSIGNED_INT_VEC4_EXT* = 0x00008DC8
  GL_UNSIGNED_INT_SAMPLER_1D_EXT* = 0x00008DD1
  GL_UNSIGNED_INT_SAMPLER_2D_EXT* = 0x00008DD2
  GL_UNSIGNED_INT_SAMPLER_3D_EXT* = 0x00008DD3
  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT* = 0x00008DD4
  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT* = 0x00008DD5
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT* = 0x00008DD6
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT* = 0x00008DD7
  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT* = 0x00008DD8
  GL_EXT_gpu_shader5* = 1
  GL_EXT_histogram* = 1
  GL_HISTOGRAM_EXT* = 0x00008024
  GL_PROXY_HISTOGRAM_EXT* = 0x00008025
  GL_HISTOGRAM_WIDTH_EXT* = 0x00008026
  GL_HISTOGRAM_FORMAT_EXT* = 0x00008027
  GL_HISTOGRAM_RED_SIZE_EXT* = 0x00008028
  GL_HISTOGRAM_GREEN_SIZE_EXT* = 0x00008029
  GL_HISTOGRAM_BLUE_SIZE_EXT* = 0x0000802A
  GL_HISTOGRAM_ALPHA_SIZE_EXT* = 0x0000802B
  GL_HISTOGRAM_LUMINANCE_SIZE_EXT* = 0x0000802C
  GL_HISTOGRAM_SINK_EXT* = 0x0000802D
  GL_MINMAX_EXT* = 0x0000802E
  GL_MINMAX_FORMAT_EXT* = 0x0000802F
  GL_MINMAX_SINK_EXT* = 0x00008030
  GL_EXT_index_array_formats* = 1
  GL_EXT_index_func* = 1
  GL_EXT_index_material* = 1
  GL_EXT_index_texture* = 1
  GL_EXT_instanced_arrays* = 1
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT* = 0x000088FE
  GL_EXT_light_texture* = 1
  GL_FRAGMENT_MATERIAL_EXT* = 0x00008349
  GL_FRAGMENT_NORMAL_EXT* = 0x0000834A
  GL_FRAGMENT_COLOR_EXT* = 0x0000834C
  GL_ATTENUATION_EXT* = 0x0000834D
  GL_SHADOW_ATTENUATION_EXT* = 0x0000834E
  GL_TEXTURE_APPLICATION_MODE_EXT* = 0x0000834F
  GL_TEXTURE_LIGHT_EXT* = 0x00008350
  GL_TEXTURE_MATERIAL_FACE_EXT* = 0x00008351
  GL_TEXTURE_MATERIAL_PARAMETER_EXT* = 0x00008352
  GL_EXT_map_buffer_range* = 1
  GL_MAP_READ_BIT_EXT* = 0x00000001
  GL_MAP_WRITE_BIT_EXT* = 0x00000002
  GL_MAP_INVALIDATE_RANGE_BIT_EXT* = 0x00000004
  GL_MAP_INVALIDATE_BUFFER_BIT_EXT* = 0x00000008
  GL_MAP_FLUSH_EXPLICIT_BIT_EXT* = 0x00000010
  GL_MAP_UNSYNCHRONIZED_BIT_EXT* = 0x00000020
  GL_EXT_memory_object* = 1
  GL_UUID_SIZE_EXT* = 16
  GL_TEXTURE_TILING_EXT* = 0x00009580
  GL_DEDICATED_MEMORY_OBJECT_EXT* = 0x00009581
  GL_NUM_TILING_TYPES_EXT* = 0x00009582
  GL_TILING_TYPES_EXT* = 0x00009583
  GL_OPTIMAL_TILING_EXT* = 0x00009584
  GL_LINEAR_TILING_EXT* = 0x00009585
  GL_LAYOUT_GENERAL_EXT* = 0x0000958D
  GL_LAYOUT_COLOR_ATTACHMENT_EXT* = 0x0000958E
  GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT* = 0x0000958F
  GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT* = 0x00009590
  GL_LAYOUT_SHADER_READ_ONLY_EXT* = 0x00009591
  GL_LAYOUT_TRANSFER_SRC_EXT* = 0x00009592
  GL_LAYOUT_TRANSFER_DST_EXT* = 0x00009593
  GL_NUM_DEVICE_UUIDS_EXT* = 0x00009596
  GL_DEVICE_UUID_EXT* = 0x00009597
  GL_DRIVER_UUID_EXT* = 0x00009598
  GL_PROTECTED_MEMORY_OBJECT_EXT* = 0x0000959B
  GL_EXT_memory_object_fd* = 1
  GL_HANDLE_TYPE_OPAQUE_FD_EXT* = 0x00009586
  GL_EXT_memory_object_win32* = 1
  GL_LUID_SIZE_EXT* = 8
  GL_HANDLE_TYPE_OPAQUE_WIN32_EXT* = 0x00009587
  GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT* = 0x00009588
  GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT* = 0x00009589
  GL_HANDLE_TYPE_D3D12_RESOURCE_EXT* = 0x0000958A
  GL_HANDLE_TYPE_D3D11_IMAGE_EXT* = 0x0000958B
  GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT* = 0x0000958C
  GL_HANDLE_TYPE_D3D12_FENCE_EXT* = 0x00009594
  GL_D3D12_FENCE_VALUE_EXT* = 0x00009595
  GL_DEVICE_LUID_EXT* = 0x00009599
  GL_DEVICE_NODE_MASK_EXT* = 0x0000959A
  GL_EXT_misc_attribute* = 1
  GL_EXT_multi_draw_arrays* = 1
  GL_EXT_multi_draw_indirect* = 1
  GL_EXT_multiple_textures* = 1
  GL_EXT_multisample* = 1
  GL_MULTISAMPLE_EXT* = 0x0000809D
  GL_SAMPLE_ALPHA_TO_MASK_EXT* = 0x0000809E
  GL_SAMPLE_ALPHA_TO_ONE_EXT* = 0x0000809F
  GL_SAMPLE_MASK_EXT* = 0x000080A0
  GL_1PASS_EXT* = 0x000080A1
  GL_2PASS_0_EXT* = 0x000080A2
  GL_2PASS_1_EXT* = 0x000080A3
  GL_4PASS_0_EXT* = 0x000080A4
  GL_4PASS_1_EXT* = 0x000080A5
  GL_4PASS_2_EXT* = 0x000080A6
  GL_4PASS_3_EXT* = 0x000080A7
  GL_SAMPLE_BUFFERS_EXT* = 0x000080A8
  GL_SAMPLES_EXT* = 0x000080A9
  GL_SAMPLE_MASK_VALUE_EXT* = 0x000080AA
  GL_SAMPLE_MASK_INVERT_EXT* = 0x000080AB
  GL_SAMPLE_PATTERN_EXT* = 0x000080AC
  GL_MULTISAMPLE_BIT_EXT* = 0x20000000
  GL_EXT_multisample_compatibility* = 1
  GL_EXT_multisampled_render_to_texture* = 1
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT* = 0x00008D6C
  GL_EXT_multisampled_render_to_texture2* = 1
  GL_EXT_multiview_draw_buffers* = 1
  GL_DRAW_BUFFER_EXT* = 0x00000C01
  GL_READ_BUFFER_EXT* = 0x00000C02
  GL_COLOR_ATTACHMENT_EXT* = 0x000090F0
  GL_MULTIVIEW_EXT* = 0x000090F1
  GL_MAX_MULTIVIEW_BUFFERS_EXT* = 0x000090F2
  GL_EXT_packed_depth_stencil* = 1
  GL_DEPTH_STENCIL_EXT* = 0x000084F9
  GL_UNSIGNED_INT_24_8_EXT* = 0x000084FA
  GL_DEPTH24_STENCIL8_EXT* = 0x000088F0
  GL_TEXTURE_STENCIL_SIZE_EXT* = 0x000088F1
  GL_EXT_packed_float* = 1
  GL_R11F_G11F_B10F_EXT* = 0x00008C3A
  GL_UNSIGNED_INT_10F_11F_11F_REV_EXT* = 0x00008C3B
  GL_RGBA_SIGNED_COMPONENTS_EXT* = 0x00008C3C
  GL_EXT_packed_pixels* = 1
  GL_UNSIGNED_BYTE_3_3_2_EXT* = 0x00008032
  GL_UNSIGNED_SHORT_4_4_4_4_EXT* = 0x00008033
  GL_UNSIGNED_SHORT_5_5_5_1_EXT* = 0x00008034
  GL_UNSIGNED_INT_8_8_8_8_EXT* = 0x00008035
  GL_UNSIGNED_INT_10_10_10_2_EXT* = 0x00008036
  GL_EXT_paletted_texture* = 1
  GL_COLOR_TABLE_FORMAT_EXT* = 0x000080D8
  GL_COLOR_TABLE_WIDTH_EXT* = 0x000080D9
  GL_COLOR_TABLE_RED_SIZE_EXT* = 0x000080DA
  GL_COLOR_TABLE_GREEN_SIZE_EXT* = 0x000080DB
  GL_COLOR_TABLE_BLUE_SIZE_EXT* = 0x000080DC
  GL_COLOR_TABLE_ALPHA_SIZE_EXT* = 0x000080DD
  GL_COLOR_TABLE_LUMINANCE_SIZE_EXT* = 0x000080DE
  GL_COLOR_TABLE_INTENSITY_SIZE_EXT* = 0x000080DF
  GL_TEXTURE_INDEX_SIZE_EXT* = 0x000080ED
  GL_EXT_pixel_buffer_object* = 1
  GL_PIXEL_PACK_BUFFER_EXT* = 0x000088EB
  GL_PIXEL_UNPACK_BUFFER_EXT* = 0x000088EC
  GL_PIXEL_PACK_BUFFER_BINDING_EXT* = 0x000088ED
  GL_PIXEL_UNPACK_BUFFER_BINDING_EXT* = 0x000088EF
  GL_EXT_pixel_transform* = 1
  GL_PIXEL_TRANSFORM_2D_EXT* = 0x00008330
  GL_PIXEL_MAG_FILTER_EXT* = 0x00008331
  GL_PIXEL_MIN_FILTER_EXT* = 0x00008332
  GL_PIXEL_CUBIC_WEIGHT_EXT* = 0x00008333
  GL_CUBIC_EXT* = 0x00008334
  GL_AVERAGE_EXT* = 0x00008335
  GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT* = 0x00008336
  GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT* = 0x00008337
  GL_PIXEL_TRANSFORM_2D_MATRIX_EXT* = 0x00008338
  GL_EXT_pixel_transform_color_table* = 1
  GL_EXT_point_parameters* = 1
  GL_POINT_SIZE_MIN_EXT* = 0x00008126
  GL_POINT_SIZE_MAX_EXT* = 0x00008127
  GL_POINT_FADE_THRESHOLD_SIZE_EXT* = 0x00008128
  GL_DISTANCE_ATTENUATION_EXT* = 0x00008129
  GL_EXT_polygon_offset* = 1
  GL_POLYGON_OFFSET_EXT* = 0x00008037
  GL_POLYGON_OFFSET_FACTOR_EXT* = 0x00008038
  GL_POLYGON_OFFSET_BIAS_EXT* = 0x00008039
  GL_EXT_polygon_offset_clamp* = 1
  GL_POLYGON_OFFSET_CLAMP_EXT* = 0x00008E1B
  GL_EXT_post_depth_coverage* = 1
  GL_EXT_provoking_vertex* = 1
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT* = 0x00008E4C
  GL_PROVOKING_VERTEX_EXT* = 0x00008E4F
  GL_EXT_pvrtc_sRGB* = 1
  GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT* = 0x00008A54
  GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT* = 0x00008A55
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT* = 0x00008A56
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT* = 0x00008A57
  GL_EXT_raster_multisample* = 1
  GL_COLOR_SAMPLES_NV* = 0x00008E20
  GL_RASTER_MULTISAMPLE_EXT* = 0x00009327
  GL_RASTER_SAMPLES_EXT* = 0x00009328
  GL_MAX_RASTER_SAMPLES_EXT* = 0x00009329
  GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT* = 0x0000932A
  GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT* = 0x0000932B
  GL_EFFECTIVE_RASTER_SAMPLES_EXT* = 0x0000932C
  GL_DEPTH_SAMPLES_NV* = 0x0000932D
  GL_STENCIL_SAMPLES_NV* = 0x0000932E
  GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV* = 0x0000932F
  GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV* = 0x00009330
  GL_COVERAGE_MODULATION_TABLE_NV* = 0x00009331
  GL_COVERAGE_MODULATION_NV* = 0x00009332
  GL_COVERAGE_MODULATION_TABLE_SIZE_NV* = 0x00009333
  GL_EXT_read_format_bgra* = 1
  GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT* = 0x00008365
  GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT* = 0x00008366
  GL_EXT_render_snorm* = 1
  GL_R16_SNORM_EXT* = 0x00008F98
  GL_RG16_SNORM_EXT* = 0x00008F99
  GL_RGBA16_SNORM_EXT* = 0x00008F9B
  GL_EXT_rescale_normal* = 1
  GL_RESCALE_NORMAL_EXT* = 0x0000803A
  GL_EXT_sRGB* = 1
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT* = 0x00008210
  GL_SRGB_EXT* = 0x00008C40
  GL_SRGB_ALPHA_EXT* = 0x00008C42
  GL_SRGB8_ALPHA8_EXT* = 0x00008C43
  GL_EXT_sRGB_write_control* = 1
  GL_EXT_scene_marker* = 1
  GL_EXT_secondary_color* = 1
  GL_COLOR_SUM_EXT* = 0x00008458
  GL_CURRENT_SECONDARY_COLOR_EXT* = 0x00008459
  GL_SECONDARY_COLOR_ARRAY_SIZE_EXT* = 0x0000845A
  GL_SECONDARY_COLOR_ARRAY_TYPE_EXT* = 0x0000845B
  GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT* = 0x0000845C
  GL_SECONDARY_COLOR_ARRAY_POINTER_EXT* = 0x0000845D
  GL_SECONDARY_COLOR_ARRAY_EXT* = 0x0000845E
  GL_EXT_semaphore* = 1
  GL_EXT_semaphore_fd* = 1
  GL_EXT_semaphore_win32* = 1
  GL_EXT_separate_shader_objects* = 1
  GL_ACTIVE_PROGRAM_EXT* = 0x00008B8D
  GL_EXT_separate_specular_color* = 1
  GL_LIGHT_MODEL_COLOR_CONTROL_EXT* = 0x000081F8
  GL_SINGLE_COLOR_EXT* = 0x000081F9
  GL_SEPARATE_SPECULAR_COLOR_EXT* = 0x000081FA
  GL_EXT_shader_framebuffer_fetch* = 1
  GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT* = 0x00008A52
  GL_EXT_shader_group_vote* = 1
  GL_EXT_shader_image_load_formatted* = 1
  GL_EXT_shader_image_load_store* = 1
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT* = 0x00000001
  GL_ELEMENT_ARRAY_BARRIER_BIT_EXT* = 0x00000002
  GL_UNIFORM_BARRIER_BIT_EXT* = 0x00000004
  GL_TEXTURE_FETCH_BARRIER_BIT_EXT* = 0x00000008
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT* = 0x00000020
  GL_COMMAND_BARRIER_BIT_EXT* = 0x00000040
  GL_PIXEL_BUFFER_BARRIER_BIT_EXT* = 0x00000080
  GL_TEXTURE_UPDATE_BARRIER_BIT_EXT* = 0x00000100
  GL_BUFFER_UPDATE_BARRIER_BIT_EXT* = 0x00000200
  GL_FRAMEBUFFER_BARRIER_BIT_EXT* = 0x00000400
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT* = 0x00000800
  GL_ATOMIC_COUNTER_BARRIER_BIT_EXT* = 0x00001000
  GL_MAX_IMAGE_UNITS_EXT* = 0x00008F38
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT* = 0x00008F39
  GL_IMAGE_BINDING_NAME_EXT* = 0x00008F3A
  GL_IMAGE_BINDING_LEVEL_EXT* = 0x00008F3B
  GL_IMAGE_BINDING_LAYERED_EXT* = 0x00008F3C
  GL_IMAGE_BINDING_LAYER_EXT* = 0x00008F3D
  GL_IMAGE_BINDING_ACCESS_EXT* = 0x00008F3E
  GL_IMAGE_1D_EXT* = 0x0000904C
  GL_IMAGE_2D_EXT* = 0x0000904D
  GL_IMAGE_3D_EXT* = 0x0000904E
  GL_IMAGE_2D_RECT_EXT* = 0x0000904F
  GL_IMAGE_CUBE_EXT* = 0x00009050
  GL_IMAGE_BUFFER_EXT* = 0x00009051
  GL_IMAGE_1D_ARRAY_EXT* = 0x00009052
  GL_IMAGE_2D_ARRAY_EXT* = 0x00009053
  GL_IMAGE_CUBE_MAP_ARRAY_EXT* = 0x00009054
  GL_IMAGE_2D_MULTISAMPLE_EXT* = 0x00009055
  GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT* = 0x00009056
  GL_UNSIGNED_INT_IMAGE_1D_EXT* = 0x00009062
  GL_UNSIGNED_INT_IMAGE_2D_EXT* = 0x00009063
  GL_UNSIGNED_INT_IMAGE_3D_EXT* = 0x00009064
  GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT* = 0x00009065
  GL_UNSIGNED_INT_IMAGE_CUBE_EXT* = 0x00009066
  GL_UNSIGNED_INT_IMAGE_BUFFER_EXT* = 0x00009067
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT* = 0x00009068
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT* = 0x00009069
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT* = 0x0000906A
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT* = 0x0000906B
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT* = 0x0000906C
  GL_MAX_IMAGE_SAMPLES_EXT* = 0x0000906D
  GL_IMAGE_BINDING_FORMAT_EXT* = 0x0000906E
  GL_ALL_BARRIER_BITS_EXT* = 0xFFFFFFFF
  GL_EXT_shader_implicit_conversions* = 1
  GL_EXT_shader_integer_mix* = 1
  GL_EXT_shader_io_blocks* = 1
  GL_EXT_shader_non_constant_global_initializers* = 1
  GL_EXT_shader_pixel_local_storage* = 1
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT* = 0x00008F63
  GL_SHADER_PIXEL_LOCAL_STORAGE_EXT* = 0x00008F64
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT* = 0x00008F67
  GL_EXT_shader_pixel_local_storage2* = 1
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT* = 0x00009650
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT* = 0x00009651
  GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT* = 0x00009652
  GL_EXT_shader_texture_lod* = 1
  GL_EXT_shadow_funcs* = 1
  GL_EXT_shadow_samplers* = 1
  GL_TEXTURE_COMPARE_MODE_EXT* = 0x0000884C
  GL_TEXTURE_COMPARE_FUNC_EXT* = 0x0000884D
  GL_COMPARE_REF_TO_TEXTURE_EXT* = 0x0000884E
  GL_SAMPLER_2D_SHADOW_EXT* = 0x00008B62
  GL_EXT_shared_texture_palette* = 1
  GL_SHARED_TEXTURE_PALETTE_EXT* = 0x000081FB
  GL_EXT_sparse_texture* = 1
  GL_TEXTURE_CUBE_MAP_ARRAY_OES* = 0x00009009
  GL_VIRTUAL_PAGE_SIZE_X_EXT* = 0x00009195
  GL_VIRTUAL_PAGE_SIZE_Y_EXT* = 0x00009196
  GL_VIRTUAL_PAGE_SIZE_Z_EXT* = 0x00009197
  GL_MAX_SPARSE_TEXTURE_SIZE_EXT* = 0x00009198
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT* = 0x00009199
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT* = 0x0000919A
  GL_TEXTURE_SPARSE_EXT* = 0x000091A6
  GL_VIRTUAL_PAGE_SIZE_INDEX_EXT* = 0x000091A7
  GL_NUM_VIRTUAL_PAGE_SIZES_EXT* = 0x000091A8
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT* = 0x000091A9
  GL_NUM_SPARSE_LEVELS_EXT* = 0x000091AA
  GL_EXT_sparse_texture2* = 1
  GL_EXT_stencil_clear_tag* = 1
  GL_STENCIL_TAG_BITS_EXT* = 0x000088F2
  GL_STENCIL_CLEAR_TAG_VALUE_EXT* = 0x000088F3
  GL_EXT_stencil_two_side* = 1
  GL_STENCIL_TEST_TWO_SIDE_EXT* = 0x00008910
  GL_ACTIVE_STENCIL_FACE_EXT* = 0x00008911
  GL_EXT_stencil_wrap* = 1
  GL_INCR_WRAP_EXT* = 0x00008507
  GL_DECR_WRAP_EXT* = 0x00008508
  GL_EXT_subtexture* = 1
  GL_EXT_texture* = 1
  GL_ALPHA4_EXT* = 0x0000803B
  GL_ALPHA8_EXT* = 0x0000803C
  GL_ALPHA12_EXT* = 0x0000803D
  GL_ALPHA16_EXT* = 0x0000803E
  GL_LUMINANCE4_EXT* = 0x0000803F
  GL_LUMINANCE8_EXT* = 0x00008040
  GL_LUMINANCE12_EXT* = 0x00008041
  GL_LUMINANCE16_EXT* = 0x00008042
  GL_LUMINANCE4_ALPHA4_EXT* = 0x00008043
  GL_LUMINANCE6_ALPHA2_EXT* = 0x00008044
  GL_LUMINANCE8_ALPHA8_EXT* = 0x00008045
  GL_LUMINANCE12_ALPHA4_EXT* = 0x00008046
  GL_LUMINANCE12_ALPHA12_EXT* = 0x00008047
  GL_LUMINANCE16_ALPHA16_EXT* = 0x00008048
  GL_RGB2_EXT* = 0x0000804E
  GL_RGB4_EXT* = 0x0000804F
  GL_RGB5_EXT* = 0x00008050
  GL_RGB8_EXT* = 0x00008051
  GL_RGB10_EXT* = 0x00008052
  GL_RGB12_EXT* = 0x00008053
  GL_RGB16_EXT* = 0x00008054
  GL_RGBA2_EXT* = 0x00008055
  GL_RGBA4_EXT* = 0x00008056
  GL_RGB5_A1_EXT* = 0x00008057
  GL_RGBA8_EXT* = 0x00008058
  GL_RGB10_A2_EXT* = 0x00008059
  GL_RGBA12_EXT* = 0x0000805A
  GL_RGBA16_EXT* = 0x0000805B
  GL_TEXTURE_RED_SIZE_EXT* = 0x0000805C
  GL_TEXTURE_GREEN_SIZE_EXT* = 0x0000805D
  GL_TEXTURE_BLUE_SIZE_EXT* = 0x0000805E
  GL_TEXTURE_ALPHA_SIZE_EXT* = 0x0000805F
  GL_TEXTURE_LUMINANCE_SIZE_EXT* = 0x00008060
  GL_TEXTURE_INTENSITY_SIZE_EXT* = 0x00008061
  GL_REPLACE_EXT* = 0x00008062
  GL_PROXY_TEXTURE_1D_EXT* = 0x00008063
  GL_PROXY_TEXTURE_2D_EXT* = 0x00008064
  GL_EXT_texture3D* = 1
  GL_PACK_SKIP_IMAGES_EXT* = 0x0000806B
  GL_PACK_IMAGE_HEIGHT_EXT* = 0x0000806C
  GL_UNPACK_SKIP_IMAGES_EXT* = 0x0000806D
  GL_UNPACK_IMAGE_HEIGHT_EXT* = 0x0000806E
  GL_TEXTURE_3D_EXT* = 0x0000806F
  GL_PROXY_TEXTURE_3D_EXT* = 0x00008070
  GL_TEXTURE_DEPTH_EXT* = 0x00008071
  GL_TEXTURE_WRAP_R_EXT* = 0x00008072
  GL_MAX_3D_TEXTURE_SIZE_EXT* = 0x00008073
  GL_EXT_texture_array* = 1
  GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT* = 0x0000884E
  GL_MAX_ARRAY_TEXTURE_LAYERS_EXT* = 0x000088FF
  GL_TEXTURE_1D_ARRAY_EXT* = 0x00008C18
  GL_PROXY_TEXTURE_1D_ARRAY_EXT* = 0x00008C19
  GL_TEXTURE_2D_ARRAY_EXT* = 0x00008C1A
  GL_PROXY_TEXTURE_2D_ARRAY_EXT* = 0x00008C1B
  GL_TEXTURE_BINDING_1D_ARRAY_EXT* = 0x00008C1C
  GL_TEXTURE_BINDING_2D_ARRAY_EXT* = 0x00008C1D
  GL_EXT_texture_buffer_object* = 1
  GL_TEXTURE_BUFFER_EXT* = 0x00008C2A
  GL_MAX_TEXTURE_BUFFER_SIZE_EXT* = 0x00008C2B
  GL_TEXTURE_BINDING_BUFFER_EXT* = 0x00008C2C
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT* = 0x00008C2D
  GL_TEXTURE_BUFFER_FORMAT_EXT* = 0x00008C2E
  GL_EXT_texture_compression_astc_decode_mode* = 1
  GL_TEXTURE_ASTC_DECODE_PRECISION_EXT* = 0x00008F69
  GL_EXT_texture_compression_astc_decode_mode_rgb9e5* = 1
  GL_EXT_texture_compression_bptc* = 1
  GL_COMPRESSED_RGBA_BPTC_UNORM_EXT* = 0x00008E8C
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT* = 0x00008E8D
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT* = 0x00008E8E
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT* = 0x00008E8F
  GL_EXT_texture_compression_dxt1* = 1
  GL_EXT_texture_compression_latc* = 1
  GL_COMPRESSED_LUMINANCE_LATC1_EXT* = 0x00008C70
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT* = 0x00008C71
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT* = 0x00008C72
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT* = 0x00008C73
  GL_EXT_texture_compression_rgtc* = 1
  GL_COMPRESSED_RED_RGTC1_EXT* = 0x00008DBB
  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT* = 0x00008DBC
  GL_COMPRESSED_RED_GREEN_RGTC2_EXT* = 0x00008DBD
  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT* = 0x00008DBE
  GL_EXT_texture_compression_s3tc* = 1
  GL_COMPRESSED_RGB_S3TC_DXT1_EXT* = 0x000083F0
  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT* = 0x000083F1
  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT* = 0x000083F2
  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT* = 0x000083F3
  GL_EXT_texture_cube_map* = 1
  GL_NORMAL_MAP_EXT* = 0x00008511
  GL_REFLECTION_MAP_EXT* = 0x00008512
  GL_TEXTURE_CUBE_MAP_EXT* = 0x00008513
  GL_TEXTURE_BINDING_CUBE_MAP_EXT* = 0x00008514
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT* = 0x00008515
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT* = 0x00008516
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT* = 0x00008517
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT* = 0x00008518
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT* = 0x00008519
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT* = 0x0000851A
  GL_PROXY_TEXTURE_CUBE_MAP_EXT* = 0x0000851B
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT* = 0x0000851C
  GL_EXT_texture_cube_map_array* = 1
  GL_TEXTURE_CUBE_MAP_ARRAY_EXT* = 0x00009009
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT* = 0x0000900A
  GL_SAMPLER_CUBE_MAP_ARRAY_EXT* = 0x0000900C
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT* = 0x0000900D
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT* = 0x0000900F
  GL_EXT_texture_edge_clamp* = 1
  GL_CLAMP_TO_EDGE_EXT* = 0x0000812F
  GL_EXT_texture_env* = 1
  GL_EXT_texture_env_add* = 1
  GL_EXT_texture_env_combine* = 1
  GL_COMBINE_EXT* = 0x00008570
  GL_COMBINE_RGB_EXT* = 0x00008571
  GL_COMBINE_ALPHA_EXT* = 0x00008572
  GL_RGB_SCALE_EXT* = 0x00008573
  GL_ADD_SIGNED_EXT* = 0x00008574
  GL_CONSTANT_EXT* = 0x00008576
  GL_PRIMARY_COLOR_EXT* = 0x00008577
  GL_PREVIOUS_EXT* = 0x00008578
  GL_SOURCE0_RGB_EXT* = 0x00008580
  GL_SOURCE1_RGB_EXT* = 0x00008581
  GL_SOURCE2_RGB_EXT* = 0x00008582
  GL_SOURCE0_ALPHA_EXT* = 0x00008588
  GL_SOURCE1_ALPHA_EXT* = 0x00008589
  GL_SOURCE2_ALPHA_EXT* = 0x0000858A
  GL_OPERAND0_RGB_EXT* = 0x00008590
  GL_OPERAND1_RGB_EXT* = 0x00008591
  GL_OPERAND2_RGB_EXT* = 0x00008592
  GL_OPERAND0_ALPHA_EXT* = 0x00008598
  GL_OPERAND1_ALPHA_EXT* = 0x00008599
  GL_OPERAND2_ALPHA_EXT* = 0x0000859A
  GL_EXT_texture_env_dot3* = 1
  GL_DOT3_RGB_EXT* = 0x00008740
  GL_DOT3_RGBA_EXT* = 0x00008741
  GL_EXT_texture_filter_anisotropic* = 1
  GL_TEXTURE_MAX_ANISOTROPY_EXT* = 0x000084FE
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT* = 0x000084FF
  GL_EXT_texture_filter_minmax* = 1
  GL_TEXTURE_REDUCTION_MODE_EXT* = 0x00009366
  GL_WEIGHTED_AVERAGE_EXT* = 0x00009367
  GL_EXT_texture_format_BGRA8888* = 1
  GL_EXT_texture_integer* = 1
  GL_RGBA32UI_EXT* = 0x00008D70
  GL_RGB32UI_EXT* = 0x00008D71
  GL_ALPHA32UI_EXT* = 0x00008D72
  GL_LUMINANCE32UI_EXT* = 0x00008D74
  GL_LUMINANCE_ALPHA32UI_EXT* = 0x00008D75
  GL_RGBA16UI_EXT* = 0x00008D76
  GL_RGB16UI_EXT* = 0x00008D77
  GL_ALPHA16UI_EXT* = 0x00008D78
  GL_LUMINANCE16UI_EXT* = 0x00008D7A
  GL_LUMINANCE_ALPHA16UI_EXT* = 0x00008D7B
  GL_RGBA8UI_EXT* = 0x00008D7C
  GL_RGB8UI_EXT* = 0x00008D7D
  GL_ALPHA8UI_EXT* = 0x00008D7E
  GL_LUMINANCE8UI_EXT* = 0x00008D80
  GL_LUMINANCE_ALPHA8UI_EXT* = 0x00008D81
  GL_RGBA32I_EXT* = 0x00008D82
  GL_RGB32I_EXT* = 0x00008D83
  GL_ALPHA32I_EXT* = 0x00008D84
  GL_LUMINANCE32I_EXT* = 0x00008D86
  GL_LUMINANCE_ALPHA32I_EXT* = 0x00008D87
  GL_RGBA16I_EXT* = 0x00008D88
  GL_RGB16I_EXT* = 0x00008D89
  GL_ALPHA16I_EXT* = 0x00008D8A
  GL_LUMINANCE16I_EXT* = 0x00008D8C
  GL_LUMINANCE_ALPHA16I_EXT* = 0x00008D8D
  GL_RGBA8I_EXT* = 0x00008D8E
  GL_RGB8I_EXT* = 0x00008D8F
  GL_ALPHA8I_EXT* = 0x00008D90
  GL_LUMINANCE8I_EXT* = 0x00008D92
  GL_LUMINANCE_ALPHA8I_EXT* = 0x00008D93
  GL_RED_INTEGER_EXT* = 0x00008D94
  GL_GREEN_INTEGER_EXT* = 0x00008D95
  GL_BLUE_INTEGER_EXT* = 0x00008D96
  GL_ALPHA_INTEGER_EXT* = 0x00008D97
  GL_RGB_INTEGER_EXT* = 0x00008D98
  GL_RGBA_INTEGER_EXT* = 0x00008D99
  GL_BGR_INTEGER_EXT* = 0x00008D9A
  GL_BGRA_INTEGER_EXT* = 0x00008D9B
  GL_LUMINANCE_INTEGER_EXT* = 0x00008D9C
  GL_LUMINANCE_ALPHA_INTEGER_EXT* = 0x00008D9D
  GL_RGBA_INTEGER_MODE_EXT* = 0x00008D9E
  GL_EXT_texture_lod_bias* = 1
  GL_MAX_TEXTURE_LOD_BIAS_EXT* = 0x000084FD
  GL_TEXTURE_FILTER_CONTROL_EXT* = 0x00008500
  GL_TEXTURE_LOD_BIAS_EXT* = 0x00008501
  GL_EXT_texture_mirror_clamp* = 1
  GL_MIRROR_CLAMP_EXT* = 0x00008742
  GL_MIRROR_CLAMP_TO_EDGE_EXT* = 0x00008743
  GL_MIRROR_CLAMP_TO_BORDER_EXT* = 0x00008912
  GL_EXT_texture_norm16* = 1
  GL_R16_EXT* = 0x0000822A
  GL_RG16_EXT* = 0x0000822C
  GL_RGB16_SNORM_EXT* = 0x00008F9A
  GL_EXT_texture_object* = 1
  GL_TEXTURE_PRIORITY_EXT* = 0x00008066
  GL_TEXTURE_RESIDENT_EXT* = 0x00008067
  GL_TEXTURE_1D_BINDING_EXT* = 0x00008068
  GL_TEXTURE_2D_BINDING_EXT* = 0x00008069
  GL_TEXTURE_3D_BINDING_EXT* = 0x0000806A
  GL_EXT_texture_perturb_normal* = 1
  GL_PERTURB_EXT* = 0x000085AE
  GL_TEXTURE_NORMAL_EXT* = 0x000085AF
  GL_EXT_texture_rectangle* = 1
  GL_TEXTURE_RECTANGLE_EXT* = 0x000084F5
  GL_TEXTURE_BINDING_RECTANGLE_EXT* = 0x000084F6
  GL_PROXY_TEXTURE_RECTANGLE_EXT* = 0x000084F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT* = 0x000084F8
  GL_EXT_texture_rg* = 1
  GL_RED_EXT* = 0x00001903
  GL_RG_EXT* = 0x00008227
  GL_R8_EXT* = 0x00008229
  GL_RG8_EXT* = 0x0000822B
  GL_EXT_texture_sRGB* = 1
  GL_SRGB8_EXT* = 0x00008C41
  GL_SLUMINANCE_ALPHA_EXT* = 0x00008C44
  GL_SLUMINANCE8_ALPHA8_EXT* = 0x00008C45
  GL_SLUMINANCE_EXT* = 0x00008C46
  GL_SLUMINANCE8_EXT* = 0x00008C47
  GL_COMPRESSED_SRGB_EXT* = 0x00008C48
  GL_COMPRESSED_SRGB_ALPHA_EXT* = 0x00008C49
  GL_COMPRESSED_SLUMINANCE_EXT* = 0x00008C4A
  GL_COMPRESSED_SLUMINANCE_ALPHA_EXT* = 0x00008C4B
  GL_COMPRESSED_SRGB_S3TC_DXT1_EXT* = 0x00008C4C
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT* = 0x00008C4D
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT* = 0x00008C4E
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT* = 0x00008C4F
  GL_EXT_texture_sRGB_R8* = 1
  GL_SR8_EXT* = 0x00008FBD
  GL_EXT_texture_sRGB_RG8* = 1
  GL_SRG8_EXT* = 0x00008FBE
  GL_EXT_texture_sRGB_decode* = 1
  GL_TEXTURE_SRGB_DECODE_EXT* = 0x00008A48
  GL_DECODE_EXT* = 0x00008A49
  GL_SKIP_DECODE_EXT* = 0x00008A4A
  GL_EXT_texture_shared_exponent* = 1
  GL_RGB9_E5_EXT* = 0x00008C3D
  GL_UNSIGNED_INT_5_9_9_9_REV_EXT* = 0x00008C3E
  GL_TEXTURE_SHARED_SIZE_EXT* = 0x00008C3F
  GL_EXT_texture_snorm* = 1
  GL_ALPHA_SNORM* = 0x00009010
  GL_LUMINANCE_SNORM* = 0x00009011
  GL_LUMINANCE_ALPHA_SNORM* = 0x00009012
  GL_ALPHA8_SNORM* = 0x00009014
  GL_LUMINANCE8_SNORM* = 0x00009015
  GL_LUMINANCE8_ALPHA8_SNORM* = 0x00009016
  GL_ALPHA16_SNORM* = 0x00009018
  GL_LUMINANCE16_SNORM* = 0x00009019
  GL_LUMINANCE16_ALPHA16_SNORM* = 0x0000901A
  GL_EXT_texture_storage* = 1
  GL_R32F_EXT* = 0x0000822E
  GL_RG32F_EXT* = 0x00008230
  GL_RGBA32F_EXT* = 0x00008814
  GL_RGB32F_EXT* = 0x00008815
  GL_ALPHA32F_EXT* = 0x00008816
  GL_LUMINANCE32F_EXT* = 0x00008818
  GL_LUMINANCE_ALPHA32F_EXT* = 0x00008819
  GL_ALPHA16F_EXT* = 0x0000881C
  GL_LUMINANCE16F_EXT* = 0x0000881E
  GL_LUMINANCE_ALPHA16F_EXT* = 0x0000881F
  GL_TEXTURE_IMMUTABLE_FORMAT_EXT* = 0x0000912F
  GL_EXT_texture_swizzle* = 1
  GL_TEXTURE_SWIZZLE_R_EXT* = 0x00008E42
  GL_TEXTURE_SWIZZLE_G_EXT* = 0x00008E43
  GL_TEXTURE_SWIZZLE_B_EXT* = 0x00008E44
  GL_TEXTURE_SWIZZLE_A_EXT* = 0x00008E45
  GL_TEXTURE_SWIZZLE_RGBA_EXT* = 0x00008E46
  GL_EXT_texture_type_2_10_10_10_REV* = 1
  GL_UNSIGNED_INT_2_10_10_10_REV_EXT* = 0x00008368
  GL_EXT_texture_view* = 1
  GL_TEXTURE_VIEW_MIN_LEVEL_EXT* = 0x000082DB
  GL_TEXTURE_VIEW_NUM_LEVELS_EXT* = 0x000082DC
  GL_TEXTURE_VIEW_MIN_LAYER_EXT* = 0x000082DD
  GL_TEXTURE_VIEW_NUM_LAYERS_EXT* = 0x000082DE
  GL_EXT_timer_query* = 1
  GL_TIME_ELAPSED_EXT* = 0x000088BF
  GL_EXT_transform_feedback* = 1
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT* = 0x00008C76
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT* = 0x00008C7F
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT* = 0x00008C80
  GL_TRANSFORM_FEEDBACK_VARYINGS_EXT* = 0x00008C83
  GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT* = 0x00008C84
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT* = 0x00008C85
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT* = 0x00008C88
  GL_RASTERIZER_DISCARD_EXT* = 0x00008C89
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT* = 0x00008C8A
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT* = 0x00008C8B
  GL_SEPARATE_ATTRIBS_EXT* = 0x00008C8D
  GL_TRANSFORM_FEEDBACK_BUFFER_EXT* = 0x00008C8E
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT* = 0x00008C8F
  GL_EXT_unpack_subimage* = 1
  GL_UNPACK_ROW_LENGTH_EXT* = 0x00000CF2
  GL_UNPACK_SKIP_ROWS_EXT* = 0x00000CF3
  GL_UNPACK_SKIP_PIXELS_EXT* = 0x00000CF4
  GL_EXT_vertex_array* = 1
  GL_VERTEX_ARRAY_EXT* = 0x00008074
  GL_NORMAL_ARRAY_EXT* = 0x00008075
  GL_COLOR_ARRAY_EXT* = 0x00008076
  GL_INDEX_ARRAY_EXT* = 0x00008077
  GL_TEXTURE_COORD_ARRAY_EXT* = 0x00008078
  GL_EDGE_FLAG_ARRAY_EXT* = 0x00008079
  GL_VERTEX_ARRAY_SIZE_EXT* = 0x0000807A
  GL_VERTEX_ARRAY_TYPE_EXT* = 0x0000807B
  GL_VERTEX_ARRAY_STRIDE_EXT* = 0x0000807C
  GL_VERTEX_ARRAY_COUNT_EXT* = 0x0000807D
  GL_NORMAL_ARRAY_TYPE_EXT* = 0x0000807E
  GL_NORMAL_ARRAY_STRIDE_EXT* = 0x0000807F
  GL_NORMAL_ARRAY_COUNT_EXT* = 0x00008080
  GL_COLOR_ARRAY_SIZE_EXT* = 0x00008081
  GL_COLOR_ARRAY_TYPE_EXT* = 0x00008082
  GL_COLOR_ARRAY_STRIDE_EXT* = 0x00008083
  GL_COLOR_ARRAY_COUNT_EXT* = 0x00008084
  GL_INDEX_ARRAY_TYPE_EXT* = 0x00008085
  GL_INDEX_ARRAY_STRIDE_EXT* = 0x00008086
  GL_INDEX_ARRAY_COUNT_EXT* = 0x00008087
  GL_TEXTURE_COORD_ARRAY_SIZE_EXT* = 0x00008088
  GL_TEXTURE_COORD_ARRAY_TYPE_EXT* = 0x00008089
  GL_TEXTURE_COORD_ARRAY_STRIDE_EXT* = 0x0000808A
  GL_TEXTURE_COORD_ARRAY_COUNT_EXT* = 0x0000808B
  GL_EDGE_FLAG_ARRAY_STRIDE_EXT* = 0x0000808C
  GL_EDGE_FLAG_ARRAY_COUNT_EXT* = 0x0000808D
  GL_VERTEX_ARRAY_POINTER_EXT* = 0x0000808E
  GL_NORMAL_ARRAY_POINTER_EXT* = 0x0000808F
  GL_COLOR_ARRAY_POINTER_EXT* = 0x00008090
  GL_INDEX_ARRAY_POINTER_EXT* = 0x00008091
  GL_TEXTURE_COORD_ARRAY_POINTER_EXT* = 0x00008092
  GL_EDGE_FLAG_ARRAY_POINTER_EXT* = 0x00008093
  GL_EXT_vertex_array_bgra* = 1
  GL_EXT_vertex_array_setXXX* = 1
  GL_EXT_vertex_attrib_64bit* = 1
  GL_EXT_vertex_shader* = 1
  GL_VERTEX_SHADER_EXT* = 0x00008780
  GL_VERTEX_SHADER_BINDING_EXT* = 0x00008781
  GL_OP_INDEX_EXT* = 0x00008782
  GL_OP_NEGATE_EXT* = 0x00008783
  GL_OP_DOT3_EXT* = 0x00008784
  GL_OP_DOT4_EXT* = 0x00008785
  GL_OP_MUL_EXT* = 0x00008786
  GL_OP_ADD_EXT* = 0x00008787
  GL_OP_MADD_EXT* = 0x00008788
  GL_OP_FRAC_EXT* = 0x00008789
  GL_OP_MAX_EXT* = 0x0000878A
  GL_OP_MIN_EXT* = 0x0000878B
  GL_OP_SET_GE_EXT* = 0x0000878C
  GL_OP_SET_LT_EXT* = 0x0000878D
  GL_OP_CLAMP_EXT* = 0x0000878E
  GL_OP_FLOOR_EXT* = 0x0000878F
  GL_OP_ROUND_EXT* = 0x00008790
  GL_OP_EXP_BASE_2_EXT* = 0x00008791
  GL_OP_LOG_BASE_2_EXT* = 0x00008792
  GL_OP_POWER_EXT* = 0x00008793
  GL_OP_RECIP_EXT* = 0x00008794
  GL_OP_RECIP_SQRT_EXT* = 0x00008795
  GL_OP_SUB_EXT* = 0x00008796
  GL_OP_CROSS_PRODUCT_EXT* = 0x00008797
  GL_OP_MULTIPLY_MATRIX_EXT* = 0x00008798
  GL_OP_MOV_EXT* = 0x00008799
  GL_OUTPUT_VERTEX_EXT* = 0x0000879A
  GL_OUTPUT_COLOR0_EXT* = 0x0000879B
  GL_OUTPUT_COLOR1_EXT* = 0x0000879C
  GL_OUTPUT_TEXTURE_COORD0_EXT* = 0x0000879D
  GL_OUTPUT_TEXTURE_COORD1_EXT* = 0x0000879E
  GL_OUTPUT_TEXTURE_COORD2_EXT* = 0x0000879F
  GL_OUTPUT_TEXTURE_COORD3_EXT* = 0x000087A0
  GL_OUTPUT_TEXTURE_COORD4_EXT* = 0x000087A1
  GL_OUTPUT_TEXTURE_COORD5_EXT* = 0x000087A2
  GL_OUTPUT_TEXTURE_COORD6_EXT* = 0x000087A3
  GL_OUTPUT_TEXTURE_COORD7_EXT* = 0x000087A4
  GL_OUTPUT_TEXTURE_COORD8_EXT* = 0x000087A5
  GL_OUTPUT_TEXTURE_COORD9_EXT* = 0x000087A6
  GL_OUTPUT_TEXTURE_COORD10_EXT* = 0x000087A7
  GL_OUTPUT_TEXTURE_COORD11_EXT* = 0x000087A8
  GL_OUTPUT_TEXTURE_COORD12_EXT* = 0x000087A9
  GL_OUTPUT_TEXTURE_COORD13_EXT* = 0x000087AA
  GL_OUTPUT_TEXTURE_COORD14_EXT* = 0x000087AB
  GL_OUTPUT_TEXTURE_COORD15_EXT* = 0x000087AC
  GL_OUTPUT_TEXTURE_COORD16_EXT* = 0x000087AD
  GL_OUTPUT_TEXTURE_COORD17_EXT* = 0x000087AE
  GL_OUTPUT_TEXTURE_COORD18_EXT* = 0x000087AF
  GL_OUTPUT_TEXTURE_COORD19_EXT* = 0x000087B0
  GL_OUTPUT_TEXTURE_COORD20_EXT* = 0x000087B1
  GL_OUTPUT_TEXTURE_COORD21_EXT* = 0x000087B2
  GL_OUTPUT_TEXTURE_COORD22_EXT* = 0x000087B3
  GL_OUTPUT_TEXTURE_COORD23_EXT* = 0x000087B4
  GL_OUTPUT_TEXTURE_COORD24_EXT* = 0x000087B5
  GL_OUTPUT_TEXTURE_COORD25_EXT* = 0x000087B6
  GL_OUTPUT_TEXTURE_COORD26_EXT* = 0x000087B7
  GL_OUTPUT_TEXTURE_COORD27_EXT* = 0x000087B8
  GL_OUTPUT_TEXTURE_COORD28_EXT* = 0x000087B9
  GL_OUTPUT_TEXTURE_COORD29_EXT* = 0x000087BA
  GL_OUTPUT_TEXTURE_COORD30_EXT* = 0x000087BB
  GL_OUTPUT_TEXTURE_COORD31_EXT* = 0x000087BC
  GL_OUTPUT_FOG_EXT* = 0x000087BD
  GL_SCALAR_EXT* = 0x000087BE
  GL_VECTOR_EXT* = 0x000087BF
  GL_MATRIX_EXT* = 0x000087C0
  GL_VARIANT_EXT* = 0x000087C1
  GL_INVARIANT_EXT* = 0x000087C2
  GL_LOCAL_CONSTANT_EXT* = 0x000087C3
  GL_LOCAL_EXT* = 0x000087C4
  GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT* = 0x000087C5
  GL_MAX_VERTEX_SHADER_VARIANTS_EXT* = 0x000087C6
  GL_MAX_VERTEX_SHADER_INVARIANTS_EXT* = 0x000087C7
  GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT* = 0x000087C8
  GL_MAX_VERTEX_SHADER_LOCALS_EXT* = 0x000087C9
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT* = 0x000087CA
  GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT* = 0x000087CB
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT* = 0x000087CC
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT* = 0x000087CD
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT* = 0x000087CE
  GL_VERTEX_SHADER_INSTRUCTIONS_EXT* = 0x000087CF
  GL_VERTEX_SHADER_VARIANTS_EXT* = 0x000087D0
  GL_VERTEX_SHADER_INVARIANTS_EXT* = 0x000087D1
  GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT* = 0x000087D2
  GL_VERTEX_SHADER_LOCALS_EXT* = 0x000087D3
  GL_VERTEX_SHADER_OPTIMIZED_EXT* = 0x000087D4
  GL_X_EXT* = 0x000087D5
  GL_Y_EXT* = 0x000087D6
  GL_Z_EXT* = 0x000087D7
  GL_W_EXT* = 0x000087D8
  GL_NEGATIVE_X_EXT* = 0x000087D9
  GL_NEGATIVE_Y_EXT* = 0x000087DA
  GL_NEGATIVE_Z_EXT* = 0x000087DB
  GL_NEGATIVE_W_EXT* = 0x000087DC
  GL_ZERO_EXT* = 0x000087DD
  GL_ONE_EXT* = 0x000087DE
  GL_NEGATIVE_ONE_EXT* = 0x000087DF
  GL_NORMALIZED_RANGE_EXT* = 0x000087E0
  GL_FULL_RANGE_EXT* = 0x000087E1
  GL_CURRENT_VERTEX_EXT* = 0x000087E2
  GL_MVP_MATRIX_EXT* = 0x000087E3
  GL_VARIANT_VALUE_EXT* = 0x000087E4
  GL_VARIANT_DATATYPE_EXT* = 0x000087E5
  GL_VARIANT_ARRAY_STRIDE_EXT* = 0x000087E6
  GL_VARIANT_ARRAY_TYPE_EXT* = 0x000087E7
  GL_VARIANT_ARRAY_EXT* = 0x000087E8
  GL_VARIANT_ARRAY_POINTER_EXT* = 0x000087E9
  GL_INVARIANT_VALUE_EXT* = 0x000087EA
  GL_INVARIANT_DATATYPE_EXT* = 0x000087EB
  GL_LOCAL_CONSTANT_VALUE_EXT* = 0x000087EC
  GL_LOCAL_CONSTANT_DATATYPE_EXT* = 0x000087ED
  GL_EXT_vertex_weighting* = 1
  GL_MODELVIEW0_STACK_DEPTH_EXT* = 0x00000BA3
  GL_MODELVIEW0_MATRIX_EXT* = 0x00000BA6
  GL_MODELVIEW0_EXT* = 0x00001700
  GL_MODELVIEW1_STACK_DEPTH_EXT* = 0x00008502
  GL_MODELVIEW1_MATRIX_EXT* = 0x00008506
  GL_VERTEX_WEIGHTING_EXT* = 0x00008509
  GL_MODELVIEW1_EXT* = 0x0000850A
  GL_CURRENT_VERTEX_WEIGHT_EXT* = 0x0000850B
  GL_VERTEX_WEIGHT_ARRAY_EXT* = 0x0000850C
  GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT* = 0x0000850D
  GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT* = 0x0000850E
  GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT* = 0x0000850F
  GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT* = 0x00008510
  GL_EXT_win32_keyed_mutex* = 1
  GL_EXT_window_rectangles* = 1
  GL_INCLUSIVE_EXT* = 0x00008F10
  GL_EXCLUSIVE_EXT* = 0x00008F11
  GL_WINDOW_RECTANGLE_EXT* = 0x00008F12
  GL_WINDOW_RECTANGLE_MODE_EXT* = 0x00008F13
  GL_MAX_WINDOW_RECTANGLES_EXT* = 0x00008F14
  GL_NUM_WINDOW_RECTANGLES_EXT* = 0x00008F15
  GL_EXT_x11_sync_object* = 1
  GL_SYNC_X11_FENCE_EXT* = 0x000090E1
  GL_GREMEDY_frame_terminator* = 1
  GL_GREMEDY_string_marker* = 1
  GL_HP_convolution_border_modes* = 1
  GL_HP_image_transform* = 1
  GL_HP_occlusion_test* = 1
  GL_HP_texture_lighting* = 1
  GL_IBM_cull_vertex* = 1
  GL_CULL_VERTEX_IBM* = 103050
  GL_IBM_multimode_draw_arrays* = 1
  GL_IBM_rasterpos_clip* = 1
  GL_RASTER_POSITION_UNCLIPPED_IBM* = 103010
  GL_IBM_static_data* = 1
  GL_ALL_STATIC_DATA_IBM* = 103060
  GL_STATIC_VERTEX_ARRAY_IBM* = 103061
  GL_IBM_texture_mirrored_repeat* = 1
  GL_MIRRORED_REPEAT_IBM* = 0x00008370
  GL_IBM_vertex_array_lists* = 1
  GL_VERTEX_ARRAY_LIST_IBM* = 103070
  GL_NORMAL_ARRAY_LIST_IBM* = 103071
  GL_COLOR_ARRAY_LIST_IBM* = 103072
  GL_INDEX_ARRAY_LIST_IBM* = 103073
  GL_TEXTURE_COORD_ARRAY_LIST_IBM* = 103074
  GL_EDGE_FLAG_ARRAY_LIST_IBM* = 103075
  GL_FOG_COORDINATE_ARRAY_LIST_IBM* = 103076
  GL_SECONDARY_COLOR_ARRAY_LIST_IBM* = 103077
  GL_VERTEX_ARRAY_LIST_STRIDE_IBM* = 103080
  GL_NORMAL_ARRAY_LIST_STRIDE_IBM* = 103081
  GL_COLOR_ARRAY_LIST_STRIDE_IBM* = 103082
  GL_INDEX_ARRAY_LIST_STRIDE_IBM* = 103083
  GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM* = 103084
  GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM* = 103085
  GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM* = 103086
  GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM* = 103087
  GL_INGR_color_clamp* = 1
  GL_RED_MIN_CLAMP_INGR* = 0x00008560
  GL_GREEN_MIN_CLAMP_INGR* = 0x00008561
  GL_BLUE_MIN_CLAMP_INGR* = 0x00008562
  GL_ALPHA_MIN_CLAMP_INGR* = 0x00008563
  GL_RED_MAX_CLAMP_INGR* = 0x00008564
  GL_GREEN_MAX_CLAMP_INGR* = 0x00008565
  GL_BLUE_MAX_CLAMP_INGR* = 0x00008566
  GL_ALPHA_MAX_CLAMP_INGR* = 0x00008567
  GL_INGR_interlace_read* = 1
  GL_CONSERVATIVE_RASTERIZATION_INTEL* = 0x000083FE
  GL_LAYOUT_DEFAULT_INTEL* = 0
  GL_LAYOUT_LINEAR_INTEL* = 1
  GL_LAYOUT_LINEAR_CPU_CACHED_INTEL* = 2
  GL_TEXTURE_MEMORY_LAYOUT_INTEL* = 0x000083FF
  GL_PARALLEL_ARRAYS_INTEL* = 0x000083F4
  GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL* = 0x000083F5
  GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL* = 0x000083F6
  GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL* = 0x000083F7
  GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL* = 0x000083F8
  GL_PERFQUERY_SINGLE_CONTEXT_INTEL* = 0x00000000
  GL_PERFQUERY_GLOBAL_CONTEXT_INTEL* = 0x00000001
  GL_PERFQUERY_DONOT_FLUSH_INTEL* = 0x000083F9
  GL_PERFQUERY_FLUSH_INTEL* = 0x000083FA
  GL_PERFQUERY_WAIT_INTEL* = 0x000083FB
  GL_PERFQUERY_COUNTER_EVENT_INTEL* = 0x000094F0
  GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL* = 0x000094F1
  GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL* = 0x000094F2
  GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL* = 0x000094F3
  GL_PERFQUERY_COUNTER_RAW_INTEL* = 0x000094F4
  GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL* = 0x000094F5
  GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL* = 0x000094F8
  GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL* = 0x000094F9
  GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL* = 0x000094FA
  GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL* = 0x000094FB
  GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL* = 0x000094FC
  GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL* = 0x000094FD
  GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL* = 0x000094FE
  GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL* = 0x000094FF
  GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL* = 0x00009500
  GL_KHR_blend_equation_advanced* = 1
  GL_BLEND_ADVANCED_COHERENT_KHR* = 0x00009285
  GL_MULTIPLY_KHR* = 0x00009294
  GL_SCREEN_KHR* = 0x00009295
  GL_OVERLAY_KHR* = 0x00009296
  GL_DARKEN_KHR* = 0x00009297
  GL_LIGHTEN_KHR* = 0x00009298
  GL_COLORDODGE_KHR* = 0x00009299
  GL_COLORBURN_KHR* = 0x0000929A
  GL_HARDLIGHT_KHR* = 0x0000929B
  GL_SOFTLIGHT_KHR* = 0x0000929C
  GL_DIFFERENCE_KHR* = 0x0000929E
  GL_EXCLUSION_KHR* = 0x000092A0
  GL_HSL_HUE_KHR* = 0x000092AD
  GL_HSL_SATURATION_KHR* = 0x000092AE
  GL_HSL_COLOR_KHR* = 0x000092AF
  GL_HSL_LUMINOSITY_KHR* = 0x000092B0
  GL_KHR_blend_equation_advanced_coherent* = 1
  GL_KHR_context_flush_control* = 1
  GL_KHR_debug* = 1
  GL_CONTEXT_FLAG_DEBUG_BIT* = 0x00000002
  GL_DEBUG_OUTPUT_SYNCHRONOUS* = 0x00008242
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH* = 0x00008243
  GL_DEBUG_CALLBACK_FUNCTION* = 0x00008244
  GL_DEBUG_CALLBACK_USER_PARAM* = 0x00008245
  GL_DEBUG_SOURCE_API* = 0x00008246
  GL_DEBUG_SOURCE_WINDOW_SYSTEM* = 0x00008247
  GL_DEBUG_SOURCE_SHADER_COMPILER* = 0x00008248
  GL_DEBUG_SOURCE_THIRD_PARTY* = 0x00008249
  GL_DEBUG_SOURCE_APPLICATION* = 0x0000824A
  GL_DEBUG_SOURCE_OTHER* = 0x0000824B
  GL_DEBUG_TYPE_ERROR* = 0x0000824C
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR* = 0x0000824D
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR* = 0x0000824E
  GL_DEBUG_TYPE_PORTABILITY* = 0x0000824F
  GL_DEBUG_TYPE_PERFORMANCE* = 0x00008250
  GL_DEBUG_TYPE_OTHER* = 0x00008251
  GL_DEBUG_TYPE_MARKER* = 0x00008268
  GL_DEBUG_TYPE_PUSH_GROUP* = 0x00008269
  GL_DEBUG_TYPE_POP_GROUP* = 0x0000826A
  GL_DEBUG_SEVERITY_NOTIFICATION* = 0x0000826B
  GL_MAX_DEBUG_GROUP_STACK_DEPTH* = 0x0000826C
  GL_DEBUG_GROUP_STACK_DEPTH* = 0x0000826D
  GL_BUFFER* = 0x000082E0
  GL_SHADER* = 0x000082E1
  GL_PROGRAM* = 0x000082E2
  GL_QUERY* = 0x000082E3
  GL_PROGRAM_PIPELINE* = 0x000082E4
  GL_SAMPLER* = 0x000082E6
  GL_DISPLAY_LIST* = 0x000082E7
  GL_MAX_LABEL_LENGTH* = 0x000082E8
  GL_MAX_DEBUG_MESSAGE_LENGTH* = 0x00009143
  GL_MAX_DEBUG_LOGGED_MESSAGES* = 0x00009144
  GL_DEBUG_LOGGED_MESSAGES* = 0x00009145
  GL_DEBUG_SEVERITY_HIGH* = 0x00009146
  GL_DEBUG_SEVERITY_MEDIUM* = 0x00009147
  GL_DEBUG_SEVERITY_LOW* = 0x00009148
  GL_DEBUG_OUTPUT* = 0x000092E0
  GL_KHR_no_error* = 1
  GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR* = 0x00000008
  GL_KHR_parallel_shader_compile* = 1
  GL_MAX_SHADER_COMPILER_THREADS_KHR* = 0x000091B0
  GL_COMPLETION_STATUS_KHR* = 0x000091B1
  GL_KHR_robust_buffer_access_behavior* = 1
  GL_KHR_robustness* = 1
  GL_CONTEXT_LOST* = 0x00000507
  GL_LOSE_CONTEXT_ON_RESET* = 0x00008252
  GL_GUILTY_CONTEXT_RESET* = 0x00008253
  GL_INNOCENT_CONTEXT_RESET* = 0x00008254
  GL_UNKNOWN_CONTEXT_RESET* = 0x00008255
  GL_RESET_NOTIFICATION_STRATEGY* = 0x00008256
  GL_NO_RESET_NOTIFICATION* = 0x00008261
  GL_CONTEXT_ROBUST_ACCESS* = 0x000090F3
  GL_KHR_texture_compression_astc_hdr* = 1
  GL_COMPRESSED_RGBA_ASTC_4x4_KHR* = 0x000093B0
  GL_COMPRESSED_RGBA_ASTC_5x4_KHR* = 0x000093B1
  GL_COMPRESSED_RGBA_ASTC_5x5_KHR* = 0x000093B2
  GL_COMPRESSED_RGBA_ASTC_6x5_KHR* = 0x000093B3
  GL_COMPRESSED_RGBA_ASTC_6x6_KHR* = 0x000093B4
  GL_COMPRESSED_RGBA_ASTC_8x5_KHR* = 0x000093B5
  GL_COMPRESSED_RGBA_ASTC_8x6_KHR* = 0x000093B6
  GL_COMPRESSED_RGBA_ASTC_8x8_KHR* = 0x000093B7
  GL_COMPRESSED_RGBA_ASTC_10x5_KHR* = 0x000093B8
  GL_COMPRESSED_RGBA_ASTC_10x6_KHR* = 0x000093B9
  GL_COMPRESSED_RGBA_ASTC_10x8_KHR* = 0x000093BA
  GL_COMPRESSED_RGBA_ASTC_10x10_KHR* = 0x000093BB
  GL_COMPRESSED_RGBA_ASTC_12x10_KHR* = 0x000093BC
  GL_COMPRESSED_RGBA_ASTC_12x12_KHR* = 0x000093BD
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR* = 0x000093D0
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR* = 0x000093D1
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR* = 0x000093D2
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR* = 0x000093D3
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR* = 0x000093D4
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR* = 0x000093D5
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR* = 0x000093D6
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR* = 0x000093D7
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR* = 0x000093D8
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR* = 0x000093D9
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR* = 0x000093DA
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR* = 0x000093DB
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR* = 0x000093DC
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR* = 0x000093DD
  GL_KHR_texture_compression_astc_ldr* = 1
  GL_KHR_texture_compression_astc_sliced_3d* = 1
  GL_KTX_buffer_region* = 1
  GL_KTX_FRONT_REGION* = 0x00000000
  GL_KTX_BACK_REGION* = 0x00000001
  GL_KTX_Z_REGION* = 0x00000002
  GL_KTX_STENCIL_REGION* = 0x00000003
  GL_MESAX_texture_stack* = 1
  GL_TEXTURE_1D_STACK_MESAX* = 0x00008759
  GL_TEXTURE_2D_STACK_MESAX* = 0x0000875A
  GL_PROXY_TEXTURE_1D_STACK_MESAX* = 0x0000875B
  GL_PROXY_TEXTURE_2D_STACK_MESAX* = 0x0000875C
  GL_TEXTURE_1D_STACK_BINDING_MESAX* = 0x0000875D
  GL_TEXTURE_2D_STACK_BINDING_MESAX* = 0x0000875E
  GL_MESA_pack_invert* = 1
  GL_PACK_INVERT_MESA* = 0x00008758
  GL_MESA_resize_buffers* = 1
  GL_MESA_shader_integer_functions* = 1
  GL_MESA_window_pos* = 1
  GL_MESA_ycbcr_texture* = 1
  GL_UNSIGNED_SHORT_8_8_MESA* = 0x000085BA
  GL_UNSIGNED_SHORT_8_8_REV_MESA* = 0x000085BB
  GL_YCBCR_MESA* = 0x00008757
  GL_NVX_blend_equation_advanced_multi_draw_buffers* = 1
  GL_NVX_conditional_render* = 1
  GL_NVX_gpu_memory_info* = 1
  GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX* = 0x00009047
  GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX* = 0x00009048
  GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX* = 0x00009049
  GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX* = 0x0000904A
  GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX* = 0x0000904B
  GL_NVX_linked_gpu_multicast* = 1
  GL_LGPU_SEPARATE_STORAGE_BIT_NVX* = 0x00000800
  GL_MAX_LGPU_GPUS_NVX* = 0x000092BA
  GL_NV_3dvision_settings* = 1
  GL_3DVISION_STEREO_NV* = 0x000090F4
  GL_STEREO_SEPARATION_NV* = 0x000090F5
  GL_STEREO_CONVERGENCE_NV* = 0x000090F6
  GL_STEREO_CUTOFF_NV* = 0x000090F7
  GL_STEREO_PROJECTION_NV* = 0x000090F8
  GL_STEREO_PROJECTION_PERSPECTIVE_NV* = 0x000090F9
  GL_STEREO_PROJECTION_ORTHO_NV* = 0x000090FA
  GL_NV_EGL_stream_consumer_external* = 1
  GL_TEXTURE_EXTERNAL_OES* = 0x00008D65
  GL_SAMPLER_EXTERNAL_OES* = 0x00008D66
  GL_TEXTURE_BINDING_EXTERNAL_OES* = 0x00008D67
  GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES* = 0x00008D68
  GL_NV_alpha_to_coverage_dither_control* = 1
  GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV* = 0x000092BF
  GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV* = 0x0000934D
  GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV* = 0x0000934E
  GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV* = 0x0000934F
  GL_NV_bgr* = 1
  GL_BGR_NV* = 0x000080E0
  GL_NV_bindless_multi_draw_indirect* = 1
  GL_NV_bindless_multi_draw_indirect_count* = 1
  GL_NV_bindless_texture* = 1
  GL_NV_blend_equation_advanced* = 1
  GL_XOR_NV* = 0x00001506
  GL_RED_NV* = 0x00001903
  GL_GREEN_NV* = 0x00001904
  GL_BLUE_NV* = 0x00001905
  GL_BLEND_PREMULTIPLIED_SRC_NV* = 0x00009280
  GL_BLEND_OVERLAP_NV* = 0x00009281
  GL_UNCORRELATED_NV* = 0x00009282
  GL_DISJOINT_NV* = 0x00009283
  GL_CONJOINT_NV* = 0x00009284
  GL_BLEND_ADVANCED_COHERENT_NV* = 0x00009285
  GL_SRC_NV* = 0x00009286
  GL_DST_NV* = 0x00009287
  GL_SRC_OVER_NV* = 0x00009288
  GL_DST_OVER_NV* = 0x00009289
  GL_SRC_IN_NV* = 0x0000928A
  GL_DST_IN_NV* = 0x0000928B
  GL_SRC_OUT_NV* = 0x0000928C
  GL_DST_OUT_NV* = 0x0000928D
  GL_SRC_ATOP_NV* = 0x0000928E
  GL_DST_ATOP_NV* = 0x0000928F
  GL_PLUS_NV* = 0x00009291
  GL_PLUS_DARKER_NV* = 0x00009292
  GL_MULTIPLY_NV* = 0x00009294
  GL_SCREEN_NV* = 0x00009295
  GL_OVERLAY_NV* = 0x00009296
  GL_DARKEN_NV* = 0x00009297
  GL_LIGHTEN_NV* = 0x00009298
  GL_COLORDODGE_NV* = 0x00009299
  GL_COLORBURN_NV* = 0x0000929A
  GL_HARDLIGHT_NV* = 0x0000929B
  GL_SOFTLIGHT_NV* = 0x0000929C
  GL_DIFFERENCE_NV* = 0x0000929E
  GL_MINUS_NV* = 0x0000929F
  GL_EXCLUSION_NV* = 0x000092A0
  GL_CONTRAST_NV* = 0x000092A1
  GL_INVERT_RGB_NV* = 0x000092A3
  GL_LINEARDODGE_NV* = 0x000092A4
  GL_LINEARBURN_NV* = 0x000092A5
  GL_VIVIDLIGHT_NV* = 0x000092A6
  GL_LINEARLIGHT_NV* = 0x000092A7
  GL_PINLIGHT_NV* = 0x000092A8
  GL_HARDMIX_NV* = 0x000092A9
  GL_HSL_HUE_NV* = 0x000092AD
  GL_HSL_SATURATION_NV* = 0x000092AE
  GL_HSL_COLOR_NV* = 0x000092AF
  GL_HSL_LUMINOSITY_NV* = 0x000092B0
  GL_PLUS_CLAMPED_NV* = 0x000092B1
  GL_PLUS_CLAMPED_ALPHA_NV* = 0x000092B2
  GL_MINUS_CLAMPED_NV* = 0x000092B3
  GL_INVERT_OVG_NV* = 0x000092B4
  GL_NV_blend_equation_advanced_coherent* = 1
  GL_NV_blend_minmax_factor* = 1
  GL_NV_blend_square* = 1
  GL_NV_clip_space_w_scaling* = 1
  GL_VIEWPORT_POSITION_W_SCALE_NV* = 0x0000937C
  GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV* = 0x0000937D
  GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV* = 0x0000937E
  GL_NV_command_list* = 1
  GL_TERMINATE_SEQUENCE_COMMAND_NV* = 0x00000000
  GL_NOP_COMMAND_NV* = 0x00000001
  GL_DRAW_ELEMENTS_COMMAND_NV* = 0x00000002
  GL_DRAW_ARRAYS_COMMAND_NV* = 0x00000003
  GL_DRAW_ELEMENTS_STRIP_COMMAND_NV* = 0x00000004
  GL_DRAW_ARRAYS_STRIP_COMMAND_NV* = 0x00000005
  GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV* = 0x00000006
  GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV* = 0x00000007
  GL_ELEMENT_ADDRESS_COMMAND_NV* = 0x00000008
  GL_ATTRIBUTE_ADDRESS_COMMAND_NV* = 0x00000009
  GL_UNIFORM_ADDRESS_COMMAND_NV* = 0x0000000A
  GL_BLEND_COLOR_COMMAND_NV* = 0x0000000B
  GL_STENCIL_REF_COMMAND_NV* = 0x0000000C
  GL_LINE_WIDTH_COMMAND_NV* = 0x0000000D
  GL_POLYGON_OFFSET_COMMAND_NV* = 0x0000000E
  GL_ALPHA_REF_COMMAND_NV* = 0x0000000F
  GL_VIEWPORT_COMMAND_NV* = 0x00000010
  GL_SCISSOR_COMMAND_NV* = 0x00000011
  GL_FRONT_FACE_COMMAND_NV* = 0x00000012
  GL_NV_compute_program5* = 1
  GL_COMPUTE_PROGRAM_NV* = 0x000090FB
  GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV* = 0x000090FC
  GL_NV_conditional_render* = 1
  GL_QUERY_WAIT_NV* = 0x00008E13
  GL_QUERY_NO_WAIT_NV* = 0x00008E14
  GL_QUERY_BY_REGION_WAIT_NV* = 0x00008E15
  GL_QUERY_BY_REGION_NO_WAIT_NV* = 0x00008E16
  GL_NV_conservative_raster* = 1
  GL_CONSERVATIVE_RASTERIZATION_NV* = 0x00009346
  GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV* = 0x00009347
  GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV* = 0x00009348
  GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV* = 0x00009349
  GL_NV_conservative_raster_dilate* = 1
  GL_CONSERVATIVE_RASTER_DILATE_NV* = 0x00009379
  GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV* = 0x0000937A
  GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV* = 0x0000937B
  GL_NV_conservative_raster_pre_snap_triangles* = 1
  GL_CONSERVATIVE_RASTER_MODE_NV* = 0x0000954D
  GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV* = 0x0000954E
  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV* = 0x0000954F
  GL_NV_copy_buffer* = 1
  GL_COPY_READ_BUFFER_NV* = 0x00008F36
  GL_COPY_WRITE_BUFFER_NV* = 0x00008F37
  GL_NV_copy_depth_to_color* = 1
  GL_DEPTH_STENCIL_TO_RGBA_NV* = 0x0000886E
  GL_DEPTH_STENCIL_TO_BGRA_NV* = 0x0000886F
  GL_NV_copy_image* = 1
  GL_NV_deep_texture3D* = 1
  GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV* = 0x000090D0
  GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV* = 0x000090D1
  GL_NV_depth_buffer_float* = 1
  GL_DEPTH_COMPONENT32F_NV* = 0x00008DAB
  GL_DEPTH32F_STENCIL8_NV* = 0x00008DAC
  GL_DEPTH_BUFFER_FLOAT_MODE_NV* = 0x00008DAF
  GL_NV_depth_clamp* = 1
  GL_DEPTH_CLAMP_NV* = 0x0000864F
  GL_NV_depth_range_unclamped* = 1
  GL_SAMPLE_COUNT_BITS_NV* = 0x00008864
  GL_CURRENT_SAMPLE_COUNT_QUERY_NV* = 0x00008865
  GL_QUERY_RESULT_NV* = 0x00008866
  GL_QUERY_RESULT_AVAILABLE_NV* = 0x00008867
  GL_SAMPLE_COUNT_NV* = 0x00008914
  GL_NV_draw_buffers* = 1
  GL_MAX_DRAW_BUFFERS_NV* = 0x00008824
  GL_DRAW_BUFFER0_NV* = 0x00008825
  GL_DRAW_BUFFER1_NV* = 0x00008826
  GL_DRAW_BUFFER2_NV* = 0x00008827
  GL_DRAW_BUFFER3_NV* = 0x00008828
  GL_DRAW_BUFFER4_NV* = 0x00008829
  GL_DRAW_BUFFER5_NV* = 0x0000882A
  GL_DRAW_BUFFER6_NV* = 0x0000882B
  GL_DRAW_BUFFER7_NV* = 0x0000882C
  GL_DRAW_BUFFER8_NV* = 0x0000882D
  GL_DRAW_BUFFER9_NV* = 0x0000882E
  GL_DRAW_BUFFER10_NV* = 0x0000882F
  GL_DRAW_BUFFER11_NV* = 0x00008830
  GL_DRAW_BUFFER12_NV* = 0x00008831
  GL_DRAW_BUFFER13_NV* = 0x00008832
  GL_DRAW_BUFFER14_NV* = 0x00008833
  GL_DRAW_BUFFER15_NV* = 0x00008834
  GL_COLOR_ATTACHMENT0_NV* = 0x00008CE0
  GL_COLOR_ATTACHMENT1_NV* = 0x00008CE1
  GL_COLOR_ATTACHMENT2_NV* = 0x00008CE2
  GL_COLOR_ATTACHMENT3_NV* = 0x00008CE3
  GL_COLOR_ATTACHMENT4_NV* = 0x00008CE4
  GL_COLOR_ATTACHMENT5_NV* = 0x00008CE5
  GL_COLOR_ATTACHMENT6_NV* = 0x00008CE6
  GL_COLOR_ATTACHMENT7_NV* = 0x00008CE7
  GL_COLOR_ATTACHMENT8_NV* = 0x00008CE8
  GL_COLOR_ATTACHMENT9_NV* = 0x00008CE9
  GL_COLOR_ATTACHMENT10_NV* = 0x00008CEA
  GL_COLOR_ATTACHMENT11_NV* = 0x00008CEB
  GL_COLOR_ATTACHMENT12_NV* = 0x00008CEC
  GL_COLOR_ATTACHMENT13_NV* = 0x00008CED
  GL_COLOR_ATTACHMENT14_NV* = 0x00008CEE
  GL_COLOR_ATTACHMENT15_NV* = 0x00008CEF
  GL_NV_draw_instanced* = 1
  GL_NV_draw_texture* = 1
  GL_NV_draw_vulkan_image* = 1
  GL_NV_evaluators* = 1
  GL_EVAL_2D_NV* = 0x000086C0
  GL_EVAL_TRIANGULAR_2D_NV* = 0x000086C1
  GL_MAP_TESSELLATION_NV* = 0x000086C2
  GL_MAP_ATTRIB_U_ORDER_NV* = 0x000086C3
  GL_MAP_ATTRIB_V_ORDER_NV* = 0x000086C4
  GL_EVAL_FRACTIONAL_TESSELLATION_NV* = 0x000086C5
  GL_EVAL_VERTEX_ATTRIB0_NV* = 0x000086C6
  GL_EVAL_VERTEX_ATTRIB1_NV* = 0x000086C7
  GL_EVAL_VERTEX_ATTRIB2_NV* = 0x000086C8
  GL_EVAL_VERTEX_ATTRIB3_NV* = 0x000086C9
  GL_EVAL_VERTEX_ATTRIB4_NV* = 0x000086CA
  GL_EVAL_VERTEX_ATTRIB5_NV* = 0x000086CB
  GL_EVAL_VERTEX_ATTRIB6_NV* = 0x000086CC
  GL_EVAL_VERTEX_ATTRIB7_NV* = 0x000086CD
  GL_EVAL_VERTEX_ATTRIB8_NV* = 0x000086CE
  GL_EVAL_VERTEX_ATTRIB9_NV* = 0x000086CF
  GL_EVAL_VERTEX_ATTRIB10_NV* = 0x000086D0
  GL_EVAL_VERTEX_ATTRIB11_NV* = 0x000086D1
  GL_EVAL_VERTEX_ATTRIB12_NV* = 0x000086D2
  GL_EVAL_VERTEX_ATTRIB13_NV* = 0x000086D3
  GL_EVAL_VERTEX_ATTRIB14_NV* = 0x000086D4
  GL_EVAL_VERTEX_ATTRIB15_NV* = 0x000086D5
  GL_MAX_MAP_TESSELLATION_NV* = 0x000086D6
  GL_MAX_RATIONAL_EVAL_ORDER_NV* = 0x000086D7
  GL_NV_explicit_attrib_location* = 1
  GL_NV_explicit_multisample* = 1
  GL_SAMPLE_POSITION_NV* = 0x00008E50
  GL_SAMPLE_MASK_NV* = 0x00008E51
  GL_SAMPLE_MASK_VALUE_NV* = 0x00008E52
  GL_TEXTURE_BINDING_RENDERBUFFER_NV* = 0x00008E53
  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV* = 0x00008E54
  GL_TEXTURE_RENDERBUFFER_NV* = 0x00008E55
  GL_SAMPLER_RENDERBUFFER_NV* = 0x00008E56
  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV* = 0x00008E58
  GL_MAX_SAMPLE_MASK_WORDS_NV* = 0x00008E59
  GL_NV_fbo_color_attachments* = 1
  GL_MAX_COLOR_ATTACHMENTS_NV* = 0x00008CDF
  GL_NV_fence* = 1
  GL_ALL_COMPLETED_NV* = 0x000084F2
  GL_FENCE_STATUS_NV* = 0x000084F3
  GL_FENCE_CONDITION_NV* = 0x000084F4
  GL_NV_fill_rectangle* = 1
  GL_FILL_RECTANGLE_NV* = 0x0000933C
  GL_NV_float_buffer* = 1
  GL_TEXTURE_FLOAT_COMPONENTS_NV* = 0x0000888C
  GL_NV_fog_distance* = 1
  GL_FOG_DISTANCE_MODE_NV* = 0x0000855A
  GL_EYE_RADIAL_NV* = 0x0000855B
  GL_EYE_PLANE_ABSOLUTE_NV* = 0x0000855C
  GL_NV_fragment_coverage_to_color* = 1
  GL_FRAGMENT_COVERAGE_TO_COLOR_NV* = 0x000092DD
  GL_FRAGMENT_COVERAGE_COLOR_NV* = 0x000092DE
  GL_NV_fragment_program* = 1
  GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV* = 0x00008868
  GL_FRAGMENT_PROGRAM_NV* = 0x00008870
  GL_MAX_TEXTURE_COORDS_NV* = 0x00008871
  GL_MAX_TEXTURE_IMAGE_UNITS_NV* = 0x00008872
  GL_FRAGMENT_PROGRAM_BINDING_NV* = 0x00008873
  GL_PROGRAM_ERROR_STRING_NV* = 0x00008874
  GL_NV_fragment_program2* = 1
  GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV* = 0x000088F4
  GL_MAX_PROGRAM_CALL_DEPTH_NV* = 0x000088F5
  GL_MAX_PROGRAM_IF_DEPTH_NV* = 0x000088F6
  GL_MAX_PROGRAM_LOOP_DEPTH_NV* = 0x000088F7
  GL_MAX_PROGRAM_LOOP_COUNT_NV* = 0x000088F8
  GL_NV_fragment_program4* = 1
  GL_NV_fragment_program_option* = 1
  GL_NV_fragment_shader_interlock* = 1
  GL_NV_framebuffer_blit* = 1
  GL_DRAW_FRAMEBUFFER_BINDING_NV* = 0x00008CA6
  GL_READ_FRAMEBUFFER_NV* = 0x00008CA8
  GL_DRAW_FRAMEBUFFER_NV* = 0x00008CA9
  GL_READ_FRAMEBUFFER_BINDING_NV* = 0x00008CAA
  GL_NV_framebuffer_mixed_samples* = 1
  GL_NV_framebuffer_multisample* = 1
  GL_RENDERBUFFER_SAMPLES_NV* = 0x00008CAB
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV* = 0x00008D56
  GL_MAX_SAMPLES_NV* = 0x00008D57
  GL_NV_framebuffer_multisample_coverage* = 1
  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV* = 0x00008CAB
  GL_RENDERBUFFER_COLOR_SAMPLES_NV* = 0x00008E10
  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV* = 0x00008E11
  GL_MULTISAMPLE_COVERAGE_MODES_NV* = 0x00008E12
  GL_NV_generate_mipmap_sRGB* = 1
  GL_NV_geometry_program4* = 1
  GL_GEOMETRY_PROGRAM_NV* = 0x00008C26
  GL_MAX_PROGRAM_OUTPUT_VERTICES_NV* = 0x00008C27
  GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV* = 0x00008C28
  GL_NV_geometry_shader4* = 1
  GL_NV_geometry_shader_passthrough* = 1
  GL_NV_gpu_multicast* = 1
  GL_PER_GPU_STORAGE_BIT_NV* = 0x00000800
  GL_MULTICAST_GPUS_NV* = 0x000092BA
  GL_PER_GPU_STORAGE_NV* = 0x00009548
  GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV* = 0x00009549
  GL_RENDER_GPU_MASK_NV* = 0x00009558
  GL_NV_gpu_program4* = 1
  GL_MIN_PROGRAM_TEXEL_OFFSET_NV* = 0x00008904
  GL_MAX_PROGRAM_TEXEL_OFFSET_NV* = 0x00008905
  GL_PROGRAM_ATTRIB_COMPONENTS_NV* = 0x00008906
  GL_PROGRAM_RESULT_COMPONENTS_NV* = 0x00008907
  GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV* = 0x00008908
  GL_MAX_PROGRAM_RESULT_COMPONENTS_NV* = 0x00008909
  GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV* = 0x00008DA5
  GL_MAX_PROGRAM_GENERIC_RESULTS_NV* = 0x00008DA6
  GL_NV_gpu_program5* = 1
  GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV* = 0x00008E5A
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV* = 0x00008E5B
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV* = 0x00008E5C
  GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV* = 0x00008E5D
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV* = 0x00008E5E
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV* = 0x00008E5F
  GL_NV_gpu_program5_mem_extended* = 1
  GL_NV_gpu_program_fp64* = 1
  GL_NV_gpu_shader5* = 1
  GL_UNSIGNED_INT64_NV* = 0x0000140F
  GL_UNSIGNED_INT8_NV* = 0x00008FEC
  GL_UNSIGNED_INT8_VEC2_NV* = 0x00008FED
  GL_UNSIGNED_INT8_VEC3_NV* = 0x00008FEE
  GL_UNSIGNED_INT8_VEC4_NV* = 0x00008FEF
  GL_UNSIGNED_INT16_NV* = 0x00008FF0
  GL_UNSIGNED_INT16_VEC2_NV* = 0x00008FF1
  GL_UNSIGNED_INT16_VEC3_NV* = 0x00008FF2
  GL_UNSIGNED_INT16_VEC4_NV* = 0x00008FF3
  GL_UNSIGNED_INT64_VEC2_NV* = 0x00008FF5
  GL_UNSIGNED_INT64_VEC3_NV* = 0x00008FF6
  GL_UNSIGNED_INT64_VEC4_NV* = 0x00008FF7
  GL_NV_half_float* = 1
  GL_HALF_FLOAT_NV* = 0x0000140B
  GL_NV_image_formats* = 1
  GL_NV_instanced_arrays* = 1
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV* = 0x000088FE
  GL_NV_internalformat_sample_query* = 1
  GL_MULTISAMPLES_NV* = 0x00009371
  GL_SUPERSAMPLE_SCALE_X_NV* = 0x00009372
  GL_SUPERSAMPLE_SCALE_Y_NV* = 0x00009373
  GL_CONFORMANT_NV* = 0x00009374
  GL_NV_light_max_exponent* = 1
  GL_MAX_SHININESS_NV* = 0x00008504
  GL_MAX_SPOT_EXPONENT_NV* = 0x00008505
  GL_NV_multisample_coverage* = 1
  GL_NV_multisample_filter_hint* = 1
  GL_MULTISAMPLE_FILTER_HINT_NV* = 0x00008534
  GL_NV_non_square_matrices* = 1
  GL_NV_occlusion_query* = 1
  GL_PIXEL_COUNTER_BITS_NV* = 0x00008864
  GL_CURRENT_OCCLUSION_QUERY_ID_NV* = 0x00008865
  GL_PIXEL_COUNT_NV* = 0x00008866
  GL_PIXEL_COUNT_AVAILABLE_NV* = 0x00008867
  GL_NV_pack_subimage* = 1
  GL_PACK_ROW_LENGTH_NV* = 0x00000D02
  GL_PACK_SKIP_ROWS_NV* = 0x00000D03
  GL_PACK_SKIP_PIXELS_NV* = 0x00000D04
  GL_NV_packed_depth_stencil* = 1
  GL_DEPTH_STENCIL_NV* = 0x000084F9
  GL_UNSIGNED_INT_24_8_NV* = 0x000084FA
  GL_NV_packed_float* = 1
  GL_R11F_G11F_B10F_NV* = 0x00008C3A
  GL_UNSIGNED_INT_10F_11F_11F_REV_NV* = 0x00008C3B
  GL_NV_packed_float_linear* = 1
  GL_NV_parameter_buffer_object* = 1
  GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV* = 0x00008DA0
  GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV* = 0x00008DA1
  GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV* = 0x00008DA2
  GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV* = 0x00008DA3
  GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV* = 0x00008DA4
  GL_NV_parameter_buffer_object2* = 1
  GL_NV_path_rendering* = 1
  GL_CLOSE_PATH_NV* = 0x00000000
  GL_BOLD_BIT_NV* = 0x00000001
  GL_GLYPH_WIDTH_BIT_NV* = 0x00000001
  GL_GLYPH_HEIGHT_BIT_NV* = 0x00000002
  GL_ITALIC_BIT_NV* = 0x00000002
  GL_MOVE_TO_NV* = 0x00000002
  GL_RELATIVE_MOVE_TO_NV* = 0x00000003
  GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV* = 0x00000004
  GL_LINE_TO_NV* = 0x00000004
  GL_RELATIVE_LINE_TO_NV* = 0x00000005
  GL_HORIZONTAL_LINE_TO_NV* = 0x00000006
  GL_RELATIVE_HORIZONTAL_LINE_TO_NV* = 0x00000007
  GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV* = 0x00000008
  GL_VERTICAL_LINE_TO_NV* = 0x00000008
  GL_RELATIVE_VERTICAL_LINE_TO_NV* = 0x00000009
  GL_QUADRATIC_CURVE_TO_NV* = 0x0000000A
  GL_RELATIVE_QUADRATIC_CURVE_TO_NV* = 0x0000000B
  GL_CUBIC_CURVE_TO_NV* = 0x0000000C
  GL_RELATIVE_CUBIC_CURVE_TO_NV* = 0x0000000D
  GL_SMOOTH_QUADRATIC_CURVE_TO_NV* = 0x0000000E
  GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV* = 0x0000000F
  GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV* = 0x00000010
  GL_SMOOTH_CUBIC_CURVE_TO_NV* = 0x00000010
  GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV* = 0x00000011
  GL_SMALL_CCW_ARC_TO_NV* = 0x00000012
  GL_RELATIVE_SMALL_CCW_ARC_TO_NV* = 0x00000013
  GL_SMALL_CW_ARC_TO_NV* = 0x00000014
  GL_RELATIVE_SMALL_CW_ARC_TO_NV* = 0x00000015
  GL_LARGE_CCW_ARC_TO_NV* = 0x00000016
  GL_RELATIVE_LARGE_CCW_ARC_TO_NV* = 0x00000017
  GL_LARGE_CW_ARC_TO_NV* = 0x00000018
  GL_RELATIVE_LARGE_CW_ARC_TO_NV* = 0x00000019
  GL_CONIC_CURVE_TO_NV* = 0x0000001A
  GL_RELATIVE_CONIC_CURVE_TO_NV* = 0x0000001B
  GL_GLYPH_VERTICAL_BEARING_X_BIT_NV* = 0x00000020
  GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV* = 0x00000040
  GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV* = 0x00000080
  GL_ROUNDED_RECT_NV* = 0x000000E8
  GL_RELATIVE_ROUNDED_RECT_NV* = 0x000000E9
  GL_ROUNDED_RECT2_NV* = 0x000000EA
  GL_RELATIVE_ROUNDED_RECT2_NV* = 0x000000EB
  GL_ROUNDED_RECT4_NV* = 0x000000EC
  GL_RELATIVE_ROUNDED_RECT4_NV* = 0x000000ED
  GL_ROUNDED_RECT8_NV* = 0x000000EE
  GL_RELATIVE_ROUNDED_RECT8_NV* = 0x000000EF
  GL_RESTART_PATH_NV* = 0x000000F0
  GL_DUP_FIRST_CUBIC_CURVE_TO_NV* = 0x000000F2
  GL_DUP_LAST_CUBIC_CURVE_TO_NV* = 0x000000F4
  GL_RECT_NV* = 0x000000F6
  GL_RELATIVE_RECT_NV* = 0x000000F7
  GL_CIRCULAR_CCW_ARC_TO_NV* = 0x000000F8
  GL_CIRCULAR_CW_ARC_TO_NV* = 0x000000FA
  GL_CIRCULAR_TANGENT_ARC_TO_NV* = 0x000000FC
  GL_ARC_TO_NV* = 0x000000FE
  GL_RELATIVE_ARC_TO_NV* = 0x000000FF
  GL_GLYPH_HAS_KERNING_BIT_NV* = 0x00000100
  GL_PRIMARY_COLOR_NV* = 0x0000852C
  GL_SECONDARY_COLOR_NV* = 0x0000852D
  GL_PATH_FORMAT_SVG_NV* = 0x00009070
  GL_PATH_FORMAT_PS_NV* = 0x00009071
  GL_STANDARD_FONT_NAME_NV* = 0x00009072
  GL_SYSTEM_FONT_NAME_NV* = 0x00009073
  GL_FILE_NAME_NV* = 0x00009074
  GL_PATH_STROKE_WIDTH_NV* = 0x00009075
  GL_PATH_END_CAPS_NV* = 0x00009076
  GL_PATH_INITIAL_END_CAP_NV* = 0x00009077
  GL_PATH_TERMINAL_END_CAP_NV* = 0x00009078
  GL_PATH_JOIN_STYLE_NV* = 0x00009079
  GL_PATH_MITER_LIMIT_NV* = 0x0000907A
  GL_PATH_DASH_CAPS_NV* = 0x0000907B
  GL_PATH_INITIAL_DASH_CAP_NV* = 0x0000907C
  GL_PATH_TERMINAL_DASH_CAP_NV* = 0x0000907D
  GL_PATH_DASH_OFFSET_NV* = 0x0000907E
  GL_PATH_CLIENT_LENGTH_NV* = 0x0000907F
  GL_PATH_FILL_MODE_NV* = 0x00009080
  GL_PATH_FILL_MASK_NV* = 0x00009081
  GL_PATH_FILL_COVER_MODE_NV* = 0x00009082
  GL_PATH_STROKE_COVER_MODE_NV* = 0x00009083
  GL_PATH_STROKE_MASK_NV* = 0x00009084
  GL_PATH_STROKE_BOUND_NV* = 0x00009086
  GL_COUNT_UP_NV* = 0x00009088
  GL_COUNT_DOWN_NV* = 0x00009089
  GL_PATH_OBJECT_BOUNDING_BOX_NV* = 0x0000908A
  GL_CONVEX_HULL_NV* = 0x0000908B
  GL_BOUNDING_BOX_NV* = 0x0000908D
  GL_TRANSLATE_X_NV* = 0x0000908E
  GL_TRANSLATE_Y_NV* = 0x0000908F
  GL_TRANSLATE_2D_NV* = 0x00009090
  GL_TRANSLATE_3D_NV* = 0x00009091
  GL_AFFINE_2D_NV* = 0x00009092
  GL_AFFINE_3D_NV* = 0x00009094
  GL_TRANSPOSE_AFFINE_2D_NV* = 0x00009096
  GL_TRANSPOSE_AFFINE_3D_NV* = 0x00009098
  GL_UTF8_NV* = 0x0000909A
  GL_UTF16_NV* = 0x0000909B
  GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV* = 0x0000909C
  GL_PATH_COMMAND_COUNT_NV* = 0x0000909D
  GL_PATH_COORD_COUNT_NV* = 0x0000909E
  GL_PATH_DASH_ARRAY_COUNT_NV* = 0x0000909F
  GL_PATH_COMPUTED_LENGTH_NV* = 0x000090A0
  GL_PATH_FILL_BOUNDING_BOX_NV* = 0x000090A1
  GL_PATH_STROKE_BOUNDING_BOX_NV* = 0x000090A2
  GL_SQUARE_NV* = 0x000090A3
  GL_ROUND_NV* = 0x000090A4
  GL_TRIANGULAR_NV* = 0x000090A5
  GL_BEVEL_NV* = 0x000090A6
  GL_MITER_REVERT_NV* = 0x000090A7
  GL_MITER_TRUNCATE_NV* = 0x000090A8
  GL_SKIP_MISSING_GLYPH_NV* = 0x000090A9
  GL_USE_MISSING_GLYPH_NV* = 0x000090AA
  GL_PATH_ERROR_POSITION_NV* = 0x000090AB
  GL_PATH_FOG_GEN_MODE_NV* = 0x000090AC
  GL_ACCUM_ADJACENT_PAIRS_NV* = 0x000090AD
  GL_ADJACENT_PAIRS_NV* = 0x000090AE
  GL_FIRST_TO_REST_NV* = 0x000090AF
  GL_PATH_GEN_MODE_NV* = 0x000090B0
  GL_PATH_GEN_COEFF_NV* = 0x000090B1
  GL_PATH_GEN_COLOR_FORMAT_NV* = 0x000090B2
  GL_PATH_GEN_COMPONENTS_NV* = 0x000090B3
  GL_PATH_DASH_OFFSET_RESET_NV* = 0x000090B4
  GL_MOVE_TO_RESETS_NV* = 0x000090B5
  GL_MOVE_TO_CONTINUES_NV* = 0x000090B6
  GL_PATH_STENCIL_FUNC_NV* = 0x000090B7
  GL_PATH_STENCIL_REF_NV* = 0x000090B8
  GL_PATH_STENCIL_VALUE_MASK_NV* = 0x000090B9
  GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV* = 0x000090BD
  GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV* = 0x000090BE
  GL_PATH_COVER_DEPTH_FUNC_NV* = 0x000090BF
  GL_FONT_GLYPHS_AVAILABLE_NV* = 0x00009368
  GL_FONT_TARGET_UNAVAILABLE_NV* = 0x00009369
  GL_FONT_UNAVAILABLE_NV* = 0x0000936A
  GL_FONT_UNINTELLIGIBLE_NV* = 0x0000936B
  GL_STANDARD_FONT_FORMAT_NV* = 0x0000936C
  GL_FRAGMENT_INPUT_NV* = 0x0000936D
  GL_FONT_X_MIN_BOUNDS_BIT_NV* = 0x00010000
  GL_FONT_Y_MIN_BOUNDS_BIT_NV* = 0x00020000
  GL_FONT_X_MAX_BOUNDS_BIT_NV* = 0x00040000
  GL_FONT_Y_MAX_BOUNDS_BIT_NV* = 0x00080000
  GL_FONT_UNITS_PER_EM_BIT_NV* = 0x00100000
  GL_FONT_ASCENDER_BIT_NV* = 0x00200000
  GL_FONT_DESCENDER_BIT_NV* = 0x00400000
  GL_FONT_HEIGHT_BIT_NV* = 0x00800000
  GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV* = 0x01000000
  GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV* = 0x02000000
  GL_FONT_UNDERLINE_POSITION_BIT_NV* = 0x04000000
  GL_FONT_UNDERLINE_THICKNESS_BIT_NV* = 0x08000000
  GL_FONT_HAS_KERNING_BIT_NV* = 0x10000000
  GL_FONT_NUM_GLYPH_INDICES_BIT_NV* = 0x20000000
  GL_NV_path_rendering_shared_edge* = 1
  GL_SHARED_EDGE_NV* = 0x000000C0
  GL_NV_pixel_buffer_object* = 1
  GL_PIXEL_PACK_BUFFER_NV* = 0x000088EB
  GL_PIXEL_UNPACK_BUFFER_NV* = 0x000088EC
  GL_PIXEL_PACK_BUFFER_BINDING_NV* = 0x000088ED
  GL_PIXEL_UNPACK_BUFFER_BINDING_NV* = 0x000088EF
  GL_NV_pixel_data_range* = 1
  GL_WRITE_PIXEL_DATA_RANGE_NV* = 0x00008878
  GL_READ_PIXEL_DATA_RANGE_NV* = 0x00008879
  GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV* = 0x0000887A
  GL_READ_PIXEL_DATA_RANGE_LENGTH_NV* = 0x0000887B
  GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV* = 0x0000887C
  GL_READ_PIXEL_DATA_RANGE_POINTER_NV* = 0x0000887D
  GL_NV_platform_binary* = 1
  GL_NVIDIA_PLATFORM_BINARY_NV* = 0x0000890B
  GL_NV_point_sprite* = 1
  GL_POINT_SPRITE_NV* = 0x00008861
  GL_COORD_REPLACE_NV* = 0x00008862
  GL_POINT_SPRITE_R_MODE_NV* = 0x00008863
  GL_NV_polygon_mode* = 1
  GL_POLYGON_MODE_NV* = 0x00000B40
  GL_POINT_NV* = 0x00001B00
  GL_LINE_NV* = 0x00001B01
  GL_FILL_NV* = 0x00001B02
  GL_POLYGON_OFFSET_POINT_NV* = 0x00002A01
  GL_POLYGON_OFFSET_LINE_NV* = 0x00002A02
  GL_NV_present_video* = 1
  GL_FRAME_NV* = 0x00008E26
  GL_FIELDS_NV* = 0x00008E27
  GL_CURRENT_TIME_NV* = 0x00008E28
  GL_NUM_FILL_STREAMS_NV* = 0x00008E29
  GL_PRESENT_TIME_NV* = 0x00008E2A
  GL_PRESENT_DURATION_NV* = 0x00008E2B
  GL_NV_primitive_restart* = 1
  GL_PRIMITIVE_RESTART_NV* = 0x00008558
  GL_PRIMITIVE_RESTART_INDEX_NV* = 0x00008559
  GL_NV_read_depth* = 1
  GL_NV_read_depth_stencil* = 1
  GL_NV_read_stencil* = 1
  GL_NV_register_combiners* = 1
  GL_REGISTER_COMBINERS_NV* = 0x00008522
  GL_VARIABLE_A_NV* = 0x00008523
  GL_VARIABLE_B_NV* = 0x00008524
  GL_VARIABLE_C_NV* = 0x00008525
  GL_VARIABLE_D_NV* = 0x00008526
  GL_VARIABLE_E_NV* = 0x00008527
  GL_VARIABLE_F_NV* = 0x00008528
  GL_VARIABLE_G_NV* = 0x00008529
  GL_CONSTANT_COLOR0_NV* = 0x0000852A
  GL_CONSTANT_COLOR1_NV* = 0x0000852B
  GL_SPARE0_NV* = 0x0000852E
  GL_SPARE1_NV* = 0x0000852F
  GL_DISCARD_NV* = 0x00008530
  GL_E_TIMES_F_NV* = 0x00008531
  GL_SPARE0_PLUS_SECONDARY_COLOR_NV* = 0x00008532
  GL_UNSIGNED_IDENTITY_NV* = 0x00008536
  GL_UNSIGNED_INVERT_NV* = 0x00008537
  GL_EXPAND_NORMAL_NV* = 0x00008538
  GL_EXPAND_NEGATE_NV* = 0x00008539
  GL_HALF_BIAS_NORMAL_NV* = 0x0000853A
  GL_HALF_BIAS_NEGATE_NV* = 0x0000853B
  GL_SIGNED_IDENTITY_NV* = 0x0000853C
  GL_SIGNED_NEGATE_NV* = 0x0000853D
  GL_SCALE_BY_TWO_NV* = 0x0000853E
  GL_SCALE_BY_FOUR_NV* = 0x0000853F
  GL_SCALE_BY_ONE_HALF_NV* = 0x00008540
  GL_BIAS_BY_NEGATIVE_ONE_HALF_NV* = 0x00008541
  GL_COMBINER_INPUT_NV* = 0x00008542
  GL_COMBINER_MAPPING_NV* = 0x00008543
  GL_COMBINER_COMPONENT_USAGE_NV* = 0x00008544
  GL_COMBINER_AB_DOT_PRODUCT_NV* = 0x00008545
  GL_COMBINER_CD_DOT_PRODUCT_NV* = 0x00008546
  GL_COMBINER_MUX_SUM_NV* = 0x00008547
  GL_COMBINER_SCALE_NV* = 0x00008548
  GL_COMBINER_BIAS_NV* = 0x00008549
  GL_COMBINER_AB_OUTPUT_NV* = 0x0000854A
  GL_COMBINER_CD_OUTPUT_NV* = 0x0000854B
  GL_COMBINER_SUM_OUTPUT_NV* = 0x0000854C
  GL_MAX_GENERAL_COMBINERS_NV* = 0x0000854D
  GL_NUM_GENERAL_COMBINERS_NV* = 0x0000854E
  GL_COLOR_SUM_CLAMP_NV* = 0x0000854F
  GL_COMBINER0_NV* = 0x00008550
  GL_COMBINER1_NV* = 0x00008551
  GL_COMBINER2_NV* = 0x00008552
  GL_COMBINER3_NV* = 0x00008553
  GL_COMBINER4_NV* = 0x00008554
  GL_COMBINER5_NV* = 0x00008555
  GL_COMBINER6_NV* = 0x00008556
  GL_COMBINER7_NV* = 0x00008557
  GL_NV_register_combiners2* = 1
  GL_PER_STAGE_CONSTANTS_NV* = 0x00008535
  GL_NV_robustness_video_memory_purge* = 1
  GL_NV_sRGB_formats* = 1
  GL_ETC1_SRGB8_NV* = 0x000088EE
  GL_SRGB8_NV* = 0x00008C41
  GL_SLUMINANCE_ALPHA_NV* = 0x00008C44
  GL_SLUMINANCE8_ALPHA8_NV* = 0x00008C45
  GL_SLUMINANCE_NV* = 0x00008C46
  GL_SLUMINANCE8_NV* = 0x00008C47
  GL_COMPRESSED_SRGB_S3TC_DXT1_NV* = 0x00008C4C
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV* = 0x00008C4D
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV* = 0x00008C4E
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV* = 0x00008C4F
  GL_NV_sample_locations* = 1
  GL_SAMPLE_LOCATION_NV* = 0x00008E50
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV* = 0x0000933D
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV* = 0x0000933E
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV* = 0x0000933F
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV* = 0x00009340
  GL_PROGRAMMABLE_SAMPLE_LOCATION_NV* = 0x00009341
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV* = 0x00009342
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV* = 0x00009343
  GL_NV_sample_mask_override_coverage* = 1
  GL_NV_shader_atomic_counters* = 1
  GL_NV_shader_atomic_float* = 1
  GL_NV_shader_atomic_float64* = 1
  GL_NV_shader_atomic_fp16_vector* = 1
  GL_NV_shader_atomic_int64* = 1
  GL_NV_shader_buffer_load* = 1
  GL_BUFFER_GPU_ADDRESS_NV* = 0x00008F1D
  GL_GPU_ADDRESS_NV* = 0x00008F34
  GL_MAX_SHADER_BUFFER_ADDRESS_NV* = 0x00008F35
  GL_NV_shader_noperspective_interpolation* = 1
  GL_NV_shader_storage_buffer_object* = 1
  GL_NV_shader_thread_group* = 1
  GL_WARP_SIZE_NV* = 0x00009339
  GL_WARPS_PER_SM_NV* = 0x0000933A
  GL_SM_COUNT_NV* = 0x0000933B
  GL_NV_shader_thread_shuffle* = 1
  GL_NV_shadow_samplers_array* = 1
  GL_SAMPLER_2D_ARRAY_SHADOW_NV* = 0x00008DC4
  GL_NV_shadow_samplers_cube* = 1
  GL_SAMPLER_CUBE_SHADOW_NV* = 0x00008DC5
  GL_NV_stereo_view_rendering* = 1
  GL_NV_tessellation_program5* = 1
  GL_MAX_PROGRAM_PATCH_ATTRIBS_NV* = 0x000086D8
  GL_TESS_CONTROL_PROGRAM_NV* = 0x0000891E
  GL_TESS_EVALUATION_PROGRAM_NV* = 0x0000891F
  GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV* = 0x00008C74
  GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV* = 0x00008C75
  GL_NV_texgen_emboss* = 1
  GL_EMBOSS_LIGHT_NV* = 0x0000855D
  GL_EMBOSS_CONSTANT_NV* = 0x0000855E
  GL_EMBOSS_MAP_NV* = 0x0000855F
  GL_NV_texgen_reflection* = 1
  GL_NORMAL_MAP_NV* = 0x00008511
  GL_REFLECTION_MAP_NV* = 0x00008512
  GL_NV_texture_array* = 1
  GL_UNPACK_SKIP_IMAGES_NV* = 0x0000806D
  GL_UNPACK_IMAGE_HEIGHT_NV* = 0x0000806E
  GL_MAX_ARRAY_TEXTURE_LAYERS_NV* = 0x000088FF
  GL_TEXTURE_2D_ARRAY_NV* = 0x00008C1A
  GL_TEXTURE_BINDING_2D_ARRAY_NV* = 0x00008C1D
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_NV* = 0x00008CD4
  GL_SAMPLER_2D_ARRAY_NV* = 0x00008DC1
  GL_NV_texture_barrier* = 1
  GL_NV_texture_border_clamp* = 1
  GL_TEXTURE_BORDER_COLOR_NV* = 0x00001004
  GL_CLAMP_TO_BORDER_NV* = 0x0000812D
  GL_NV_texture_compression_latc* = 1
  GL_COMPRESSED_LUMINANCE_LATC1_NV* = 0x00008C70
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_NV* = 0x00008C71
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_NV* = 0x00008C72
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_NV* = 0x00008C73
  GL_NV_texture_compression_s3tc* = 1
  GL_COMPRESSED_RGB_S3TC_DXT1_NV* = 0x000083F0
  GL_COMPRESSED_RGBA_S3TC_DXT1_NV* = 0x000083F1
  GL_COMPRESSED_RGBA_S3TC_DXT3_NV* = 0x000083F2
  GL_COMPRESSED_RGBA_S3TC_DXT5_NV* = 0x000083F3
  GL_NV_texture_compression_s3tc_update* = 1
  GL_NV_texture_compression_vtc* = 1
  GL_NV_texture_env_combine4* = 1
  GL_COMBINE4_NV* = 0x00008503
  GL_SOURCE3_RGB_NV* = 0x00008583
  GL_SOURCE3_ALPHA_NV* = 0x0000858B
  GL_OPERAND3_RGB_NV* = 0x00008593
  GL_OPERAND3_ALPHA_NV* = 0x0000859B
  GL_NV_texture_expand_normal* = 1
  GL_TEXTURE_UNSIGNED_REMAP_MODE_NV* = 0x0000888F
  GL_NV_texture_multisample* = 1
  GL_TEXTURE_COVERAGE_SAMPLES_NV* = 0x00009045
  GL_TEXTURE_COLOR_SAMPLES_NV* = 0x00009046
  GL_NV_texture_npot_2D_mipmap* = 1
  GL_NV_texture_rectangle* = 1
  GL_TEXTURE_RECTANGLE_NV* = 0x000084F5
  GL_TEXTURE_BINDING_RECTANGLE_NV* = 0x000084F6
  GL_PROXY_TEXTURE_RECTANGLE_NV* = 0x000084F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE_NV* = 0x000084F8
  GL_NV_texture_rectangle_compressed* = 1
  GL_NV_texture_shader* = 1
  GL_OFFSET_TEXTURE_RECTANGLE_NV* = 0x0000864C
  GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV* = 0x0000864D
  GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV* = 0x0000864E
  GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV* = 0x000086D9
  GL_UNSIGNED_INT_S8_S8_8_8_NV* = 0x000086DA
  GL_UNSIGNED_INT_8_8_S8_S8_REV_NV* = 0x000086DB
  GL_DSDT_MAG_INTENSITY_NV* = 0x000086DC
  GL_SHADER_CONSISTENT_NV* = 0x000086DD
  GL_TEXTURE_SHADER_NV* = 0x000086DE
  GL_SHADER_OPERATION_NV* = 0x000086DF
  GL_CULL_MODES_NV* = 0x000086E0
  GL_OFFSET_TEXTURE_2D_MATRIX_NV* = 0x000086E1
  GL_OFFSET_TEXTURE_MATRIX_NV* = 0x000086E1
  GL_OFFSET_TEXTURE_2D_SCALE_NV* = 0x000086E2
  GL_OFFSET_TEXTURE_SCALE_NV* = 0x000086E2
  GL_OFFSET_TEXTURE_2D_BIAS_NV* = 0x000086E3
  GL_OFFSET_TEXTURE_BIAS_NV* = 0x000086E3
  GL_PREVIOUS_TEXTURE_INPUT_NV* = 0x000086E4
  GL_CONST_EYE_NV* = 0x000086E5
  GL_PASS_THROUGH_NV* = 0x000086E6
  GL_CULL_FRAGMENT_NV* = 0x000086E7
  GL_OFFSET_TEXTURE_2D_NV* = 0x000086E8
  GL_DEPENDENT_AR_TEXTURE_2D_NV* = 0x000086E9
  GL_DEPENDENT_GB_TEXTURE_2D_NV* = 0x000086EA
  GL_DOT_PRODUCT_NV* = 0x000086EC
  GL_DOT_PRODUCT_DEPTH_REPLACE_NV* = 0x000086ED
  GL_DOT_PRODUCT_TEXTURE_2D_NV* = 0x000086EE
  GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV* = 0x000086F0
  GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV* = 0x000086F1
  GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV* = 0x000086F2
  GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV* = 0x000086F3
  GL_HILO_NV* = 0x000086F4
  GL_DSDT_NV* = 0x000086F5
  GL_DSDT_MAG_NV* = 0x000086F6
  GL_DSDT_MAG_VIB_NV* = 0x000086F7
  GL_HILO16_NV* = 0x000086F8
  GL_SIGNED_HILO_NV* = 0x000086F9
  GL_SIGNED_HILO16_NV* = 0x000086FA
  GL_SIGNED_RGBA_NV* = 0x000086FB
  GL_SIGNED_RGBA8_NV* = 0x000086FC
  GL_SIGNED_RGB_NV* = 0x000086FE
  GL_SIGNED_RGB8_NV* = 0x000086FF
  GL_SIGNED_LUMINANCE_NV* = 0x00008701
  GL_SIGNED_LUMINANCE8_NV* = 0x00008702
  GL_SIGNED_LUMINANCE_ALPHA_NV* = 0x00008703
  GL_SIGNED_LUMINANCE8_ALPHA8_NV* = 0x00008704
  GL_SIGNED_ALPHA_NV* = 0x00008705
  GL_SIGNED_ALPHA8_NV* = 0x00008706
  GL_SIGNED_INTENSITY_NV* = 0x00008707
  GL_SIGNED_INTENSITY8_NV* = 0x00008708
  GL_DSDT8_NV* = 0x00008709
  GL_DSDT8_MAG8_NV* = 0x0000870A
  GL_DSDT8_MAG8_INTENSITY8_NV* = 0x0000870B
  GL_SIGNED_RGB_UNSIGNED_ALPHA_NV* = 0x0000870C
  GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV* = 0x0000870D
  GL_HI_SCALE_NV* = 0x0000870E
  GL_LO_SCALE_NV* = 0x0000870F
  GL_DS_SCALE_NV* = 0x00008710
  GL_DT_SCALE_NV* = 0x00008711
  GL_MAGNITUDE_SCALE_NV* = 0x00008712
  GL_VIBRANCE_SCALE_NV* = 0x00008713
  GL_HI_BIAS_NV* = 0x00008714
  GL_LO_BIAS_NV* = 0x00008715
  GL_DS_BIAS_NV* = 0x00008716
  GL_DT_BIAS_NV* = 0x00008717
  GL_MAGNITUDE_BIAS_NV* = 0x00008718
  GL_VIBRANCE_BIAS_NV* = 0x00008719
  GL_TEXTURE_BORDER_VALUES_NV* = 0x0000871A
  GL_TEXTURE_HI_SIZE_NV* = 0x0000871B
  GL_TEXTURE_LO_SIZE_NV* = 0x0000871C
  GL_TEXTURE_DS_SIZE_NV* = 0x0000871D
  GL_TEXTURE_DT_SIZE_NV* = 0x0000871E
  GL_TEXTURE_MAG_SIZE_NV* = 0x0000871F
  GL_NV_texture_shader2* = 1
  GL_DOT_PRODUCT_TEXTURE_3D_NV* = 0x000086EF
  GL_NV_texture_shader3* = 1
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV* = 0x00008850
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV* = 0x00008851
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV* = 0x00008852
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV* = 0x00008853
  GL_OFFSET_HILO_TEXTURE_2D_NV* = 0x00008854
  GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV* = 0x00008855
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV* = 0x00008856
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV* = 0x00008857
  GL_DEPENDENT_HILO_TEXTURE_2D_NV* = 0x00008858
  GL_DEPENDENT_RGB_TEXTURE_3D_NV* = 0x00008859
  GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV* = 0x0000885A
  GL_DOT_PRODUCT_PASS_THROUGH_NV* = 0x0000885B
  GL_DOT_PRODUCT_TEXTURE_1D_NV* = 0x0000885C
  GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV* = 0x0000885D
  GL_HILO8_NV* = 0x0000885E
  GL_SIGNED_HILO8_NV* = 0x0000885F
  GL_FORCE_BLUE_TO_ONE_NV* = 0x00008860
  GL_NV_transform_feedback* = 1
  GL_BACK_PRIMARY_COLOR_NV* = 0x00008C77
  GL_BACK_SECONDARY_COLOR_NV* = 0x00008C78
  GL_TEXTURE_COORD_NV* = 0x00008C79
  GL_CLIP_DISTANCE_NV* = 0x00008C7A
  GL_VERTEX_ID_NV* = 0x00008C7B
  GL_PRIMITIVE_ID_NV* = 0x00008C7C
  GL_GENERIC_ATTRIB_NV* = 0x00008C7D
  GL_TRANSFORM_FEEDBACK_ATTRIBS_NV* = 0x00008C7E
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV* = 0x00008C7F
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV* = 0x00008C80
  GL_ACTIVE_VARYINGS_NV* = 0x00008C81
  GL_ACTIVE_VARYING_MAX_LENGTH_NV* = 0x00008C82
  GL_TRANSFORM_FEEDBACK_VARYINGS_NV* = 0x00008C83
  GL_TRANSFORM_FEEDBACK_BUFFER_START_NV* = 0x00008C84
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV* = 0x00008C85
  GL_TRANSFORM_FEEDBACK_RECORD_NV* = 0x00008C86
  GL_PRIMITIVES_GENERATED_NV* = 0x00008C87
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV* = 0x00008C88
  GL_RASTERIZER_DISCARD_NV* = 0x00008C89
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV* = 0x00008C8A
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV* = 0x00008C8B
  GL_SEPARATE_ATTRIBS_NV* = 0x00008C8D
  GL_TRANSFORM_FEEDBACK_BUFFER_NV* = 0x00008C8E
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV* = 0x00008C8F
  GL_NV_transform_feedback2* = 1
  GL_TRANSFORM_FEEDBACK_NV* = 0x00008E22
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV* = 0x00008E23
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV* = 0x00008E24
  GL_TRANSFORM_FEEDBACK_BINDING_NV* = 0x00008E25
  GL_NV_uniform_buffer_unified_memory* = 1
  GL_UNIFORM_BUFFER_UNIFIED_NV* = 0x0000936E
  GL_UNIFORM_BUFFER_ADDRESS_NV* = 0x0000936F
  GL_UNIFORM_BUFFER_LENGTH_NV* = 0x00009370
  GL_NV_vdpau_interop* = 1
  GL_SURFACE_STATE_NV* = 0x000086EB
  GL_SURFACE_REGISTERED_NV* = 0x000086FD
  GL_SURFACE_MAPPED_NV* = 0x00008700
  GL_WRITE_DISCARD_NV* = 0x000088BE
  GL_NV_vertex_array_range* = 1
  GL_VERTEX_ARRAY_RANGE_NV* = 0x0000851D
  GL_VERTEX_ARRAY_RANGE_LENGTH_NV* = 0x0000851E
  GL_VERTEX_ARRAY_RANGE_VALID_NV* = 0x0000851F
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV* = 0x00008520
  GL_VERTEX_ARRAY_RANGE_POINTER_NV* = 0x00008521
  GL_NV_vertex_array_range2* = 1
  GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV* = 0x00008533
  GL_NV_vertex_attrib_integer_64bit* = 1
  GL_NV_vertex_buffer_unified_memory* = 1
  GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV* = 0x00008F1E
  GL_ELEMENT_ARRAY_UNIFIED_NV* = 0x00008F1F
  GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV* = 0x00008F20
  GL_VERTEX_ARRAY_ADDRESS_NV* = 0x00008F21
  GL_NORMAL_ARRAY_ADDRESS_NV* = 0x00008F22
  GL_COLOR_ARRAY_ADDRESS_NV* = 0x00008F23
  GL_INDEX_ARRAY_ADDRESS_NV* = 0x00008F24
  GL_TEXTURE_COORD_ARRAY_ADDRESS_NV* = 0x00008F25
  GL_EDGE_FLAG_ARRAY_ADDRESS_NV* = 0x00008F26
  GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV* = 0x00008F27
  GL_FOG_COORD_ARRAY_ADDRESS_NV* = 0x00008F28
  GL_ELEMENT_ARRAY_ADDRESS_NV* = 0x00008F29
  GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV* = 0x00008F2A
  GL_VERTEX_ARRAY_LENGTH_NV* = 0x00008F2B
  GL_NORMAL_ARRAY_LENGTH_NV* = 0x00008F2C
  GL_COLOR_ARRAY_LENGTH_NV* = 0x00008F2D
  GL_INDEX_ARRAY_LENGTH_NV* = 0x00008F2E
  GL_TEXTURE_COORD_ARRAY_LENGTH_NV* = 0x00008F2F
  GL_EDGE_FLAG_ARRAY_LENGTH_NV* = 0x00008F30
  GL_SECONDARY_COLOR_ARRAY_LENGTH_NV* = 0x00008F31
  GL_FOG_COORD_ARRAY_LENGTH_NV* = 0x00008F32
  GL_ELEMENT_ARRAY_LENGTH_NV* = 0x00008F33
  GL_DRAW_INDIRECT_UNIFIED_NV* = 0x00008F40
  GL_DRAW_INDIRECT_ADDRESS_NV* = 0x00008F41
  GL_DRAW_INDIRECT_LENGTH_NV* = 0x00008F42
  GL_NV_vertex_program* = 1
  GL_VERTEX_PROGRAM_NV* = 0x00008620
  GL_VERTEX_STATE_PROGRAM_NV* = 0x00008621
  GL_ATTRIB_ARRAY_SIZE_NV* = 0x00008623
  GL_ATTRIB_ARRAY_STRIDE_NV* = 0x00008624
  GL_ATTRIB_ARRAY_TYPE_NV* = 0x00008625
  GL_CURRENT_ATTRIB_NV* = 0x00008626
  GL_PROGRAM_LENGTH_NV* = 0x00008627
  GL_PROGRAM_STRING_NV* = 0x00008628
  GL_MODELVIEW_PROJECTION_NV* = 0x00008629
  GL_IDENTITY_NV* = 0x0000862A
  GL_INVERSE_NV* = 0x0000862B
  GL_TRANSPOSE_NV* = 0x0000862C
  GL_INVERSE_TRANSPOSE_NV* = 0x0000862D
  GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV* = 0x0000862E
  GL_MAX_TRACK_MATRICES_NV* = 0x0000862F
  GL_MATRIX0_NV* = 0x00008630
  GL_MATRIX1_NV* = 0x00008631
  GL_MATRIX2_NV* = 0x00008632
  GL_MATRIX3_NV* = 0x00008633
  GL_MATRIX4_NV* = 0x00008634
  GL_MATRIX5_NV* = 0x00008635
  GL_MATRIX6_NV* = 0x00008636
  GL_MATRIX7_NV* = 0x00008637
  GL_CURRENT_MATRIX_STACK_DEPTH_NV* = 0x00008640
  GL_CURRENT_MATRIX_NV* = 0x00008641
  GL_VERTEX_PROGRAM_POINT_SIZE_NV* = 0x00008642
  GL_VERTEX_PROGRAM_TWO_SIDE_NV* = 0x00008643
  GL_PROGRAM_PARAMETER_NV* = 0x00008644
  GL_ATTRIB_ARRAY_POINTER_NV* = 0x00008645
  GL_PROGRAM_TARGET_NV* = 0x00008646
  GL_PROGRAM_RESIDENT_NV* = 0x00008647
  GL_TRACK_MATRIX_NV* = 0x00008648
  GL_TRACK_MATRIX_TRANSFORM_NV* = 0x00008649
  GL_VERTEX_PROGRAM_BINDING_NV* = 0x0000864A
  GL_PROGRAM_ERROR_POSITION_NV* = 0x0000864B
  GL_VERTEX_ATTRIB_ARRAY0_NV* = 0x00008650
  GL_VERTEX_ATTRIB_ARRAY1_NV* = 0x00008651
  GL_VERTEX_ATTRIB_ARRAY2_NV* = 0x00008652
  GL_VERTEX_ATTRIB_ARRAY3_NV* = 0x00008653
  GL_VERTEX_ATTRIB_ARRAY4_NV* = 0x00008654
  GL_VERTEX_ATTRIB_ARRAY5_NV* = 0x00008655
  GL_VERTEX_ATTRIB_ARRAY6_NV* = 0x00008656
  GL_VERTEX_ATTRIB_ARRAY7_NV* = 0x00008657
  GL_VERTEX_ATTRIB_ARRAY8_NV* = 0x00008658
  GL_VERTEX_ATTRIB_ARRAY9_NV* = 0x00008659
  GL_VERTEX_ATTRIB_ARRAY10_NV* = 0x0000865A
  GL_VERTEX_ATTRIB_ARRAY11_NV* = 0x0000865B
  GL_VERTEX_ATTRIB_ARRAY12_NV* = 0x0000865C
  GL_VERTEX_ATTRIB_ARRAY13_NV* = 0x0000865D
  GL_VERTEX_ATTRIB_ARRAY14_NV* = 0x0000865E
  GL_VERTEX_ATTRIB_ARRAY15_NV* = 0x0000865F
  GL_MAP1_VERTEX_ATTRIB0_4_NV* = 0x00008660
  GL_MAP1_VERTEX_ATTRIB1_4_NV* = 0x00008661
  GL_MAP1_VERTEX_ATTRIB2_4_NV* = 0x00008662
  GL_MAP1_VERTEX_ATTRIB3_4_NV* = 0x00008663
  GL_MAP1_VERTEX_ATTRIB4_4_NV* = 0x00008664
  GL_MAP1_VERTEX_ATTRIB5_4_NV* = 0x00008665
  GL_MAP1_VERTEX_ATTRIB6_4_NV* = 0x00008666
  GL_MAP1_VERTEX_ATTRIB7_4_NV* = 0x00008667
  GL_MAP1_VERTEX_ATTRIB8_4_NV* = 0x00008668
  GL_MAP1_VERTEX_ATTRIB9_4_NV* = 0x00008669
  GL_MAP1_VERTEX_ATTRIB10_4_NV* = 0x0000866A
  GL_MAP1_VERTEX_ATTRIB11_4_NV* = 0x0000866B
  GL_MAP1_VERTEX_ATTRIB12_4_NV* = 0x0000866C
  GL_MAP1_VERTEX_ATTRIB13_4_NV* = 0x0000866D
  GL_MAP1_VERTEX_ATTRIB14_4_NV* = 0x0000866E
  GL_MAP1_VERTEX_ATTRIB15_4_NV* = 0x0000866F
  GL_MAP2_VERTEX_ATTRIB0_4_NV* = 0x00008670
  GL_MAP2_VERTEX_ATTRIB1_4_NV* = 0x00008671
  GL_MAP2_VERTEX_ATTRIB2_4_NV* = 0x00008672
  GL_MAP2_VERTEX_ATTRIB3_4_NV* = 0x00008673
  GL_MAP2_VERTEX_ATTRIB4_4_NV* = 0x00008674
  GL_MAP2_VERTEX_ATTRIB5_4_NV* = 0x00008675
  GL_MAP2_VERTEX_ATTRIB6_4_NV* = 0x00008676
  GL_MAP2_VERTEX_ATTRIB7_4_NV* = 0x00008677
  GL_MAP2_VERTEX_ATTRIB8_4_NV* = 0x00008678
  GL_MAP2_VERTEX_ATTRIB9_4_NV* = 0x00008679
  GL_MAP2_VERTEX_ATTRIB10_4_NV* = 0x0000867A
  GL_MAP2_VERTEX_ATTRIB11_4_NV* = 0x0000867B
  GL_MAP2_VERTEX_ATTRIB12_4_NV* = 0x0000867C
  GL_MAP2_VERTEX_ATTRIB13_4_NV* = 0x0000867D
  GL_MAP2_VERTEX_ATTRIB14_4_NV* = 0x0000867E
  GL_MAP2_VERTEX_ATTRIB15_4_NV* = 0x0000867F
  GL_NV_vertex_program1_1* = 1
  GL_NV_vertex_program2* = 1
  GL_NV_vertex_program2_option* = 1
  GL_NV_vertex_program3* = 1
  MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB* = 0x00008B4C
  GL_NV_vertex_program4* = 1
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV* = 0x000088FD
  GL_NV_video_capture* = 1
  GL_VIDEO_BUFFER_NV* = 0x00009020
  GL_VIDEO_BUFFER_BINDING_NV* = 0x00009021
  GL_FIELD_UPPER_NV* = 0x00009022
  GL_FIELD_LOWER_NV* = 0x00009023
  GL_NUM_VIDEO_CAPTURE_STREAMS_NV* = 0x00009024
  GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV* = 0x00009025
  GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV* = 0x00009026
  GL_LAST_VIDEO_CAPTURE_STATUS_NV* = 0x00009027
  GL_VIDEO_BUFFER_PITCH_NV* = 0x00009028
  GL_VIDEO_COLOR_CONVERSION_MATRIX_NV* = 0x00009029
  GL_VIDEO_COLOR_CONVERSION_MAX_NV* = 0x0000902A
  GL_VIDEO_COLOR_CONVERSION_MIN_NV* = 0x0000902B
  GL_VIDEO_COLOR_CONVERSION_OFFSET_NV* = 0x0000902C
  GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV* = 0x0000902D
  GL_PARTIAL_SUCCESS_NV* = 0x0000902E
  GL_SUCCESS_NV* = 0x0000902F
  GL_FAILURE_NV* = 0x00009030
  GL_YCBYCR8_422_NV* = 0x00009031
  GL_YCBAYCR8A_4224_NV* = 0x00009032
  GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV* = 0x00009033
  GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV* = 0x00009034
  GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV* = 0x00009035
  GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV* = 0x00009036
  GL_Z4Y12Z4CB12Z4CR12_444_NV* = 0x00009037
  GL_VIDEO_CAPTURE_FRAME_WIDTH_NV* = 0x00009038
  GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV* = 0x00009039
  GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV* = 0x0000903A
  GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV* = 0x0000903B
  GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV* = 0x0000903C
  GL_NV_viewport_array* = 1
  GL_MAX_VIEWPORTS_NV* = 0x0000825B
  GL_VIEWPORT_SUBPIXEL_BITS_NV* = 0x0000825C
  GL_VIEWPORT_BOUNDS_RANGE_NV* = 0x0000825D
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV* = 0x0000825F
  GL_NV_viewport_array2* = 1
  GL_NV_viewport_swizzle* = 1
  GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV* = 0x00009350
  GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV* = 0x00009351
  GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV* = 0x00009352
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV* = 0x00009353
  GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV* = 0x00009354
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV* = 0x00009355
  GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV* = 0x00009356
  GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV* = 0x00009357
  GL_VIEWPORT_SWIZZLE_X_NV* = 0x00009358
  GL_VIEWPORT_SWIZZLE_Y_NV* = 0x00009359
  GL_VIEWPORT_SWIZZLE_Z_NV* = 0x0000935A
  GL_VIEWPORT_SWIZZLE_W_NV* = 0x0000935B
  GL_OES_byte_coordinates* = 1
  GL_OML_interlace* = 1
  GL_OML_resample* = 1
  GL_PACK_RESAMPLE_OML* = 0x00008984
  GL_UNPACK_RESAMPLE_OML* = 0x00008985
  GL_RESAMPLE_REPLICATE_OML* = 0x00008986
  GL_RESAMPLE_ZERO_FILL_OML* = 0x00008987
  GL_RESAMPLE_AVERAGE_OML* = 0x00008988
  GL_RESAMPLE_DECIMATE_OML* = 0x00008989
  GL_OML_subsample* = 1
  GL_FORMAT_SUBSAMPLE_24_24_OML* = 0x00008982
  GL_FORMAT_SUBSAMPLE_244_244_OML* = 0x00008983
  GL_OVR_multiview* = 1
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR* = 0x00009630
  GL_MAX_VIEWS_OVR* = 0x00009631
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR* = 0x00009632
  GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR* = 0x00009633
  GL_OVR_multiview2* = 1
  GL_OVR_multiview_multisampled_render_to_texture* = 1
  GL_PGI_misc_hints* = 1
  GL_PREFER_DOUBLEBUFFER_HINT_PGI* = 107000
  GL_CONSERVE_MEMORY_HINT_PGI* = 107005
  GL_RECLAIM_MEMORY_HINT_PGI* = 107006
  GL_NATIVE_GRAPHICS_HANDLE_PGI* = 107010
  GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI* = 107011
  GL_NATIVE_GRAPHICS_END_HINT_PGI* = 107012
  GL_ALWAYS_FAST_HINT_PGI* = 107020
  GL_ALWAYS_SOFT_HINT_PGI* = 107021
  GL_ALLOW_DRAW_OBJ_HINT_PGI* = 107022
  GL_ALLOW_DRAW_WIN_HINT_PGI* = 107023
  GL_ALLOW_DRAW_FRG_HINT_PGI* = 107024
  GL_ALLOW_DRAW_MEM_HINT_PGI* = 107025
  GL_STRICT_DEPTHFUNC_HINT_PGI* = 107030
  GL_STRICT_LIGHTING_HINT_PGI* = 107031
  GL_STRICT_SCISSOR_HINT_PGI* = 107032
  GL_FULL_STIPPLE_HINT_PGI* = 107033
  GL_CLIP_NEAR_HINT_PGI* = 107040
  GL_CLIP_FAR_HINT_PGI* = 107041
  GL_WIDE_LINE_HINT_PGI* = 107042
  GL_BACK_NORMALS_HINT_PGI* = 107043
  GL_PGI_vertex_hints* = 1
  GL_VERTEX23_BIT_PGI* = 0x00000004
  GL_VERTEX4_BIT_PGI* = 0x00000008
  GL_COLOR3_BIT_PGI* = 0x00010000
  GL_COLOR4_BIT_PGI* = 0x00020000
  GL_EDGEFLAG_BIT_PGI* = 0x00040000
  GL_INDEX_BIT_PGI* = 0x00080000
  GL_MAT_AMBIENT_BIT_PGI* = 0x00100000
  GL_VERTEX_DATA_HINT_PGI* = 107050
  GL_VERTEX_CONSISTENT_HINT_PGI* = 107051
  GL_MATERIAL_SIDE_HINT_PGI* = 107052
  GL_MAX_VERTEX_HINT_PGI* = 107053
  GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI* = 0x00200000
  GL_MAT_DIFFUSE_BIT_PGI* = 0x00400000
  GL_MAT_EMISSION_BIT_PGI* = 0x00800000
  GL_MAT_COLOR_INDEXES_BIT_PGI* = 0x01000000
  GL_MAT_SHININESS_BIT_PGI* = 0x02000000
  GL_MAT_SPECULAR_BIT_PGI* = 0x04000000
  GL_NORMAL_BIT_PGI* = 0x08000000
  GL_TEXCOORD1_BIT_PGI* = 0x10000000
  GL_TEXCOORD2_BIT_PGI* = 0x20000000
  GL_TEXCOORD3_BIT_PGI* = 0x40000000
  GL_TEXCOORD4_BIT_PGI* = 0x80000000
  GL_QCOM_alpha_test* = 1
  GL_ALPHA_TEST_QCOM* = 0x00000BC0
  GL_ALPHA_TEST_FUNC_QCOM* = 0x00000BC1
  GL_ALPHA_TEST_REF_QCOM* = 0x00000BC2
  GL_QCOM_binning_control* = 1
  GL_BINNING_CONTROL_HINT_QCOM* = 0x00008FB0
  GL_CPU_OPTIMIZED_QCOM* = 0x00008FB1
  GL_GPU_OPTIMIZED_QCOM* = 0x00008FB2
  GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM* = 0x00008FB3
  GL_QCOM_driver_control* = 1
  GL_QCOM_extended_get* = 1
  GL_TEXTURE_WIDTH_QCOM* = 0x00008BD2
  GL_TEXTURE_HEIGHT_QCOM* = 0x00008BD3
  GL_TEXTURE_DEPTH_QCOM* = 0x00008BD4
  GL_TEXTURE_INTERNAL_FORMAT_QCOM* = 0x00008BD5
  GL_TEXTURE_FORMAT_QCOM* = 0x00008BD6
  GL_TEXTURE_TYPE_QCOM* = 0x00008BD7
  GL_TEXTURE_IMAGE_VALID_QCOM* = 0x00008BD8
  GL_TEXTURE_NUM_LEVELS_QCOM* = 0x00008BD9
  GL_TEXTURE_TARGET_QCOM* = 0x00008BDA
  GL_TEXTURE_OBJECT_VALID_QCOM* = 0x00008BDB
  GL_STATE_RESTORE* = 0x00008BDC
  GL_QCOM_extended_get2* = 1
  GL_QCOM_framebuffer_foveated* = 1
  GL_FOVEATION_ENABLE_BIT_QCOM* = 0x00000001
  GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM* = 0x00000002
  GL_QCOM_perfmon_global_mode* = 1
  GL_PERFMON_GLOBAL_MODE_QCOM* = 0x00008FA0
  GL_QCOM_shader_framebuffer_fetch_noncoherent* = 1
  GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM* = 0x000096A2
  GL_QCOM_tiled_rendering* = 1
  GL_COLOR_BUFFER_BIT0_QCOM* = 0x00000001
  GL_COLOR_BUFFER_BIT1_QCOM* = 0x00000002
  GL_COLOR_BUFFER_BIT2_QCOM* = 0x00000004
  GL_COLOR_BUFFER_BIT3_QCOM* = 0x00000008
  GL_COLOR_BUFFER_BIT4_QCOM* = 0x00000010
  GL_COLOR_BUFFER_BIT5_QCOM* = 0x00000020
  GL_COLOR_BUFFER_BIT6_QCOM* = 0x00000040
  GL_COLOR_BUFFER_BIT7_QCOM* = 0x00000080
  GL_DEPTH_BUFFER_BIT0_QCOM* = 0x00000100
  GL_DEPTH_BUFFER_BIT1_QCOM* = 0x00000200
  GL_DEPTH_BUFFER_BIT2_QCOM* = 0x00000400
  GL_DEPTH_BUFFER_BIT3_QCOM* = 0x00000800
  GL_DEPTH_BUFFER_BIT4_QCOM* = 0x00001000
  GL_DEPTH_BUFFER_BIT5_QCOM* = 0x00002000
  GL_DEPTH_BUFFER_BIT6_QCOM* = 0x00004000
  GL_DEPTH_BUFFER_BIT7_QCOM* = 0x00008000
  GL_STENCIL_BUFFER_BIT0_QCOM* = 0x00010000
  GL_STENCIL_BUFFER_BIT1_QCOM* = 0x00020000
  GL_STENCIL_BUFFER_BIT2_QCOM* = 0x00040000
  GL_STENCIL_BUFFER_BIT3_QCOM* = 0x00080000
  GL_STENCIL_BUFFER_BIT4_QCOM* = 0x00100000
  GL_STENCIL_BUFFER_BIT5_QCOM* = 0x00200000
  GL_STENCIL_BUFFER_BIT6_QCOM* = 0x00400000
  GL_STENCIL_BUFFER_BIT7_QCOM* = 0x00800000
  GL_MULTISAMPLE_BUFFER_BIT0_QCOM* = 0x01000000
  GL_MULTISAMPLE_BUFFER_BIT1_QCOM* = 0x02000000
  GL_MULTISAMPLE_BUFFER_BIT2_QCOM* = 0x04000000
  GL_MULTISAMPLE_BUFFER_BIT3_QCOM* = 0x08000000
  GL_MULTISAMPLE_BUFFER_BIT4_QCOM* = 0x10000000
  GL_MULTISAMPLE_BUFFER_BIT5_QCOM* = 0x20000000
  GL_MULTISAMPLE_BUFFER_BIT6_QCOM* = 0x40000000
  GL_MULTISAMPLE_BUFFER_BIT7_QCOM* = 0x80000000
  GL_QCOM_writeonly_rendering* = 1
  GL_WRITEONLY_RENDERING_QCOM* = 0x00008823
  GL_REGAL_ES1_0_compatibility* = 1
  GL_REGAL_ES1_1_compatibility* = 1
  GL_REGAL_enable* = 1
  GL_ERROR_REGAL* = 0x00009322
  GL_DEBUG_REGAL* = 0x00009323
  GL_LOG_REGAL* = 0x00009324
  GL_EMULATION_REGAL* = 0x00009325
  GL_DRIVER_REGAL* = 0x00009326
  GL_MISSING_REGAL* = 0x00009360
  GL_TRACE_REGAL* = 0x00009361
  GL_CACHE_REGAL* = 0x00009362
  GL_CODE_REGAL* = 0x00009363
  GL_STATISTICS_REGAL* = 0x00009364
  GL_REGAL_error_string* = 1
  GL_REGAL_extension_query* = 1
  GL_REGAL_log* = 1
  GL_LOG_ERROR_REGAL* = 0x00009319
  GL_LOG_WARNING_REGAL* = 0x0000931A
  GL_LOG_INFO_REGAL* = 0x0000931B
  GL_LOG_APP_REGAL* = 0x0000931C
  GL_LOG_DRIVER_REGAL* = 0x0000931D
  GL_LOG_INTERNAL_REGAL* = 0x0000931E
  GL_LOG_DEBUG_REGAL* = 0x0000931F
  GL_LOG_STATUS_REGAL* = 0x00009320
  GL_LOG_HTTP_REGAL* = 0x00009321
  GL_REGAL_proc_address* = 1
  GL_REND_screen_coordinates* = 1
  GL_SCREEN_COORDINATES_REND* = 0x00008490
  GL_INVERTED_SCREEN_W_REND* = 0x00008491
  GL_S3_s3tc* = 1
  GL_RGB_S3TC* = 0x000083A0
  GL_RGB4_S3TC* = 0x000083A1
  GL_RGBA_S3TC* = 0x000083A2
  GL_RGBA4_S3TC* = 0x000083A3
  GL_RGBA_DXT5_S3TC* = 0x000083A4
  GL_RGBA4_DXT5_S3TC* = 0x000083A5
  GL_SGIS_clip_band_hint* = 1
  GL_SGIS_color_range* = 1
  GL_EXTENDED_RANGE_SGIS* = 0x000085A5
  GL_MIN_RED_SGIS* = 0x000085A6
  GL_MAX_RED_SGIS* = 0x000085A7
  GL_MIN_GREEN_SGIS* = 0x000085A8
  GL_MAX_GREEN_SGIS* = 0x000085A9
  GL_MIN_BLUE_SGIS* = 0x000085AA
  GL_MAX_BLUE_SGIS* = 0x000085AB
  GL_MIN_ALPHA_SGIS* = 0x000085AC
  GL_MAX_ALPHA_SGIS* = 0x000085AD
  GL_SGIS_detail_texture* = 1
  GL_SGIS_fog_function* = 1
  GL_SGIS_generate_mipmap* = 1
  GL_GENERATE_MIPMAP_SGIS* = 0x00008191
  GL_GENERATE_MIPMAP_HINT_SGIS* = 0x00008192
  GL_SGIS_line_texgen* = 1
  GL_SGIS_multisample* = 1
  GL_MULTISAMPLE_SGIS* = 0x0000809D
  GL_SAMPLE_ALPHA_TO_MASK_SGIS* = 0x0000809E
  GL_SAMPLE_ALPHA_TO_ONE_SGIS* = 0x0000809F
  GL_SAMPLE_MASK_SGIS* = 0x000080A0
  GL_1PASS_SGIS* = 0x000080A1
  GL_2PASS_0_SGIS* = 0x000080A2
  GL_2PASS_1_SGIS* = 0x000080A3
  GL_4PASS_0_SGIS* = 0x000080A4
  GL_4PASS_1_SGIS* = 0x000080A5
  GL_4PASS_2_SGIS* = 0x000080A6
  GL_4PASS_3_SGIS* = 0x000080A7
  GL_SAMPLE_BUFFERS_SGIS* = 0x000080A8
  GL_SAMPLES_SGIS* = 0x000080A9
  GL_SAMPLE_MASK_VALUE_SGIS* = 0x000080AA
  GL_SAMPLE_MASK_INVERT_SGIS* = 0x000080AB
  GL_SAMPLE_PATTERN_SGIS* = 0x000080AC
  GL_SGIS_multitexture* = 1
  GL_SELECTED_TEXTURE_SGIS* = 0x000083C0
  GL_SELECTED_TEXTURE_COORD_SET_SGIS* = 0x000083C1
  GL_SELECTED_TEXTURE_TRANSFORM_SGIS* = 0x000083C2
  GL_MAX_TEXTURES_SGIS* = 0x000083C3
  GL_MAX_TEXTURE_COORD_SETS_SGIS* = 0x000083C4
  GL_TEXTURE_COORD_SET_INTERLEAVE_FACTOR_SGIS* = 0x000083C5
  GL_TEXTURE_ENV_COORD_SET_SGIS* = 0x000083C6
  GL_TEXTURE0_SGIS* = 0x000083C7
  GL_TEXTURE1_SGIS* = 0x000083C8
  GL_TEXTURE2_SGIS* = 0x000083C9
  GL_TEXTURE3_SGIS* = 0x000083CA
  GL_SGIS_pixel_texture* = 1
  GL_SGIS_point_line_texgen* = 1
  GL_EYE_DISTANCE_TO_POINT_SGIS* = 0x000081F0
  GL_OBJECT_DISTANCE_TO_POINT_SGIS* = 0x000081F1
  GL_EYE_DISTANCE_TO_LINE_SGIS* = 0x000081F2
  GL_OBJECT_DISTANCE_TO_LINE_SGIS* = 0x000081F3
  GL_EYE_POINT_SGIS* = 0x000081F4
  GL_OBJECT_POINT_SGIS* = 0x000081F5
  GL_EYE_LINE_SGIS* = 0x000081F6
  GL_OBJECT_LINE_SGIS* = 0x000081F7
  GL_SGIS_shared_multisample* = 1
  GL_SGIS_sharpen_texture* = 1
  GL_SGIS_texture4D* = 1
  GL_SGIS_texture_border_clamp* = 1
  GL_CLAMP_TO_BORDER_SGIS* = 0x0000812D
  GL_SGIS_texture_edge_clamp* = 1
  GL_CLAMP_TO_EDGE_SGIS* = 0x0000812F
  GL_SGIS_texture_filter4* = 1
  GL_SGIS_texture_lod* = 1
  GL_TEXTURE_MIN_LOD_SGIS* = 0x0000813A
  GL_TEXTURE_MAX_LOD_SGIS* = 0x0000813B
  GL_TEXTURE_BASE_LEVEL_SGIS* = 0x0000813C
  GL_TEXTURE_MAX_LEVEL_SGIS* = 0x0000813D
  GL_SGIS_texture_select* = 1
  GL_SGIX_async* = 1
  GL_ASYNC_MARKER_SGIX* = 0x00008329
  GL_SGIX_async_histogram* = 1
  GL_ASYNC_HISTOGRAM_SGIX* = 0x0000832C
  GL_MAX_ASYNC_HISTOGRAM_SGIX* = 0x0000832D
  GL_SGIX_async_pixel* = 1
  GL_ASYNC_TEX_IMAGE_SGIX* = 0x0000835C
  GL_ASYNC_DRAW_PIXELS_SGIX* = 0x0000835D
  GL_ASYNC_READ_PIXELS_SGIX* = 0x0000835E
  GL_MAX_ASYNC_TEX_IMAGE_SGIX* = 0x0000835F
  GL_MAX_ASYNC_DRAW_PIXELS_SGIX* = 0x00008360
  GL_MAX_ASYNC_READ_PIXELS_SGIX* = 0x00008361
  GL_SGIX_bali_g_instruments* = 1
  GL_BALI_NUM_TRIS_CULLED_INSTRUMENT* = 0x00006080
  GL_BALI_NUM_PRIMS_CLIPPED_INSTRUMENT* = 0x00006081
  GL_BALI_NUM_PRIMS_REJECT_INSTRUMENT* = 0x00006082
  GL_BALI_NUM_PRIMS_CLIP_RESULT_INSTRUMENT* = 0x00006083
  GL_SGIX_bali_r_instruments* = 1
  GL_BALI_FRAGMENTS_GENERATED_INSTRUMENT* = 0x00006090
  GL_BALI_DEPTH_PASS_INSTRUMENT* = 0x00006091
  GL_BALI_R_CHIP_COUNT* = 0x00006092
  GL_SGIX_bali_timer_instruments* = 1
  GL_SGIX_blend_alpha_minmax* = 1
  GL_ALPHA_MIN_SGIX* = 0x00008320
  GL_ALPHA_MAX_SGIX* = 0x00008321
  GL_SGIX_blend_cadd* = 1
  GL_FUNC_COMPLEX_ADD_EXT* = 0x0000601C
  GL_SGIX_blend_cmultiply* = 1
  GL_FUNC_COMPLEX_MULTIPLY_EXT* = 0x0000601B
  GL_SGIX_calligraphic_fragment* = 1
  GL_SGIX_clipmap* = 1
  GL_SGIX_color_matrix_accuracy* = 1
  GL_COLOR_MATRIX_HINT* = 0x00008317
  GL_SGIX_color_table_index_mode* = 1
  GL_SGIX_complex_polar* = 1
  GL_SGIX_convolution_accuracy* = 1
  GL_CONVOLUTION_HINT_SGIX* = 0x00008316
  GL_SGIX_cube_map* = 1
  GL_ENV_MAP_SGIX* = 0x00008340
  GL_CUBE_MAP_SGIX* = 0x00008341
  GL_CUBE_MAP_ZP_SGIX* = 0x00008342
  GL_CUBE_MAP_ZN_SGIX* = 0x00008343
  GL_CUBE_MAP_XN_SGIX* = 0x00008344
  GL_CUBE_MAP_XP_SGIX* = 0x00008345
  GL_CUBE_MAP_YN_SGIX* = 0x00008346
  GL_CUBE_MAP_YP_SGIX* = 0x00008347
  GL_CUBE_MAP_BINDING_SGIX* = 0x00008348
  GL_SGIX_cylinder_texgen* = 1
  GL_SGIX_datapipe* = 1
  GL_GEOMETRY_BIT* = 0x00000001
  GL_IMAGE_BIT* = 0x00000002
  GL_SGIX_decimation* = 1
  GL_SGIX_depth_pass_instrument* = 1
  GL_DEPTH_PASS_INSTRUMENT_SGIX* = 0x00008310
  GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX* = 0x00008311
  GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX* = 0x00008312
  GL_SGIX_depth_texture* = 1
  GL_DEPTH_COMPONENT16_SGIX* = 0x000081A5
  GL_DEPTH_COMPONENT24_SGIX* = 0x000081A6
  GL_DEPTH_COMPONENT32_SGIX* = 0x000081A7
  GL_SGIX_dvc* = 1
  GL_SGIX_flush_raster* = 1
  GL_SGIX_fog_blend* = 1
  GL_FOG_BLEND_ALPHA_SGIX* = 0x000081FE
  GL_FOG_BLEND_COLOR_SGIX* = 0x000081FF
  GL_SGIX_fog_factor_to_alpha* = 1
  GL_SGIX_fog_layers* = 1
  GL_FOG_TYPE_SGIX* = 0x00008323
  GL_UNIFORM_SGIX* = 0x00008324
  GL_LAYERED_SGIX* = 0x00008325
  GL_FOG_GROUND_PLANE_SGIX* = 0x00008326
  GL_FOG_LAYERS_POINTS_SGIX* = 0x00008327
  GL_MAX_FOG_LAYERS_POINTS_SGIX* = 0x00008328
  GL_SGIX_fog_offset* = 1
  GL_FOG_OFFSET_SGIX* = 0x00008198
  GL_FOG_OFFSET_VALUE_SGIX* = 0x00008199
  GL_SGIX_fog_patchy* = 1
  GL_SGIX_fog_scale* = 1
  GL_FOG_SCALE_SGIX* = 0x000081FC
  GL_FOG_SCALE_VALUE_SGIX* = 0x000081FD
  GL_SGIX_fog_texture* = 1
  GL_SGIX_fragment_lighting_space* = 1
  GL_EYE_SPACE_SGIX* = 0x00008436
  GL_TANGENT_SPACE_SGIX* = 0x00008437
  GL_OBJECT_SPACE_SGIX* = 0x00008438
  GL_FRAGMENT_LIGHT_SPACE_SGIX* = 0x0000843D
  GL_SGIX_fragment_specular_lighting* = 1
  GL_SGIX_fragments_instrument* = 1
  GL_FRAGMENTS_INSTRUMENT_SGIX* = 0x00008313
  GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX* = 0x00008314
  GL_FRAGMENTS_INSTRUMENT_MAX_SGIX* = 0x00008315
  GL_SGIX_framezoom* = 1
  GL_SGIX_icc_texture* = 1
  GL_RGB_ICC_SGIX* = 0x00008460
  GL_RGBA_ICC_SGIX* = 0x00008461
  GL_ALPHA_ICC_SGIX* = 0x00008462
  GL_LUMINANCE_ICC_SGIX* = 0x00008463
  GL_LUMINANCE_ALPHA_ICC_SGIX* = 0x00008465
  GL_R5_G6_B5_ICC_SGIX* = 0x00008466
  GL_R5_G6_B5_A8_ICC_SGIX* = 0x00008467
  GL_ALPHA16_ICC_SGIX* = 0x00008468
  GL_LUMINANCE16_ICC_SGIX* = 0x00008469
  GL_LUMINANCE16_ALPHA8_ICC_SGIX* = 0x0000846B
  GL_SGIX_igloo_interface* = 1
  GL_IGLOO_FULLSCREEN_SGIX* = 0x0000819E
  GL_IGLOO_VIEWPORT_OFFSET_SGIX* = 0x0000819F
  GL_IGLOO_SWAPTMESH_SGIX* = 0x000081A0
  GL_IGLOO_COLORNORMAL_SGIX* = 0x000081A1
  GL_IGLOO_IRISGL_MODE_SGIX* = 0x000081A2
  GL_IGLOO_LMC_COLOR_SGIX* = 0x000081A3
  GL_IGLOO_TMESHMODE_SGIX* = 0x000081A4
  GL_LIGHT31* = 0x0000BEAD
  GL_SGIX_image_compression* = 1
  GL_SGIX_impact_pixel_texture* = 1
  GL_SGIX_instrument_error* = 1
  GL_SGIX_interlace* = 1
  GL_SGIX_ir_instrument1* = 1
  GL_SGIX_line_quality_hint* = 1
  GL_LINE_QUALITY_HINT_SGIX* = 0x0000835B
  GL_SGIX_list_priority* = 1
  GL_SGIX_mpeg1* = 1
  GL_SGIX_mpeg2* = 1
  GL_SGIX_nonlinear_lighting_pervertex* = 1
  GL_SGIX_nurbs_eval* = 1
  GL_MAP1_VERTEX_3_NURBS_SGIX* = 0x000081CB
  GL_MAP1_VERTEX_4_NURBS_SGIX* = 0x000081CC
  GL_MAP1_INDEX_NURBS_SGIX* = 0x000081CD
  GL_MAP1_COLOR_4_NURBS_SGIX* = 0x000081CE
  GL_MAP1_NORMAL_NURBS_SGIX* = 0x000081CF
  GL_MAP1_TEXTURE_COORD_1_NURBS_SGIX* = 0x000081E0
  GL_MAP1_TEXTURE_COORD_2_NURBS_SGIX* = 0x000081E1
  GL_MAP1_TEXTURE_COORD_3_NURBS_SGIX* = 0x000081E2
  GL_MAP1_TEXTURE_COORD_4_NURBS_SGIX* = 0x000081E3
  GL_MAP2_VERTEX_3_NURBS_SGIX* = 0x000081E4
  GL_MAP2_VERTEX_4_NURBS_SGIX* = 0x000081E5
  GL_MAP2_INDEX_NURBS_SGIX* = 0x000081E6
  GL_MAP2_COLOR_4_NURBS_SGIX* = 0x000081E7
  GL_MAP2_NORMAL_NURBS_SGIX* = 0x000081E8
  GL_MAP2_TEXTURE_COORD_1_NURBS_SGIX* = 0x000081E9
  GL_MAP2_TEXTURE_COORD_2_NURBS_SGIX* = 0x000081EA
  GL_MAP2_TEXTURE_COORD_3_NURBS_SGIX* = 0x000081EB
  GL_MAP2_TEXTURE_COORD_4_NURBS_SGIX* = 0x000081EC
  GL_NURBS_KNOT_COUNT_SGIX* = 0x000081ED
  GL_NURBS_KNOT_VECTOR_SGIX* = 0x000081EE
  GL_SGIX_occlusion_instrument* = 1
  GL_OCCLUSION_INSTRUMENT_SGIX* = 0x00006060
  GL_SGIX_packed_6bytes* = 1
  GL_SGIX_pixel_texture* = 1
  GL_SGIX_pixel_texture_bits* = 1
  GL_SGIX_pixel_texture_lod* = 1
  GL_SGIX_pixel_tiles* = 1
  GL_SGIX_polynomial_ffd* = 1
  GL_TEXTURE_DEFORMATION_BIT_SGIX* = 0x00000001
  GL_GEOMETRY_DEFORMATION_BIT_SGIX* = 0x00000002
  GL_SGIX_quad_mesh* = 1
  GL_SGIX_reference_plane* = 1
  GL_SGIX_resample* = 1
  GL_PACK_RESAMPLE_SGIX* = 0x0000842E
  GL_UNPACK_RESAMPLE_SGIX* = 0x0000842F
  GL_RESAMPLE_DECIMATE_SGIX* = 0x00008430
  GL_RESAMPLE_REPLICATE_SGIX* = 0x00008433
  GL_RESAMPLE_ZERO_FILL_SGIX* = 0x00008434
  GL_SGIX_scalebias_hint* = 1
  GL_SCALEBIAS_HINT_SGIX* = 0x00008322
  GL_SGIX_shadow* = 1
  GL_TEXTURE_COMPARE_SGIX* = 0x0000819A
  GL_TEXTURE_COMPARE_OPERATOR_SGIX* = 0x0000819B
  GL_TEXTURE_LEQUAL_R_SGIX* = 0x0000819C
  GL_TEXTURE_GEQUAL_R_SGIX* = 0x0000819D
  GL_SGIX_shadow_ambient* = 1
  GL_SHADOW_AMBIENT_SGIX* = 0x000080BF
  GL_SGIX_slim* = 1
  GL_PACK_MAX_COMPRESSED_SIZE_SGIX* = 0x0000831B
  GL_SLIM8U_SGIX* = 0x0000831D
  GL_SLIM10U_SGIX* = 0x0000831E
  GL_SLIM12S_SGIX* = 0x0000831F
  GL_SGIX_spotlight_cutoff* = 1
  GL_SPOT_CUTOFF_DELTA_SGIX* = 0x00008193
  GL_SGIX_sprite* = 1
  GL_SGIX_subdiv_patch* = 1
  GL_SGIX_subsample* = 1
  GL_PACK_SUBSAMPLE_RATE_SGIX* = 0x000085A0
  GL_UNPACK_SUBSAMPLE_RATE_SGIX* = 0x000085A1
  GL_PIXEL_SUBSAMPLE_4444_SGIX* = 0x000085A2
  GL_PIXEL_SUBSAMPLE_2424_SGIX* = 0x000085A3
  GL_PIXEL_SUBSAMPLE_4242_SGIX* = 0x000085A4
  GL_SGIX_tag_sample_buffer* = 1
  GL_SGIX_texture_add_env* = 1
  GL_SGIX_texture_coordinate_clamp* = 1
  GL_TEXTURE_MAX_CLAMP_S_SGIX* = 0x00008369
  GL_TEXTURE_MAX_CLAMP_T_SGIX* = 0x0000836A
  GL_TEXTURE_MAX_CLAMP_R_SGIX* = 0x0000836B
  GL_SGIX_texture_lod_bias* = 1
  GL_SGIX_texture_mipmap_anisotropic* = 1
  GL_TEXTURE_MIPMAP_ANISOTROPY_SGIX* = 0x0000832E
  GL_MAX_MIPMAP_ANISOTROPY_SGIX* = 0x0000832F
  GL_SGIX_texture_multi_buffer* = 1
  GL_TEXTURE_MULTI_BUFFER_HINT_SGIX* = 0x0000812E
  GL_SGIX_texture_phase* = 1
  GL_PHASE_SGIX* = 0x0000832A
  GL_SGIX_texture_range* = 1
  GL_RGB_SIGNED_SGIX* = 0x000085E0
  GL_RGBA_SIGNED_SGIX* = 0x000085E1
  GL_ALPHA_SIGNED_SGIX* = 0x000085E2
  GL_LUMINANCE_SIGNED_SGIX* = 0x000085E3
  GL_LUMINANCE_ALPHA_SIGNED_SGIX* = 0x000085E5
  GL_RGB16_SIGNED_SGIX* = 0x000085E6
  GL_RGBA16_SIGNED_SGIX* = 0x000085E7
  GL_ALPHA16_SIGNED_SGIX* = 0x000085E8
  GL_LUMINANCE16_SIGNED_SGIX* = 0x000085E9
  GL_LUMINANCE16_ALPHA16_SIGNED_SGIX* = 0x000085EB
  GL_RGB_EXTENDED_RANGE_SGIX* = 0x000085EC
  GL_RGBA_EXTENDED_RANGE_SGIX* = 0x000085ED
  GL_ALPHA_EXTENDED_RANGE_SGIX* = 0x000085EE
  GL_LUMINANCE_EXTENDED_RANGE_SGIX* = 0x000085EF
  GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX* = 0x000085F1
  GL_RGB16_EXTENDED_RANGE_SGIX* = 0x000085F2
  GL_RGBA16_EXTENDED_RANGE_SGIX* = 0x000085F3
  GL_ALPHA16_EXTENDED_RANGE_SGIX* = 0x000085F4
  GL_LUMINANCE16_EXTENDED_RANGE_SGIX* = 0x000085F5
  GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX* = 0x000085F7
  GL_MIN_LUMINANCE_SGIS* = 0x000085F8
  GL_MAX_LUMINANCE_SGIS* = 0x000085F9
  GL_MIN_INTENSITY_SGIS* = 0x000085FA
  GL_MAX_INTENSITY_SGIS* = 0x000085FB
  GL_SGIX_texture_scale_bias* = 1
  GL_POST_TEXTURE_FILTER_BIAS_SGIX* = 0x00008179
  GL_POST_TEXTURE_FILTER_SCALE_SGIX* = 0x0000817A
  GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX* = 0x0000817B
  GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX* = 0x0000817C
  GL_SGIX_texture_supersample* = 1
  GL_SGIX_vector_ops* = 1
  GL_SGIX_vertex_array_object* = 1
  GL_SGIX_vertex_preclip* = 1
  GL_VERTEX_PRECLIP_SGIX* = 0x000083EE
  GL_VERTEX_PRECLIP_HINT_SGIX* = 0x000083EF
  GL_SGIX_vertex_preclip_hint* = 1
  GL_SGIX_ycrcb* = 1
  GL_SGIX_ycrcb_subsample* = 1
  GL_SGIX_ycrcba* = 1
  GL_YCRCB_SGIX* = 0x00008318
  GL_YCRCBA_SGIX* = 0x00008319
  GL_SGI_color_matrix* = 1
  GL_COLOR_MATRIX_SGI* = 0x000080B1
  GL_COLOR_MATRIX_STACK_DEPTH_SGI* = 0x000080B2
  GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI* = 0x000080B3
  GL_POST_COLOR_MATRIX_RED_SCALE_SGI* = 0x000080B4
  GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI* = 0x000080B5
  GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI* = 0x000080B6
  GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI* = 0x000080B7
  GL_POST_COLOR_MATRIX_RED_BIAS_SGI* = 0x000080B8
  GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI* = 0x000080B9
  GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI* = 0x000080BA
  GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI* = 0x000080BB
  GL_SGI_color_table* = 1
  GL_COLOR_TABLE_SGI* = 0x000080D0
  GL_POST_CONVOLUTION_COLOR_TABLE_SGI* = 0x000080D1
  GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI* = 0x000080D2
  GL_PROXY_COLOR_TABLE_SGI* = 0x000080D3
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI* = 0x000080D4
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI* = 0x000080D5
  GL_COLOR_TABLE_SCALE_SGI* = 0x000080D6
  GL_COLOR_TABLE_BIAS_SGI* = 0x000080D7
  GL_COLOR_TABLE_FORMAT_SGI* = 0x000080D8
  GL_COLOR_TABLE_WIDTH_SGI* = 0x000080D9
  GL_COLOR_TABLE_RED_SIZE_SGI* = 0x000080DA
  GL_COLOR_TABLE_GREEN_SIZE_SGI* = 0x000080DB
  GL_COLOR_TABLE_BLUE_SIZE_SGI* = 0x000080DC
  GL_COLOR_TABLE_ALPHA_SIZE_SGI* = 0x000080DD
  GL_COLOR_TABLE_LUMINANCE_SIZE_SGI* = 0x000080DE
  GL_COLOR_TABLE_INTENSITY_SIZE_SGI* = 0x000080DF
  GL_SGI_complex* = 1
  GL_SGI_complex_type* = 1
  GL_COMPLEX_UNSIGNED_BYTE_SGI* = 0x000081BD
  GL_COMPLEX_BYTE_SGI* = 0x000081BE
  GL_COMPLEX_UNSIGNED_SHORT_SGI* = 0x000081BF
  GL_COMPLEX_SHORT_SGI* = 0x000081C0
  GL_COMPLEX_UNSIGNED_INT_SGI* = 0x000081C1
  GL_COMPLEX_INT_SGI* = 0x000081C2
  GL_COMPLEX_FLOAT_SGI* = 0x000081C3
  GL_SGI_fft* = 1
  GL_PIXEL_TRANSFORM_OPERATOR_SGI* = 0x000081C4
  GL_CONVOLUTION_SGI* = 0x000081C5
  GL_FFT_1D_SGI* = 0x000081C6
  GL_PIXEL_TRANSFORM_SGI* = 0x000081C7
  GL_MAX_FFT_WIDTH_SGI* = 0x000081C8
  GL_SGI_texture_color_table* = 1
  GL_TEXTURE_COLOR_TABLE_SGI* = 0x000080BC
  GL_PROXY_TEXTURE_COLOR_TABLE_SGI* = 0x000080BD
  GL_SUNX_constant_data* = 1
  GL_UNPACK_CONSTANT_DATA_SUNX* = 0x000081D5
  GL_TEXTURE_CONSTANT_DATA_SUNX* = 0x000081D6
  GL_SUN_convolution_border_modes* = 1
  GL_WRAP_BORDER_SUN* = 0x000081D4
  GL_SUN_global_alpha* = 1
  GL_GLOBAL_ALPHA_SUN* = 0x000081D9
  GL_GLOBAL_ALPHA_FACTOR_SUN* = 0x000081DA
  GL_SUN_mesh_array* = 1
  GL_QUAD_MESH_SUN* = 0x00008614
  GL_TRIANGLE_MESH_SUN* = 0x00008615
  GL_SUN_read_video_pixels* = 1
  GL_SUN_slice_accum* = 1
  GL_SLICE_ACCUM_SUN* = 0x000085CC
  GL_SUN_triangle_list* = 1
  GL_RESTART_SUN* = 0x00000001
  GL_REPLACE_MIDDLE_SUN* = 0x00000002
  GL_REPLACE_OLDEST_SUN* = 0x00000003
  GL_TRIANGLE_LIST_SUN* = 0x000081D7
  GL_REPLACEMENT_CODE_SUN* = 0x000081D8
  GL_REPLACEMENT_CODE_ARRAY_SUN* = 0x000085C0
  GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN* = 0x000085C1
  GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN* = 0x000085C2
  GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN* = 0x000085C3
  GL_R1UI_V3F_SUN* = 0x000085C4
  GL_R1UI_C4UB_V3F_SUN* = 0x000085C5
  GL_R1UI_C3F_V3F_SUN* = 0x000085C6
  GL_R1UI_N3F_V3F_SUN* = 0x000085C7
  GL_R1UI_C4F_N3F_V3F_SUN* = 0x000085C8
  GL_R1UI_T2F_V3F_SUN* = 0x000085C9
  GL_R1UI_T2F_N3F_V3F_SUN* = 0x000085CA
  GL_R1UI_T2F_C4F_N3F_V3F_SUN* = 0x000085CB
  GL_SUN_vertex* = 1
  GL_WIN_phong_shading* = 1
  GL_PHONG_WIN* = 0x000080EA
  GL_PHONG_HINT_WIN* = 0x000080EB
  GL_WIN_scene_markerXXX* = 1
  GL_WIN_specular_fog* = 1
  GL_FOG_SPECULAR_TEXTURE_WIN* = 0x000080EC
  GL_WIN_swap_hint* = 1
  GLEW_OK* = 0
  GLEW_NO_ERROR* = 0
  GLEW_ERROR_NO_GL_VERSION* = 1
  GLEW_ERROR_GL_VERSION_10_ONLY* = 2
  GLEW_ERROR_GLX_VERSION_11_ONLY* = 3
  GLEW_ERROR_NO_GLX_DISPLAY* = 4
  GLEW_VERSION* = 1
  GLEW_VERSION_MAJOR* = 2
  GLEW_VERSION_MINOR* = 3
  GLEW_VERSION_MICRO* = 4
type
  GLenum* = cuint
  GLbitfield* = cuint
  GLuint* = cuint
  GLint* = cint
  GLsizei* = cint
  GLboolean* = cuchar
  GLbyte* = cschar
  GLshort* = cshort
  GLubyte* = cuchar
  GLushort* = cushort
  GLulong* = culong
  GLfloat* = cfloat
  GLclampf* = cfloat
  GLdouble* = cdouble
  GLclampd* = cdouble
  GLvoid* = object
  GLint64EXT* = int64
  GLuint64EXT* = uint64
  GLint64* = GLint64EXT
  GLuint64* = GLuint64EXT
  GLsync* {.incompleteStruct.} = object
  GLchar* = cchar
  PFNGLCOPYTEXSUBIMAGE3DPROC* = proc (target: GLenum; level: GLint;
                                      xoffset: GLint; yoffset: GLint;
                                      zoffset: GLint; x: GLint; y: GLint;
                                      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLDRAWRANGEELEMENTSPROC* = proc (mode: GLenum; start: GLuint;
                                      `end`: GLuint; count: GLsizei;
                                      kind: GLenum; indices: pointer) {.cdecl.}
  PFNGLTEXIMAGE3DPROC* = proc (target: GLenum; level: GLint;
                               internalFormat: GLint; width: GLsizei;
                               height: GLsizei; depth: GLsizei; border: GLint;
                               format: GLenum; kind: GLenum; pixels: pointer) {.
      cdecl.}
  PFNGLTEXSUBIMAGE3DPROC* = proc (target: GLenum; level: GLint; xoffset: GLint;
                                  yoffset: GLint; zoffset: GLint;
                                  width: GLsizei; height: GLsizei;
                                  depth: GLsizei; format: GLenum; kind: GLenum;
                                  pixels: pointer) {.cdecl.}
  PFNGLACTIVETEXTUREPROC* = proc (texture: GLenum) {.cdecl.}
  PFNGLCLIENTACTIVETEXTUREPROC* = proc (texture: GLenum) {.cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE1DPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE2DPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint;
      imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE3DPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLGETCOMPRESSEDTEXIMAGEPROC* = proc (target: GLenum; lod: GLint;
      img: pointer) {.cdecl.}
  PFNGLLOADTRANSPOSEMATRIXDPROC* = proc (m: array[16, GLdouble]) {.cdecl.}
  PFNGLLOADTRANSPOSEMATRIXFPROC* = proc (m: array[16, GLfloat]) {.cdecl.}
  PFNGLMULTTRANSPOSEMATRIXDPROC* = proc (m: array[16, GLdouble]) {.cdecl.}
  PFNGLMULTTRANSPOSEMATRIXFPROC* = proc (m: array[16, GLfloat]) {.cdecl.}
  PFNGLMULTITEXCOORD1DPROC* = proc (target: GLenum; s: GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD1DVPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD1FPROC* = proc (target: GLenum; s: GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD1FVPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD1IPROC* = proc (target: GLenum; s: GLint) {.cdecl.}
  PFNGLMULTITEXCOORD1IVPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD1SPROC* = proc (target: GLenum; s: GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD1SVPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD2DPROC* = proc (target: GLenum; s: GLdouble; t: GLdouble) {.
      cdecl.}
  PFNGLMULTITEXCOORD2DVPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD2FPROC* = proc (target: GLenum; s: GLfloat; t: GLfloat) {.
      cdecl.}
  PFNGLMULTITEXCOORD2FVPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD2IPROC* = proc (target: GLenum; s: GLint; t: GLint) {.cdecl.}
  PFNGLMULTITEXCOORD2IVPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD2SPROC* = proc (target: GLenum; s: GLshort; t: GLshort) {.
      cdecl.}
  PFNGLMULTITEXCOORD2SVPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD3DPROC* = proc (target: GLenum; s: GLdouble; t: GLdouble;
                                    r: GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD3DVPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD3FPROC* = proc (target: GLenum; s: GLfloat; t: GLfloat;
                                    r: GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD3FVPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD3IPROC* = proc (target: GLenum; s: GLint; t: GLint; r: GLint) {.
      cdecl.}
  PFNGLMULTITEXCOORD3IVPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD3SPROC* = proc (target: GLenum; s: GLshort; t: GLshort;
                                    r: GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD3SVPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD4DPROC* = proc (target: GLenum; s: GLdouble; t: GLdouble;
                                    r: GLdouble; q: GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD4DVPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD4FPROC* = proc (target: GLenum; s: GLfloat; t: GLfloat;
                                    r: GLfloat; q: GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD4FVPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD4IPROC* = proc (target: GLenum; s: GLint; t: GLint;
                                    r: GLint; q: GLint) {.cdecl.}
  PFNGLMULTITEXCOORD4IVPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD4SPROC* = proc (target: GLenum; s: GLshort; t: GLshort;
                                    r: GLshort; q: GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD4SVPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLSAMPLECOVERAGEPROC* = proc (value: GLclampf; invert: GLboolean) {.cdecl.}
  PFNGLBLENDCOLORPROC* = proc (red: GLclampf; green: GLclampf; blue: GLclampf;
                               alpha: GLclampf) {.cdecl.}
  PFNGLBLENDEQUATIONPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLBLENDFUNCSEPARATEPROC* = proc (sfactorRGB: GLenum; dfactorRGB: GLenum;
                                      sfactorAlpha: GLenum; dfactorAlpha: GLenum) {.
      cdecl.}
  PFNGLFOGCOORDPOINTERPROC* = proc (kind: GLenum; stride: GLsizei;
                                    pointer: pointer) {.cdecl.}
  PFNGLFOGCOORDDPROC* = proc (coord: GLdouble) {.cdecl.}
  PFNGLFOGCOORDDVPROC* = proc (coord: ptr GLdouble) {.cdecl.}
  PFNGLFOGCOORDFPROC* = proc (coord: GLfloat) {.cdecl.}
  PFNGLFOGCOORDFVPROC* = proc (coord: ptr GLfloat) {.cdecl.}
  PFNGLMULTIDRAWARRAYSPROC* = proc (mode: GLenum; first: ptr GLint;
                                    count: ptr GLsizei; drawcount: GLsizei) {.
      cdecl.}
  PFNGLMULTIDRAWELEMENTSPROC* = proc (mode: GLenum; count: ptr GLsizei;
                                      kind: GLenum; indices: ptr pointer;
                                      drawcount: GLsizei) {.cdecl.}
  PFNGLPOINTPARAMETERFPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLPOINTPARAMETERFVPROC* = proc (pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLPOINTPARAMETERIPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLPOINTPARAMETERIVPROC* = proc (pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLSECONDARYCOLOR3BPROC* = proc (red: GLbyte; green: GLbyte; blue: GLbyte) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3BVPROC* = proc (v: ptr GLbyte) {.cdecl.}
  PFNGLSECONDARYCOLOR3DPROC* = proc (red: GLdouble; green: GLdouble;
                                     blue: GLdouble) {.cdecl.}
  PFNGLSECONDARYCOLOR3DVPROC* = proc (v: ptr GLdouble) {.cdecl.}
  PFNGLSECONDARYCOLOR3FPROC* = proc (red: GLfloat; green: GLfloat; blue: GLfloat) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3FVPROC* = proc (v: ptr GLfloat) {.cdecl.}
  PFNGLSECONDARYCOLOR3IPROC* = proc (red: GLint; green: GLint; blue: GLint) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3IVPROC* = proc (v: ptr GLint) {.cdecl.}
  PFNGLSECONDARYCOLOR3SPROC* = proc (red: GLshort; green: GLshort; blue: GLshort) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3SVPROC* = proc (v: ptr GLshort) {.cdecl.}
  PFNGLSECONDARYCOLOR3UBPROC* = proc (red: GLubyte; green: GLubyte;
                                      blue: GLubyte) {.cdecl.}
  PFNGLSECONDARYCOLOR3UBVPROC* = proc (v: ptr GLubyte) {.cdecl.}
  PFNGLSECONDARYCOLOR3UIPROC* = proc (red: GLuint; green: GLuint; blue: GLuint) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3UIVPROC* = proc (v: ptr GLuint) {.cdecl.}
  PFNGLSECONDARYCOLOR3USPROC* = proc (red: GLushort; green: GLushort;
                                      blue: GLushort) {.cdecl.}
  PFNGLSECONDARYCOLOR3USVPROC* = proc (v: ptr GLushort) {.cdecl.}
  PFNGLSECONDARYCOLORPOINTERPROC* = proc (size: GLint; kind: GLenum;
      stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLWINDOWPOS2DPROC* = proc (x: GLdouble; y: GLdouble) {.cdecl.}
  PFNGLWINDOWPOS2DVPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS2FPROC* = proc (x: GLfloat; y: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2FVPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2IPROC* = proc (x: GLint; y: GLint) {.cdecl.}
  PFNGLWINDOWPOS2IVPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS2SPROC* = proc (x: GLshort; y: GLshort) {.cdecl.}
  PFNGLWINDOWPOS2SVPROC* = proc (p: ptr GLshort) {.cdecl.}
  PFNGLWINDOWPOS3DPROC* = proc (x: GLdouble; y: GLdouble; z: GLdouble) {.cdecl.}
  PFNGLWINDOWPOS3DVPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS3FPROC* = proc (x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS3FVPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS3IPROC* = proc (x: GLint; y: GLint; z: GLint) {.cdecl.}
  PFNGLWINDOWPOS3IVPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS3SPROC* = proc (x: GLshort; y: GLshort; z: GLshort) {.cdecl.}
  PFNGLWINDOWPOS3SVPROC* = proc (p: ptr GLshort) {.cdecl.}
  GLintptr* = ByteAddress
  GLsizeiptr* = ByteAddress
  PFNGLBEGINQUERYPROC* = proc (target: GLenum; id: GLuint) {.cdecl.}
  PFNGLBINDBUFFERPROC* = proc (target: GLenum; buffer: GLuint) {.cdecl.}
  PFNGLBUFFERDATAPROC* = proc (target: GLenum; size: GLsizeiptr; data: pointer;
                               usage: GLenum) {.cdecl.}
  PFNGLBUFFERSUBDATAPROC* = proc (target: GLenum; offset: GLintptr;
                                  size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLDELETEBUFFERSPROC* = proc (n: GLsizei; buffers: ptr GLuint) {.cdecl.}
  PFNGLDELETEQUERIESPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLENDQUERYPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLGENBUFFERSPROC* = proc (n: GLsizei; buffers: ptr GLuint) {.cdecl.}
  PFNGLGENQUERIESPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLGETBUFFERPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETBUFFERPOINTERVPROC* = proc (target: GLenum; pname: GLenum;
                                      params: ptr pointer) {.cdecl.}
  PFNGLGETBUFFERSUBDATAPROC* = proc (target: GLenum; offset: GLintptr;
                                     size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLGETQUERYOBJECTIVPROC* = proc (id: GLuint; pname: GLenum;
                                     params: ptr GLint) {.cdecl.}
  PFNGLGETQUERYOBJECTUIVPROC* = proc (id: GLuint; pname: GLenum;
                                      params: ptr GLuint) {.cdecl.}
  PFNGLGETQUERYIVPROC* = proc (target: GLenum; pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLISBUFFERPROC* = proc (buffer: GLuint): GLboolean {.cdecl.}
  PFNGLISQUERYPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLMAPBUFFERPROC* = proc (target: GLenum; access: GLenum): pointer {.cdecl.}
  PFNGLUNMAPBUFFERPROC* = proc (target: GLenum): GLboolean {.cdecl.}
  PFNGLATTACHSHADERPROC* = proc (program: GLuint; shader: GLuint) {.cdecl.}
  PFNGLBINDATTRIBLOCATIONPROC* = proc (program: GLuint; index: GLuint;
                                       name: ptr GLchar) {.cdecl.}
  PFNGLBLENDEQUATIONSEPARATEPROC* = proc (modeRGB: GLenum; modeAlpha: GLenum) {.
      cdecl.}
  PFNGLCOMPILESHADERPROC* = proc (shader: GLuint) {.cdecl.}
  PFNGLCREATEPROGRAMPROC* = proc (): GLuint {.cdecl.}
  PFNGLCREATESHADERPROC* = proc (kind: GLenum): GLuint {.cdecl.}
  PFNGLDELETEPROGRAMPROC* = proc (program: GLuint) {.cdecl.}
  PFNGLDELETESHADERPROC* = proc (shader: GLuint) {.cdecl.}
  PFNGLDETACHSHADERPROC* = proc (program: GLuint; shader: GLuint) {.cdecl.}
  PFNGLDISABLEVERTEXATTRIBARRAYPROC* = proc (index: GLuint) {.cdecl.}
  PFNGLDRAWBUFFERSPROC* = proc (n: GLsizei; bufs: ptr GLenum) {.cdecl.}
  PFNGLENABLEVERTEXATTRIBARRAYPROC* = proc (index: GLuint) {.cdecl.}
  PFNGLGETACTIVEATTRIBPROC* = proc (program: GLuint; index: GLuint;
                                    maxLength: GLsizei; length: ptr GLsizei;
                                    size: ptr GLint; kind: ptr GLenum;
                                    name: ptr GLchar) {.cdecl.}
  PFNGLGETACTIVEUNIFORMPROC* = proc (program: GLuint; index: GLuint;
                                     maxLength: GLsizei; length: ptr GLsizei;
                                     size: ptr GLint; kind: ptr GLenum;
                                     name: ptr GLchar) {.cdecl.}
  PFNGLGETATTACHEDSHADERSPROC* = proc (program: GLuint; maxCount: GLsizei;
                                       count: ptr GLsizei; shaders: ptr GLuint) {.
      cdecl.}
  PFNGLGETATTRIBLOCATIONPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLGETPROGRAMINFOLOGPROC* = proc (program: GLuint; bufSize: GLsizei;
                                      length: ptr GLsizei; infoLog: ptr GLchar) {.
      cdecl.}
  PFNGLGETPROGRAMIVPROC* = proc (program: GLuint; pname: GLenum;
                                 param: ptr GLint) {.cdecl.}
  PFNGLGETSHADERINFOLOGPROC* = proc (shader: GLuint; bufSize: GLsizei;
                                     length: ptr GLsizei; infoLog: ptr GLchar) {.
      cdecl.}
  PFNGLGETSHADERSOURCEPROC* = proc (obj: GLuint; maxLength: GLsizei;
                                    length: ptr GLsizei; source: ptr GLchar) {.
      cdecl.}
  PFNGLGETSHADERIVPROC* = proc (shader: GLuint; pname: GLenum; param: ptr GLint) {.
      cdecl.}
  PFNGLGETUNIFORMLOCATIONPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLGETUNIFORMFVPROC* = proc (program: GLuint; location: GLint;
                                 params: ptr GLfloat) {.cdecl.}
  PFNGLGETUNIFORMIVPROC* = proc (program: GLuint; location: GLint;
                                 params: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXATTRIBPOINTERVPROC* = proc (index: GLuint; pname: GLenum;
      pointer: ptr pointer) {.cdecl.}
  PFNGLGETVERTEXATTRIBDVPROC* = proc (index: GLuint; pname: GLenum;
                                      params: ptr GLdouble) {.cdecl.}
  PFNGLGETVERTEXATTRIBFVPROC* = proc (index: GLuint; pname: GLenum;
                                      params: ptr GLfloat) {.cdecl.}
  PFNGLGETVERTEXATTRIBIVPROC* = proc (index: GLuint; pname: GLenum;
                                      params: ptr GLint) {.cdecl.}
  PFNGLISPROGRAMPROC* = proc (program: GLuint): GLboolean {.cdecl.}
  PFNGLISSHADERPROC* = proc (shader: GLuint): GLboolean {.cdecl.}
  PFNGLLINKPROGRAMPROC* = proc (program: GLuint) {.cdecl.}
  PFNGLSHADERSOURCEPROC* = proc (shader: GLuint; count: GLsizei;
                                 string: ptr ptr GLchar; length: ptr GLint) {.
      cdecl.}
  PFNGLSTENCILFUNCSEPARATEPROC* = proc (frontfunc: GLenum; backfunc: GLenum;
                                        `ref`: GLint; mask: GLuint) {.cdecl.}
  PFNGLSTENCILMASKSEPARATEPROC* = proc (face: GLenum; mask: GLuint) {.cdecl.}
  PFNGLSTENCILOPSEPARATEPROC* = proc (face: GLenum; sfail: GLenum;
                                      dpfail: GLenum; dppass: GLenum) {.cdecl.}
  PFNGLUNIFORM1FPROC* = proc (location: GLint; v0: GLfloat) {.cdecl.}
  PFNGLUNIFORM1FVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM1IPROC* = proc (location: GLint; v0: GLint) {.cdecl.}
  PFNGLUNIFORM1IVPROC* = proc (location: GLint; count: GLsizei; value: ptr GLint) {.
      cdecl.}
  PFNGLUNIFORM2FPROC* = proc (location: GLint; v0: GLfloat; v1: GLfloat) {.cdecl.}
  PFNGLUNIFORM2FVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM2IPROC* = proc (location: GLint; v0: GLint; v1: GLint) {.cdecl.}
  PFNGLUNIFORM2IVPROC* = proc (location: GLint; count: GLsizei; value: ptr GLint) {.
      cdecl.}
  PFNGLUNIFORM3FPROC* = proc (location: GLint; v0: GLfloat; v1: GLfloat;
                              v2: GLfloat) {.cdecl.}
  PFNGLUNIFORM3FVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM3IPROC* = proc (location: GLint; v0: GLint; v1: GLint; v2: GLint) {.
      cdecl.}
  PFNGLUNIFORM3IVPROC* = proc (location: GLint; count: GLsizei; value: ptr GLint) {.
      cdecl.}
  PFNGLUNIFORM4FPROC* = proc (location: GLint; v0: GLfloat; v1: GLfloat;
                              v2: GLfloat; v3: GLfloat) {.cdecl.}
  PFNGLUNIFORM4FVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM4IPROC* = proc (location: GLint; v0: GLint; v1: GLint; v2: GLint;
                              v3: GLint) {.cdecl.}
  PFNGLUNIFORM4IVPROC* = proc (location: GLint; count: GLsizei; value: ptr GLint) {.
      cdecl.}
  PFNGLUNIFORMMATRIX2FVPROC* = proc (location: GLint; count: GLsizei;
                                     transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3FVPROC* = proc (location: GLint; count: GLsizei;
                                     transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4FVPROC* = proc (location: GLint; count: GLsizei;
                                     transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUSEPROGRAMPROC* = proc (program: GLuint) {.cdecl.}
  PFNGLVALIDATEPROGRAMPROC* = proc (program: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIB1DPROC* = proc (index: GLuint; x: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB1DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB1FPROC* = proc (index: GLuint; x: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB1FVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB1SPROC* = proc (index: GLuint; x: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB1SVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB2DPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble) {.
      cdecl.}
  PFNGLVERTEXATTRIB2DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB2FPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIB2FVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB2SPROC* = proc (index: GLuint; x: GLshort; y: GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIB2SVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB3DPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                   z: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB3DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB3FPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                   z: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB3FVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB3SPROC* = proc (index: GLuint; x: GLshort; y: GLshort;
                                   z: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB3SVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4NBVPROC* = proc (index: GLuint; v: ptr GLbyte) {.cdecl.}
  PFNGLVERTEXATTRIB4NIVPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIB4NSVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4NUBPROC* = proc (index: GLuint; x: GLubyte; y: GLubyte;
                                     z: GLubyte; w: GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4NUBVPROC* = proc (index: GLuint; v: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4NUIVPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIB4NUSVPROC* = proc (index: GLuint; v: ptr GLushort) {.cdecl.}
  PFNGLVERTEXATTRIB4BVPROC* = proc (index: GLuint; v: ptr GLbyte) {.cdecl.}
  PFNGLVERTEXATTRIB4DPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                   z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB4DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB4FPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                   z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB4FVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB4IVPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIB4SPROC* = proc (index: GLuint; x: GLshort; y: GLshort;
                                   z: GLshort; w: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4SVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4UBVPROC* = proc (index: GLuint; v: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4UIVPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIB4USVPROC* = proc (index: GLuint; v: ptr GLushort) {.cdecl.}
  PFNGLVERTEXATTRIBPOINTERPROC* = proc (index: GLuint; size: GLint;
                                        kind: GLenum; normalized: GLboolean;
                                        stride: GLsizei; pointer: pointer) {.
      cdecl.}
  PFNGLUNIFORMMATRIX2X3FVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX2X4FVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3X2FVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3X4FVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4X2FVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4X3FVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLBEGINCONDITIONALRENDERPROC* = proc (id: GLuint; mode: GLenum) {.cdecl.}
  PFNGLBEGINTRANSFORMFEEDBACKPROC* = proc (primitiveMode: GLenum) {.cdecl.}
  PFNGLBINDFRAGDATALOCATIONPROC* = proc (program: GLuint; colorNumber: GLuint;
      name: ptr GLchar) {.cdecl.}
  PFNGLCLAMPCOLORPROC* = proc (target: GLenum; clamp: GLenum) {.cdecl.}
  PFNGLCLEARBUFFERFIPROC* = proc (buffer: GLenum; drawBuffer: GLint;
                                  depth: GLfloat; stencil: GLint) {.cdecl.}
  PFNGLCLEARBUFFERFVPROC* = proc (buffer: GLenum; drawBuffer: GLint;
                                  value: ptr GLfloat) {.cdecl.}
  PFNGLCLEARBUFFERIVPROC* = proc (buffer: GLenum; drawBuffer: GLint;
                                  value: ptr GLint) {.cdecl.}
  PFNGLCLEARBUFFERUIVPROC* = proc (buffer: GLenum; drawBuffer: GLint;
                                   value: ptr GLuint) {.cdecl.}
  PFNGLCOLORMASKIPROC* = proc (buf: GLuint; red: GLboolean; green: GLboolean;
                               blue: GLboolean; alpha: GLboolean) {.cdecl.}
  PFNGLDISABLEIPROC* = proc (cap: GLenum; index: GLuint) {.cdecl.}
  PFNGLENABLEIPROC* = proc (cap: GLenum; index: GLuint) {.cdecl.}
  PFNGLENDCONDITIONALRENDERPROC* = proc () {.cdecl.}
  PFNGLENDTRANSFORMFEEDBACKPROC* = proc () {.cdecl.}
  PFNGLGETBOOLEANI_VPROC* = proc (pname: GLenum; index: GLuint;
                                  data: ptr GLboolean) {.cdecl.}
  PFNGLGETFRAGDATALOCATIONPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLGETSTRINGIPROC* = proc (name: GLenum; index: GLuint): ptr GLubyte {.cdecl.}
  PFNGLGETTEXPARAMETERIIVPROC* = proc (target: GLenum; pname: GLenum;
                                       params: ptr GLint) {.cdecl.}
  PFNGLGETTEXPARAMETERIUIVPROC* = proc (target: GLenum; pname: GLenum;
                                        params: ptr GLuint) {.cdecl.}
  PFNGLGETTRANSFORMFEEDBACKVARYINGPROC* = proc (program: GLuint; index: GLuint;
      bufSize: GLsizei; length: ptr GLsizei; size: ptr GLsizei;
      kind: ptr GLenum; name: ptr GLchar) {.cdecl.}
  PFNGLGETUNIFORMUIVPROC* = proc (program: GLuint; location: GLint;
                                  params: ptr GLuint) {.cdecl.}
  PFNGLGETVERTEXATTRIBIIVPROC* = proc (index: GLuint; pname: GLenum;
                                       params: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXATTRIBIUIVPROC* = proc (index: GLuint; pname: GLenum;
                                        params: ptr GLuint) {.cdecl.}
  PFNGLISENABLEDIPROC* = proc (cap: GLenum; index: GLuint): GLboolean {.cdecl.}
  PFNGLTEXPARAMETERIIVPROC* = proc (target: GLenum; pname: GLenum;
                                    params: ptr GLint) {.cdecl.}
  PFNGLTEXPARAMETERIUIVPROC* = proc (target: GLenum; pname: GLenum;
                                     params: ptr GLuint) {.cdecl.}
  PFNGLTRANSFORMFEEDBACKVARYINGSPROC* = proc (program: GLuint; count: GLsizei;
      varyings: ptr ptr GLchar; bufferMode: GLenum) {.cdecl.}
  PFNGLUNIFORM1UIPROC* = proc (location: GLint; v0: GLuint) {.cdecl.}
  PFNGLUNIFORM1UIVPROC* = proc (location: GLint; count: GLsizei;
                                value: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM2UIPROC* = proc (location: GLint; v0: GLuint; v1: GLuint) {.cdecl.}
  PFNGLUNIFORM2UIVPROC* = proc (location: GLint; count: GLsizei;
                                value: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM3UIPROC* = proc (location: GLint; v0: GLuint; v1: GLuint;
                               v2: GLuint) {.cdecl.}
  PFNGLUNIFORM3UIVPROC* = proc (location: GLint; count: GLsizei;
                                value: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM4UIPROC* = proc (location: GLint; v0: GLuint; v1: GLuint;
                               v2: GLuint; v3: GLuint) {.cdecl.}
  PFNGLUNIFORM4UIVPROC* = proc (location: GLint; count: GLsizei;
                                value: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI1IPROC* = proc (index: GLuint; v0: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI1IVPROC* = proc (index: GLuint; v0: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI1UIPROC* = proc (index: GLuint; v0: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI1UIVPROC* = proc (index: GLuint; v0: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI2IPROC* = proc (index: GLuint; v0: GLint; v1: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI2IVPROC* = proc (index: GLuint; v0: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI2UIPROC* = proc (index: GLuint; v0: GLuint; v1: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBI2UIVPROC* = proc (index: GLuint; v0: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI3IPROC* = proc (index: GLuint; v0: GLint; v1: GLint;
                                    v2: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI3IVPROC* = proc (index: GLuint; v0: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI3UIPROC* = proc (index: GLuint; v0: GLuint; v1: GLuint;
                                     v2: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI3UIVPROC* = proc (index: GLuint; v0: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI4BVPROC* = proc (index: GLuint; v0: ptr GLbyte) {.cdecl.}
  PFNGLVERTEXATTRIBI4IPROC* = proc (index: GLuint; v0: GLint; v1: GLint;
                                    v2: GLint; v3: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI4IVPROC* = proc (index: GLuint; v0: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI4SVPROC* = proc (index: GLuint; v0: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIBI4UBVPROC* = proc (index: GLuint; v0: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIBI4UIPROC* = proc (index: GLuint; v0: GLuint; v1: GLuint;
                                     v2: GLuint; v3: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI4UIVPROC* = proc (index: GLuint; v0: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI4USVPROC* = proc (index: GLuint; v0: ptr GLushort) {.cdecl.}
  PFNGLVERTEXATTRIBIPOINTERPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLDRAWARRAYSINSTANCEDPROC* = proc (mode: GLenum; first: GLint;
                                        count: GLsizei; primcount: GLsizei) {.
      cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; primcount: GLsizei) {.cdecl.}
  PFNGLPRIMITIVERESTARTINDEXPROC* = proc (buffer: GLuint) {.cdecl.}
  PFNGLTEXBUFFERPROC* = proc (target: GLenum; internalFormat: GLenum;
                              buffer: GLuint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTUREPROC* = proc (target: GLenum; attachment: GLenum;
                                       texture: GLuint; level: GLint) {.cdecl.}
  PFNGLGETBUFFERPARAMETERI64VPROC* = proc (target: GLenum; value: GLenum;
      data: ptr GLint64) {.cdecl.}
  PFNGLGETINTEGER64I_VPROC* = proc (pname: GLenum; index: GLuint;
                                    data: ptr GLint64) {.cdecl.}
  PFNGLVERTEXATTRIBDIVISORPROC* = proc (index: GLuint; divisor: GLuint) {.cdecl.}
  PFNGLBLENDEQUATIONSEPARATEIPROC* = proc (buf: GLuint; modeRGB: GLenum;
      modeAlpha: GLenum) {.cdecl.}
  PFNGLBLENDEQUATIONIPROC* = proc (buf: GLuint; mode: GLenum) {.cdecl.}
  PFNGLBLENDFUNCSEPARATEIPROC* = proc (buf: GLuint; srcRGB: GLenum;
                                       dstRGB: GLenum; srcAlpha: GLenum;
                                       dstAlpha: GLenum) {.cdecl.}
  PFNGLBLENDFUNCIPROC* = proc (buf: GLuint; src: GLenum; dst: GLenum) {.cdecl.}
  PFNGLMINSAMPLESHADINGPROC* = proc (value: GLclampf) {.cdecl.}
  PFNGLGETGRAPHICSRESETSTATUSPROC* = proc (): GLenum {.cdecl.}
  PFNGLGETNCOMPRESSEDTEXIMAGEPROC* = proc (target: GLenum; lod: GLint;
      bufSize: GLsizei; pixels: ptr GLvoid) {.cdecl.}
  PFNGLGETNTEXIMAGEPROC* = proc (tex: GLenum; level: GLint; format: GLenum;
                                 kind: GLenum; bufSize: GLsizei;
                                 pixels: ptr GLvoid) {.cdecl.}
  PFNGLGETNUNIFORMDVPROC* = proc (program: GLuint; location: GLint;
                                  bufSize: GLsizei; params: ptr GLdouble) {.
      cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC* = proc (mode: GLenum;
      indirect: ptr GLvoid; drawcount: GLintptr; maxdrawcount: GLsizei;
      stride: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC* = proc (mode: GLenum; kind: GLenum;
      indirect: ptr GLvoid; drawcount: GLintptr; maxdrawcount: GLsizei;
      stride: GLsizei) {.cdecl.}
  PFNGLSPECIALIZESHADERPROC* = proc (shader: GLuint; pEntryPoint: ptr GLchar;
                                     numSpecializationConstants: GLuint;
                                     pConstantIndex: ptr GLuint;
                                     pConstantValue: ptr GLuint) {.cdecl.}
  PFNGLTBUFFERMASK3DFXPROC* = proc (mask: GLuint) {.cdecl.}
  GLDEBUGPROCAMD* = proc (id: GLuint; category: GLenum; severity: GLenum;
                          length: GLsizei; message: ptr GLchar;
                          userParam: pointer) {.cdecl.}
  PFNGLDEBUGMESSAGECALLBACKAMDPROC* = proc (callback: GLDEBUGPROCAMD;
      userParam: pointer) {.cdecl.}
  PFNGLDEBUGMESSAGEENABLEAMDPROC* = proc (category: GLenum; severity: GLenum;
      count: GLsizei; ids: ptr GLuint; enabled: GLboolean) {.cdecl.}
  PFNGLDEBUGMESSAGEINSERTAMDPROC* = proc (category: GLenum; severity: GLenum;
      id: GLuint; length: GLsizei; buf: ptr GLchar) {.cdecl.}
  PFNGLGETDEBUGMESSAGELOGAMDPROC* = proc (count: GLuint; bufsize: GLsizei;
      categories: ptr GLenum; severities: ptr GLuint; ids: ptr GLuint;
      lengths: ptr GLsizei; message: ptr GLchar): GLuint {.cdecl.}
  PFNGLBLENDEQUATIONINDEXEDAMDPROC* = proc (buf: GLuint; mode: GLenum) {.cdecl.}
  PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC* = proc (buf: GLuint;
      modeRGB: GLenum; modeAlpha: GLenum) {.cdecl.}
  PFNGLBLENDFUNCINDEXEDAMDPROC* = proc (buf: GLuint; src: GLenum; dst: GLenum) {.
      cdecl.}
  PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC* = proc (buf: GLuint; srcRGB: GLenum;
      dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) {.cdecl.}
  PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC* = proc (target: GLenum;
      numsamples: GLuint; pixelindex: GLuint; values: ptr GLfloat) {.cdecl.}
  PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC* = proc (target: GLenum; pname: GLenum;
      numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: ptr GLfloat) {.
      cdecl.}
  PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC* = proc (framebuffer: GLuint;
      pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei;
      values: ptr GLfloat) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC* = proc (framebuffer: GLuint;
      numsamples: GLuint; pixelindex: GLuint; values: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIBPARAMETERIAMDPROC* = proc (index: GLuint; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC* = proc (mode: GLenum; indirect: pointer;
      primcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC* = proc (mode: GLenum; kind: GLenum;
      indirect: pointer; primcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLDELETENAMESAMDPROC* = proc (identifier: GLenum; num: GLuint;
                                   names: ptr GLuint) {.cdecl.}
  PFNGLGENNAMESAMDPROC* = proc (identifier: GLenum; num: GLuint;
                                names: ptr GLuint) {.cdecl.}
  PFNGLISNAMEAMDPROC* = proc (identifier: GLenum; name: GLuint): GLboolean {.
      cdecl.}
  PFNGLQUERYOBJECTPARAMETERUIAMDPROC* = proc (target: GLenum; id: GLuint;
      pname: GLenum; param: GLuint) {.cdecl.}
  PFNGLBEGINPERFMONITORAMDPROC* = proc (monitor: GLuint) {.cdecl.}
  PFNGLDELETEPERFMONITORSAMDPROC* = proc (n: GLsizei; monitors: ptr GLuint) {.
      cdecl.}
  PFNGLENDPERFMONITORAMDPROC* = proc (monitor: GLuint) {.cdecl.}
  PFNGLGENPERFMONITORSAMDPROC* = proc (n: GLsizei; monitors: ptr GLuint) {.cdecl.}
  PFNGLGETPERFMONITORCOUNTERDATAAMDPROC* = proc (monitor: GLuint; pname: GLenum;
      dataSize: GLsizei; data: ptr GLuint; bytesWritten: ptr GLint) {.cdecl.}
  PFNGLGETPERFMONITORCOUNTERINFOAMDPROC* = proc (group: GLuint; counter: GLuint;
      pname: GLenum; data: pointer) {.cdecl.}
  PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC* = proc (group: GLuint;
      counter: GLuint; bufSize: GLsizei; length: ptr GLsizei;
      counterString: ptr GLchar) {.cdecl.}
  PFNGLGETPERFMONITORCOUNTERSAMDPROC* = proc (group: GLuint;
      numCounters: ptr GLint; maxActiveCounters: ptr GLint;
      countersSize: GLsizei; counters: ptr GLuint) {.cdecl.}
  PFNGLGETPERFMONITORGROUPSTRINGAMDPROC* = proc (group: GLuint;
      bufSize: GLsizei; length: ptr GLsizei; groupString: ptr GLchar) {.cdecl.}
  PFNGLGETPERFMONITORGROUPSAMDPROC* = proc (numGroups: ptr GLint;
      groupsSize: GLsizei; groups: ptr GLuint) {.cdecl.}
  PFNGLSELECTPERFMONITORCOUNTERSAMDPROC* = proc (monitor: GLuint;
      enable: GLboolean; group: GLuint; numCounters: GLint;
      counterList: ptr GLuint) {.cdecl.}
  PFNGLSETMULTISAMPLEFVAMDPROC* = proc (pname: GLenum; index: GLuint;
                                        val: ptr GLfloat) {.cdecl.}
  PFNGLTEXSTORAGESPARSEAMDPROC* = proc (target: GLenum; internalFormat: GLenum;
                                        width: GLsizei; height: GLsizei;
                                        depth: GLsizei; layers: GLsizei;
                                        flags: GLbitfield) {.cdecl.}
  PFNGLTEXTURESTORAGESPARSEAMDPROC* = proc (texture: GLuint; target: GLenum;
      internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      layers: GLsizei; flags: GLbitfield) {.cdecl.}
  PFNGLSTENCILOPVALUEAMDPROC* = proc (face: GLenum; value: GLuint) {.cdecl.}
  PFNGLTESSELLATIONFACTORAMDPROC* = proc (factor: GLfloat) {.cdecl.}
  PFNGLTESSELLATIONMODEAMDPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLBLITFRAMEBUFFERANGLEPROC* = proc (srcX0: GLint; srcY0: GLint;
      srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint;
      dstY1: GLint; mask: GLbitfield; filter: GLenum) {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC* = proc (target: GLenum;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLDRAWARRAYSINSTANCEDANGLEPROC* = proc (mode: GLenum; first: GLint;
      count: GLsizei; primcount: GLsizei) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDANGLEPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; primcount: GLsizei) {.cdecl.}
  PFNGLVERTEXATTRIBDIVISORANGLEPROC* = proc (index: GLuint; divisor: GLuint) {.
      cdecl.}
  PFNGLBEGINQUERYANGLEPROC* = proc (target: GLenum; id: GLuint) {.cdecl.}
  PFNGLDELETEQUERIESANGLEPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLENDQUERYANGLEPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLGENQUERIESANGLEPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLGETQUERYOBJECTI64VANGLEPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLint64) {.cdecl.}
  PFNGLGETQUERYOBJECTIVANGLEPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETQUERYOBJECTUI64VANGLEPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLuint64) {.cdecl.}
  PFNGLGETQUERYOBJECTUIVANGLEPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLGETQUERYIVANGLEPROC* = proc (target: GLenum; pname: GLenum;
                                    params: ptr GLint) {.cdecl.}
  PFNGLISQUERYANGLEPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLQUERYCOUNTERANGLEPROC* = proc (id: GLuint; target: GLenum) {.cdecl.}
  PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC* = proc (shader: GLuint;
      bufsize: GLsizei; length: ptr GLsizei; source: ptr GLchar) {.cdecl.}
  PFNGLCOPYTEXTURELEVELSAPPLEPROC* = proc (destinationTexture: GLuint;
      sourceTexture: GLuint; sourceBaseLevel: GLint; sourceLevelCount: GLsizei) {.
      cdecl.}
  PFNGLDRAWELEMENTARRAYAPPLEPROC* = proc (mode: GLenum; first: GLint;
      count: GLsizei) {.cdecl.}
  PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC* = proc (mode: GLenum; start: GLuint;
      `end`: GLuint; first: GLint; count: GLsizei) {.cdecl.}
  PFNGLELEMENTPOINTERAPPLEPROC* = proc (kind: GLenum; pointer: pointer) {.cdecl.}
  PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC* = proc (mode: GLenum; first: ptr GLint;
      count: ptr GLsizei; primcount: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC* = proc (mode: GLenum; start: GLuint;
      `end`: GLuint; first: ptr GLint; count: ptr GLsizei; primcount: GLsizei) {.
      cdecl.}
  PFNGLDELETEFENCESAPPLEPROC* = proc (n: GLsizei; fences: ptr GLuint) {.cdecl.}
  PFNGLFINISHFENCEAPPLEPROC* = proc (fence: GLuint) {.cdecl.}
  PFNGLFINISHOBJECTAPPLEPROC* = proc (`object`: GLenum; name: GLint) {.cdecl.}
  PFNGLGENFENCESAPPLEPROC* = proc (n: GLsizei; fences: ptr GLuint) {.cdecl.}
  PFNGLISFENCEAPPLEPROC* = proc (fence: GLuint): GLboolean {.cdecl.}
  PFNGLSETFENCEAPPLEPROC* = proc (fence: GLuint) {.cdecl.}
  PFNGLTESTFENCEAPPLEPROC* = proc (fence: GLuint): GLboolean {.cdecl.}
  PFNGLTESTOBJECTAPPLEPROC* = proc (`object`: GLenum; name: GLuint): GLboolean {.
      cdecl.}
  PFNGLBUFFERPARAMETERIAPPLEPROC* = proc (target: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC* = proc (target: GLenum;
      offset: GLintptr; size: GLsizeiptr) {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC* = proc (target: GLenum;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC* = proc () {.cdecl.}
  PFNGLGETOBJECTPARAMETERIVAPPLEPROC* = proc (objectType: GLenum; name: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLOBJECTPURGEABLEAPPLEPROC* = proc (objectType: GLenum; name: GLuint;
      option: GLenum): GLenum {.cdecl.}
  PFNGLOBJECTUNPURGEABLEAPPLEPROC* = proc (objectType: GLenum; name: GLuint;
      option: GLenum): GLenum {.cdecl.}
  PFNGLCLIENTWAITSYNCAPPLEPROC* = proc (GLsync: GLsync; flags: GLbitfield;
                                        timeout: GLuint64): GLenum {.cdecl.}
  PFNGLDELETESYNCAPPLEPROC* = proc (GLsync: GLsync) {.cdecl.}
  PFNGLFENCESYNCAPPLEPROC* = proc (condition: GLenum; flags: GLbitfield): GLsync {.
      cdecl.}
  PFNGLGETINTEGER64VAPPLEPROC* = proc (pname: GLenum; params: ptr GLint64) {.
      cdecl.}
  PFNGLGETSYNCIVAPPLEPROC* = proc (GLsync: GLsync; pname: GLenum;
                                   bufSize: GLsizei; length: ptr GLsizei;
                                   values: ptr GLint) {.cdecl.}
  PFNGLISSYNCAPPLEPROC* = proc (GLsync: GLsync): GLboolean {.cdecl.}
  PFNGLWAITSYNCAPPLEPROC* = proc (GLsync: GLsync; flags: GLbitfield;
                                  timeout: GLuint64) {.cdecl.}
  PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr pointer) {.cdecl.}
  PFNGLTEXTURERANGEAPPLEPROC* = proc (target: GLenum; length: GLsizei;
                                      pointer: pointer) {.cdecl.}
  PFNGLBINDVERTEXARRAYAPPLEPROC* = proc (array: GLuint) {.cdecl.}
  PFNGLDELETEVERTEXARRAYSAPPLEPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.
      cdecl.}
  PFNGLGENVERTEXARRAYSAPPLEPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.cdecl.}
  PFNGLISVERTEXARRAYAPPLEPROC* = proc (array: GLuint): GLboolean {.cdecl.}
  PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC* = proc (length: GLsizei; pointer: pointer) {.
      cdecl.}
  PFNGLVERTEXARRAYPARAMETERIAPPLEPROC* = proc (pname: GLenum; param: GLint) {.
      cdecl.}
  PFNGLVERTEXARRAYRANGEAPPLEPROC* = proc (length: GLsizei; pointer: pointer) {.
      cdecl.}
  PFNGLDISABLEVERTEXATTRIBAPPLEPROC* = proc (index: GLuint; pname: GLenum) {.
      cdecl.}
  PFNGLENABLEVERTEXATTRIBAPPLEPROC* = proc (index: GLuint; pname: GLenum) {.
      cdecl.}
  PFNGLISVERTEXATTRIBENABLEDAPPLEPROC* = proc (index: GLuint; pname: GLenum): GLboolean {.
      cdecl.}
  PFNGLMAPVERTEXATTRIB1DAPPLEPROC* = proc (index: GLuint; size: GLuint;
      u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint;
      points: ptr GLdouble) {.cdecl.}
  PFNGLMAPVERTEXATTRIB1FAPPLEPROC* = proc (index: GLuint; size: GLuint;
      u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; points: ptr GLfloat) {.
      cdecl.}
  PFNGLMAPVERTEXATTRIB2DAPPLEPROC* = proc (index: GLuint; size: GLuint;
      u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble;
      v2: GLdouble; vstride: GLint; vorder: GLint; points: ptr GLdouble) {.cdecl.}
  PFNGLMAPVERTEXATTRIB2FAPPLEPROC* = proc (index: GLuint; size: GLuint;
      u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat;
      v2: GLfloat; vstride: GLint; vorder: GLint; points: ptr GLfloat) {.cdecl.}
  GLfixed* = cint
  PFNGLCLEARDEPTHFPROC* = proc (d: GLclampf) {.cdecl.}
  PFNGLDEPTHRANGEFPROC* = proc (n: GLclampf; f: GLclampf) {.cdecl.}
  PFNGLGETSHADERPRECISIONFORMATPROC* = proc (shadertype: GLenum;
      precisiontype: GLenum; range: ptr GLint; precision: ptr GLint) {.cdecl.}
  PFNGLRELEASESHADERCOMPILERPROC* = proc () {.cdecl.}
  PFNGLSHADERBINARYPROC* = proc (count: GLsizei; shaders: ptr GLuint;
                                 binaryformat: GLenum; binary: pointer;
                                 length: GLsizei) {.cdecl.}
  PFNGLMEMORYBARRIERBYREGIONPROC* = proc (barriers: GLbitfield) {.cdecl.}
  PFNGLPRIMITIVEBOUNDINGBOXARBPROC* = proc (minX: GLfloat; minY: GLfloat;
      minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat;
      maxW: GLfloat) {.cdecl.}
  PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC* = proc (mode: GLenum; first: GLint;
      count: GLsizei; primcount: GLsizei; baseinstance: GLuint) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC* = proc (mode: GLenum;
      count: GLsizei; kind: GLenum; indices: pointer; primcount: GLsizei;
      baseinstance: GLuint) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC* = proc (mode: GLenum;
      count: GLsizei; kind: GLenum; indices: pointer; primcount: GLsizei;
      basevertex: GLint; baseinstance: GLuint) {.cdecl.}
  PFNGLGETIMAGEHANDLEARBPROC* = proc (texture: GLuint; level: GLint;
                                      layered: GLboolean; layer: GLint;
                                      format: GLenum): GLuint64 {.cdecl.}
  PFNGLGETTEXTUREHANDLEARBPROC* = proc (texture: GLuint): GLuint64 {.cdecl.}
  PFNGLGETTEXTURESAMPLERHANDLEARBPROC* = proc (texture: GLuint; sampler: GLuint): GLuint64 {.
      cdecl.}
  PFNGLGETVERTEXATTRIBLUI64VARBPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLuint64EXT) {.cdecl.}
  PFNGLISIMAGEHANDLERESIDENTARBPROC* = proc (handle: GLuint64): GLboolean {.
      cdecl.}
  PFNGLISTEXTUREHANDLERESIDENTARBPROC* = proc (handle: GLuint64): GLboolean {.
      cdecl.}
  PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC* = proc (handle: GLuint64) {.cdecl.}
  PFNGLMAKEIMAGEHANDLERESIDENTARBPROC* = proc (handle: GLuint64; access: GLenum) {.
      cdecl.}
  PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC* = proc (handle: GLuint64) {.cdecl.}
  PFNGLMAKETEXTUREHANDLERESIDENTARBPROC* = proc (handle: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC* = proc (program: GLuint;
      location: GLint; value: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; values: ptr GLuint64) {.cdecl.}
  PFNGLUNIFORMHANDLEUI64ARBPROC* = proc (location: GLint; value: GLuint64) {.
      cdecl.}
  PFNGLUNIFORMHANDLEUI64VARBPROC* = proc (location: GLint; count: GLsizei;
      value: ptr GLuint64) {.cdecl.}
  PFNGLVERTEXATTRIBL1UI64ARBPROC* = proc (index: GLuint; x: GLuint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL1UI64VARBPROC* = proc (index: GLuint; v: ptr GLuint64EXT) {.
      cdecl.}
  PFNGLBINDFRAGDATALOCATIONINDEXEDPROC* = proc (program: GLuint;
      colorNumber: GLuint; index: GLuint; name: ptr GLchar) {.cdecl.}
  PFNGLGETFRAGDATAINDEXPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLBUFFERSTORAGEPROC* = proc (target: GLenum; size: GLsizeiptr;
                                  data: pointer; flags: GLbitfield) {.cdecl.}
  cl_context* {.incompleteStruct.} = object
  cl_event* {.incompleteStruct.} = object
  PFNGLCREATESYNCFROMCLEVENTARBPROC* = proc (context: cl_context;
      event: cl_event; flags: GLbitfield): GLsync {.cdecl.}
  PFNGLCLEARBUFFERDATAPROC* = proc (target: GLenum; internalformat: GLenum;
                                    format: GLenum; kind: GLenum; data: pointer) {.
      cdecl.}
  PFNGLCLEARBUFFERSUBDATAPROC* = proc (target: GLenum; internalformat: GLenum;
                                       offset: GLintptr; size: GLsizeiptr;
                                       format: GLenum; kind: GLenum;
                                       data: pointer) {.cdecl.}
  PFNGLCLEARNAMEDBUFFERDATAEXTPROC* = proc (buffer: GLuint;
      internalformat: GLenum; format: GLenum; kind: GLenum; data: pointer) {.
      cdecl.}
  PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC* = proc (buffer: GLuint;
      internalformat: GLenum; offset: GLintptr; size: GLsizeiptr;
      format: GLenum; kind: GLenum; data: pointer) {.cdecl.}
  PFNGLCLEARTEXIMAGEPROC* = proc (texture: GLuint; level: GLint; format: GLenum;
                                  kind: GLenum; data: pointer) {.cdecl.}
  PFNGLCLEARTEXSUBIMAGEPROC* = proc (texture: GLuint; level: GLint;
                                     xoffset: GLint; yoffset: GLint;
                                     zoffset: GLint; width: GLsizei;
                                     height: GLsizei; depth: GLsizei;
                                     format: GLenum; kind: GLenum; data: pointer) {.
      cdecl.}
  PFNGLCLIPCONTROLPROC* = proc (origin: GLenum; depth: GLenum) {.cdecl.}
  PFNGLCLAMPCOLORARBPROC* = proc (target: GLenum; clamp: GLenum) {.cdecl.}
  PFNGLDISPATCHCOMPUTEPROC* = proc (numGroupsX: GLuint; numGroupsY: GLuint;
                                    numGroupsZ: GLuint) {.cdecl.}
  PFNGLDISPATCHCOMPUTEINDIRECTPROC* = proc (indirect: GLintptr) {.cdecl.}
  PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC* = proc (numGroupsX: GLuint;
      numGroupsY: GLuint; numGroupsZ: GLuint; groupSizeX: GLuint;
      groupSizeY: GLuint; groupSizeZ: GLuint) {.cdecl.}
  PFNGLCOPYBUFFERSUBDATAPROC* = proc (readtarget: GLenum; writetarget: GLenum;
                                      readoffset: GLintptr;
                                      writeoffset: GLintptr; size: GLsizeiptr) {.
      cdecl.}
  PFNGLCOPYIMAGESUBDATAPROC* = proc (srcName: GLuint; srcTarget: GLenum;
                                     srcLevel: GLint; srcX: GLint; srcY: GLint;
                                     srcZ: GLint; dstName: GLuint;
                                     dstTarget: GLenum; dstLevel: GLint;
                                     dstX: GLint; dstY: GLint; dstZ: GLint;
                                     srcWidth: GLsizei; srcHeight: GLsizei;
                                     srcDepth: GLsizei) {.cdecl.}
  GLDEBUGPROCARB* = proc (source: GLenum; kind: GLenum; id: GLuint;
                          severity: GLenum; length: GLsizei;
                          message: ptr GLchar; userParam: pointer) {.cdecl.}
  PFNGLDEBUGMESSAGECALLBACKARBPROC* = proc (callback: GLDEBUGPROCARB;
      userParam: pointer) {.cdecl.}
  PFNGLDEBUGMESSAGECONTROLARBPROC* = proc (source: GLenum; kind: GLenum;
      severity: GLenum; count: GLsizei; ids: ptr GLuint; enabled: GLboolean) {.
      cdecl.}
  PFNGLDEBUGMESSAGEINSERTARBPROC* = proc (source: GLenum; kind: GLenum;
      id: GLuint; severity: GLenum; length: GLsizei; buf: ptr GLchar) {.cdecl.}
  PFNGLGETDEBUGMESSAGELOGARBPROC* = proc (count: GLuint; bufSize: GLsizei;
      sources: ptr GLenum; types: ptr GLenum; ids: ptr GLuint;
      severities: ptr GLenum; lengths: ptr GLsizei; messageLog: ptr GLchar): GLuint {.
      cdecl.}
  PFNGLBINDTEXTUREUNITPROC* = proc (unit: GLuint; texture: GLuint) {.cdecl.}
  PFNGLBLITNAMEDFRAMEBUFFERPROC* = proc (readFramebuffer: GLuint;
      drawFramebuffer: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint;
      srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint;
      mask: GLbitfield; filter: GLenum) {.cdecl.}
  PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC* = proc (framebuffer: GLuint;
      target: GLenum): GLenum {.cdecl.}
  PFNGLCLEARNAMEDBUFFERDATAPROC* = proc (buffer: GLuint; internalformat: GLenum;
      format: GLenum; kind: GLenum; data: pointer) {.cdecl.}
  PFNGLCLEARNAMEDBUFFERSUBDATAPROC* = proc (buffer: GLuint;
      internalformat: GLenum; offset: GLintptr; size: GLsizeiptr;
      format: GLenum; kind: GLenum; data: pointer) {.cdecl.}
  PFNGLCLEARNAMEDFRAMEBUFFERFIPROC* = proc (framebuffer: GLuint; buffer: GLenum;
      drawbuffer: GLint; depth: GLfloat; stencil: GLint) {.cdecl.}
  PFNGLCLEARNAMEDFRAMEBUFFERFVPROC* = proc (framebuffer: GLuint; buffer: GLenum;
      drawbuffer: GLint; value: ptr GLfloat) {.cdecl.}
  PFNGLCLEARNAMEDFRAMEBUFFERIVPROC* = proc (framebuffer: GLuint; buffer: GLenum;
      drawbuffer: GLint; value: ptr GLint) {.cdecl.}
  PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC* = proc (framebuffer: GLuint;
      buffer: GLenum; drawbuffer: GLint; value: ptr GLuint) {.cdecl.}
  PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOPYNAMEDBUFFERSUBDATAPROC* = proc (readBuffer: GLuint;
      writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr;
      size: GLsizeiptr) {.cdecl.}
  PFNGLCOPYTEXTURESUBIMAGE1DPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYTEXTURESUBIMAGE2DPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei;
      height: GLsizei) {.cdecl.}
  PFNGLCOPYTEXTURESUBIMAGE3DPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLCREATEBUFFERSPROC* = proc (n: GLsizei; buffers: ptr GLuint) {.cdecl.}
  PFNGLCREATEFRAMEBUFFERSPROC* = proc (n: GLsizei; framebuffers: ptr GLuint) {.
      cdecl.}
  PFNGLCREATEPROGRAMPIPELINESPROC* = proc (n: GLsizei; pipelines: ptr GLuint) {.
      cdecl.}
  PFNGLCREATEQUERIESPROC* = proc (target: GLenum; n: GLsizei; ids: ptr GLuint) {.
      cdecl.}
  PFNGLCREATERENDERBUFFERSPROC* = proc (n: GLsizei; renderbuffers: ptr GLuint) {.
      cdecl.}
  PFNGLCREATESAMPLERSPROC* = proc (n: GLsizei; samplers: ptr GLuint) {.cdecl.}
  PFNGLCREATETEXTURESPROC* = proc (target: GLenum; n: GLsizei;
                                   textures: ptr GLuint) {.cdecl.}
  PFNGLCREATETRANSFORMFEEDBACKSPROC* = proc (n: GLsizei; ids: ptr GLuint) {.
      cdecl.}
  PFNGLCREATEVERTEXARRAYSPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.cdecl.}
  PFNGLDISABLEVERTEXARRAYATTRIBPROC* = proc (vaobj: GLuint; index: GLuint) {.
      cdecl.}
  PFNGLENABLEVERTEXARRAYATTRIBPROC* = proc (vaobj: GLuint; index: GLuint) {.
      cdecl.}
  PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC* = proc (buffer: GLuint;
      offset: GLintptr; length: GLsizeiptr) {.cdecl.}
  PFNGLGENERATETEXTUREMIPMAPPROC* = proc (texture: GLuint) {.cdecl.}
  PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC* = proc (texture: GLuint; level: GLint;
      bufSize: GLsizei; pixels: pointer) {.cdecl.}
  PFNGLGETNAMEDBUFFERPARAMETERI64VPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr GLint64) {.cdecl.}
  PFNGLGETNAMEDBUFFERPARAMETERIVPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDBUFFERPOINTERVPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr pointer) {.cdecl.}
  PFNGLGETNAMEDBUFFERSUBDATAPROC* = proc (buffer: GLuint; offset: GLintptr;
      size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC* = proc (
      framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC* = proc (framebuffer: GLuint;
      pname: GLenum; param: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC* = proc (renderbuffer: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETQUERYBUFFEROBJECTI64VPROC* = proc (id: GLuint; buffer: GLuint;
      pname: GLenum; offset: GLintptr) {.cdecl.}
  PFNGLGETQUERYBUFFEROBJECTIVPROC* = proc (id: GLuint; buffer: GLuint;
      pname: GLenum; offset: GLintptr) {.cdecl.}
  PFNGLGETQUERYBUFFEROBJECTUI64VPROC* = proc (id: GLuint; buffer: GLuint;
      pname: GLenum; offset: GLintptr) {.cdecl.}
  PFNGLGETQUERYBUFFEROBJECTUIVPROC* = proc (id: GLuint; buffer: GLuint;
      pname: GLenum; offset: GLintptr) {.cdecl.}
  PFNGLGETTEXTUREIMAGEPROC* = proc (texture: GLuint; level: GLint;
                                    format: GLenum; kind: GLenum;
                                    bufSize: GLsizei; pixels: pointer) {.cdecl.}
  PFNGLGETTEXTURELEVELPARAMETERFVPROC* = proc (texture: GLuint; level: GLint;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETTEXTURELEVELPARAMETERIVPROC* = proc (texture: GLuint; level: GLint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERIIVPROC* = proc (texture: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERIUIVPROC* = proc (texture: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERFVPROC* = proc (texture: GLuint; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERIVPROC* = proc (texture: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETTRANSFORMFEEDBACKI64_VPROC* = proc (xfb: GLuint; pname: GLenum;
      index: GLuint; param: ptr GLint64) {.cdecl.}
  PFNGLGETTRANSFORMFEEDBACKI_VPROC* = proc (xfb: GLuint; pname: GLenum;
      index: GLuint; param: ptr GLint) {.cdecl.}
  CPFNGLGETTRANSFORMFEEDBACKIVPROC* = proc (xfb: GLuint; pname: GLenum;
      param: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXARRAYINDEXED64IVPROC* = proc (vaobj: GLuint; index: GLuint;
      pname: GLenum; param: ptr GLint64) {.cdecl.}
  PFNGLGETVERTEXARRAYINDEXEDIVPROC* = proc (vaobj: GLuint; index: GLuint;
      pname: GLenum; param: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXARRAYIVPROC* = proc (vaobj: GLuint; pname: GLenum;
                                     param: ptr GLint) {.cdecl.}
  PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC* = proc (framebuffer: GLuint;
      numAttachments: GLsizei; attachments: ptr GLenum) {.cdecl.}
  PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC* = proc (framebuffer: GLuint;
      numAttachments: GLsizei; attachments: ptr GLenum; x: GLint; y: GLint;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLMAPNAMEDBUFFERPROC* = proc (buffer: GLuint; access: GLenum): pointer {.
      cdecl.}
  PFNGLMAPNAMEDBUFFERRANGEPROC* = proc (buffer: GLuint; offset: GLintptr;
                                        length: GLsizeiptr; access: GLbitfield): pointer {.
      cdecl.}
  PFNGLNAMEDBUFFERDATAPROC* = proc (buffer: GLuint; size: GLsizeiptr;
                                    data: pointer; usage: GLenum) {.cdecl.}
  PFNGLNAMEDBUFFERSTORAGEPROC* = proc (buffer: GLuint; size: GLsizeiptr;
                                       data: pointer; flags: GLbitfield) {.cdecl.}
  PFNGLNAMEDBUFFERSUBDATAPROC* = proc (buffer: GLuint; offset: GLintptr;
                                       size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC* = proc (framebuffer: GLuint; mode: GLenum) {.
      cdecl.}
  PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC* = proc (framebuffer: GLuint; n: GLsizei;
      bufs: ptr GLenum) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC* = proc (framebuffer: GLuint;
      pname: GLenum; param: GLint) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC* = proc (framebuffer: GLuint; mode: GLenum) {.
      cdecl.}
  PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) {.
      cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTUREPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; texture: GLuint; level: GLint) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLNAMEDRENDERBUFFERSTORAGEPROC* = proc (renderbuffer: GLuint;
      internalformat: GLenum; width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC* = proc (renderbuffer: GLuint;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLTEXTUREBUFFERPROC* = proc (texture: GLuint; internalformat: GLenum;
                                  buffer: GLuint) {.cdecl.}
  PFNGLTEXTUREBUFFERRANGEPROC* = proc (texture: GLuint; internalformat: GLenum;
                                       buffer: GLuint; offset: GLintptr;
                                       size: GLsizeiptr) {.cdecl.}
  PFNGLTEXTUREPARAMETERIIVPROC* = proc (texture: GLuint; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLTEXTUREPARAMETERIUIVPROC* = proc (texture: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLTEXTUREPARAMETERFPROC* = proc (texture: GLuint; pname: GLenum;
                                      param: GLfloat) {.cdecl.}
  PFNGLTEXTUREPARAMETERFVPROC* = proc (texture: GLuint; pname: GLenum;
                                       param: ptr GLfloat) {.cdecl.}
  PFNGLTEXTUREPARAMETERIPROC* = proc (texture: GLuint; pname: GLenum;
                                      param: GLint) {.cdecl.}
  PFNGLTEXTUREPARAMETERIVPROC* = proc (texture: GLuint; pname: GLenum;
                                       param: ptr GLint) {.cdecl.}
  PFNGLTEXTURESTORAGE1DPROC* = proc (texture: GLuint; levels: GLsizei;
                                     internalformat: GLenum; width: GLsizei) {.
      cdecl.}
  PFNGLTEXTURESTORAGE2DPROC* = proc (texture: GLuint; levels: GLsizei;
                                     internalformat: GLenum; width: GLsizei;
                                     height: GLsizei) {.cdecl.}
  PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC* = proc (texture: GLuint;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei;
      fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXTURESTORAGE3DPROC* = proc (texture: GLuint; levels: GLsizei;
                                     internalformat: GLenum; width: GLsizei;
                                     height: GLsizei; depth: GLsizei) {.cdecl.}
  PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC* = proc (texture: GLuint;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei;
      depth: GLsizei; fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXTURESUBIMAGE1DPROC* = proc (texture: GLuint; level: GLint;
                                      xoffset: GLint; width: GLsizei;
                                      format: GLenum; kind: GLenum;
                                      pixels: pointer) {.cdecl.}
  PFNGLTEXTURESUBIMAGE2DPROC* = proc (texture: GLuint; level: GLint;
                                      xoffset: GLint; yoffset: GLint;
                                      width: GLsizei; height: GLsizei;
                                      format: GLenum; kind: GLenum;
                                      pixels: pointer) {.cdecl.}
  PFNGLTEXTURESUBIMAGE3DPROC* = proc (texture: GLuint; level: GLint;
                                      xoffset: GLint; yoffset: GLint;
                                      zoffset: GLint; width: GLsizei;
                                      height: GLsizei; depth: GLsizei;
                                      format: GLenum; kind: GLenum;
                                      pixels: pointer) {.cdecl.}
  PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC* = proc (xfb: GLuint; index: GLuint;
      buffer: GLuint) {.cdecl.}
  PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC* = proc (xfb: GLuint; index: GLuint;
      buffer: GLuint; offset: GLintptr; size: GLsizeiptr) {.cdecl.}
  PFNGLUNMAPNAMEDBUFFERPROC* = proc (buffer: GLuint): GLboolean {.cdecl.}
  PFNGLVERTEXARRAYATTRIBBINDINGPROC* = proc (vaobj: GLuint; attribindex: GLuint;
      bindingindex: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYATTRIBFORMATPROC* = proc (vaobj: GLuint; attribindex: GLuint;
      size: GLint; kind: GLenum; normalized: GLboolean; relativeoffset: GLuint) {.
      cdecl.}
  PFNGLVERTEXARRAYATTRIBIFORMATPROC* = proc (vaobj: GLuint; attribindex: GLuint;
      size: GLint; kind: GLenum; relativeoffset: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYATTRIBLFORMATPROC* = proc (vaobj: GLuint; attribindex: GLuint;
      size: GLint; kind: GLenum; relativeoffset: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYBINDINGDIVISORPROC* = proc (vaobj: GLuint;
      bindingindex: GLuint; divisor: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYELEMENTBUFFERPROC* = proc (vaobj: GLuint; buffer: GLuint) {.
      cdecl.}
  PFNGLVERTEXARRAYVERTEXBUFFERPROC* = proc (vaobj: GLuint; bindingindex: GLuint;
      buffer: GLuint; offset: GLintptr; stride: GLsizei) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXBUFFERSPROC* = proc (vaobj: GLuint; first: GLuint;
      count: GLsizei; buffers: ptr GLuint; offsets: ptr GLintptr;
      strides: ptr GLsizei) {.cdecl.}
  PFNGLDRAWBUFFERSARBPROC* = proc (n: GLsizei; bufs: ptr GLenum) {.cdecl.}
  PFNGLBLENDEQUATIONSEPARATEIARBPROC* = proc (buf: GLuint; modeRGB: GLenum;
      modeAlpha: GLenum) {.cdecl.}
  PFNGLBLENDEQUATIONIARBPROC* = proc (buf: GLuint; mode: GLenum) {.cdecl.}
  PFNGLBLENDFUNCSEPARATEIARBPROC* = proc (buf: GLuint; srcRGB: GLenum;
      dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) {.cdecl.}
  PFNGLBLENDFUNCIARBPROC* = proc (buf: GLuint; src: GLenum; dst: GLenum) {.cdecl.}
  PFNGLDRAWELEMENTSBASEVERTEXPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; basevertex: GLint) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC* = proc (mode: GLenum;
      count: GLsizei; kind: GLenum; indices: pointer; primcount: GLsizei;
      basevertex: GLint) {.cdecl.}
  PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC* = proc (mode: GLenum; start: GLuint;
      `end`: GLuint; count: GLsizei; kind: GLenum; indices: pointer;
      basevertex: GLint) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC* = proc (mode: GLenum;
      count: ptr GLsizei; kind: GLenum; indices: ptr pointer;
      primcount: GLsizei; basevertex: ptr GLint) {.cdecl.}
  PFNGLDRAWARRAYSINDIRECTPROC* = proc (mode: GLenum; indirect: pointer) {.cdecl.}
  PFNGLDRAWELEMENTSINDIRECTPROC* = proc (mode: GLenum; kind: GLenum;
      indirect: pointer) {.cdecl.}
  PFNGLFRAMEBUFFERPARAMETERIPROC* = proc (target: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLGETFRAMEBUFFERPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC* = proc (framebuffer: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC* = proc (framebuffer: GLuint;
      pname: GLenum; param: GLint) {.cdecl.}
  PFNGLBINDFRAMEBUFFERPROC* = proc (target: GLenum; framebuffer: GLuint) {.cdecl.}
  PFNGLBINDRENDERBUFFERPROC* = proc (target: GLenum; renderbuffer: GLuint) {.
      cdecl.}
  PFNGLBLITFRAMEBUFFERPROC* = proc (srcX0: GLint; srcY0: GLint; srcX1: GLint;
                                    srcY1: GLint; dstX0: GLint; dstY0: GLint;
                                    dstX1: GLint; dstY1: GLint;
                                    mask: GLbitfield; filter: GLenum) {.cdecl.}
  PFNGLCHECKFRAMEBUFFERSTATUSPROC* = proc (target: GLenum): GLenum {.cdecl.}
  PFNGLDELETEFRAMEBUFFERSPROC* = proc (n: GLsizei; framebuffers: ptr GLuint) {.
      cdecl.}
  PFNGLDELETERENDERBUFFERSPROC* = proc (n: GLsizei; renderbuffers: ptr GLuint) {.
      cdecl.}
  PFNGLFRAMEBUFFERRENDERBUFFERPROC* = proc (target: GLenum; attachment: GLenum;
      renderbuffertarget: GLenum; renderbuffer: GLuint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURE1DPROC* = proc (target: GLenum; attachment: GLenum;
      textarget: GLenum; texture: GLuint; level: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURE2DPROC* = proc (target: GLenum; attachment: GLenum;
      textarget: GLenum; texture: GLuint; level: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURE3DPROC* = proc (target: GLenum; attachment: GLenum;
      textarget: GLenum; texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURELAYERPROC* = proc (target: GLenum; attachment: GLenum;
      texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLGENFRAMEBUFFERSPROC* = proc (n: GLsizei; framebuffers: ptr GLuint) {.
      cdecl.}
  PFNGLGENRENDERBUFFERSPROC* = proc (n: GLsizei; renderbuffers: ptr GLuint) {.
      cdecl.}
  PFNGLGENERATEMIPMAPPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC* = proc (target: GLenum;
      attachment: GLenum; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETRENDERBUFFERPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLISFRAMEBUFFERPROC* = proc (framebuffer: GLuint): GLboolean {.cdecl.}
  PFNGLISRENDERBUFFERPROC* = proc (renderbuffer: GLuint): GLboolean {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEPROC* = proc (target: GLenum; internalformat: GLenum;
                                        width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC* = proc (target: GLenum;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLFRAMEBUFFERTEXTUREARBPROC* = proc (target: GLenum; attachment: GLenum;
      texture: GLuint; level: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTUREFACEARBPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; face: GLenum) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURELAYERARBPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLPROGRAMPARAMETERIARBPROC* = proc (program: GLuint; pname: GLenum;
      value: GLint) {.cdecl.}
  PFNGLGETPROGRAMBINARYPROC* = proc (program: GLuint; bufSize: GLsizei;
                                     length: ptr GLsizei;
                                     binaryFormat: ptr GLenum; binary: pointer) {.
      cdecl.}
  PFNGLPROGRAMBINARYPROC* = proc (program: GLuint; binaryFormat: GLenum;
                                  binary: pointer; length: GLsizei) {.cdecl.}
  PFNGLPROGRAMPARAMETERIPROC* = proc (program: GLuint; pname: GLenum;
                                      value: GLint) {.cdecl.}
  PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; bufSize: GLsizei; pixels: pointer) {.
      cdecl.}
  PFNGLGETTEXTURESUBIMAGEPROC* = proc (texture: GLuint; level: GLint;
                                       xoffset: GLint; yoffset: GLint;
                                       zoffset: GLint; width: GLsizei;
                                       height: GLsizei; depth: GLsizei;
                                       format: GLenum; kind: GLenum;
                                       bufSize: GLsizei; pixels: pointer) {.
      cdecl.}
  PFNGLSPECIALIZESHADERARBPROC* = proc (shader: GLuint; pEntryPoint: ptr GLchar;
                                        numSpecializationConstants: GLuint;
                                        pConstantIndex: ptr GLuint;
                                        pConstantValue: ptr GLuint) {.cdecl.}
  PFNGLGETUNIFORMDVPROC* = proc (program: GLuint; location: GLint;
                                 params: ptr GLdouble) {.cdecl.}
  PFNGLUNIFORM1DPROC* = proc (location: GLint; x: GLdouble) {.cdecl.}
  PFNGLUNIFORM1DVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLdouble) {.cdecl.}
  PFNGLUNIFORM2DPROC* = proc (location: GLint; x: GLdouble; y: GLdouble) {.cdecl.}
  PFNGLUNIFORM2DVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLdouble) {.cdecl.}
  PFNGLUNIFORM3DPROC* = proc (location: GLint; x: GLdouble; y: GLdouble;
                              z: GLdouble) {.cdecl.}
  PFNGLUNIFORM3DVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLdouble) {.cdecl.}
  PFNGLUNIFORM4DPROC* = proc (location: GLint; x: GLdouble; y: GLdouble;
                              z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLUNIFORM4DVPROC* = proc (location: GLint; count: GLsizei;
                               value: ptr GLdouble) {.cdecl.}
  PFNGLUNIFORMMATRIX2DVPROC* = proc (location: GLint; count: GLsizei;
                                     transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX2X3DVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX2X4DVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3DVPROC* = proc (location: GLint; count: GLsizei;
                                     transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3X2DVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3X4DVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4DVPROC* = proc (location: GLint; count: GLsizei;
                                     transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4X2DVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4X3DVPROC* = proc (location: GLint; count: GLsizei;
                                       transpose: GLboolean; value: ptr GLdouble) {.
      cdecl.}
  PFNGLGETUNIFORMI64VARBPROC* = proc (program: GLuint; location: GLint;
                                      params: ptr GLint64) {.cdecl.}
  PFNGLGETUNIFORMUI64VARBPROC* = proc (program: GLuint; location: GLint;
                                       params: ptr GLuint64) {.cdecl.}
  PFNGLGETNUNIFORMI64VARBPROC* = proc (program: GLuint; location: GLint;
                                       bufSize: GLsizei; params: ptr GLint64) {.
      cdecl.}
  PFNGLGETNUNIFORMUI64VARBPROC* = proc (program: GLuint; location: GLint;
                                        bufSize: GLsizei; params: ptr GLuint64) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM1I64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM1I64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UI64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UI64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM2I64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLint64; y: GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM2I64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UI64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64; y: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UI64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM3I64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLint64; y: GLint64; z: GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM3I64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UI64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64; y: GLuint64; z: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UI64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM4I64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLint64; y: GLint64; z: GLint64; w: GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM4I64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UI64ARBPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UI64VARBPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64) {.cdecl.}
  PFNGLUNIFORM1I64ARBPROC* = proc (location: GLint; x: GLint64) {.cdecl.}
  PFNGLUNIFORM1I64VARBPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLint64) {.cdecl.}
  PFNGLUNIFORM1UI64ARBPROC* = proc (location: GLint; x: GLuint64) {.cdecl.}
  PFNGLUNIFORM1UI64VARBPROC* = proc (location: GLint; count: GLsizei;
                                     value: ptr GLuint64) {.cdecl.}
  PFNGLUNIFORM2I64ARBPROC* = proc (location: GLint; x: GLint64; y: GLint64) {.
      cdecl.}
  PFNGLUNIFORM2I64VARBPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLint64) {.cdecl.}
  PFNGLUNIFORM2UI64ARBPROC* = proc (location: GLint; x: GLuint64; y: GLuint64) {.
      cdecl.}
  PFNGLUNIFORM2UI64VARBPROC* = proc (location: GLint; count: GLsizei;
                                     value: ptr GLuint64) {.cdecl.}
  PFNGLUNIFORM3I64ARBPROC* = proc (location: GLint; x: GLint64; y: GLint64;
                                   z: GLint64) {.cdecl.}
  PFNGLUNIFORM3I64VARBPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLint64) {.cdecl.}
  PFNGLUNIFORM3UI64ARBPROC* = proc (location: GLint; x: GLuint64; y: GLuint64;
                                    z: GLuint64) {.cdecl.}
  PFNGLUNIFORM3UI64VARBPROC* = proc (location: GLint; count: GLsizei;
                                     value: ptr GLuint64) {.cdecl.}
  PFNGLUNIFORM4I64ARBPROC* = proc (location: GLint; x: GLint64; y: GLint64;
                                   z: GLint64; w: GLint64) {.cdecl.}
  PFNGLUNIFORM4I64VARBPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLint64) {.cdecl.}
  PFNGLUNIFORM4UI64ARBPROC* = proc (location: GLint; x: GLuint64; y: GLuint64;
                                    z: GLuint64; w: GLuint64) {.cdecl.}
  PFNGLUNIFORM4UI64VARBPROC* = proc (location: GLint; count: GLsizei;
                                     value: ptr GLuint64) {.cdecl.}
  PFNGLCOLORSUBTABLEPROC* = proc (target: GLenum; start: GLsizei;
                                  count: GLsizei; format: GLenum; kind: GLenum;
                                  data: pointer) {.cdecl.}
  PFNGLCOLORTABLEPROC* = proc (target: GLenum; internalformat: GLenum;
                               width: GLsizei; format: GLenum; kind: GLenum;
                               table: pointer) {.cdecl.}
  PFNGLCOLORTABLEPARAMETERFVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLCOLORTABLEPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLCONVOLUTIONFILTER1DPROC* = proc (target: GLenum; internalformat: GLenum;
                                        width: GLsizei; format: GLenum;
                                        kind: GLenum; image: pointer) {.cdecl.}
  PFNGLCONVOLUTIONFILTER2DPROC* = proc (target: GLenum; internalformat: GLenum;
                                        width: GLsizei; height: GLsizei;
                                        format: GLenum; kind: GLenum;
                                        image: pointer) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERFPROC* = proc (target: GLenum; pname: GLenum;
      params: GLfloat) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERFVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERIPROC* = proc (target: GLenum; pname: GLenum;
      params: GLint) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLCOPYCOLORSUBTABLEPROC* = proc (target: GLenum; start: GLsizei; x: GLint;
                                      y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYCOLORTABLEPROC* = proc (target: GLenum; internalformat: GLenum;
                                   x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYCONVOLUTIONFILTER1DPROC* = proc (target: GLenum;
      internalformat: GLenum; x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYCONVOLUTIONFILTER2DPROC* = proc (target: GLenum;
      internalformat: GLenum; x: GLint; y: GLint; width: GLsizei;
      height: GLsizei) {.cdecl.}
  PFNGLGETCOLORTABLEPROC* = proc (target: GLenum; format: GLenum; kind: GLenum;
                                  table: pointer) {.cdecl.}
  PFNGLGETCOLORTABLEPARAMETERFVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETCOLORTABLEPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETCONVOLUTIONFILTERPROC* = proc (target: GLenum; format: GLenum;
      kind: GLenum; image: pointer) {.cdecl.}
  PFNGLGETCONVOLUTIONPARAMETERFVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETCONVOLUTIONPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETHISTOGRAMPROC* = proc (target: GLenum; reset: GLboolean;
                                 format: GLenum; kind: GLenum; values: pointer) {.
      cdecl.}
  PFNGLGETHISTOGRAMPARAMETERFVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETHISTOGRAMPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETMINMAXPROC* = proc (target: GLenum; reset: GLboolean; format: GLenum;
                              types: GLenum; values: pointer) {.cdecl.}
  PFNGLGETMINMAXPARAMETERFVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETMINMAXPARAMETERIVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETSEPARABLEFILTERPROC* = proc (target: GLenum; format: GLenum;
                                       kind: GLenum; row: pointer;
                                       column: pointer; span: pointer) {.cdecl.}
  PFNGLHISTOGRAMPROC* = proc (target: GLenum; width: GLsizei;
                              internalformat: GLenum; sink: GLboolean) {.cdecl.}
  PFNGLMINMAXPROC* = proc (target: GLenum; internalformat: GLenum;
                           sink: GLboolean) {.cdecl.}
  PFNGLRESETHISTOGRAMPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLRESETMINMAXPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLSEPARABLEFILTER2DPROC* = proc (target: GLenum; internalformat: GLenum;
                                      width: GLsizei; height: GLsizei;
                                      format: GLenum; kind: GLenum;
                                      row: pointer; column: pointer) {.cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC* = proc (mode: GLenum;
      indirect: pointer; drawcount: GLintptr; maxdrawcount: GLsizei;
      stride: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC* = proc (mode: GLenum;
      kind: GLenum; indirect: pointer; drawcount: GLintptr;
      maxdrawcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLDRAWARRAYSINSTANCEDARBPROC* = proc (mode: GLenum; first: GLint;
      count: GLsizei; primcount: GLsizei) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDARBPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; primcount: GLsizei) {.cdecl.}
  PFNGLVERTEXATTRIBDIVISORARBPROC* = proc (index: GLuint; divisor: GLuint) {.
      cdecl.}
  PFNGLGETINTERNALFORMATIVPROC* = proc (target: GLenum; internalformat: GLenum;
                                        pname: GLenum; bufSize: GLsizei;
                                        params: ptr GLint) {.cdecl.}
  PFNGLGETINTERNALFORMATI64VPROC* = proc (target: GLenum;
      internalformat: GLenum; pname: GLenum; bufSize: GLsizei;
      params: ptr GLint64) {.cdecl.}
  PFNGLINVALIDATEBUFFERDATAPROC* = proc (buffer: GLuint) {.cdecl.}
  PFNGLINVALIDATEBUFFERSUBDATAPROC* = proc (buffer: GLuint; offset: GLintptr;
      length: GLsizeiptr) {.cdecl.}
  PFNGLINVALIDATEFRAMEBUFFERPROC* = proc (target: GLenum;
      numAttachments: GLsizei; attachments: ptr GLenum) {.cdecl.}
  PFNGLINVALIDATESUBFRAMEBUFFERPROC* = proc (target: GLenum;
      numAttachments: GLsizei; attachments: ptr GLenum; x: GLint; y: GLint;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLINVALIDATETEXIMAGEPROC* = proc (texture: GLuint; level: GLint) {.cdecl.}
  PFNGLINVALIDATETEXSUBIMAGEPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei) {.cdecl.}
  PFNGLFLUSHMAPPEDBUFFERRANGEPROC* = proc (target: GLenum; offset: GLintptr;
      length: GLsizeiptr) {.cdecl.}
  PFNGLMAPBUFFERRANGEPROC* = proc (target: GLenum; offset: GLintptr;
                                   length: GLsizeiptr; access: GLbitfield): pointer {.
      cdecl.}
  PFNGLCURRENTPALETTEMATRIXARBPROC* = proc (index: GLint) {.cdecl.}
  PFNGLMATRIXINDEXPOINTERARBPROC* = proc (size: GLint; kind: GLenum;
      stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLMATRIXINDEXUBVARBPROC* = proc (size: GLint; indices: ptr GLubyte) {.cdecl.}
  PFNGLMATRIXINDEXUIVARBPROC* = proc (size: GLint; indices: ptr GLuint) {.cdecl.}
  PFNGLMATRIXINDEXUSVARBPROC* = proc (size: GLint; indices: ptr GLushort) {.
      cdecl.}
  PFNGLBINDBUFFERSBASEPROC* = proc (target: GLenum; first: GLuint;
                                    count: GLsizei; buffers: ptr GLuint) {.cdecl.}
  PFNGLBINDBUFFERSRANGEPROC* = proc (target: GLenum; first: GLuint;
                                     count: GLsizei; buffers: ptr GLuint;
                                     offsets: ptr GLintptr;
                                     sizes: ptr GLsizeiptr) {.cdecl.}
  PFNGLBINDIMAGETEXTURESPROC* = proc (first: GLuint; count: GLsizei;
                                      textures: ptr GLuint) {.cdecl.}
  PFNGLBINDSAMPLERSPROC* = proc (first: GLuint; count: GLsizei;
                                 samplers: ptr GLuint) {.cdecl.}
  PFNGLBINDTEXTURESPROC* = proc (first: GLuint; count: GLsizei;
                                 textures: ptr GLuint) {.cdecl.}
  PFNGLBINDVERTEXBUFFERSPROC* = proc (first: GLuint; count: GLsizei;
                                      buffers: ptr GLuint;
                                      offsets: ptr GLintptr;
                                      strides: ptr GLsizei) {.cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTPROC* = proc (mode: GLenum; indirect: pointer;
      primcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTPROC* = proc (mode: GLenum; kind: GLenum;
      indirect: pointer; primcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLSAMPLECOVERAGEARBPROC* = proc (value: GLclampf; invert: GLboolean) {.
      cdecl.}
  PFNGLACTIVETEXTUREARBPROC* = proc (texture: GLenum) {.cdecl.}
  PFNGLCLIENTACTIVETEXTUREARBPROC* = proc (texture: GLenum) {.cdecl.}
  PFNGLMULTITEXCOORD1DARBPROC* = proc (target: GLenum; s: GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD1DVARBPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD1FARBPROC* = proc (target: GLenum; s: GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD1FVARBPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD1IARBPROC* = proc (target: GLenum; s: GLint) {.cdecl.}
  PFNGLMULTITEXCOORD1IVARBPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD1SARBPROC* = proc (target: GLenum; s: GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD1SVARBPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD2DARBPROC* = proc (target: GLenum; s: GLdouble; t: GLdouble) {.
      cdecl.}
  PFNGLMULTITEXCOORD2DVARBPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD2FARBPROC* = proc (target: GLenum; s: GLfloat; t: GLfloat) {.
      cdecl.}
  PFNGLMULTITEXCOORD2FVARBPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD2IARBPROC* = proc (target: GLenum; s: GLint; t: GLint) {.
      cdecl.}
  PFNGLMULTITEXCOORD2IVARBPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD2SARBPROC* = proc (target: GLenum; s: GLshort; t: GLshort) {.
      cdecl.}
  PFNGLMULTITEXCOORD2SVARBPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD3DARBPROC* = proc (target: GLenum; s: GLdouble; t: GLdouble;
                                       r: GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD3DVARBPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD3FARBPROC* = proc (target: GLenum; s: GLfloat; t: GLfloat;
                                       r: GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD3FVARBPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD3IARBPROC* = proc (target: GLenum; s: GLint; t: GLint;
                                       r: GLint) {.cdecl.}
  PFNGLMULTITEXCOORD3IVARBPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD3SARBPROC* = proc (target: GLenum; s: GLshort; t: GLshort;
                                       r: GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD3SVARBPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD4DARBPROC* = proc (target: GLenum; s: GLdouble; t: GLdouble;
                                       r: GLdouble; q: GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD4DVARBPROC* = proc (target: GLenum; v: ptr GLdouble) {.cdecl.}
  PFNGLMULTITEXCOORD4FARBPROC* = proc (target: GLenum; s: GLfloat; t: GLfloat;
                                       r: GLfloat; q: GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD4FVARBPROC* = proc (target: GLenum; v: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXCOORD4IARBPROC* = proc (target: GLenum; s: GLint; t: GLint;
                                       r: GLint; q: GLint) {.cdecl.}
  PFNGLMULTITEXCOORD4IVARBPROC* = proc (target: GLenum; v: ptr GLint) {.cdecl.}
  PFNGLMULTITEXCOORD4SARBPROC* = proc (target: GLenum; s: GLshort; t: GLshort;
                                       r: GLshort; q: GLshort) {.cdecl.}
  PFNGLMULTITEXCOORD4SVARBPROC* = proc (target: GLenum; v: ptr GLshort) {.cdecl.}
  PFNGLBEGINQUERYARBPROC* = proc (target: GLenum; id: GLuint) {.cdecl.}
  PFNGLDELETEQUERIESARBPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLENDQUERYARBPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLGENQUERIESARBPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLGETQUERYOBJECTIVARBPROC* = proc (id: GLuint; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLGETQUERYOBJECTUIVARBPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLGETQUERYIVARBPROC* = proc (target: GLenum; pname: GLenum;
                                  params: ptr GLint) {.cdecl.}
  PFNGLISQUERYARBPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLMAXSHADERCOMPILERTHREADSARBPROC* = proc (count: GLuint) {.cdecl.}
  PFNGLPOINTPARAMETERFARBPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLPOINTPARAMETERFVARBPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLPOLYGONOFFSETCLAMPPROC* = proc (factor: GLfloat; units: GLfloat;
                                       clamp: GLfloat) {.cdecl.}
  PFNGLGETPROGRAMINTERFACEIVPROC* = proc (program: GLuint;
      programInterface: GLenum; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETPROGRAMRESOURCEINDEXPROC* = proc (program: GLuint;
      programInterface: GLenum; name: ptr GLchar): GLuint {.cdecl.}
  PFNGLGETPROGRAMRESOURCELOCATIONPROC* = proc (program: GLuint;
      programInterface: GLenum; name: ptr GLchar): GLint {.cdecl.}
  PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC* = proc (program: GLuint;
      programInterface: GLenum; name: ptr GLchar): GLint {.cdecl.}
  PFNGLGETPROGRAMRESOURCENAMEPROC* = proc (program: GLuint;
      programInterface: GLenum; index: GLuint; bufSize: GLsizei;
      length: ptr GLsizei; name: ptr GLchar) {.cdecl.}
  PFNGLGETPROGRAMRESOURCEIVPROC* = proc (program: GLuint;
      programInterface: GLenum; index: GLuint; propCount: GLsizei;
      props: ptr GLenum; bufSize: GLsizei; length: ptr GLsizei;
      params: ptr GLint) {.cdecl.}
  PFNGLPROVOKINGVERTEXPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLGETGRAPHICSRESETSTATUSARBPROC* = proc (): GLenum {.cdecl.}
  PFNGLGETNCOLORTABLEARBPROC* = proc (target: GLenum; format: GLenum;
                                      kind: GLenum; bufSize: GLsizei;
                                      table: pointer) {.cdecl.}
  PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC* = proc (target: GLenum; lod: GLint;
      bufSize: GLsizei; img: pointer) {.cdecl.}
  PFNGLGETNCONVOLUTIONFILTERARBPROC* = proc (target: GLenum; format: GLenum;
      kind: GLenum; bufSize: GLsizei; image: pointer) {.cdecl.}
  PFNGLGETNHISTOGRAMARBPROC* = proc (target: GLenum; reset: GLboolean;
                                     format: GLenum; kind: GLenum;
                                     bufSize: GLsizei; values: pointer) {.cdecl.}
  PFNGLGETNMAPDVARBPROC* = proc (target: GLenum; query: GLenum;
                                 bufSize: GLsizei; v: ptr GLdouble) {.cdecl.}
  PFNGLGETNMAPFVARBPROC* = proc (target: GLenum; query: GLenum;
                                 bufSize: GLsizei; v: ptr GLfloat) {.cdecl.}
  PFNGLGETNMAPIVARBPROC* = proc (target: GLenum; query: GLenum;
                                 bufSize: GLsizei; v: ptr GLint) {.cdecl.}
  PFNGLGETNMINMAXARBPROC* = proc (target: GLenum; reset: GLboolean;
                                  format: GLenum; kind: GLenum;
                                  bufSize: GLsizei; values: pointer) {.cdecl.}
  PFNGLGETNPIXELMAPFVARBPROC* = proc (map: GLenum; bufSize: GLsizei;
                                      values: ptr GLfloat) {.cdecl.}
  PFNGLGETNPIXELMAPUIVARBPROC* = proc (map: GLenum; bufSize: GLsizei;
                                       values: ptr GLuint) {.cdecl.}
  PFNGLGETNPIXELMAPUSVARBPROC* = proc (map: GLenum; bufSize: GLsizei;
                                       values: ptr GLushort) {.cdecl.}
  PFNGLGETNPOLYGONSTIPPLEARBPROC* = proc (bufSize: GLsizei; pattern: ptr GLubyte) {.
      cdecl.}
  PFNGLGETNSEPARABLEFILTERARBPROC* = proc (target: GLenum; format: GLenum;
      kind: GLenum; rowBufSize: GLsizei; row: pointer; columnBufSize: GLsizei;
      column: pointer; span: pointer) {.cdecl.}
  PFNGLGETNTEXIMAGEARBPROC* = proc (target: GLenum; level: GLint;
                                    format: GLenum; kind: GLenum;
                                    bufSize: GLsizei; img: pointer) {.cdecl.}
  PFNGLGETNUNIFORMDVARBPROC* = proc (program: GLuint; location: GLint;
                                     bufSize: GLsizei; params: ptr GLdouble) {.
      cdecl.}
  PFNGLGETNUNIFORMFVARBPROC* = proc (program: GLuint; location: GLint;
                                     bufSize: GLsizei; params: ptr GLfloat) {.
      cdecl.}
  PFNGLGETNUNIFORMIVARBPROC* = proc (program: GLuint; location: GLint;
                                     bufSize: GLsizei; params: ptr GLint) {.
      cdecl.}
  PFNGLGETNUNIFORMUIVARBPROC* = proc (program: GLuint; location: GLint;
                                      bufSize: GLsizei; params: ptr GLuint) {.
      cdecl.}
  PFNGLREADNPIXELSARBPROC* = proc (x: GLint; y: GLint; width: GLsizei;
                                   height: GLsizei; format: GLenum;
                                   kind: GLenum; bufSize: GLsizei; data: pointer) {.
      cdecl.}
  PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC* = proc (target: GLenum;
      start: GLuint; count: GLsizei; v: ptr GLfloat) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC* = proc (framebuffer: GLuint;
      start: GLuint; count: GLsizei; v: ptr GLfloat) {.cdecl.}
  PFNGLMINSAMPLESHADINGARBPROC* = proc (value: GLclampf) {.cdecl.}
  PFNGLBINDSAMPLERPROC* = proc (unit: GLuint; sampler: GLuint) {.cdecl.}
  PFNGLDELETESAMPLERSPROC* = proc (count: GLsizei; samplers: ptr GLuint) {.cdecl.}
  PFNGLGENSAMPLERSPROC* = proc (count: GLsizei; samplers: ptr GLuint) {.cdecl.}
  PFNGLGETSAMPLERPARAMETERIIVPROC* = proc (sampler: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETSAMPLERPARAMETERIUIVPROC* = proc (sampler: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLGETSAMPLERPARAMETERFVPROC* = proc (sampler: GLuint; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETSAMPLERPARAMETERIVPROC* = proc (sampler: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLISSAMPLERPROC* = proc (sampler: GLuint): GLboolean {.cdecl.}
  PFNGLSAMPLERPARAMETERIIVPROC* = proc (sampler: GLuint; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLSAMPLERPARAMETERIUIVPROC* = proc (sampler: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLSAMPLERPARAMETERFPROC* = proc (sampler: GLuint; pname: GLenum;
                                      param: GLfloat) {.cdecl.}
  PFNGLSAMPLERPARAMETERFVPROC* = proc (sampler: GLuint; pname: GLenum;
                                       params: ptr GLfloat) {.cdecl.}
  PFNGLSAMPLERPARAMETERIPROC* = proc (sampler: GLuint; pname: GLenum;
                                      param: GLint) {.cdecl.}
  PFNGLSAMPLERPARAMETERIVPROC* = proc (sampler: GLuint; pname: GLenum;
                                       params: ptr GLint) {.cdecl.}
  PFNGLACTIVESHADERPROGRAMPROC* = proc (pipeline: GLuint; program: GLuint) {.
      cdecl.}
  PFNGLBINDPROGRAMPIPELINEPROC* = proc (pipeline: GLuint) {.cdecl.}
  PFNGLCREATESHADERPROGRAMVPROC* = proc (kind: GLenum; count: GLsizei;
      strings: ptr ptr GLchar): GLuint {.cdecl.}
  PFNGLDELETEPROGRAMPIPELINESPROC* = proc (n: GLsizei; pipelines: ptr GLuint) {.
      cdecl.}
  PFNGLGENPROGRAMPIPELINESPROC* = proc (n: GLsizei; pipelines: ptr GLuint) {.
      cdecl.}
  PFNGLGETPROGRAMPIPELINEINFOLOGPROC* = proc (pipeline: GLuint;
      bufSize: GLsizei; length: ptr GLsizei; infoLog: ptr GLchar) {.cdecl.}
  PFNGLGETPROGRAMPIPELINEIVPROC* = proc (pipeline: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLISPROGRAMPIPELINEPROC* = proc (pipeline: GLuint): GLboolean {.cdecl.}
  PFNGLPROGRAMUNIFORM1DPROC* = proc (program: GLuint; location: GLint;
                                     x: GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORM1DVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLdouble) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM1FPROC* = proc (program: GLuint; location: GLint;
                                     x: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM1FVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM1IPROC* = proc (program: GLuint; location: GLint; x: GLint) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM1IVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UIPROC* = proc (program: GLuint; location: GLint;
                                      x: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UIVPROC* = proc (program: GLuint; location: GLint;
                                       count: GLsizei; value: ptr GLuint) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM2DPROC* = proc (program: GLuint; location: GLint;
                                     x: GLdouble; y: GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORM2DVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLdouble) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM2FPROC* = proc (program: GLuint; location: GLint;
                                     x: GLfloat; y: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM2FVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM2IPROC* = proc (program: GLuint; location: GLint; x: GLint;
                                     y: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2IVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UIPROC* = proc (program: GLuint; location: GLint;
                                      x: GLuint; y: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UIVPROC* = proc (program: GLuint; location: GLint;
                                       count: GLsizei; value: ptr GLuint) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM3DPROC* = proc (program: GLuint; location: GLint;
                                     x: GLdouble; y: GLdouble; z: GLdouble) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM3DVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLdouble) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM3FPROC* = proc (program: GLuint; location: GLint;
                                     x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM3FVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM3IPROC* = proc (program: GLuint; location: GLint; x: GLint;
                                     y: GLint; z: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3IVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UIPROC* = proc (program: GLuint; location: GLint;
                                      x: GLuint; y: GLuint; z: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UIVPROC* = proc (program: GLuint; location: GLint;
                                       count: GLsizei; value: ptr GLuint) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM4DPROC* = proc (program: GLuint; location: GLint;
                                     x: GLdouble; y: GLdouble; z: GLdouble;
                                     w: GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORM4DVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLdouble) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM4FPROC* = proc (program: GLuint; location: GLint;
                                     x: GLfloat; y: GLfloat; z: GLfloat;
                                     w: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM4FVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM4IPROC* = proc (program: GLuint; location: GLint; x: GLint;
                                     y: GLint; z: GLint; w: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM4IVPROC* = proc (program: GLuint; location: GLint;
                                      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UIPROC* = proc (program: GLuint; location: GLint;
                                      x: GLuint; y: GLuint; z: GLuint; w: GLuint) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM4UIVPROC* = proc (program: GLuint; location: GLint;
                                       count: GLsizei; value: ptr GLuint) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLUSEPROGRAMSTAGESPROC* = proc (pipeline: GLuint; stages: GLbitfield;
                                     program: GLuint) {.cdecl.}
  PFNGLVALIDATEPROGRAMPIPELINEPROC* = proc (pipeline: GLuint) {.cdecl.}
  PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC* = proc (program: GLuint;
      bufferIndex: GLuint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLBINDIMAGETEXTUREPROC* = proc (unit: GLuint; texture: GLuint;
                                     level: GLint; layered: GLboolean;
                                     layer: GLint; access: GLenum;
                                     format: GLenum) {.cdecl.}
  PFNGLMEMORYBARRIERPROC* = proc (barriers: GLbitfield) {.cdecl.}
  GLcharARB* = cchar
  GLhandleARB* = cuint
  PFNGLATTACHOBJECTARBPROC* = proc (containerObj: GLhandleARB; obj: GLhandleARB) {.
      cdecl.}
  PFNGLCOMPILESHADERARBPROC* = proc (shaderObj: GLhandleARB) {.cdecl.}
  PFNGLCREATEPROGRAMOBJECTARBPROC* = proc (): GLhandleARB {.cdecl.}
  PFNGLCREATESHADEROBJECTARBPROC* = proc (shaderType: GLenum): GLhandleARB {.
      cdecl.}
  PFNGLDELETEOBJECTARBPROC* = proc (obj: GLhandleARB) {.cdecl.}
  PFNGLDETACHOBJECTARBPROC* = proc (containerObj: GLhandleARB;
                                    attachedObj: GLhandleARB) {.cdecl.}
  PFNGLGETACTIVEUNIFORMARBPROC* = proc (programObj: GLhandleARB; index: GLuint;
                                        maxLength: GLsizei; length: ptr GLsizei;
                                        size: ptr GLint; kind: ptr GLenum;
                                        name: ptr GLcharARB) {.cdecl.}
  PFNGLGETATTACHEDOBJECTSARBPROC* = proc (containerObj: GLhandleARB;
      maxCount: GLsizei; count: ptr GLsizei; obj: ptr GLhandleARB) {.cdecl.}
  PFNGLGETHANDLEARBPROC* = proc (pname: GLenum): GLhandleARB {.cdecl.}
  PFNGLGETINFOLOGARBPROC* = proc (obj: GLhandleARB; maxLength: GLsizei;
                                  length: ptr GLsizei; infoLog: ptr GLcharARB) {.
      cdecl.}
  PFNGLGETOBJECTPARAMETERFVARBPROC* = proc (obj: GLhandleARB; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETOBJECTPARAMETERIVARBPROC* = proc (obj: GLhandleARB; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETSHADERSOURCEARBPROC* = proc (obj: GLhandleARB; maxLength: GLsizei;
                                       length: ptr GLsizei;
                                       source: ptr GLcharARB) {.cdecl.}
  PFNGLGETUNIFORMLOCATIONARBPROC* = proc (programObj: GLhandleARB;
      name: ptr GLcharARB): GLint {.cdecl.}
  PFNGLGETUNIFORMFVARBPROC* = proc (programObj: GLhandleARB; location: GLint;
                                    params: ptr GLfloat) {.cdecl.}
  PFNGLGETUNIFORMIVARBPROC* = proc (programObj: GLhandleARB; location: GLint;
                                    params: ptr GLint) {.cdecl.}
  PFNGLLINKPROGRAMARBPROC* = proc (programObj: GLhandleARB) {.cdecl.}
  PFNGLSHADERSOURCEARBPROC* = proc (shaderObj: GLhandleARB; count: GLsizei;
                                    string: ptr ptr GLcharARB; length: ptr GLint) {.
      cdecl.}
  PFNGLUNIFORM1FARBPROC* = proc (location: GLint; v0: GLfloat) {.cdecl.}
  PFNGLUNIFORM1FVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM1IARBPROC* = proc (location: GLint; v0: GLint) {.cdecl.}
  PFNGLUNIFORM1IVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLint) {.cdecl.}
  PFNGLUNIFORM2FARBPROC* = proc (location: GLint; v0: GLfloat; v1: GLfloat) {.
      cdecl.}
  PFNGLUNIFORM2FVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM2IARBPROC* = proc (location: GLint; v0: GLint; v1: GLint) {.cdecl.}
  PFNGLUNIFORM2IVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLint) {.cdecl.}
  PFNGLUNIFORM3FARBPROC* = proc (location: GLint; v0: GLfloat; v1: GLfloat;
                                 v2: GLfloat) {.cdecl.}
  PFNGLUNIFORM3FVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM3IARBPROC* = proc (location: GLint; v0: GLint; v1: GLint;
                                 v2: GLint) {.cdecl.}
  PFNGLUNIFORM3IVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLint) {.cdecl.}
  PFNGLUNIFORM4FARBPROC* = proc (location: GLint; v0: GLfloat; v1: GLfloat;
                                 v2: GLfloat; v3: GLfloat) {.cdecl.}
  PFNGLUNIFORM4FVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORM4IARBPROC* = proc (location: GLint; v0: GLint; v1: GLint;
                                 v2: GLint; v3: GLint) {.cdecl.}
  PFNGLUNIFORM4IVARBPROC* = proc (location: GLint; count: GLsizei;
                                  value: ptr GLint) {.cdecl.}
  PFNGLUNIFORMMATRIX2FVARBPROC* = proc (location: GLint; count: GLsizei;
                                        transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX3FVARBPROC* = proc (location: GLint; count: GLsizei;
                                        transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUNIFORMMATRIX4FVARBPROC* = proc (location: GLint; count: GLsizei;
                                        transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLUSEPROGRAMOBJECTARBPROC* = proc (programObj: GLhandleARB) {.cdecl.}
  PFNGLVALIDATEPROGRAMARBPROC* = proc (programObj: GLhandleARB) {.cdecl.}
  PFNGLSHADERSTORAGEBLOCKBINDINGPROC* = proc (program: GLuint;
      storageBlockIndex: GLuint; storageBlockBinding: GLuint) {.cdecl.}
  PFNGLGETACTIVESUBROUTINENAMEPROC* = proc (program: GLuint; shadertype: GLenum;
      index: GLuint; bufsize: GLsizei; length: ptr GLsizei; name: ptr GLchar) {.
      cdecl.}
  PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC* = proc (program: GLuint;
      shadertype: GLenum; index: GLuint; bufsize: GLsizei; length: ptr GLsizei;
      name: ptr GLchar) {.cdecl.}
  PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC* = proc (program: GLuint;
      shadertype: GLenum; index: GLuint; pname: GLenum; values: ptr GLint) {.
      cdecl.}
  PFNGLGETPROGRAMSTAGEIVPROC* = proc (program: GLuint; shadertype: GLenum;
                                      pname: GLenum; values: ptr GLint) {.cdecl.}
  PFNGLGETSUBROUTINEINDEXPROC* = proc (program: GLuint; shadertype: GLenum;
                                       name: ptr GLchar): GLuint {.cdecl.}
  PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC* = proc (program: GLuint;
      shadertype: GLenum; name: ptr GLchar): GLint {.cdecl.}
  PFNGLGETUNIFORMSUBROUTINEUIVPROC* = proc (shadertype: GLenum; location: GLint;
      params: ptr GLuint) {.cdecl.}
  PFNGLUNIFORMSUBROUTINESUIVPROC* = proc (shadertype: GLenum; count: GLsizei;
      indices: ptr GLuint) {.cdecl.}
  PFNGLCOMPILESHADERINCLUDEARBPROC* = proc (shader: GLuint; count: GLsizei;
      path: ptr ptr GLchar; length: ptr GLint) {.cdecl.}
  PFNGLDELETENAMEDSTRINGARBPROC* = proc (namelen: GLint; name: ptr GLchar) {.
      cdecl.}
  PFNGLGETNAMEDSTRINGARBPROC* = proc (namelen: GLint; name: ptr GLchar;
                                      bufSize: GLsizei; stringlen: ptr GLint;
                                      string: ptr GLchar) {.cdecl.}
  PFNGLGETNAMEDSTRINGIVARBPROC* = proc (namelen: GLint; name: ptr GLchar;
                                        pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLISNAMEDSTRINGARBPROC* = proc (namelen: GLint; name: ptr GLchar): GLboolean {.
      cdecl.}
  PFNGLNAMEDSTRINGARBPROC* = proc (kind: GLenum; namelen: GLint;
                                   name: ptr GLchar; stringlen: GLint;
                                   string: ptr GLchar) {.cdecl.}
  PFNGLBUFFERPAGECOMMITMENTARBPROC* = proc (target: GLenum; offset: GLintptr;
      size: GLsizeiptr; commit: GLboolean) {.cdecl.}
  PFNGLTEXPAGECOMMITMENTARBPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; commit: GLboolean) {.cdecl.}
  PFNGLCLIENTWAITSYNCPROC* = proc (GLsync: GLsync; flags: GLbitfield;
                                   timeout: GLuint64): GLenum {.cdecl.}
  PFNGLDELETESYNCPROC* = proc (GLsync: GLsync) {.cdecl.}
  PFNGLFENCESYNCPROC* = proc (condition: GLenum; flags: GLbitfield): GLsync {.
      cdecl.}
  PFNGLGETINTEGER64VPROC* = proc (pname: GLenum; params: ptr GLint64) {.cdecl.}
  PFNGLGETSYNCIVPROC* = proc (GLsync: GLsync; pname: GLenum; bufSize: GLsizei;
                              length: ptr GLsizei; values: ptr GLint) {.cdecl.}
  PFNGLISSYNCPROC* = proc (GLsync: GLsync): GLboolean {.cdecl.}
  PFNGLWAITSYNCPROC* = proc (GLsync: GLsync; flags: GLbitfield;
                             timeout: GLuint64) {.cdecl.}
  PFNGLPATCHPARAMETERFVPROC* = proc (pname: GLenum; values: ptr GLfloat) {.cdecl.}
  PFNGLPATCHPARAMETERIPROC* = proc (pname: GLenum; value: GLint) {.cdecl.}
  PFNGLTEXTUREBARRIERPROC* = proc () {.cdecl.}
  PFNGLTEXBUFFERARBPROC* = proc (target: GLenum; internalformat: GLenum;
                                 buffer: GLuint) {.cdecl.}
  PFNGLTEXBUFFERRANGEPROC* = proc (target: GLenum; internalformat: GLenum;
                                   buffer: GLuint; offset: GLintptr;
                                   size: GLsizeiptr) {.cdecl.}
  PFNGLTEXTUREBUFFERRANGEEXTPROC* = proc (texture: GLuint; target: GLenum;
      internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) {.
      cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE1DARBPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE2DARBPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint;
      imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE3DARBPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLGETCOMPRESSEDTEXIMAGEARBPROC* = proc (target: GLenum; lod: GLint;
      img: pointer) {.cdecl.}
  PFNGLGETMULTISAMPLEFVPROC* = proc (pname: GLenum; index: GLuint;
                                     val: ptr GLfloat) {.cdecl.}
  PFNGLSAMPLEMASKIPROC* = proc (index: GLuint; mask: GLbitfield) {.cdecl.}
  PFNGLTEXIMAGE2DMULTISAMPLEPROC* = proc (target: GLenum; samples: GLsizei;
      internalformat: GLenum; width: GLsizei; height: GLsizei;
      fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXIMAGE3DMULTISAMPLEPROC* = proc (target: GLenum; samples: GLsizei;
      internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXSTORAGE1DPROC* = proc (target: GLenum; levels: GLsizei;
                                 internalformat: GLenum; width: GLsizei) {.cdecl.}
  PFNGLTEXSTORAGE2DPROC* = proc (target: GLenum; levels: GLsizei;
                                 internalformat: GLenum; width: GLsizei;
                                 height: GLsizei) {.cdecl.}
  PFNGLTEXSTORAGE3DPROC* = proc (target: GLenum; levels: GLsizei;
                                 internalformat: GLenum; width: GLsizei;
                                 height: GLsizei; depth: GLsizei) {.cdecl.}
  PFNGLTEXSTORAGE2DMULTISAMPLEPROC* = proc (target: GLenum; samples: GLsizei;
      internalformat: GLenum; width: GLsizei; height: GLsizei;
      fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXSTORAGE3DMULTISAMPLEPROC* = proc (target: GLenum; samples: GLsizei;
      internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC* = proc (texture: GLuint;
      target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei;
      height: GLsizei; fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC* = proc (texture: GLuint;
      target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei;
      height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLTEXTUREVIEWPROC* = proc (texture: GLuint; target: GLenum;
                                origtexture: GLuint; internalformat: GLenum;
                                minlevel: GLuint; numlevels: GLuint;
                                minlayer: GLuint; numlayers: GLuint) {.cdecl.}
  PFNGLGETQUERYOBJECTI64VPROC* = proc (id: GLuint; pname: GLenum;
                                       params: ptr GLint64) {.cdecl.}
  PFNGLGETQUERYOBJECTUI64VPROC* = proc (id: GLuint; pname: GLenum;
                                        params: ptr GLuint64) {.cdecl.}
  PFNGLQUERYCOUNTERPROC* = proc (id: GLuint; target: GLenum) {.cdecl.}
  PFNGLBINDTRANSFORMFEEDBACKPROC* = proc (target: GLenum; id: GLuint) {.cdecl.}
  PFNGLDELETETRANSFORMFEEDBACKSPROC* = proc (n: GLsizei; ids: ptr GLuint) {.
      cdecl.}
  PFNGLDRAWTRANSFORMFEEDBACKPROC* = proc (mode: GLenum; id: GLuint) {.cdecl.}
  PFNGLGENTRANSFORMFEEDBACKSPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLISTRANSFORMFEEDBACKPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLPAUSETRANSFORMFEEDBACKPROC* = proc () {.cdecl.}
  PFNGLRESUMETRANSFORMFEEDBACKPROC* = proc () {.cdecl.}
  PFNGLBEGINQUERYINDEXEDPROC* = proc (target: GLenum; index: GLuint; id: GLuint) {.
      cdecl.}
  PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC* = proc (mode: GLenum; id: GLuint;
      stream: GLuint) {.cdecl.}
  PFNGLENDQUERYINDEXEDPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLGETQUERYINDEXEDIVPROC* = proc (target: GLenum; index: GLuint;
                                      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC* = proc (mode: GLenum; id: GLuint;
      primcount: GLsizei) {.cdecl.}
  PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC* = proc (mode: GLenum;
      id: GLuint; stream: GLuint; primcount: GLsizei) {.cdecl.}
  PFNGLLOADTRANSPOSEMATRIXDARBPROC* = proc (m: array[16, GLdouble]) {.cdecl.}
  PFNGLLOADTRANSPOSEMATRIXFARBPROC* = proc (m: array[16, GLfloat]) {.cdecl.}
  PFNGLMULTTRANSPOSEMATRIXDARBPROC* = proc (m: array[16, GLdouble]) {.cdecl.}
  PFNGLMULTTRANSPOSEMATRIXFARBPROC* = proc (m: array[16, GLfloat]) {.cdecl.}
  PFNGLBINDBUFFERBASEPROC* = proc (target: GLenum; index: GLuint; buffer: GLuint) {.
      cdecl.}
  PFNGLBINDBUFFERRANGEPROC* = proc (target: GLenum; index: GLuint;
                                    buffer: GLuint; offset: GLintptr;
                                    size: GLsizeiptr) {.cdecl.}
  PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC* = proc (program: GLuint;
      uniformBlockIndex: GLuint; bufSize: GLsizei; length: ptr GLsizei;
      uniformBlockName: ptr GLchar) {.cdecl.}
  PFNGLGETACTIVEUNIFORMBLOCKIVPROC* = proc (program: GLuint;
      uniformBlockIndex: GLuint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETACTIVEUNIFORMNAMEPROC* = proc (program: GLuint; uniformIndex: GLuint;
      bufSize: GLsizei; length: ptr GLsizei; uniformName: ptr GLchar) {.cdecl.}
  PFNGLGETACTIVEUNIFORMSIVPROC* = proc (program: GLuint; uniformCount: GLsizei;
                                        uniformIndices: ptr GLuint;
                                        pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETINTEGERI_VPROC* = proc (target: GLenum; index: GLuint; data: ptr GLint) {.
      cdecl.}
  PFNGLGETUNIFORMBLOCKINDEXPROC* = proc (program: GLuint;
      uniformBlockName: ptr GLchar): GLuint {.cdecl.}
  PFNGLGETUNIFORMINDICESPROC* = proc (program: GLuint; uniformCount: GLsizei;
                                      uniformNames: ptr ptr GLchar;
                                      uniformIndices: ptr GLuint) {.cdecl.}
  PFNGLUNIFORMBLOCKBINDINGPROC* = proc (program: GLuint;
                                        uniformBlockIndex: GLuint;
                                        uniformBlockBinding: GLuint) {.cdecl.}
  PFNGLBINDVERTEXARRAYPROC* = proc (array: GLuint) {.cdecl.}
  PFNGLDELETEVERTEXARRAYSPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.cdecl.}
  PFNGLGENVERTEXARRAYSPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.cdecl.}
  PFNGLISVERTEXARRAYPROC* = proc (array: GLuint): GLboolean {.cdecl.}
  PFNGLGETVERTEXATTRIBLDVPROC* = proc (index: GLuint; pname: GLenum;
                                       params: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL1DPROC* = proc (index: GLuint; x: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL1DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL2DPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble) {.
      cdecl.}
  PFNGLVERTEXATTRIBL2DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL3DPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                    z: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL3DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL4DPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                    z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL4DVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBLPOINTERPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLBINDVERTEXBUFFERPROC* = proc (bindingindex: GLuint; buffer: GLuint;
                                     offset: GLintptr; stride: GLsizei) {.cdecl.}
  PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC* = proc (vaobj: GLuint;
      bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei) {.
      cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC* = proc (vaobj: GLuint;
      attribindex: GLuint; bindingindex: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC* = proc (vaobj: GLuint;
      attribindex: GLuint; size: GLint; kind: GLenum; normalized: GLboolean;
      relativeoffset: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC* = proc (vaobj: GLuint;
      attribindex: GLuint; size: GLint; kind: GLenum; relativeoffset: GLuint) {.
      cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC* = proc (vaobj: GLuint;
      attribindex: GLuint; size: GLint; kind: GLenum; relativeoffset: GLuint) {.
      cdecl.}
  PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC* = proc (vaobj: GLuint;
      bindingindex: GLuint; divisor: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBBINDINGPROC* = proc (attribindex: GLuint;
                                        bindingindex: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBFORMATPROC* = proc (attribindex: GLuint; size: GLint;
                                       kind: GLenum; normalized: GLboolean;
                                       relativeoffset: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBIFORMATPROC* = proc (attribindex: GLuint; size: GLint;
                                        kind: GLenum; relativeoffset: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBLFORMATPROC* = proc (attribindex: GLuint; size: GLint;
                                        kind: GLenum; relativeoffset: GLuint) {.
      cdecl.}
  PFNGLVERTEXBINDINGDIVISORPROC* = proc (bindingindex: GLuint; divisor: GLuint) {.
      cdecl.}
  PFNGLVERTEXBLENDARBPROC* = proc (count: GLint) {.cdecl.}
  PFNGLWEIGHTPOINTERARBPROC* = proc (size: GLint; kind: GLenum; stride: GLsizei;
                                     pointer: pointer) {.cdecl.}
  PFNGLWEIGHTBVARBPROC* = proc (size: GLint; weights: ptr GLbyte) {.cdecl.}
  PFNGLWEIGHTDVARBPROC* = proc (size: GLint; weights: ptr GLdouble) {.cdecl.}
  PFNGLWEIGHTFVARBPROC* = proc (size: GLint; weights: ptr GLfloat) {.cdecl.}
  PFNGLWEIGHTIVARBPROC* = proc (size: GLint; weights: ptr GLint) {.cdecl.}
  PFNGLWEIGHTSVARBPROC* = proc (size: GLint; weights: ptr GLshort) {.cdecl.}
  PFNGLWEIGHTUBVARBPROC* = proc (size: GLint; weights: ptr GLubyte) {.cdecl.}
  PFNGLWEIGHTUIVARBPROC* = proc (size: GLint; weights: ptr GLuint) {.cdecl.}
  PFNGLWEIGHTUSVARBPROC* = proc (size: GLint; weights: ptr GLushort) {.cdecl.}
  GLintptrARB* = ByteAddress
  GLsizeiptrARB* = ByteAddress
  PFNGLBINDBUFFERARBPROC* = proc (target: GLenum; buffer: GLuint) {.cdecl.}
  PFNGLBUFFERDATAARBPROC* = proc (target: GLenum; size: GLsizeiptrARB;
                                  data: pointer; usage: GLenum) {.cdecl.}
  PFNGLBUFFERSUBDATAARBPROC* = proc (target: GLenum; offset: GLintptrARB;
                                     size: GLsizeiptrARB; data: pointer) {.cdecl.}
  PFNGLDELETEBUFFERSARBPROC* = proc (n: GLsizei; buffers: ptr GLuint) {.cdecl.}
  PFNGLGENBUFFERSARBPROC* = proc (n: GLsizei; buffers: ptr GLuint) {.cdecl.}
  PFNGLGETBUFFERPARAMETERIVARBPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETBUFFERPOINTERVARBPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr pointer) {.cdecl.}
  PFNGLGETBUFFERSUBDATAARBPROC* = proc (target: GLenum; offset: GLintptrARB;
                                        size: GLsizeiptrARB; data: pointer) {.
      cdecl.}
  PFNGLISBUFFERARBPROC* = proc (buffer: GLuint): GLboolean {.cdecl.}
  PFNGLMAPBUFFERARBPROC* = proc (target: GLenum; access: GLenum): pointer {.
      cdecl.}
  PFNGLUNMAPBUFFERARBPROC* = proc (target: GLenum): GLboolean {.cdecl.}
  PFNGLBINDPROGRAMARBPROC* = proc (target: GLenum; program: GLuint) {.cdecl.}
  PFNGLDELETEPROGRAMSARBPROC* = proc (n: GLsizei; programs: ptr GLuint) {.cdecl.}
  PFNGLDISABLEVERTEXATTRIBARRAYARBPROC* = proc (index: GLuint) {.cdecl.}
  PFNGLENABLEVERTEXATTRIBARRAYARBPROC* = proc (index: GLuint) {.cdecl.}
  PFNGLGENPROGRAMSARBPROC* = proc (n: GLsizei; programs: ptr GLuint) {.cdecl.}
  PFNGLGETPROGRAMENVPARAMETERDVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLdouble) {.cdecl.}
  PFNGLGETPROGRAMENVPARAMETERFVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLdouble) {.cdecl.}
  PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETPROGRAMSTRINGARBPROC* = proc (target: GLenum; pname: GLenum;
                                        string: pointer) {.cdecl.}
  PFNGLGETPROGRAMIVARBPROC* = proc (target: GLenum; pname: GLenum;
                                    params: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXATTRIBPOINTERVARBPROC* = proc (index: GLuint; pname: GLenum;
      pointer: ptr pointer) {.cdecl.}
  PFNGLGETVERTEXATTRIBDVARBPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLdouble) {.cdecl.}
  PFNGLGETVERTEXATTRIBFVARBPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETVERTEXATTRIBIVARBPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLISPROGRAMARBPROC* = proc (program: GLuint): GLboolean {.cdecl.}
  PFNGLPROGRAMENVPARAMETER4DARBPROC* = proc (target: GLenum; index: GLuint;
      x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLPROGRAMENVPARAMETER4DVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMENVPARAMETER4FARBPROC* = proc (target: GLenum; index: GLuint;
      x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLPROGRAMENVPARAMETER4FVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETER4DARBPROC* = proc (target: GLenum; index: GLuint;
      x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETER4DVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETER4FARBPROC* = proc (target: GLenum; index: GLuint;
      x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETER4FVARBPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMSTRINGARBPROC* = proc (target: GLenum; format: GLenum;
                                     len: GLsizei; string: pointer) {.cdecl.}
  PFNGLVERTEXATTRIB1DARBPROC* = proc (index: GLuint; x: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB1DVARBPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB1FARBPROC* = proc (index: GLuint; x: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB1FVARBPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB1SARBPROC* = proc (index: GLuint; x: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB1SVARBPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB2DARBPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble) {.
      cdecl.}
  PFNGLVERTEXATTRIB2DVARBPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB2FARBPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIB2FVARBPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB2SARBPROC* = proc (index: GLuint; x: GLshort; y: GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIB2SVARBPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB3DARBPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                      z: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB3DVARBPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB3FARBPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                      z: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB3FVARBPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB3SARBPROC* = proc (index: GLuint; x: GLshort; y: GLshort;
                                      z: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB3SVARBPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4NBVARBPROC* = proc (index: GLuint; v: ptr GLbyte) {.cdecl.}
  PFNGLVERTEXATTRIB4NIVARBPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIB4NSVARBPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4NUBARBPROC* = proc (index: GLuint; x: GLubyte; y: GLubyte;
                                        z: GLubyte; w: GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4NUBVARBPROC* = proc (index: GLuint; v: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4NUIVARBPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIB4NUSVARBPROC* = proc (index: GLuint; v: ptr GLushort) {.cdecl.}
  PFNGLVERTEXATTRIB4BVARBPROC* = proc (index: GLuint; v: ptr GLbyte) {.cdecl.}
  PFNGLVERTEXATTRIB4DARBPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                      z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB4DVARBPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB4FARBPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                      z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB4FVARBPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB4IVARBPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIB4SARBPROC* = proc (index: GLuint; x: GLshort; y: GLshort;
                                      z: GLshort; w: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4SVARBPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4UBVARBPROC* = proc (index: GLuint; v: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4UIVARBPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIB4USVARBPROC* = proc (index: GLuint; v: ptr GLushort) {.cdecl.}
  PFNGLVERTEXATTRIBPOINTERARBPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; normalized: GLboolean; stride: GLsizei; pointer: pointer) {.
      cdecl.}
  PFNGLBINDATTRIBLOCATIONARBPROC* = proc (programObj: GLhandleARB;
      index: GLuint; name: ptr GLcharARB) {.cdecl.}
  PFNGLGETACTIVEATTRIBARBPROC* = proc (programObj: GLhandleARB; index: GLuint;
                                       maxLength: GLsizei; length: ptr GLsizei;
                                       size: ptr GLint; kind: ptr GLenum;
                                       name: ptr GLcharARB) {.cdecl.}
  PFNGLGETATTRIBLOCATIONARBPROC* = proc (programObj: GLhandleARB;
      name: ptr GLcharARB): GLint {.cdecl.}
  PFNGLCOLORP3UIPROC* = proc (kind: GLenum; color: GLuint) {.cdecl.}
  PFNGLCOLORP3UIVPROC* = proc (kind: GLenum; color: ptr GLuint) {.cdecl.}
  PFNGLCOLORP4UIPROC* = proc (kind: GLenum; color: GLuint) {.cdecl.}
  PFNGLCOLORP4UIVPROC* = proc (kind: GLenum; color: ptr GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP1UIPROC* = proc (texture: GLenum; kind: GLenum;
                                      coords: GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP1UIVPROC* = proc (texture: GLenum; kind: GLenum;
                                       coords: ptr GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP2UIPROC* = proc (texture: GLenum; kind: GLenum;
                                      coords: GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP2UIVPROC* = proc (texture: GLenum; kind: GLenum;
                                       coords: ptr GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP3UIPROC* = proc (texture: GLenum; kind: GLenum;
                                      coords: GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP3UIVPROC* = proc (texture: GLenum; kind: GLenum;
                                       coords: ptr GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP4UIPROC* = proc (texture: GLenum; kind: GLenum;
                                      coords: GLuint) {.cdecl.}
  PFNGLMULTITEXCOORDP4UIVPROC* = proc (texture: GLenum; kind: GLenum;
                                       coords: ptr GLuint) {.cdecl.}
  PFNGLNORMALP3UIPROC* = proc (kind: GLenum; coords: GLuint) {.cdecl.}
  PFNGLNORMALP3UIVPROC* = proc (kind: GLenum; coords: ptr GLuint) {.cdecl.}
  PFNGLSECONDARYCOLORP3UIPROC* = proc (kind: GLenum; color: GLuint) {.cdecl.}
  PFNGLSECONDARYCOLORP3UIVPROC* = proc (kind: GLenum; color: ptr GLuint) {.cdecl.}
  PFNGLTEXCOORDP1UIPROC* = proc (kind: GLenum; coords: GLuint) {.cdecl.}
  PFNGLTEXCOORDP1UIVPROC* = proc (kind: GLenum; coords: ptr GLuint) {.cdecl.}
  PFNGLTEXCOORDP2UIPROC* = proc (kind: GLenum; coords: GLuint) {.cdecl.}
  PFNGLTEXCOORDP2UIVPROC* = proc (kind: GLenum; coords: ptr GLuint) {.cdecl.}
  PFNGLTEXCOORDP3UIPROC* = proc (kind: GLenum; coords: GLuint) {.cdecl.}
  PFNGLTEXCOORDP3UIVPROC* = proc (kind: GLenum; coords: ptr GLuint) {.cdecl.}
  PFNGLTEXCOORDP4UIPROC* = proc (kind: GLenum; coords: GLuint) {.cdecl.}
  PFNGLTEXCOORDP4UIVPROC* = proc (kind: GLenum; coords: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBP1UIPROC* = proc (index: GLuint; kind: GLenum;
                                     normalized: GLboolean; value: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP1UIVPROC* = proc (index: GLuint; kind: GLenum;
                                      normalized: GLboolean; value: ptr GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP2UIPROC* = proc (index: GLuint; kind: GLenum;
                                     normalized: GLboolean; value: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP2UIVPROC* = proc (index: GLuint; kind: GLenum;
                                      normalized: GLboolean; value: ptr GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP3UIPROC* = proc (index: GLuint; kind: GLenum;
                                     normalized: GLboolean; value: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP3UIVPROC* = proc (index: GLuint; kind: GLenum;
                                      normalized: GLboolean; value: ptr GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP4UIPROC* = proc (index: GLuint; kind: GLenum;
                                     normalized: GLboolean; value: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBP4UIVPROC* = proc (index: GLuint; kind: GLenum;
                                      normalized: GLboolean; value: ptr GLuint) {.
      cdecl.}
  PFNGLVERTEXP2UIPROC* = proc (kind: GLenum; value: GLuint) {.cdecl.}
  PFNGLVERTEXP2UIVPROC* = proc (kind: GLenum; value: ptr GLuint) {.cdecl.}
  PFNGLVERTEXP3UIPROC* = proc (kind: GLenum; value: GLuint) {.cdecl.}
  PFNGLVERTEXP3UIVPROC* = proc (kind: GLenum; value: ptr GLuint) {.cdecl.}
  PFNGLVERTEXP4UIPROC* = proc (kind: GLenum; value: GLuint) {.cdecl.}
  PFNGLVERTEXP4UIVPROC* = proc (kind: GLenum; value: ptr GLuint) {.cdecl.}
  PFNGLDEPTHRANGEARRAYVPROC* = proc (first: GLuint; count: GLsizei;
                                     v: ptr GLclampd) {.cdecl.}
  PFNGLDEPTHRANGEINDEXEDPROC* = proc (index: GLuint; n: GLclampd; f: GLclampd) {.
      cdecl.}
  PFNGLGETDOUBLEI_VPROC* = proc (target: GLenum; index: GLuint;
                                 data: ptr GLdouble) {.cdecl.}
  PFNGLGETFLOATI_VPROC* = proc (target: GLenum; index: GLuint; data: ptr GLfloat) {.
      cdecl.}
  PFNGLSCISSORARRAYVPROC* = proc (first: GLuint; count: GLsizei; v: ptr GLint) {.
      cdecl.}
  PFNGLSCISSORINDEXEDPROC* = proc (index: GLuint; left: GLint; bottom: GLint;
                                   width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLSCISSORINDEXEDVPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVIEWPORTARRAYVPROC* = proc (first: GLuint; count: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLVIEWPORTINDEXEDFPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                     w: GLfloat; h: GLfloat) {.cdecl.}
  PFNGLVIEWPORTINDEXEDFVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2DARBPROC* = proc (x: GLdouble; y: GLdouble) {.cdecl.}
  PFNGLWINDOWPOS2DVARBPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS2FARBPROC* = proc (x: GLfloat; y: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2FVARBPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2IARBPROC* = proc (x: GLint; y: GLint) {.cdecl.}
  PFNGLWINDOWPOS2IVARBPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS2SARBPROC* = proc (x: GLshort; y: GLshort) {.cdecl.}
  PFNGLWINDOWPOS2SVARBPROC* = proc (p: ptr GLshort) {.cdecl.}
  PFNGLWINDOWPOS3DARBPROC* = proc (x: GLdouble; y: GLdouble; z: GLdouble) {.
      cdecl.}
  PFNGLWINDOWPOS3DVARBPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS3FARBPROC* = proc (x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS3FVARBPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS3IARBPROC* = proc (x: GLint; y: GLint; z: GLint) {.cdecl.}
  PFNGLWINDOWPOS3IVARBPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS3SARBPROC* = proc (x: GLshort; y: GLshort; z: GLshort) {.cdecl.}
  PFNGLWINDOWPOS3SVARBPROC* = proc (p: ptr GLshort) {.cdecl.}
  PFNGLDRAWBUFFERSATIPROC* = proc (n: GLsizei; bufs: ptr GLenum) {.cdecl.}
  PFNGLDRAWELEMENTARRAYATIPROC* = proc (mode: GLenum; count: GLsizei) {.cdecl.}
  PFNGLDRAWRANGEELEMENTARRAYATIPROC* = proc (mode: GLenum; start: GLuint;
      `end`: GLuint; count: GLsizei) {.cdecl.}
  PFNGLELEMENTPOINTERATIPROC* = proc (kind: GLenum; pointer: pointer) {.cdecl.}
  PFNGLGETTEXBUMPPARAMETERFVATIPROC* = proc (pname: GLenum; param: ptr GLfloat) {.
      cdecl.}
  PFNGLGETTEXBUMPPARAMETERIVATIPROC* = proc (pname: GLenum; param: ptr GLint) {.
      cdecl.}
  PFNGLTEXBUMPPARAMETERFVATIPROC* = proc (pname: GLenum; param: ptr GLfloat) {.
      cdecl.}
  PFNGLTEXBUMPPARAMETERIVATIPROC* = proc (pname: GLenum; param: ptr GLint) {.
      cdecl.}
  PFNGLALPHAFRAGMENTOP1ATIPROC* = proc (op: GLenum; dst: GLuint; dstMod: GLuint;
                                        arg1: GLuint; arg1Rep: GLuint;
                                        arg1Mod: GLuint) {.cdecl.}
  PFNGLALPHAFRAGMENTOP2ATIPROC* = proc (op: GLenum; dst: GLuint; dstMod: GLuint;
                                        arg1: GLuint; arg1Rep: GLuint;
                                        arg1Mod: GLuint; arg2: GLuint;
                                        arg2Rep: GLuint; arg2Mod: GLuint) {.
      cdecl.}
  PFNGLALPHAFRAGMENTOP3ATIPROC* = proc (op: GLenum; dst: GLuint; dstMod: GLuint;
                                        arg1: GLuint; arg1Rep: GLuint;
                                        arg1Mod: GLuint; arg2: GLuint;
                                        arg2Rep: GLuint; arg2Mod: GLuint;
                                        arg3: GLuint; arg3Rep: GLuint;
                                        arg3Mod: GLuint) {.cdecl.}
  PFNGLBEGINFRAGMENTSHADERATIPROC* = proc () {.cdecl.}
  PFNGLBINDFRAGMENTSHADERATIPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLCOLORFRAGMENTOP1ATIPROC* = proc (op: GLenum; dst: GLuint;
                                        dstMask: GLuint; dstMod: GLuint;
                                        arg1: GLuint; arg1Rep: GLuint;
                                        arg1Mod: GLuint) {.cdecl.}
  PFNGLCOLORFRAGMENTOP2ATIPROC* = proc (op: GLenum; dst: GLuint;
                                        dstMask: GLuint; dstMod: GLuint;
                                        arg1: GLuint; arg1Rep: GLuint;
                                        arg1Mod: GLuint; arg2: GLuint;
                                        arg2Rep: GLuint; arg2Mod: GLuint) {.
      cdecl.}
  PFNGLCOLORFRAGMENTOP3ATIPROC* = proc (op: GLenum; dst: GLuint;
                                        dstMask: GLuint; dstMod: GLuint;
                                        arg1: GLuint; arg1Rep: GLuint;
                                        arg1Mod: GLuint; arg2: GLuint;
                                        arg2Rep: GLuint; arg2Mod: GLuint;
                                        arg3: GLuint; arg3Rep: GLuint;
                                        arg3Mod: GLuint) {.cdecl.}
  PFNGLDELETEFRAGMENTSHADERATIPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLENDFRAGMENTSHADERATIPROC* = proc () {.cdecl.}
  PFNGLGENFRAGMENTSHADERSATIPROC* = proc (range: GLuint): GLuint {.cdecl.}
  PFNGLPASSTEXCOORDATIPROC* = proc (dst: GLuint; coord: GLuint; swizzle: GLenum) {.
      cdecl.}
  PFNGLSAMPLEMAPATIPROC* = proc (dst: GLuint; interp: GLuint; swizzle: GLenum) {.
      cdecl.}
  PFNGLSETFRAGMENTSHADERCONSTANTATIPROC* = proc (dst: GLuint; value: ptr GLfloat) {.
      cdecl.}
  PFNGLMAPOBJECTBUFFERATIPROC* = proc (buffer: GLuint): pointer {.cdecl.}
  PFNGLUNMAPOBJECTBUFFERATIPROC* = proc (buffer: GLuint) {.cdecl.}
  PFNGLPNTRIANGLESFATIPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLPNTRIANGLESIATIPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLSTENCILFUNCSEPARATEATIPROC* = proc (frontfunc: GLenum; backfunc: GLenum;
      `ref`: GLint; mask: GLuint) {.cdecl.}
  PFNGLSTENCILOPSEPARATEATIPROC* = proc (face: GLenum; sfail: GLenum;
      dpfail: GLenum; dppass: GLenum) {.cdecl.}
  PFNGLARRAYOBJECTATIPROC* = proc (array: GLenum; size: GLint; kind: GLenum;
                                   stride: GLsizei; buffer: GLuint;
                                   offset: GLuint) {.cdecl.}
  PFNGLFREEOBJECTBUFFERATIPROC* = proc (buffer: GLuint) {.cdecl.}
  PFNGLGETARRAYOBJECTFVATIPROC* = proc (array: GLenum; pname: GLenum;
                                        params: ptr GLfloat) {.cdecl.}
  PFNGLGETARRAYOBJECTIVATIPROC* = proc (array: GLenum; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLGETOBJECTBUFFERFVATIPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETOBJECTBUFFERIVATIPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETVARIANTARRAYOBJECTFVATIPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETVARIANTARRAYOBJECTIVATIPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLISOBJECTBUFFERATIPROC* = proc (buffer: GLuint): GLboolean {.cdecl.}
  PFNGLNEWOBJECTBUFFERATIPROC* = proc (size: GLsizei; pointer: pointer;
                                       usage: GLenum): GLuint {.cdecl.}
  PFNGLUPDATEOBJECTBUFFERATIPROC* = proc (buffer: GLuint; offset: GLuint;
      size: GLsizei; pointer: pointer; preserve: GLenum) {.cdecl.}
  PFNGLVARIANTARRAYOBJECTATIPROC* = proc (id: GLuint; kind: GLenum;
      stride: GLsizei; buffer: GLuint; offset: GLuint) {.cdecl.}
  PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC* = proc (index: GLuint;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC* = proc (index: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBARRAYOBJECTATIPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; normalized: GLboolean; stride: GLsizei; buffer: GLuint;
      offset: GLuint) {.cdecl.}
  PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC* = proc (stream: GLenum) {.cdecl.}
  PFNGLNORMALSTREAM3BATIPROC* = proc (stream: GLenum; x: GLbyte; y: GLbyte;
                                      z: GLbyte) {.cdecl.}
  PFNGLNORMALSTREAM3BVATIPROC* = proc (stream: GLenum; coords: ptr GLbyte) {.
      cdecl.}
  PFNGLNORMALSTREAM3DATIPROC* = proc (stream: GLenum; x: GLdouble; y: GLdouble;
                                      z: GLdouble) {.cdecl.}
  PFNGLNORMALSTREAM3DVATIPROC* = proc (stream: GLenum; coords: ptr GLdouble) {.
      cdecl.}
  PFNGLNORMALSTREAM3FATIPROC* = proc (stream: GLenum; x: GLfloat; y: GLfloat;
                                      z: GLfloat) {.cdecl.}
  PFNGLNORMALSTREAM3FVATIPROC* = proc (stream: GLenum; coords: ptr GLfloat) {.
      cdecl.}
  PFNGLNORMALSTREAM3IATIPROC* = proc (stream: GLenum; x: GLint; y: GLint;
                                      z: GLint) {.cdecl.}
  PFNGLNORMALSTREAM3IVATIPROC* = proc (stream: GLenum; coords: ptr GLint) {.
      cdecl.}
  PFNGLNORMALSTREAM3SATIPROC* = proc (stream: GLenum; x: GLshort; y: GLshort;
                                      z: GLshort) {.cdecl.}
  PFNGLNORMALSTREAM3SVATIPROC* = proc (stream: GLenum; coords: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXBLENDENVFATIPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLVERTEXBLENDENVIATIPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLVERTEXSTREAM1DATIPROC* = proc (stream: GLenum; x: GLdouble) {.cdecl.}
  PFNGLVERTEXSTREAM1DVATIPROC* = proc (stream: GLenum; coords: ptr GLdouble) {.
      cdecl.}
  PFNGLVERTEXSTREAM1FATIPROC* = proc (stream: GLenum; x: GLfloat) {.cdecl.}
  PFNGLVERTEXSTREAM1FVATIPROC* = proc (stream: GLenum; coords: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXSTREAM1IATIPROC* = proc (stream: GLenum; x: GLint) {.cdecl.}
  PFNGLVERTEXSTREAM1IVATIPROC* = proc (stream: GLenum; coords: ptr GLint) {.
      cdecl.}
  PFNGLVERTEXSTREAM1SATIPROC* = proc (stream: GLenum; x: GLshort) {.cdecl.}
  PFNGLVERTEXSTREAM1SVATIPROC* = proc (stream: GLenum; coords: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXSTREAM2DATIPROC* = proc (stream: GLenum; x: GLdouble; y: GLdouble) {.
      cdecl.}
  PFNGLVERTEXSTREAM2DVATIPROC* = proc (stream: GLenum; coords: ptr GLdouble) {.
      cdecl.}
  PFNGLVERTEXSTREAM2FATIPROC* = proc (stream: GLenum; x: GLfloat; y: GLfloat) {.
      cdecl.}
  PFNGLVERTEXSTREAM2FVATIPROC* = proc (stream: GLenum; coords: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXSTREAM2IATIPROC* = proc (stream: GLenum; x: GLint; y: GLint) {.
      cdecl.}
  PFNGLVERTEXSTREAM2IVATIPROC* = proc (stream: GLenum; coords: ptr GLint) {.
      cdecl.}
  PFNGLVERTEXSTREAM2SATIPROC* = proc (stream: GLenum; x: GLshort; y: GLshort) {.
      cdecl.}
  PFNGLVERTEXSTREAM2SVATIPROC* = proc (stream: GLenum; coords: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXSTREAM3DATIPROC* = proc (stream: GLenum; x: GLdouble; y: GLdouble;
                                      z: GLdouble) {.cdecl.}
  PFNGLVERTEXSTREAM3DVATIPROC* = proc (stream: GLenum; coords: ptr GLdouble) {.
      cdecl.}
  PFNGLVERTEXSTREAM3FATIPROC* = proc (stream: GLenum; x: GLfloat; y: GLfloat;
                                      z: GLfloat) {.cdecl.}
  PFNGLVERTEXSTREAM3FVATIPROC* = proc (stream: GLenum; coords: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXSTREAM3IATIPROC* = proc (stream: GLenum; x: GLint; y: GLint;
                                      z: GLint) {.cdecl.}
  PFNGLVERTEXSTREAM3IVATIPROC* = proc (stream: GLenum; coords: ptr GLint) {.
      cdecl.}
  PFNGLVERTEXSTREAM3SATIPROC* = proc (stream: GLenum; x: GLshort; y: GLshort;
                                      z: GLshort) {.cdecl.}
  PFNGLVERTEXSTREAM3SVATIPROC* = proc (stream: GLenum; coords: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXSTREAM4DATIPROC* = proc (stream: GLenum; x: GLdouble; y: GLdouble;
                                      z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLVERTEXSTREAM4DVATIPROC* = proc (stream: GLenum; coords: ptr GLdouble) {.
      cdecl.}
  PFNGLVERTEXSTREAM4FATIPROC* = proc (stream: GLenum; x: GLfloat; y: GLfloat;
                                      z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLVERTEXSTREAM4FVATIPROC* = proc (stream: GLenum; coords: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXSTREAM4IATIPROC* = proc (stream: GLenum; x: GLint; y: GLint;
                                      z: GLint; w: GLint) {.cdecl.}
  PFNGLVERTEXSTREAM4IVATIPROC* = proc (stream: GLenum; coords: ptr GLint) {.
      cdecl.}
  PFNGLVERTEXSTREAM4SATIPROC* = proc (stream: GLenum; x: GLshort; y: GLshort;
                                      z: GLshort; w: GLshort) {.cdecl.}
  PFNGLVERTEXSTREAM4SVATIPROC* = proc (stream: GLenum; coords: ptr GLshort) {.
      cdecl.}
  PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC* = proc (mode: GLenum;
      first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint) {.
      cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC* = proc (mode: GLenum;
      count: GLsizei; kind: GLenum; indices: pointer; instancecount: GLsizei;
      baseinstance: GLuint) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC* = proc (mode: GLenum;
      count: GLsizei; kind: GLenum; indices: pointer; instancecount: GLsizei;
      basevertex: GLint; baseinstance: GLuint) {.cdecl.}
  PFNGLGETUNIFORMBUFFERSIZEEXTPROC* = proc (program: GLuint; location: GLint): GLint {.
      cdecl.}
  PFNGLGETUNIFORMOFFSETEXTPROC* = proc (program: GLuint; location: GLint): GLintptr {.
      cdecl.}
  PFNGLUNIFORMBUFFEREXTPROC* = proc (program: GLuint; location: GLint;
                                     buffer: GLuint) {.cdecl.}
  PFNGLBLENDCOLOREXTPROC* = proc (red: GLclampf; green: GLclampf;
                                  blue: GLclampf; alpha: GLclampf) {.cdecl.}
  PFNGLBLENDEQUATIONSEPARATEEXTPROC* = proc (modeRGB: GLenum; modeAlpha: GLenum) {.
      cdecl.}
  PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC* = proc (program: GLuint;
      colorNumber: GLuint; index: GLuint; name: ptr GLchar) {.cdecl.}
  PFNGLGETFRAGDATAINDEXEXTPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC* = proc (program: GLuint;
      programInterface: GLenum; name: ptr GLchar): GLint {.cdecl.}
  PFNGLBLENDFUNCSEPARATEEXTPROC* = proc (sfactorRGB: GLenum; dfactorRGB: GLenum;
      sfactorAlpha: GLenum; dfactorAlpha: GLenum) {.cdecl.}
  PFNGLBLENDEQUATIONEXTPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLBUFFERSTORAGEEXTPROC* = proc (target: GLenum; size: GLsizeiptr;
                                     data: pointer; flags: GLbitfield) {.cdecl.}
  PFNGLNAMEDBUFFERSTORAGEEXTPROC* = proc (buffer: GLuint; size: GLsizeiptr;
      data: pointer; flags: GLbitfield) {.cdecl.}
  PFNGLCLEARTEXIMAGEEXTPROC* = proc (texture: GLuint; level: GLint;
                                     format: GLenum; kind: GLenum; data: pointer) {.
      cdecl.}
  PFNGLCLEARTEXSUBIMAGEEXTPROC* = proc (texture: GLuint; level: GLint;
                                        xoffset: GLint; yoffset: GLint;
                                        zoffset: GLint; width: GLsizei;
                                        height: GLsizei; depth: GLsizei;
                                        format: GLenum; kind: GLenum;
                                        data: pointer) {.cdecl.}
  PFNGLCOLORSUBTABLEEXTPROC* = proc (target: GLenum; start: GLsizei;
                                     count: GLsizei; format: GLenum;
                                     kind: GLenum; data: pointer) {.cdecl.}
  PFNGLCOPYCOLORSUBTABLEEXTPROC* = proc (target: GLenum; start: GLsizei;
      x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLLOCKARRAYSEXTPROC* = proc (first: GLint; count: GLsizei) {.cdecl.}
  PFNGLUNLOCKARRAYSEXTPROC* = proc () {.cdecl.}
  PFNGLCONVOLUTIONFILTER1DEXTPROC* = proc (target: GLenum;
      internalformat: GLenum; width: GLsizei; format: GLenum; kind: GLenum;
      image: pointer) {.cdecl.}
  PFNGLCONVOLUTIONFILTER2DEXTPROC* = proc (target: GLenum;
      internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum;
      kind: GLenum; image: pointer) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERFEXTPROC* = proc (target: GLenum; pname: GLenum;
      param: GLfloat) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERFVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERIEXTPROC* = proc (target: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLCONVOLUTIONPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC* = proc (target: GLenum;
      internalformat: GLenum; x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC* = proc (target: GLenum;
      internalformat: GLenum; x: GLint; y: GLint; width: GLsizei;
      height: GLsizei) {.cdecl.}
  PFNGLGETCONVOLUTIONFILTEREXTPROC* = proc (target: GLenum; format: GLenum;
      kind: GLenum; image: pointer) {.cdecl.}
  PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETSEPARABLEFILTEREXTPROC* = proc (target: GLenum; format: GLenum;
      kind: GLenum; row: pointer; column: pointer; span: pointer) {.cdecl.}
  PFNGLSEPARABLEFILTER2DEXTPROC* = proc (target: GLenum; internalformat: GLenum;
      width: GLsizei; height: GLsizei; format: GLenum; kind: GLenum;
      row: pointer; column: pointer) {.cdecl.}
  PFNGLBINORMALPOINTEREXTPROC* = proc (kind: GLenum; stride: GLsizei;
                                       pointer: pointer) {.cdecl.}
  PFNGLTANGENTPOINTEREXTPROC* = proc (kind: GLenum; stride: GLsizei;
                                      pointer: pointer) {.cdecl.}
  PFNGLCOPYIMAGESUBDATAEXTPROC* = proc (srcName: GLuint; srcTarget: GLenum;
                                        srcLevel: GLint; srcX: GLint;
                                        srcY: GLint; srcZ: GLint;
                                        dstName: GLuint; dstTarget: GLenum;
                                        dstLevel: GLint; dstX: GLint;
                                        dstY: GLint; dstZ: GLint;
                                        srcWidth: GLsizei; srcHeight: GLsizei;
                                        srcDepth: GLsizei) {.cdecl.}
  PFNGLCOPYTEXIMAGE1DEXTPROC* = proc (target: GLenum; level: GLint;
                                      internalformat: GLenum; x: GLint;
                                      y: GLint; width: GLsizei; border: GLint) {.
      cdecl.}
  PFNGLCOPYTEXIMAGE2DEXTPROC* = proc (target: GLenum; level: GLint;
                                      internalformat: GLenum; x: GLint;
                                      y: GLint; width: GLsizei; height: GLsizei;
                                      border: GLint) {.cdecl.}
  PFNGLCOPYTEXSUBIMAGE1DEXTPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYTEXSUBIMAGE2DEXTPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei;
      height: GLsizei) {.cdecl.}
  PFNGLCOPYTEXSUBIMAGE3DEXTPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLCULLPARAMETERDVEXTPROC* = proc (pname: GLenum; params: ptr GLdouble) {.
      cdecl.}
  PFNGLCULLPARAMETERFVEXTPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLGETOBJECTLABELEXTPROC* = proc (kind: GLenum; `object`: GLuint;
                                      bufSize: GLsizei; length: ptr GLsizei;
                                      label: ptr GLchar) {.cdecl.}
  PFNGLLABELOBJECTEXTPROC* = proc (kind: GLenum; `object`: GLuint;
                                   length: GLsizei; label: ptr GLchar) {.cdecl.}
  PFNGLINSERTEVENTMARKEREXTPROC* = proc (length: GLsizei; marker: ptr GLchar) {.
      cdecl.}
  PFNGLPOPGROUPMARKEREXTPROC* = proc () {.cdecl.}
  PFNGLPUSHGROUPMARKEREXTPROC* = proc (length: GLsizei; marker: ptr GLchar) {.
      cdecl.}
  PFNGLDEPTHBOUNDSEXTPROC* = proc (zmin: GLclampd; zmax: GLclampd) {.cdecl.}
  PFNGLBINDMULTITEXTUREEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                        texture: GLuint) {.cdecl.}
  PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC* = proc (framebuffer: GLuint;
      target: GLenum): GLenum {.cdecl.}
  PFNGLCLIENTATTRIBDEFAULTEXTPROC* = proc (mask: GLbitfield) {.cdecl.}
  PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei;
      border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei;
      height: GLsizei; border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei;
      height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; xoffset: GLint; width: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint;
      width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint;
      zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; internalformat: GLenum; width: GLsizei; border: GLint;
      imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei;
      border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei;
      depth: GLsizei; border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC* = proc (texture: GLuint;
      target: GLenum; level: GLint; xoffset: GLint; width: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC* = proc (texture: GLuint;
      target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint;
      width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC* = proc (texture: GLuint;
      target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint;
      zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei;
      format: GLenum; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOPYMULTITEXIMAGE1DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei;
      border: GLint) {.cdecl.}
  PFNGLCOPYMULTITEXIMAGE2DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei;
      height: GLsizei; border: GLint) {.cdecl.}
  PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint;
      y: GLint; width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLCOPYTEXTUREIMAGE1DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei;
      border: GLint) {.cdecl.}
  PFNGLCOPYTEXTUREIMAGE2DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei;
      height: GLsizei; border: GLint) {.cdecl.}
  PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) {.cdecl.}
  PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint;
      y: GLint; width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC* = proc (array: GLenum; index: GLuint) {.
      cdecl.}
  PFNGLDISABLECLIENTSTATEIEXTPROC* = proc (array: GLenum; index: GLuint) {.cdecl.}
  PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC* = proc (vaobj: GLuint; index: GLuint) {.
      cdecl.}
  PFNGLDISABLEVERTEXARRAYEXTPROC* = proc (vaobj: GLuint; array: GLenum) {.cdecl.}
  PFNGLENABLECLIENTSTATEINDEXEDEXTPROC* = proc (array: GLenum; index: GLuint) {.
      cdecl.}
  PFNGLENABLECLIENTSTATEIEXTPROC* = proc (array: GLenum; index: GLuint) {.cdecl.}
  PFNGLENABLEVERTEXARRAYATTRIBEXTPROC* = proc (vaobj: GLuint; index: GLuint) {.
      cdecl.}
  PFNGLENABLEVERTEXARRAYEXTPROC* = proc (vaobj: GLuint; array: GLenum) {.cdecl.}
  PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC* = proc (buffer: GLuint;
      offset: GLintptr; length: GLsizeiptr) {.cdecl.}
  PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC* = proc (framebuffer: GLuint; mode: GLenum) {.
      cdecl.}
  PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC* = proc (framebuffer: GLuint; n: GLsizei;
      bufs: ptr GLenum) {.cdecl.}
  PFNGLFRAMEBUFFERREADBUFFEREXTPROC* = proc (framebuffer: GLuint; mode: GLenum) {.
      cdecl.}
  PFNGLGENERATEMULTITEXMIPMAPEXTPROC* = proc (texunit: GLenum; target: GLenum) {.
      cdecl.}
  PFNGLGENERATETEXTUREMIPMAPEXTPROC* = proc (texture: GLuint; target: GLenum) {.
      cdecl.}
  PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; img: pointer) {.cdecl.}
  PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC* = proc (texture: GLuint;
      target: GLenum; level: GLint; img: pointer) {.cdecl.}
  PFNGLGETDOUBLEINDEXEDVEXTPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLdouble) {.cdecl.}
  PFNGLGETDOUBLEI_VEXTPROC* = proc (pname: GLenum; index: GLuint;
                                    params: ptr GLdouble) {.cdecl.}
  PFNGLGETFLOATINDEXEDVEXTPROC* = proc (target: GLenum; index: GLuint;
                                        params: ptr GLfloat) {.cdecl.}
  PFNGLGETFLOATI_VEXTPROC* = proc (pname: GLenum; index: GLuint;
                                   params: ptr GLfloat) {.cdecl.}
  PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC* = proc (framebuffer: GLuint;
      pname: GLenum; param: ptr GLint) {.cdecl.}
  PFNGLGETMULTITEXENVFVEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                        pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLGETMULTITEXENVIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                        pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETMULTITEXGENDVEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                        pname: GLenum; params: ptr GLdouble) {.
      cdecl.}
  PFNGLGETMULTITEXGENFVEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                        pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLGETMULTITEXGENIVEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                        pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETMULTITEXIMAGEEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                        level: GLint; format: GLenum;
                                        kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC* = proc (texunit: GLenum;
      target: GLenum; level: GLint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETMULTITEXPARAMETERIIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETMULTITEXPARAMETERIUIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; params: ptr GLuint) {.cdecl.}
  PFNGLGETMULTITEXPARAMETERFVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETMULTITEXPARAMETERIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDBUFFERPOINTERVEXTPROC* = proc (buffer: GLuint; pname: GLenum;
      params: ptr pointer) {.cdecl.}
  PFNGLGETNAMEDBUFFERSUBDATAEXTPROC* = proc (buffer: GLuint; offset: GLintptr;
      size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC* = proc (
      framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLuint) {.cdecl.}
  PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLdouble) {.cdecl.}
  PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLfloat) {.cdecl.}
  PFNGLGETNAMEDPROGRAMSTRINGEXTPROC* = proc (program: GLuint; target: GLenum;
      pname: GLenum; string: pointer) {.cdecl.}
  PFNGLGETNAMEDPROGRAMIVEXTPROC* = proc (program: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC* = proc (renderbuffer: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETPOINTERINDEXEDVEXTPROC* = proc (target: GLenum; index: GLuint;
      params: ptr pointer) {.cdecl.}
  PFNGLGETPOINTERI_VEXTPROC* = proc (pname: GLenum; index: GLuint;
                                     params: ptr pointer) {.cdecl.}
  PFNGLGETTEXTUREIMAGEEXTPROC* = proc (texture: GLuint; target: GLenum;
                                       level: GLint; format: GLenum;
                                       kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC* = proc (texture: GLuint;
      target: GLenum; level: GLint; pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC* = proc (texture: GLuint;
      target: GLenum; level: GLint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERIIVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERIUIVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLuint) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERFVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETTEXTUREPARAMETERIVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC* = proc (vaobj: GLuint; index: GLuint;
      pname: GLenum; param: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXARRAYINTEGERVEXTPROC* = proc (vaobj: GLuint; pname: GLenum;
      param: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC* = proc (vaobj: GLuint; index: GLuint;
      pname: GLenum; param: ptr pointer) {.cdecl.}
  PFNGLGETVERTEXARRAYPOINTERVEXTPROC* = proc (vaobj: GLuint; pname: GLenum;
      param: ptr pointer) {.cdecl.}
  PFNGLMAPNAMEDBUFFEREXTPROC* = proc (buffer: GLuint; access: GLenum): pointer {.
      cdecl.}
  PFNGLMAPNAMEDBUFFERRANGEEXTPROC* = proc (buffer: GLuint; offset: GLintptr;
      length: GLsizeiptr; access: GLbitfield): pointer {.cdecl.}
  PFNGLMATRIXFRUSTUMEXTPROC* = proc (matrixMode: GLenum; l: GLdouble;
                                     r: GLdouble; b: GLdouble; t: GLdouble;
                                     n: GLdouble; f: GLdouble) {.cdecl.}
  PFNGLMATRIXLOADIDENTITYEXTPROC* = proc (matrixMode: GLenum) {.cdecl.}
  PFNGLMATRIXLOADTRANSPOSEDEXTPROC* = proc (matrixMode: GLenum; m: ptr GLdouble) {.
      cdecl.}
  PFNGLMATRIXLOADTRANSPOSEFEXTPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.
      cdecl.}
  PFNGLMATRIXLOADDEXTPROC* = proc (matrixMode: GLenum; m: ptr GLdouble) {.cdecl.}
  PFNGLMATRIXLOADFEXTPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.cdecl.}
  PFNGLMATRIXMULTTRANSPOSEDEXTPROC* = proc (matrixMode: GLenum; m: ptr GLdouble) {.
      cdecl.}
  PFNGLMATRIXMULTTRANSPOSEFEXTPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.
      cdecl.}
  PFNGLMATRIXMULTDEXTPROC* = proc (matrixMode: GLenum; m: ptr GLdouble) {.cdecl.}
  PFNGLMATRIXMULTFEXTPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.cdecl.}
  PFNGLMATRIXORTHOEXTPROC* = proc (matrixMode: GLenum; l: GLdouble; r: GLdouble;
                                   b: GLdouble; t: GLdouble; n: GLdouble;
                                   f: GLdouble) {.cdecl.}
  PFNGLMATRIXPOPEXTPROC* = proc (matrixMode: GLenum) {.cdecl.}
  PFNGLMATRIXPUSHEXTPROC* = proc (matrixMode: GLenum) {.cdecl.}
  PFNGLMATRIXROTATEDEXTPROC* = proc (matrixMode: GLenum; angle: GLdouble;
                                     x: GLdouble; y: GLdouble; z: GLdouble) {.
      cdecl.}
  PFNGLMATRIXROTATEFEXTPROC* = proc (matrixMode: GLenum; angle: GLfloat;
                                     x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLMATRIXSCALEDEXTPROC* = proc (matrixMode: GLenum; x: GLdouble;
                                    y: GLdouble; z: GLdouble) {.cdecl.}
  PFNGLMATRIXSCALEFEXTPROC* = proc (matrixMode: GLenum; x: GLfloat; y: GLfloat;
                                    z: GLfloat) {.cdecl.}
  PFNGLMATRIXTRANSLATEDEXTPROC* = proc (matrixMode: GLenum; x: GLdouble;
                                        y: GLdouble; z: GLdouble) {.cdecl.}
  PFNGLMATRIXTRANSLATEFEXTPROC* = proc (matrixMode: GLenum; x: GLfloat;
                                        y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLMULTITEXBUFFEREXTPROC* = proc (texunit: GLenum; target: GLenum;
                                      internalformat: GLenum; buffer: GLuint) {.
      cdecl.}
  PFNGLMULTITEXCOORDPOINTEREXTPROC* = proc (texunit: GLenum; size: GLint;
      kind: GLenum; stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLMULTITEXENVFEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                    pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLMULTITEXENVFVEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                     pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXENVIEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                    pname: GLenum; param: GLint) {.cdecl.}
  PFNGLMULTITEXENVIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                     pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLMULTITEXGENDEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                    pname: GLenum; param: GLdouble) {.cdecl.}
  PFNGLMULTITEXGENDVEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                     pname: GLenum; params: ptr GLdouble) {.
      cdecl.}
  PFNGLMULTITEXGENFEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                    pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLMULTITEXGENFVEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                     pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXGENIEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                    pname: GLenum; param: GLint) {.cdecl.}
  PFNGLMULTITEXGENIVEXTPROC* = proc (texunit: GLenum; coord: GLenum;
                                     pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLMULTITEXIMAGE1DEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                       level: GLint; internalformat: GLint;
                                       width: GLsizei; border: GLint;
                                       format: GLenum; kind: GLenum;
                                       pixels: pointer) {.cdecl.}
  PFNGLMULTITEXIMAGE2DEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                       level: GLint; internalformat: GLint;
                                       width: GLsizei; height: GLsizei;
                                       border: GLint; format: GLenum;
                                       kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLMULTITEXIMAGE3DEXTPROC* = proc (texunit: GLenum; target: GLenum;
                                       level: GLint; internalformat: GLint;
                                       width: GLsizei; height: GLsizei;
                                       depth: GLsizei; border: GLint;
                                       format: GLenum; kind: GLenum;
                                       pixels: pointer) {.cdecl.}
  PFNGLMULTITEXPARAMETERIIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLMULTITEXPARAMETERIUIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; params: ptr GLuint) {.cdecl.}
  PFNGLMULTITEXPARAMETERFEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLMULTITEXPARAMETERFVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; param: ptr GLfloat) {.cdecl.}
  PFNGLMULTITEXPARAMETERIEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; param: GLint) {.cdecl.}
  PFNGLMULTITEXPARAMETERIVEXTPROC* = proc (texunit: GLenum; target: GLenum;
      pname: GLenum; param: ptr GLint) {.cdecl.}
  PFNGLMULTITEXRENDERBUFFEREXTPROC* = proc (texunit: GLenum; target: GLenum;
      renderbuffer: GLuint) {.cdecl.}
  PFNGLMULTITEXSUBIMAGE1DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; xoffset: GLint; width: GLsizei; format: GLenum;
      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLMULTITEXSUBIMAGE2DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei;
      height: GLsizei; format: GLenum; kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLMULTITEXSUBIMAGE3DEXTPROC* = proc (texunit: GLenum; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint;
      width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum;
      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLNAMEDBUFFERDATAEXTPROC* = proc (buffer: GLuint; size: GLsizeiptr;
                                       data: pointer; usage: GLenum) {.cdecl.}
  PFNGLNAMEDBUFFERSUBDATAEXTPROC* = proc (buffer: GLuint; offset: GLintptr;
      size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC* = proc (readBuffer: GLuint;
      writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr;
      size: GLsizeiptr) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) {.
      cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) {.
      cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) {.
      cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint;
      zoffset: GLint) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; texture: GLuint; level: GLint) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; texture: GLuint; level: GLint; face: GLenum) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC* = proc (framebuffer: GLuint;
      attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble;
      w: GLdouble) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLdouble) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat;
      w: GLfloat) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLfloat) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint) {.
      cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLint) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint) {.
      cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; params: ptr GLuint) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; count: GLsizei; params: ptr GLfloat) {.
      cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; count: GLsizei; params: ptr GLint) {.cdecl.}
  PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC* = proc (program: GLuint;
      target: GLenum; index: GLuint; count: GLsizei; params: ptr GLuint) {.cdecl.}
  PFNGLNAMEDPROGRAMSTRINGEXTPROC* = proc (program: GLuint; target: GLenum;
      format: GLenum; len: GLsizei; string: pointer) {.cdecl.}
  PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC* = proc (renderbuffer: GLuint;
      internalformat: GLenum; width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC* = proc (
      renderbuffer: GLuint; coverageSamples: GLsizei; colorSamples: GLsizei;
      internalformat: GLenum; width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC* = proc (renderbuffer: GLuint;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM1FEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM1FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM1IEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM1IVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UIEXTPROC* = proc (program: GLuint; location: GLint;
      v0: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UIVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2FEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLfloat; v1: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM2FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM2IEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLint; v1: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2IVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UIEXTPROC* = proc (program: GLuint; location: GLint;
      v0: GLuint; v1: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UIVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3FEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLfloat; v1: GLfloat; v2: GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORM3FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM3IEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLint; v1: GLint; v2: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3IVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UIEXTPROC* = proc (program: GLuint; location: GLint;
      v0: GLuint; v1: GLuint; v2: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UIVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM4FEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLfloat; v1: GLfloat; v2: GLfloat;
                                        v3: GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM4FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORM4IEXTPROC* = proc (program: GLuint; location: GLint;
                                        v0: GLint; v1: GLint; v2: GLint;
                                        v3: GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM4IVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UIEXTPROC* = proc (program: GLuint; location: GLint;
      v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UIVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; transpose: GLboolean; value: ptr GLfloat) {.
      cdecl.}
  PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC* = proc (mask: GLbitfield) {.cdecl.}
  PFNGLTEXTUREBUFFEREXTPROC* = proc (texture: GLuint; target: GLenum;
                                     internalformat: GLenum; buffer: GLuint) {.
      cdecl.}
  PFNGLTEXTUREIMAGE1DEXTPROC* = proc (texture: GLuint; target: GLenum;
                                      level: GLint; internalformat: GLint;
                                      width: GLsizei; border: GLint;
                                      format: GLenum; kind: GLenum;
                                      pixels: pointer) {.cdecl.}
  PFNGLTEXTUREIMAGE2DEXTPROC* = proc (texture: GLuint; target: GLenum;
                                      level: GLint; internalformat: GLint;
                                      width: GLsizei; height: GLsizei;
                                      border: GLint; format: GLenum;
                                      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLTEXTUREIMAGE3DEXTPROC* = proc (texture: GLuint; target: GLenum;
                                      level: GLint; internalformat: GLint;
                                      width: GLsizei; height: GLsizei;
                                      depth: GLsizei; border: GLint;
                                      format: GLenum; kind: GLenum;
                                      pixels: pointer) {.cdecl.}
  PFNGLTEXTUREPARAMETERIIVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLTEXTUREPARAMETERIUIVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; params: ptr GLuint) {.cdecl.}
  PFNGLTEXTUREPARAMETERFEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLTEXTUREPARAMETERFVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; param: ptr GLfloat) {.cdecl.}
  PFNGLTEXTUREPARAMETERIEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; param: GLint) {.cdecl.}
  PFNGLTEXTUREPARAMETERIVEXTPROC* = proc (texture: GLuint; target: GLenum;
      pname: GLenum; param: ptr GLint) {.cdecl.}
  PFNGLTEXTURERENDERBUFFEREXTPROC* = proc (texture: GLuint; target: GLenum;
      renderbuffer: GLuint) {.cdecl.}
  PFNGLTEXTURESUBIMAGE1DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; xoffset: GLint; width: GLsizei; format: GLenum;
      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLTEXTURESUBIMAGE2DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei;
      height: GLsizei; format: GLenum; kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLTEXTURESUBIMAGE3DEXTPROC* = proc (texture: GLuint; target: GLenum;
      level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint;
      width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum;
      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLUNMAPNAMEDBUFFEREXTPROC* = proc (buffer: GLuint): GLboolean {.cdecl.}
  PFNGLVERTEXARRAYCOLOROFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      size: GLint; kind: GLenum; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      kind: GLenum; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYINDEXOFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      kind: GLenum; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC* = proc (vaobj: GLuint;
      buffer: GLuint; texunit: GLenum; size: GLint; kind: GLenum;
      stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYNORMALOFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      kind: GLenum; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC* = proc (vaobj: GLuint;
      buffer: GLuint; size: GLint; kind: GLenum; stride: GLsizei;
      offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      size: GLint; kind: GLenum; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC* = proc (vaobj: GLuint;
      index: GLuint; divisor: GLuint) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC* = proc (vaobj: GLuint;
      buffer: GLuint; index: GLuint; size: GLint; kind: GLenum; stride: GLsizei;
      offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC* = proc (vaobj: GLuint;
      buffer: GLuint; index: GLuint; size: GLint; kind: GLenum;
      normalized: GLboolean; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC* = proc (vaobj: GLuint; buffer: GLuint;
      size: GLint; kind: GLenum; stride: GLsizei; offset: GLintptr) {.cdecl.}
  PFNGLDISCARDFRAMEBUFFEREXTPROC* = proc (target: GLenum;
      numAttachments: GLsizei; attachments: ptr GLenum) {.cdecl.}
  PFNGLDRAWBUFFERSEXTPROC* = proc (n: GLsizei; bufs: ptr GLenum) {.cdecl.}
  PFNGLCOLORMASKINDEXEDEXTPROC* = proc (buf: GLuint; r: GLboolean; g: GLboolean;
                                        b: GLboolean; a: GLboolean) {.cdecl.}
  PFNGLDISABLEINDEXEDEXTPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLENABLEINDEXEDEXTPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLGETBOOLEANINDEXEDVEXTPROC* = proc (value: GLenum; index: GLuint;
      data: ptr GLboolean) {.cdecl.}
  PFNGLGETINTEGERINDEXEDVEXTPROC* = proc (value: GLenum; index: GLuint;
      data: ptr GLint) {.cdecl.}
  PFNGLISENABLEDINDEXEDEXTPROC* = proc (target: GLenum; index: GLuint): GLboolean {.
      cdecl.}
  PFNGLBLENDEQUATIONSEPARATEIEXTPROC* = proc (buf: GLuint; modeRGB: GLenum;
      modeAlpha: GLenum) {.cdecl.}
  PFNGLBLENDEQUATIONIEXTPROC* = proc (buf: GLuint; mode: GLenum) {.cdecl.}
  PFNGLBLENDFUNCSEPARATEIEXTPROC* = proc (buf: GLuint; srcRGB: GLenum;
      dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) {.cdecl.}
  PFNGLBLENDFUNCIEXTPROC* = proc (buf: GLuint; src: GLenum; dst: GLenum) {.cdecl.}
  PFNGLCOLORMASKIEXTPROC* = proc (buf: GLuint; r: GLboolean; g: GLboolean;
                                  b: GLboolean; a: GLboolean) {.cdecl.}
  PFNGLDISABLEIEXTPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLENABLEIEXTPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLISENABLEDIEXTPROC* = proc (target: GLenum; index: GLuint): GLboolean {.
      cdecl.}
  PFNGLDRAWELEMENTSBASEVERTEXEXTPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; basevertex: GLint) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC* = proc (mode: GLenum;
      count: GLsizei; kind: GLenum; indices: pointer; instancecount: GLsizei;
      basevertex: GLint) {.cdecl.}
  PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC* = proc (mode: GLenum; start: GLuint;
      `end`: GLuint; count: GLsizei; kind: GLenum; indices: pointer;
      basevertex: GLint) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC* = proc (mode: GLenum;
      count: ptr GLsizei; kind: GLenum; indices: ptr pointer;
      primcount: GLsizei; basevertex: ptr GLint) {.cdecl.}
  PFNGLDRAWARRAYSINSTANCEDEXTPROC* = proc (mode: GLenum; start: GLint;
      count: GLsizei; primcount: GLsizei) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDEXTPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; primcount: GLsizei) {.cdecl.}
  PFNGLDRAWRANGEELEMENTSEXTPROC* = proc (mode: GLenum; start: GLuint;
      `end`: GLuint; count: GLsizei; kind: GLenum; indices: pointer) {.cdecl.}
  GLeglClientBufferEXT* = pointer
  PFNGLBUFFERSTORAGEEXTERNALEXTPROC* = proc (target: GLenum; offset: GLintptr;
      size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield) {.
      cdecl.}
  PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC* = proc (buffer: GLuint;
      offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT;
      flags: GLbitfield) {.cdecl.}
  PFNGLFOGCOORDPOINTEREXTPROC* = proc (kind: GLenum; stride: GLsizei;
                                       pointer: pointer) {.cdecl.}
  PFNGLFOGCOORDDEXTPROC* = proc (coord: GLdouble) {.cdecl.}
  PFNGLFOGCOORDDVEXTPROC* = proc (coord: ptr GLdouble) {.cdecl.}
  PFNGLFOGCOORDFEXTPROC* = proc (coord: GLfloat) {.cdecl.}
  PFNGLFOGCOORDFVEXTPROC* = proc (coord: ptr GLfloat) {.cdecl.}
  PFNGLFRAGMENTCOLORMATERIALEXTPROC* = proc (face: GLenum; mode: GLenum) {.cdecl.}
  PFNGLFRAGMENTLIGHTMODELFEXTPROC* = proc (pname: GLenum; param: GLfloat) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTMODELFVEXTPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTMODELIEXTPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLFRAGMENTLIGHTMODELIVEXTPROC* = proc (pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTFEXTPROC* = proc (light: GLenum; pname: GLenum;
                                      param: GLfloat) {.cdecl.}
  PFNGLFRAGMENTLIGHTFVEXTPROC* = proc (light: GLenum; pname: GLenum;
                                       params: ptr GLfloat) {.cdecl.}
  PFNGLFRAGMENTLIGHTIEXTPROC* = proc (light: GLenum; pname: GLenum; param: GLint) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTIVEXTPROC* = proc (light: GLenum; pname: GLenum;
                                       params: ptr GLint) {.cdecl.}
  PFNGLFRAGMENTMATERIALFEXTPROC* = proc (face: GLenum; pname: GLenum;
      param: GLfloat) {.cdecl.}
  PFNGLFRAGMENTMATERIALFVEXTPROC* = proc (face: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLFRAGMENTMATERIALIEXTPROC* = proc (face: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLFRAGMENTMATERIALIVEXTPROC* = proc (face: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETFRAGMENTLIGHTFVEXTPROC* = proc (light: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETFRAGMENTLIGHTIVEXTPROC* = proc (light: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETFRAGMENTMATERIALFVEXTPROC* = proc (face: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETFRAGMENTMATERIALIVEXTPROC* = proc (face: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLLIGHTENVIEXTPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLBLITFRAMEBUFFEREXTPROC* = proc (srcX0: GLint; srcY0: GLint; srcX1: GLint;
                                       srcY1: GLint; dstX0: GLint; dstY0: GLint;
                                       dstX1: GLint; dstY1: GLint;
                                       mask: GLbitfield; filter: GLenum) {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC* = proc (target: GLenum;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLBINDFRAMEBUFFEREXTPROC* = proc (target: GLenum; framebuffer: GLuint) {.
      cdecl.}
  PFNGLBINDRENDERBUFFEREXTPROC* = proc (target: GLenum; renderbuffer: GLuint) {.
      cdecl.}
  PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC* = proc (target: GLenum): GLenum {.cdecl.}
  PFNGLDELETEFRAMEBUFFERSEXTPROC* = proc (n: GLsizei; framebuffers: ptr GLuint) {.
      cdecl.}
  PFNGLDELETERENDERBUFFERSEXTPROC* = proc (n: GLsizei; renderbuffers: ptr GLuint) {.
      cdecl.}
  PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC* = proc (target: GLenum;
      attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) {.
      cdecl.}
  PFNGLFRAMEBUFFERTEXTURE1DEXTPROC* = proc (target: GLenum; attachment: GLenum;
      textarget: GLenum; texture: GLuint; level: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURE2DEXTPROC* = proc (target: GLenum; attachment: GLenum;
      textarget: GLenum; texture: GLuint; level: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURE3DEXTPROC* = proc (target: GLenum; attachment: GLenum;
      textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint) {.cdecl.}
  PFNGLGENFRAMEBUFFERSEXTPROC* = proc (n: GLsizei; framebuffers: ptr GLuint) {.
      cdecl.}
  PFNGLGENRENDERBUFFERSEXTPROC* = proc (n: GLsizei; renderbuffers: ptr GLuint) {.
      cdecl.}
  PFNGLGENERATEMIPMAPEXTPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC* = proc (target: GLenum;
      attachment: GLenum; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLISFRAMEBUFFEREXTPROC* = proc (framebuffer: GLuint): GLboolean {.cdecl.}
  PFNGLISRENDERBUFFEREXTPROC* = proc (renderbuffer: GLuint): GLboolean {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEEXTPROC* = proc (target: GLenum;
      internalformat: GLenum; width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTUREEXTPROC* = proc (target: GLenum; attachment: GLenum;
      texture: GLuint; level: GLint) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; face: GLenum) {.cdecl.}
  PFNGLPROGRAMPARAMETERIEXTPROC* = proc (program: GLuint; pname: GLenum;
      value: GLint) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERS4FVEXTPROC* = proc (target: GLenum; index: GLuint;
      count: GLsizei; params: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC* = proc (target: GLenum; index: GLuint;
      count: GLsizei; params: ptr GLfloat) {.cdecl.}
  PFNGLBINDFRAGDATALOCATIONEXTPROC* = proc (program: GLuint; color: GLuint;
      name: ptr GLchar) {.cdecl.}
  PFNGLGETFRAGDATALOCATIONEXTPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLGETUNIFORMUIVEXTPROC* = proc (program: GLuint; location: GLint;
                                     params: ptr GLuint) {.cdecl.}
  PFNGLGETVERTEXATTRIBIIVEXTPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXATTRIBIUIVEXTPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM1UIEXTPROC* = proc (location: GLint; v0: GLuint) {.cdecl.}
  PFNGLUNIFORM1UIVEXTPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM2UIEXTPROC* = proc (location: GLint; v0: GLuint; v1: GLuint) {.
      cdecl.}
  PFNGLUNIFORM2UIVEXTPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM3UIEXTPROC* = proc (location: GLint; v0: GLuint; v1: GLuint;
                                  v2: GLuint) {.cdecl.}
  PFNGLUNIFORM3UIVEXTPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLuint) {.cdecl.}
  PFNGLUNIFORM4UIEXTPROC* = proc (location: GLint; v0: GLuint; v1: GLuint;
                                  v2: GLuint; v3: GLuint) {.cdecl.}
  PFNGLUNIFORM4UIVEXTPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI1IEXTPROC* = proc (index: GLuint; x: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI1IVEXTPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI1UIEXTPROC* = proc (index: GLuint; x: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI1UIVEXTPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI2IEXTPROC* = proc (index: GLuint; x: GLint; y: GLint) {.
      cdecl.}
  PFNGLVERTEXATTRIBI2IVEXTPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI2UIEXTPROC* = proc (index: GLuint; x: GLuint; y: GLuint) {.
      cdecl.}
  PFNGLVERTEXATTRIBI2UIVEXTPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI3IEXTPROC* = proc (index: GLuint; x: GLint; y: GLint;
                                       z: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI3IVEXTPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI3UIEXTPROC* = proc (index: GLuint; x: GLuint; y: GLuint;
                                        z: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI3UIVEXTPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI4BVEXTPROC* = proc (index: GLuint; v: ptr GLbyte) {.cdecl.}
  PFNGLVERTEXATTRIBI4IEXTPROC* = proc (index: GLuint; x: GLint; y: GLint;
                                       z: GLint; w: GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI4IVEXTPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVERTEXATTRIBI4SVEXTPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIBI4UBVEXTPROC* = proc (index: GLuint; v: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIBI4UIEXTPROC* = proc (index: GLuint; x: GLuint; y: GLuint;
                                        z: GLuint; w: GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI4UIVEXTPROC* = proc (index: GLuint; v: ptr GLuint) {.cdecl.}
  PFNGLVERTEXATTRIBI4USVEXTPROC* = proc (index: GLuint; v: ptr GLushort) {.cdecl.}
  PFNGLVERTEXATTRIBIPOINTEREXTPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLGETHISTOGRAMEXTPROC* = proc (target: GLenum; reset: GLboolean;
                                    format: GLenum; kind: GLenum;
                                    values: pointer) {.cdecl.}
  PFNGLGETHISTOGRAMPARAMETERFVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETHISTOGRAMPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETMINMAXEXTPROC* = proc (target: GLenum; reset: GLboolean;
                                 format: GLenum; kind: GLenum; values: pointer) {.
      cdecl.}
  PFNGLGETMINMAXPARAMETERFVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETMINMAXPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLHISTOGRAMEXTPROC* = proc (target: GLenum; width: GLsizei;
                                 internalformat: GLenum; sink: GLboolean) {.
      cdecl.}
  PFNGLMINMAXEXTPROC* = proc (target: GLenum; internalformat: GLenum;
                              sink: GLboolean) {.cdecl.}
  PFNGLRESETHISTOGRAMEXTPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLRESETMINMAXEXTPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLINDEXFUNCEXTPROC* = proc (`func`: GLenum; `ref`: GLfloat) {.cdecl.}
  PFNGLINDEXMATERIALEXTPROC* = proc (face: GLenum; mode: GLenum) {.cdecl.}
  PFNGLVERTEXATTRIBDIVISOREXTPROC* = proc (index: GLuint; divisor: GLuint) {.
      cdecl.}
  PFNGLAPPLYTEXTUREEXTPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLTEXTURELIGHTEXTPROC* = proc (pname: GLenum) {.cdecl.}
  PFNGLTEXTUREMATERIALEXTPROC* = proc (face: GLenum; mode: GLenum) {.cdecl.}
  PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC* = proc (target: GLenum; offset: GLintptr;
      length: GLsizeiptr) {.cdecl.}
  PFNGLMAPBUFFERRANGEEXTPROC* = proc (target: GLenum; offset: GLintptr;
                                      length: GLsizeiptr; access: GLbitfield): pointer {.
      cdecl.}
  PFNGLBUFFERSTORAGEMEMEXTPROC* = proc (target: GLenum; size: GLsizeiptr;
                                        memory: GLuint; offset: GLuint64) {.
      cdecl.}
  PFNGLCREATEMEMORYOBJECTSEXTPROC* = proc (n: GLsizei; memoryObjects: ptr GLuint) {.
      cdecl.}
  PFNGLDELETEMEMORYOBJECTSEXTPROC* = proc (n: GLsizei; memoryObjects: ptr GLuint) {.
      cdecl.}
  PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC* = proc (memoryObject: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETUNSIGNEDBYTEI_VEXTPROC* = proc (target: GLenum; index: GLuint;
      data: ptr GLubyte) {.cdecl.}
  PFNGLGETUNSIGNEDBYTEVEXTPROC* = proc (pname: GLenum; data: ptr GLubyte) {.
      cdecl.}
  PFNGLISMEMORYOBJECTEXTPROC* = proc (memoryObject: GLuint): GLboolean {.cdecl.}
  PFNGLMEMORYOBJECTPARAMETERIVEXTPROC* = proc (memoryObject: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC* = proc (buffer: GLuint; size: GLsizeiptr;
      memory: GLuint; offset: GLuint64) {.cdecl.}
  PFNGLTEXSTORAGEMEM1DEXTPROC* = proc (target: GLenum; levels: GLsizei;
                                       internalFormat: GLenum; width: GLsizei;
                                       memory: GLuint; offset: GLuint64) {.cdecl.}
  PFNGLTEXSTORAGEMEM2DEXTPROC* = proc (target: GLenum; levels: GLsizei;
                                       internalFormat: GLenum; width: GLsizei;
                                       height: GLsizei; memory: GLuint;
                                       offset: GLuint64) {.cdecl.}
  PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC* = proc (target: GLenum;
      samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei;
      fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64) {.cdecl.}
  PFNGLTEXSTORAGEMEM3DEXTPROC* = proc (target: GLenum; levels: GLsizei;
                                       internalFormat: GLenum; width: GLsizei;
                                       height: GLsizei; depth: GLsizei;
                                       memory: GLuint; offset: GLuint64) {.cdecl.}
  PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC* = proc (target: GLenum;
      samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei;
      depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint;
      offset: GLuint64) {.cdecl.}
  PFNGLTEXTURESTORAGEMEM1DEXTPROC* = proc (texture: GLuint; levels: GLsizei;
      internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64) {.
      cdecl.}
  PFNGLTEXTURESTORAGEMEM2DEXTPROC* = proc (texture: GLuint; levels: GLsizei;
      internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint;
      offset: GLuint64) {.cdecl.}
  PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC* = proc (texture: GLuint;
      samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei;
      fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64) {.cdecl.}
  PFNGLTEXTURESTORAGEMEM3DEXTPROC* = proc (texture: GLuint; levels: GLsizei;
      internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      memory: GLuint; offset: GLuint64) {.cdecl.}
  PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC* = proc (texture: GLuint;
      samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei;
      depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint;
      offset: GLuint64) {.cdecl.}
  PFNGLIMPORTMEMORYFDEXTPROC* = proc (memory: GLuint; size: GLuint64;
                                      handleType: GLenum; fd: GLint) {.cdecl.}
  PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC* = proc (memory: GLuint; size: GLuint64;
      handleType: GLenum; handle: pointer) {.cdecl.}
  PFNGLIMPORTMEMORYWIN32NAMEEXTPROC* = proc (memory: GLuint; size: GLuint64;
      handleType: GLenum; name: pointer) {.cdecl.}
  PFNGLMULTIDRAWARRAYSEXTPROC* = proc (mode: GLenum; first: ptr GLint;
                                       count: ptr GLsizei; primcount: GLsizei) {.
      cdecl.}
  PFNGLMULTIDRAWELEMENTSEXTPROC* = proc (mode: GLenum; count: ptr GLsizei;
      kind: GLenum; indices: ptr pointer; primcount: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC* = proc (mode: GLenum; indirect: pointer;
      drawcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC* = proc (mode: GLenum; kind: GLenum;
      indirect: pointer; drawcount: GLsizei; stride: GLsizei) {.cdecl.}
  PFNGLSAMPLEMASKEXTPROC* = proc (value: GLclampf; invert: GLboolean) {.cdecl.}
  PFNGLSAMPLEPATTERNEXTPROC* = proc (pattern: GLenum) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC* = proc (target: GLenum;
      attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint;
      samples: GLsizei) {.cdecl.}
  PFNGLDRAWBUFFERSINDEXEDEXTPROC* = proc (n: GLint; location: ptr GLenum;
      indices: ptr GLint) {.cdecl.}
  PFNGLGETINTEGERI_VEXTPROC* = proc (target: GLenum; index: GLuint;
                                     data: ptr GLint) {.cdecl.}
  PFNGLREADBUFFERINDEXEDEXTPROC* = proc (src: GLenum; index: GLint) {.cdecl.}
  PFNGLCOLORTABLEEXTPROC* = proc (target: GLenum; internalFormat: GLenum;
                                  width: GLsizei; format: GLenum; kind: GLenum;
                                  data: pointer) {.cdecl.}
  PFNGLGETCOLORTABLEEXTPROC* = proc (target: GLenum; format: GLenum;
                                     kind: GLenum; data: pointer) {.cdecl.}
  PFNGLGETCOLORTABLEPARAMETERFVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETCOLORTABLEPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC* = proc (target: GLenum;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC* = proc (target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERFEXTPROC* = proc (target: GLenum; pname: GLenum;
      param: GLfloat) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERIEXTPROC* = proc (target: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLPOINTPARAMETERFEXTPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLPOINTPARAMETERFVEXTPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLPOLYGONOFFSETEXTPROC* = proc (factor: GLfloat; bias: GLfloat) {.cdecl.}
  PFNGLPOLYGONOFFSETCLAMPEXTPROC* = proc (factor: GLfloat; units: GLfloat;
      clamp: GLfloat) {.cdecl.}
  PFNGLPROVOKINGVERTEXEXTPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLCOVERAGEMODULATIONNVPROC* = proc (components: GLenum) {.cdecl.}
  PFNGLCOVERAGEMODULATIONTABLENVPROC* = proc (n: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLGETCOVERAGEMODULATIONTABLENVPROC* = proc (bufsize: GLsizei;
      v: ptr GLfloat) {.cdecl.}
  PFNGLRASTERSAMPLESEXTPROC* = proc (samples: GLuint;
                                     fixedsamplelocations: GLboolean) {.cdecl.}
  PFNGLBEGINSCENEEXTPROC* = proc () {.cdecl.}
  PFNGLENDSCENEEXTPROC* = proc () {.cdecl.}
  PFNGLSECONDARYCOLOR3BEXTPROC* = proc (red: GLbyte; green: GLbyte; blue: GLbyte) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3BVEXTPROC* = proc (v: ptr GLbyte) {.cdecl.}
  PFNGLSECONDARYCOLOR3DEXTPROC* = proc (red: GLdouble; green: GLdouble;
                                        blue: GLdouble) {.cdecl.}
  PFNGLSECONDARYCOLOR3DVEXTPROC* = proc (v: ptr GLdouble) {.cdecl.}
  PFNGLSECONDARYCOLOR3FEXTPROC* = proc (red: GLfloat; green: GLfloat;
                                        blue: GLfloat) {.cdecl.}
  PFNGLSECONDARYCOLOR3FVEXTPROC* = proc (v: ptr GLfloat) {.cdecl.}
  PFNGLSECONDARYCOLOR3IEXTPROC* = proc (red: GLint; green: GLint; blue: GLint) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3IVEXTPROC* = proc (v: ptr GLint) {.cdecl.}
  PFNGLSECONDARYCOLOR3SEXTPROC* = proc (red: GLshort; green: GLshort;
                                        blue: GLshort) {.cdecl.}
  PFNGLSECONDARYCOLOR3SVEXTPROC* = proc (v: ptr GLshort) {.cdecl.}
  PFNGLSECONDARYCOLOR3UBEXTPROC* = proc (red: GLubyte; green: GLubyte;
      blue: GLubyte) {.cdecl.}
  PFNGLSECONDARYCOLOR3UBVEXTPROC* = proc (v: ptr GLubyte) {.cdecl.}
  PFNGLSECONDARYCOLOR3UIEXTPROC* = proc (red: GLuint; green: GLuint;
      blue: GLuint) {.cdecl.}
  PFNGLSECONDARYCOLOR3UIVEXTPROC* = proc (v: ptr GLuint) {.cdecl.}
  PFNGLSECONDARYCOLOR3USEXTPROC* = proc (red: GLushort; green: GLushort;
      blue: GLushort) {.cdecl.}
  PFNGLSECONDARYCOLOR3USVEXTPROC* = proc (v: ptr GLushort) {.cdecl.}
  PFNGLSECONDARYCOLORPOINTEREXTPROC* = proc (size: GLint; kind: GLenum;
      stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLDELETESEMAPHORESEXTPROC* = proc (n: GLsizei; semaphores: ptr GLuint) {.
      cdecl.}
  PFNGLGENSEMAPHORESEXTPROC* = proc (n: GLsizei; semaphores: ptr GLuint) {.cdecl.}
  PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC* = proc (semaphore: GLuint;
      pname: GLenum; params: ptr GLuint64) {.cdecl.}
  PFNGLISSEMAPHOREEXTPROC* = proc (semaphore: GLuint): GLboolean {.cdecl.}
  PFNGLSEMAPHOREPARAMETERUI64VEXTPROC* = proc (semaphore: GLuint; pname: GLenum;
      params: ptr GLuint64) {.cdecl.}
  PFNGLSIGNALSEMAPHOREEXTPROC* = proc (semaphore: GLuint;
                                       numBufferBarriers: GLuint;
                                       buffers: ptr GLuint;
                                       numTextureBarriers: GLuint;
                                       textures: ptr GLuint;
                                       dstLayouts: ptr GLenum) {.cdecl.}
  PFNGLWAITSEMAPHOREEXTPROC* = proc (semaphore: GLuint;
                                     numBufferBarriers: GLuint;
                                     buffers: ptr GLuint;
                                     numTextureBarriers: GLuint;
                                     textures: ptr GLuint;
                                     srcLayouts: ptr GLenum) {.cdecl.}
  PFNGLIMPORTSEMAPHOREFDEXTPROC* = proc (semaphore: GLuint; handleType: GLenum;
      fd: GLint) {.cdecl.}
  PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC* = proc (semaphore: GLuint;
      handleType: GLenum; handle: pointer) {.cdecl.}
  PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC* = proc (semaphore: GLuint;
      handleType: GLenum; name: pointer) {.cdecl.}
  PFNGLACTIVEPROGRAMEXTPROC* = proc (program: GLuint) {.cdecl.}
  PFNGLCREATESHADERPROGRAMEXTPROC* = proc (kind: GLenum; string: ptr GLchar): GLuint {.
      cdecl.}
  PFNGLUSESHADERPROGRAMEXTPROC* = proc (kind: GLenum; program: GLuint) {.cdecl.}
  PFNGLBINDIMAGETEXTUREEXTPROC* = proc (index: GLuint; texture: GLuint;
                                        level: GLint; layered: GLboolean;
                                        layer: GLint; access: GLenum;
                                        format: GLint) {.cdecl.}
  PFNGLMEMORYBARRIEREXTPROC* = proc (barriers: GLbitfield) {.cdecl.}
  PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC* = proc (offset: GLsizei; n: GLsizei;
      values: ptr GLuint) {.cdecl.}
  PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC* = proc (target: GLuint;
      size: GLsizei) {.cdecl.}
  PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC* = proc (target: GLuint): GLsizei {.
      cdecl.}
  PFNGLTEXPAGECOMMITMENTEXTPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; commit: GLboolean) {.cdecl.}
  PFNGLTEXTUREPAGECOMMITMENTEXTPROC* = proc (texture: GLuint; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; commit: GLboolean) {.cdecl.}
  PFNGLACTIVESTENCILFACEEXTPROC* = proc (face: GLenum) {.cdecl.}
  PFNGLTEXSUBIMAGE1DEXTPROC* = proc (target: GLenum; level: GLint;
                                     xoffset: GLint; width: GLsizei;
                                     format: GLenum; kind: GLenum;
                                     pixels: pointer) {.cdecl.}
  PFNGLTEXSUBIMAGE2DEXTPROC* = proc (target: GLenum; level: GLint;
                                     xoffset: GLint; yoffset: GLint;
                                     width: GLsizei; height: GLsizei;
                                     format: GLenum; kind: GLenum;
                                     pixels: pointer) {.cdecl.}
  PFNGLTEXSUBIMAGE3DEXTPROC* = proc (target: GLenum; level: GLint;
                                     xoffset: GLint; yoffset: GLint;
                                     zoffset: GLint; width: GLsizei;
                                     height: GLsizei; depth: GLsizei;
                                     format: GLenum; kind: GLenum;
                                     pixels: pointer) {.cdecl.}
  PFNGLTEXIMAGE3DEXTPROC* = proc (target: GLenum; level: GLint;
                                  internalformat: GLenum; width: GLsizei;
                                  height: GLsizei; depth: GLsizei;
                                  border: GLint; format: GLenum; kind: GLenum;
                                  pixels: pointer) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLTEXBUFFEREXTPROC* = proc (target: GLenum; internalformat: GLenum;
                                 buffer: GLuint) {.cdecl.}
  PFNGLCLEARCOLORIIEXTPROC* = proc (red: GLint; green: GLint; blue: GLint;
                                    alpha: GLint) {.cdecl.}
  PFNGLCLEARCOLORIUIEXTPROC* = proc (red: GLuint; green: GLuint; blue: GLuint;
                                     alpha: GLuint) {.cdecl.}
  PFNGLGETTEXPARAMETERIIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETTEXPARAMETERIUIVEXTPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLTEXPARAMETERIIVEXTPROC* = proc (target: GLenum; pname: GLenum;
                                       params: ptr GLint) {.cdecl.}
  PFNGLTEXPARAMETERIUIVEXTPROC* = proc (target: GLenum; pname: GLenum;
                                        params: ptr GLuint) {.cdecl.}
  PFNGLARETEXTURESRESIDENTEXTPROC* = proc (n: GLsizei; textures: ptr GLuint;
      residences: ptr GLboolean): GLboolean {.cdecl.}
  PFNGLBINDTEXTUREEXTPROC* = proc (target: GLenum; texture: GLuint) {.cdecl.}
  PFNGLDELETETEXTURESEXTPROC* = proc (n: GLsizei; textures: ptr GLuint) {.cdecl.}
  PFNGLGENTEXTURESEXTPROC* = proc (n: GLsizei; textures: ptr GLuint) {.cdecl.}
  PFNGLISTEXTUREEXTPROC* = proc (texture: GLuint): GLboolean {.cdecl.}
  PFNGLPRIORITIZETEXTURESEXTPROC* = proc (n: GLsizei; textures: ptr GLuint;
      priorities: ptr GLclampf) {.cdecl.}
  PFNGLTEXTURENORMALEXTPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLTEXSTORAGE1DEXTPROC* = proc (target: GLenum; levels: GLsizei;
                                    internalformat: GLenum; width: GLsizei) {.
      cdecl.}
  PFNGLTEXSTORAGE2DEXTPROC* = proc (target: GLenum; levels: GLsizei;
                                    internalformat: GLenum; width: GLsizei;
                                    height: GLsizei) {.cdecl.}
  PFNGLTEXSTORAGE3DEXTPROC* = proc (target: GLenum; levels: GLsizei;
                                    internalformat: GLenum; width: GLsizei;
                                    height: GLsizei; depth: GLsizei) {.cdecl.}
  PFNGLTEXTURESTORAGE1DEXTPROC* = proc (texture: GLuint; target: GLenum;
                                        levels: GLsizei; internalformat: GLenum;
                                        width: GLsizei) {.cdecl.}
  PFNGLTEXTURESTORAGE2DEXTPROC* = proc (texture: GLuint; target: GLenum;
                                        levels: GLsizei; internalformat: GLenum;
                                        width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLTEXTURESTORAGE3DEXTPROC* = proc (texture: GLuint; target: GLenum;
                                        levels: GLsizei; internalformat: GLenum;
                                        width: GLsizei; height: GLsizei;
                                        depth: GLsizei) {.cdecl.}
  PFNGLTEXTUREVIEWEXTPROC* = proc (texture: GLuint; target: GLenum;
                                   origtexture: GLuint; internalformat: GLenum;
                                   minlevel: GLuint; numlevels: GLuint;
                                   minlayer: GLuint; numlayers: GLuint) {.cdecl.}
  PFNGLGETQUERYOBJECTI64VEXTPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLint64EXT) {.cdecl.}
  PFNGLGETQUERYOBJECTUI64VEXTPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLuint64EXT) {.cdecl.}
  PFNGLBEGINTRANSFORMFEEDBACKEXTPROC* = proc (primitiveMode: GLenum) {.cdecl.}
  PFNGLBINDBUFFERBASEEXTPROC* = proc (target: GLenum; index: GLuint;
                                      buffer: GLuint) {.cdecl.}
  PFNGLBINDBUFFEROFFSETEXTPROC* = proc (target: GLenum; index: GLuint;
                                        buffer: GLuint; offset: GLintptr) {.
      cdecl.}
  PFNGLBINDBUFFERRANGEEXTPROC* = proc (target: GLenum; index: GLuint;
                                       buffer: GLuint; offset: GLintptr;
                                       size: GLsizeiptr) {.cdecl.}
  PFNGLENDTRANSFORMFEEDBACKEXTPROC* = proc () {.cdecl.}
  PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC* = proc (program: GLuint;
      index: GLuint; bufSize: GLsizei; length: ptr GLsizei; size: ptr GLsizei;
      kind: ptr GLenum; name: ptr GLchar) {.cdecl.}
  PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC* = proc (program: GLuint;
      count: GLsizei; varyings: ptr ptr GLchar; bufferMode: GLenum) {.cdecl.}
  PFNGLARRAYELEMENTEXTPROC* = proc (i: GLint) {.cdecl.}
  PFNGLCOLORPOINTEREXTPROC* = proc (size: GLint; kind: GLenum; stride: GLsizei;
                                    count: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLDRAWARRAYSEXTPROC* = proc (mode: GLenum; first: GLint; count: GLsizei) {.
      cdecl.}
  PFNGLEDGEFLAGPOINTEREXTPROC* = proc (stride: GLsizei; count: GLsizei;
                                       pointer: ptr GLboolean) {.cdecl.}
  PFNGLINDEXPOINTEREXTPROC* = proc (kind: GLenum; stride: GLsizei;
                                    count: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLNORMALPOINTEREXTPROC* = proc (kind: GLenum; stride: GLsizei;
                                     count: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLTEXCOORDPOINTEREXTPROC* = proc (size: GLint; kind: GLenum;
                                       stride: GLsizei; count: GLsizei;
                                       pointer: pointer) {.cdecl.}
  PFNGLVERTEXPOINTEREXTPROC* = proc (size: GLint; kind: GLenum; stride: GLsizei;
                                     count: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLBINDARRAYSETEXTPROC* = proc (arrayset: pointer) {.cdecl.}
  PFNGLCREATEARRAYSETEXTPROC* = proc (): pointer {.cdecl.}
  PFNGLDELETEARRAYSETSEXTPROC* = proc (n: GLsizei;
                                       arrayset: UncheckedArray[pointer]) {.
      cdecl.}
  PFNGLGETVERTEXATTRIBLDVEXTPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC* = proc (vaobj: GLuint;
      buffer: GLuint; index: GLuint; size: GLint; kind: GLenum; stride: GLsizei;
      offset: GLintptr) {.cdecl.}
  PFNGLVERTEXATTRIBL1DEXTPROC* = proc (index: GLuint; x: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL1DVEXTPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL2DEXTPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble) {.
      cdecl.}
  PFNGLVERTEXATTRIBL2DVEXTPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL3DEXTPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                       z: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL3DVEXTPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL4DEXTPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                       z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBL4DVEXTPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBLPOINTEREXTPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLBEGINVERTEXSHADEREXTPROC* = proc () {.cdecl.}
  PFNGLBINDLIGHTPARAMETEREXTPROC* = proc (light: GLenum; value: GLenum): GLuint {.
      cdecl.}
  PFNGLBINDMATERIALPARAMETEREXTPROC* = proc (face: GLenum; value: GLenum): GLuint {.
      cdecl.}
  PFNGLBINDPARAMETEREXTPROC* = proc (value: GLenum): GLuint {.cdecl.}
  PFNGLBINDTEXGENPARAMETEREXTPROC* = proc (unit: GLenum; coord: GLenum;
      value: GLenum): GLuint {.cdecl.}
  PFNGLBINDTEXTUREUNITPARAMETEREXTPROC* = proc (unit: GLenum; value: GLenum): GLuint {.
      cdecl.}
  PFNGLBINDVERTEXSHADEREXTPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLDELETEVERTEXSHADEREXTPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLENABLEVARIANTCLIENTSTATEEXTPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLENDVERTEXSHADEREXTPROC* = proc () {.cdecl.}
  PFNGLEXTRACTCOMPONENTEXTPROC* = proc (res: GLuint; src: GLuint; num: GLuint) {.
      cdecl.}
  PFNGLGENSYMBOLSEXTPROC* = proc (dataType: GLenum; storageType: GLenum;
                                  range: GLenum; components: GLuint): GLuint {.
      cdecl.}
  PFNGLGENVERTEXSHADERSEXTPROC* = proc (range: GLuint): GLuint {.cdecl.}
  PFNGLGETINVARIANTBOOLEANVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLboolean) {.cdecl.}
  PFNGLGETINVARIANTFLOATVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLfloat) {.cdecl.}
  PFNGLGETINVARIANTINTEGERVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLint) {.cdecl.}
  PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLboolean) {.cdecl.}
  PFNGLGETLOCALCONSTANTFLOATVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLfloat) {.cdecl.}
  PFNGLGETLOCALCONSTANTINTEGERVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLint) {.cdecl.}
  PFNGLGETVARIANTBOOLEANVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLboolean) {.cdecl.}
  PFNGLGETVARIANTFLOATVEXTPROC* = proc (id: GLuint; value: GLenum;
                                        data: ptr GLfloat) {.cdecl.}
  PFNGLGETVARIANTINTEGERVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr GLint) {.cdecl.}
  PFNGLGETVARIANTPOINTERVEXTPROC* = proc (id: GLuint; value: GLenum;
      data: ptr pointer) {.cdecl.}
  PFNGLINSERTCOMPONENTEXTPROC* = proc (res: GLuint; src: GLuint; num: GLuint) {.
      cdecl.}
  PFNGLISVARIANTENABLEDEXTPROC* = proc (id: GLuint; cap: GLenum): GLboolean {.
      cdecl.}
  PFNGLSETINVARIANTEXTPROC* = proc (id: GLuint; kind: GLenum; `addr`: pointer) {.
      cdecl.}
  PFNGLSETLOCALCONSTANTEXTPROC* = proc (id: GLuint; kind: GLenum;
                                        `addr`: pointer) {.cdecl.}
  PFNGLSHADEROP1EXTPROC* = proc (op: GLenum; res: GLuint; arg1: GLuint) {.cdecl.}
  PFNGLSHADEROP2EXTPROC* = proc (op: GLenum; res: GLuint; arg1: GLuint;
                                 arg2: GLuint) {.cdecl.}
  PFNGLSHADEROP3EXTPROC* = proc (op: GLenum; res: GLuint; arg1: GLuint;
                                 arg2: GLuint; arg3: GLuint) {.cdecl.}
  PFNGLSWIZZLEEXTPROC* = proc (res: GLuint; `in`: GLuint; outX: GLenum;
                               outY: GLenum; outZ: GLenum; outW: GLenum) {.cdecl.}
  PFNGLVARIANTPOINTEREXTPROC* = proc (id: GLuint; kind: GLenum; stride: GLuint;
                                      `addr`: pointer) {.cdecl.}
  PFNGLVARIANTBVEXTPROC* = proc (id: GLuint; `addr`: ptr GLbyte) {.cdecl.}
  PFNGLVARIANTDVEXTPROC* = proc (id: GLuint; `addr`: ptr GLdouble) {.cdecl.}
  PFNGLVARIANTFVEXTPROC* = proc (id: GLuint; `addr`: ptr GLfloat) {.cdecl.}
  PFNGLVARIANTIVEXTPROC* = proc (id: GLuint; `addr`: ptr GLint) {.cdecl.}
  PFNGLVARIANTSVEXTPROC* = proc (id: GLuint; `addr`: ptr GLshort) {.cdecl.}
  PFNGLVARIANTUBVEXTPROC* = proc (id: GLuint; `addr`: ptr GLubyte) {.cdecl.}
  PFNGLVARIANTUIVEXTPROC* = proc (id: GLuint; `addr`: ptr GLuint) {.cdecl.}
  PFNGLVARIANTUSVEXTPROC* = proc (id: GLuint; `addr`: ptr GLushort) {.cdecl.}
  PFNGLWRITEMASKEXTPROC* = proc (res: GLuint; `in`: GLuint; outX: GLenum;
                                 outY: GLenum; outZ: GLenum; outW: GLenum) {.
      cdecl.}
  PFNGLVERTEXWEIGHTPOINTEREXTPROC* = proc (size: GLint; kind: GLenum;
      stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLVERTEXWEIGHTFEXTPROC* = proc (weight: GLfloat) {.cdecl.}
  PFNGLVERTEXWEIGHTFVEXTPROC* = proc (weight: ptr GLfloat) {.cdecl.}
  PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC* = proc (memory: GLuint; key: GLuint64;
      timeout: GLuint): GLboolean {.cdecl.}
  PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC* = proc (memory: GLuint; key: GLuint64): GLboolean {.
      cdecl.}
  PFNGLWINDOWRECTANGLESEXTPROC* = proc (mode: GLenum; count: GLsizei;
                                        box: UncheckedArray[GLint]) {.cdecl.}
  PFNGLIMPORTSYNCEXTPROC* = proc (externalSyncType: GLenum;
                                  externalSync: GLintptr; flags: GLbitfield): GLsync {.
      cdecl.}
  PFNGLFRAMETERMINATORGREMEDYPROC* = proc () {.cdecl.}
  PFNGLSTRINGMARKERGREMEDYPROC* = proc (len: GLsizei; string: pointer) {.cdecl.}
  PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC* = proc (target: GLenum;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC* = proc (target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLIMAGETRANSFORMPARAMETERFHPPROC* = proc (target: GLenum; pname: GLenum;
      param: GLfloat) {.cdecl.}
  PFNGLIMAGETRANSFORMPARAMETERFVHPPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLIMAGETRANSFORMPARAMETERIHPPROC* = proc (target: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLIMAGETRANSFORMPARAMETERIVHPPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLMULTIMODEDRAWARRAYSIBMPROC* = proc (mode: ptr GLenum; first: ptr GLint;
      count: ptr GLsizei; primcount: GLsizei; modestride: GLint) {.cdecl.}
  PFNGLMULTIMODEDRAWELEMENTSIBMPROC* = proc (mode: ptr GLenum;
      count: ptr GLsizei; kind: GLenum; indices: ptr pointer;
      primcount: GLsizei; modestride: GLint) {.cdecl.}
  PFNGLCOLORPOINTERLISTIBMPROC* = proc (size: GLint; kind: GLenum;
                                        stride: GLint; pointer: ptr pointer;
                                        ptrstride: GLint) {.cdecl.}
  PFNGLEDGEFLAGPOINTERLISTIBMPROC* = proc (stride: GLint;
      pointer: ptr ptr GLboolean; ptrstride: GLint) {.cdecl.}
  PFNGLFOGCOORDPOINTERLISTIBMPROC* = proc (kind: GLenum; stride: GLint;
      pointer: ptr pointer; ptrstride: GLint) {.cdecl.}
  PFNGLINDEXPOINTERLISTIBMPROC* = proc (kind: GLenum; stride: GLint;
                                        pointer: ptr pointer; ptrstride: GLint) {.
      cdecl.}
  PFNGLNORMALPOINTERLISTIBMPROC* = proc (kind: GLenum; stride: GLint;
      pointer: ptr pointer; ptrstride: GLint) {.cdecl.}
  PFNGLSECONDARYCOLORPOINTERLISTIBMPROC* = proc (size: GLint; kind: GLenum;
      stride: GLint; pointer: ptr pointer; ptrstride: GLint) {.cdecl.}
  PFNGLTEXCOORDPOINTERLISTIBMPROC* = proc (size: GLint; kind: GLenum;
      stride: GLint; pointer: ptr pointer; ptrstride: GLint) {.cdecl.}
  PFNGLVERTEXPOINTERLISTIBMPROC* = proc (size: GLint; kind: GLenum;
      stride: GLint; pointer: ptr pointer; ptrstride: GLint) {.cdecl.}
  PFNGLMAPTEXTURE2DINTELPROC* = proc (texture: GLuint; level: GLint;
                                      access: GLbitfield; stride: ptr GLint;
                                      layout: ptr GLenum): pointer {.cdecl.}
  PFNGLSYNCTEXTUREINTELPROC* = proc (texture: GLuint) {.cdecl.}
  PFNGLUNMAPTEXTURE2DINTELPROC* = proc (texture: GLuint; level: GLint) {.cdecl.}
  PFNGLCOLORPOINTERVINTELPROC* = proc (size: GLint; kind: GLenum;
                                       pointer: ptr pointer) {.cdecl.}
  PFNGLNORMALPOINTERVINTELPROC* = proc (kind: GLenum; pointer: ptr pointer) {.
      cdecl.}
  PFNGLTEXCOORDPOINTERVINTELPROC* = proc (size: GLint; kind: GLenum;
      pointer: ptr pointer) {.cdecl.}
  PFNGLVERTEXPOINTERVINTELPROC* = proc (size: GLint; kind: GLenum;
                                        pointer: ptr pointer) {.cdecl.}
  PFNGLBEGINPERFQUERYINTELPROC* = proc (queryHandle: GLuint) {.cdecl.}
  PFNGLCREATEPERFQUERYINTELPROC* = proc (queryId: GLuint;
      queryHandle: ptr GLuint) {.cdecl.}
  PFNGLDELETEPERFQUERYINTELPROC* = proc (queryHandle: GLuint) {.cdecl.}
  PFNGLENDPERFQUERYINTELPROC* = proc (queryHandle: GLuint) {.cdecl.}
  PFNGLGETFIRSTPERFQUERYIDINTELPROC* = proc (queryId: ptr GLuint) {.cdecl.}
  PFNGLGETNEXTPERFQUERYIDINTELPROC* = proc (queryId: GLuint;
      nextQueryId: ptr GLuint) {.cdecl.}
  PFNGLGETPERFCOUNTERINFOINTELPROC* = proc (queryId: GLuint; counterId: GLuint;
      counterNameLength: GLuint; counterName: ptr GLchar;
      counterDescLength: GLuint; counterDesc: ptr GLchar;
      counterOffset: ptr GLuint; counterDataSize: ptr GLuint;
      counterTypeEnum: ptr GLuint; counterDataTypeEnum: ptr GLuint;
      rawCounterMaxValue: ptr GLuint64) {.cdecl.}
  PFNGLGETPERFQUERYDATAINTELPROC* = proc (queryHandle: GLuint; flags: GLuint;
      dataSize: GLsizei; data: pointer; bytesWritten: ptr GLuint) {.cdecl.}
  PFNGLGETPERFQUERYIDBYNAMEINTELPROC* = proc (queryName: ptr GLchar;
      queryId: ptr GLuint) {.cdecl.}
  PFNGLGETPERFQUERYINFOINTELPROC* = proc (queryId: GLuint;
      queryNameLength: GLuint; queryName: ptr GLchar; dataSize: ptr GLuint;
      noCounters: ptr GLuint; noInstances: ptr GLuint; capsMask: ptr GLuint) {.
      cdecl.}
  PFNGLTEXSCISSORFUNCINTELPROC* = proc (target: GLenum; lfunc: GLenum;
                                        hfunc: GLenum) {.cdecl.}
  PFNGLTEXSCISSORINTELPROC* = proc (target: GLenum; tlow: GLclampf;
                                    thigh: GLclampf) {.cdecl.}
  PFNGLBLENDBARRIERKHRPROC* = proc () {.cdecl.}
  GLDEBUGPROC* = proc (source: GLenum; kind: GLenum; id: GLuint;
                       severity: GLenum; length: GLsizei; message: ptr GLchar;
                       userParam: pointer) {.cdecl.}
  PFNGLDEBUGMESSAGECALLBACKPROC* = proc (callback: GLDEBUGPROC;
      userParam: pointer) {.cdecl.}
  PFNGLDEBUGMESSAGECONTROLPROC* = proc (source: GLenum; kind: GLenum;
                                        severity: GLenum; count: GLsizei;
                                        ids: ptr GLuint; enabled: GLboolean) {.
      cdecl.}
  PFNGLDEBUGMESSAGEINSERTPROC* = proc (source: GLenum; kind: GLenum; id: GLuint;
                                       severity: GLenum; length: GLsizei;
                                       buf: ptr GLchar) {.cdecl.}
  PFNGLGETDEBUGMESSAGELOGPROC* = proc (count: GLuint; bufSize: GLsizei;
                                       sources: ptr GLenum; types: ptr GLenum;
                                       ids: ptr GLuint; severities: ptr GLenum;
                                       lengths: ptr GLsizei;
                                       messageLog: ptr GLchar): GLuint {.cdecl.}
  PFNGLGETOBJECTLABELPROC* = proc (identifier: GLenum; name: GLuint;
                                   bufSize: GLsizei; length: ptr GLsizei;
                                   label: ptr GLchar) {.cdecl.}
  PFNGLGETOBJECTPTRLABELPROC* = proc (`ptr`: pointer; bufSize: GLsizei;
                                      length: ptr GLsizei; label: ptr GLchar) {.
      cdecl.}
  PFNGLOBJECTLABELPROC* = proc (identifier: GLenum; name: GLuint;
                                length: GLsizei; label: ptr GLchar) {.cdecl.}
  PFNGLOBJECTPTRLABELPROC* = proc (`ptr`: pointer; length: GLsizei;
                                   label: ptr GLchar) {.cdecl.}
  PFNGLPOPDEBUGGROUPPROC* = proc () {.cdecl.}
  PFNGLPUSHDEBUGGROUPPROC* = proc (source: GLenum; id: GLuint; length: GLsizei;
                                   message: ptr GLchar) {.cdecl.}
  PFNGLMAXSHADERCOMPILERTHREADSKHRPROC* = proc (count: GLuint) {.cdecl.}
  PFNGLGETNUNIFORMFVPROC* = proc (program: GLuint; location: GLint;
                                  bufSize: GLsizei; params: ptr GLfloat) {.cdecl.}
  PFNGLGETNUNIFORMIVPROC* = proc (program: GLuint; location: GLint;
                                  bufSize: GLsizei; params: ptr GLint) {.cdecl.}
  PFNGLGETNUNIFORMUIVPROC* = proc (program: GLuint; location: GLint;
                                   bufSize: GLsizei; params: ptr GLuint) {.cdecl.}
  PFNGLREADNPIXELSPROC* = proc (x: GLint; y: GLint; width: GLsizei;
                                height: GLsizei; format: GLenum; kind: GLenum;
                                bufSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLBUFFERREGIONENABLEDPROC* = proc (): GLuint {.cdecl.}
  PFNGLDELETEBUFFERREGIONPROC* = proc (region: GLenum) {.cdecl.}
  PFNGLDRAWBUFFERREGIONPROC* = proc (region: GLuint; x: GLint; y: GLint;
                                     width: GLsizei; height: GLsizei;
                                     xDest: GLint; yDest: GLint) {.cdecl.}
  PFNGLNEWBUFFERREGIONPROC* = proc (region: GLenum): GLuint {.cdecl.}
  PFNGLREADBUFFERREGIONPROC* = proc (region: GLuint; x: GLint; y: GLint;
                                     width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLRESIZEBUFFERSMESAPROC* = proc () {.cdecl.}
  PFNGLWINDOWPOS2DMESAPROC* = proc (x: GLdouble; y: GLdouble) {.cdecl.}
  PFNGLWINDOWPOS2DVMESAPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS2FMESAPROC* = proc (x: GLfloat; y: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2FVMESAPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS2IMESAPROC* = proc (x: GLint; y: GLint) {.cdecl.}
  PFNGLWINDOWPOS2IVMESAPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS2SMESAPROC* = proc (x: GLshort; y: GLshort) {.cdecl.}
  PFNGLWINDOWPOS2SVMESAPROC* = proc (p: ptr GLshort) {.cdecl.}
  PFNGLWINDOWPOS3DMESAPROC* = proc (x: GLdouble; y: GLdouble; z: GLdouble) {.
      cdecl.}
  PFNGLWINDOWPOS3DVMESAPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS3FMESAPROC* = proc (x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS3FVMESAPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS3IMESAPROC* = proc (x: GLint; y: GLint; z: GLint) {.cdecl.}
  PFNGLWINDOWPOS3IVMESAPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS3SMESAPROC* = proc (x: GLshort; y: GLshort; z: GLshort) {.cdecl.}
  PFNGLWINDOWPOS3SVMESAPROC* = proc (p: ptr GLshort) {.cdecl.}
  PFNGLWINDOWPOS4DMESAPROC* = proc (x: GLdouble; y: GLdouble; z: GLdouble;
                                    a4: GLdouble) {.cdecl.}
  PFNGLWINDOWPOS4DVMESAPROC* = proc (p: ptr GLdouble) {.cdecl.}
  PFNGLWINDOWPOS4FMESAPROC* = proc (x: GLfloat; y: GLfloat; z: GLfloat;
                                    w: GLfloat) {.cdecl.}
  PFNGLWINDOWPOS4FVMESAPROC* = proc (p: ptr GLfloat) {.cdecl.}
  PFNGLWINDOWPOS4IMESAPROC* = proc (x: GLint; y: GLint; z: GLint; w: GLint) {.
      cdecl.}
  PFNGLWINDOWPOS4IVMESAPROC* = proc (p: ptr GLint) {.cdecl.}
  PFNGLWINDOWPOS4SMESAPROC* = proc (x: GLshort; y: GLshort; z: GLshort;
                                    w: GLshort) {.cdecl.}
  PFNGLWINDOWPOS4SVMESAPROC* = proc (p: ptr GLshort) {.cdecl.}
  PFNGLBEGINCONDITIONALRENDERNVXPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLENDCONDITIONALRENDERNVXPROC* = proc () {.cdecl.}
  PFNGLLGPUCOPYIMAGESUBDATANVXPROC* = proc (sourceGpu: GLuint;
      destinationGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum;
      srcLevel: GLint; srcX: GLint; srxY: GLint; srcZ: GLint; dstName: GLuint;
      dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint;
      width: GLsizei; height: GLsizei; depth: GLsizei) {.cdecl.}
  PFNGLLGPUINTERLOCKNVXPROC* = proc () {.cdecl.}
  PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC* = proc (gpuMask: GLbitfield;
      buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLSTEREOPARAMETERFNVPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLSTEREOPARAMETERINVPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC* = proc (mode: GLenum;
      indirect: pointer; drawCount: GLsizei; stride: GLsizei;
      vertexBufferCount: GLint) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC* = proc (mode: GLenum;
      kind: GLenum; indirect: pointer; drawCount: GLsizei; stride: GLsizei;
      vertexBufferCount: GLint) {.cdecl.}
  PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC* = proc (mode: GLenum;
      indirect: pointer; drawCount: GLintptr; maxDrawCount: GLsizei;
      stride: GLsizei; vertexBufferCount: GLint) {.cdecl.}
  PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC* = proc (mode: GLenum;
      kind: GLenum; indirect: pointer; drawCount: GLintptr;
      maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint) {.cdecl.}
  PFNGLGETIMAGEHANDLENVPROC* = proc (texture: GLuint; level: GLint;
                                     layered: GLboolean; layer: GLint;
                                     format: GLenum): GLuint64 {.cdecl.}
  PFNGLGETTEXTUREHANDLENVPROC* = proc (texture: GLuint): GLuint64 {.cdecl.}
  PFNGLGETTEXTURESAMPLERHANDLENVPROC* = proc (texture: GLuint; sampler: GLuint): GLuint64 {.
      cdecl.}
  PFNGLISIMAGEHANDLERESIDENTNVPROC* = proc (handle: GLuint64): GLboolean {.cdecl.}
  PFNGLISTEXTUREHANDLERESIDENTNVPROC* = proc (handle: GLuint64): GLboolean {.
      cdecl.}
  PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC* = proc (handle: GLuint64) {.cdecl.}
  PFNGLMAKEIMAGEHANDLERESIDENTNVPROC* = proc (handle: GLuint64; access: GLenum) {.
      cdecl.}
  PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC* = proc (handle: GLuint64) {.cdecl.}
  PFNGLMAKETEXTUREHANDLERESIDENTNVPROC* = proc (handle: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC* = proc (program: GLuint; location: GLint;
      value: GLuint64) {.cdecl.}
  PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC* = proc (program: GLuint;
      location: GLint; count: GLsizei; values: ptr GLuint64) {.cdecl.}
  PFNGLUNIFORMHANDLEUI64NVPROC* = proc (location: GLint; value: GLuint64) {.
      cdecl.}
  PFNGLUNIFORMHANDLEUI64VNVPROC* = proc (location: GLint; count: GLsizei;
      value: ptr GLuint64) {.cdecl.}
  PFNGLBLENDBARRIERNVPROC* = proc () {.cdecl.}
  PFNGLBLENDPARAMETERINVPROC* = proc (pname: GLenum; value: GLint) {.cdecl.}
  PFNGLVIEWPORTPOSITIONWSCALENVPROC* = proc (index: GLuint; xcoeff: GLfloat;
      ycoeff: GLfloat) {.cdecl.}
  PFNGLCALLCOMMANDLISTNVPROC* = proc (list: GLuint) {.cdecl.}
  PFNGLCOMMANDLISTSEGMENTSNVPROC* = proc (list: GLuint; segments: GLuint) {.
      cdecl.}
  PFNGLCOMPILECOMMANDLISTNVPROC* = proc (list: GLuint) {.cdecl.}
  PFNGLCREATECOMMANDLISTSNVPROC* = proc (n: GLsizei; lists: ptr GLuint) {.cdecl.}
  PFNGLCREATESTATESNVPROC* = proc (n: GLsizei; states: ptr GLuint) {.cdecl.}
  PFNGLDELETECOMMANDLISTSNVPROC* = proc (n: GLsizei; lists: ptr GLuint) {.cdecl.}
  PFNGLDELETESTATESNVPROC* = proc (n: GLsizei; states: ptr GLuint) {.cdecl.}
  PFNGLDRAWCOMMANDSADDRESSNVPROC* = proc (primitiveMode: GLenum;
      indirects: ptr GLuint64; sizes: ptr GLsizei; count: GLuint) {.cdecl.}
  PFNGLDRAWCOMMANDSNVPROC* = proc (primitiveMode: GLenum; buffer: GLuint;
                                   indirects: ptr GLintptr; sizes: ptr GLsizei;
                                   count: GLuint) {.cdecl.}
  PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC* = proc (indirects: ptr GLuint64;
      sizes: ptr GLsizei; states: ptr GLuint; fbos: ptr GLuint; count: GLuint) {.
      cdecl.}
  PFNGLDRAWCOMMANDSSTATESNVPROC* = proc (buffer: GLuint;
      indirects: ptr GLintptr; sizes: ptr GLsizei; states: ptr GLuint;
      fbos: ptr GLuint; count: GLuint) {.cdecl.}
  PFNGLGETCOMMANDHEADERNVPROC* = proc (tokenID: GLenum; size: GLuint): GLuint {.
      cdecl.}
  PFNGLGETSTAGEINDEXNVPROC* = proc (shadertype: GLenum): GLushort {.cdecl.}
  PFNGLISCOMMANDLISTNVPROC* = proc (list: GLuint): GLboolean {.cdecl.}
  PFNGLISSTATENVPROC* = proc (state: GLuint): GLboolean {.cdecl.}
  PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC* = proc (list: GLuint;
      segment: GLuint; indirects: ptr pointer; sizes: ptr GLsizei;
      states: ptr GLuint; fbos: ptr GLuint; count: GLuint) {.cdecl.}
  PFNGLSTATECAPTURENVPROC* = proc (state: GLuint; mode: GLenum) {.cdecl.}
  PFNGLBEGINCONDITIONALRENDERNVPROC* = proc (id: GLuint; mode: GLenum) {.cdecl.}
  PFNGLENDCONDITIONALRENDERNVPROC* = proc () {.cdecl.}
  PFNGLSUBPIXELPRECISIONBIASNVPROC* = proc (xbits: GLuint; ybits: GLuint) {.
      cdecl.}
  PFNGLCONSERVATIVERASTERPARAMETERFNVPROC* = proc (pname: GLenum; value: GLfloat) {.
      cdecl.}
  PFNGLCONSERVATIVERASTERPARAMETERINVPROC* = proc (pname: GLenum; param: GLint) {.
      cdecl.}
  PFNGLCOPYBUFFERSUBDATANVPROC* = proc (readtarget: GLenum; writetarget: GLenum;
                                        readoffset: GLintptr;
                                        writeoffset: GLintptr; size: GLsizeiptr) {.
      cdecl.}
  PFNGLCOPYIMAGESUBDATANVPROC* = proc (srcName: GLuint; srcTarget: GLenum;
                                       srcLevel: GLint; srcX: GLint;
                                       srcY: GLint; srcZ: GLint;
                                       dstName: GLuint; dstTarget: GLenum;
                                       dstLevel: GLint; dstX: GLint;
                                       dstY: GLint; dstZ: GLint; width: GLsizei;
                                       height: GLsizei; depth: GLsizei) {.cdecl.}
  PFNGLCLEARDEPTHDNVPROC* = proc (depth: GLdouble) {.cdecl.}
  PFNGLDEPTHBOUNDSDNVPROC* = proc (zmin: GLdouble; zmax: GLdouble) {.cdecl.}
  PFNGLDEPTHRANGEDNVPROC* = proc (zNear: GLdouble; zFar: GLdouble) {.cdecl.}
  PFNGLDRAWBUFFERSNVPROC* = proc (n: GLsizei; bufs: ptr GLenum) {.cdecl.}
  PFNGLDRAWARRAYSINSTANCEDNVPROC* = proc (mode: GLenum; first: GLint;
      count: GLsizei; primcount: GLsizei) {.cdecl.}
  PFNGLDRAWELEMENTSINSTANCEDNVPROC* = proc (mode: GLenum; count: GLsizei;
      kind: GLenum; indices: pointer; primcount: GLsizei) {.cdecl.}
  PFNGLDRAWTEXTURENVPROC* = proc (texture: GLuint; sampler: GLuint; x0: GLfloat;
                                  y0: GLfloat; x1: GLfloat; y1: GLfloat;
                                  z: GLfloat; s0: GLfloat; t0: GLfloat;
                                  s1: GLfloat; t1: GLfloat) {.cdecl.}
  GLVULKANPROCNV* = proc () {.cdecl.}
  PFNGLDRAWVKIMAGENVPROC* = proc (vkImage: GLuint64; sampler: GLuint;
                                  x0: GLfloat; y0: GLfloat; x1: GLfloat;
                                  y1: GLfloat; z: GLfloat; s0: GLfloat;
                                  t0: GLfloat; s1: GLfloat; t1: GLfloat) {.cdecl.}
  PFNGLGETVKPROCADDRNVPROC* = proc (name: ptr GLchar): GLVULKANPROCNV {.cdecl.}
  PFNGLSIGNALVKFENCENVPROC* = proc (vkFence: GLuint64) {.cdecl.}
  PFNGLSIGNALVKSEMAPHORENVPROC* = proc (vkSemaphore: GLuint64) {.cdecl.}
  PFNGLWAITVKSEMAPHORENVPROC* = proc (vkSemaphore: GLuint64) {.cdecl.}
  PFNGLEVALMAPSNVPROC* = proc (target: GLenum; mode: GLenum) {.cdecl.}
  PFNGLGETMAPATTRIBPARAMETERFVNVPROC* = proc (target: GLenum; index: GLuint;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETMAPATTRIBPARAMETERIVNVPROC* = proc (target: GLenum; index: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETMAPCONTROLPOINTSNVPROC* = proc (target: GLenum; index: GLuint;
      kind: GLenum; ustride: GLsizei; vstride: GLsizei; packed: GLboolean;
      points: pointer) {.cdecl.}
  PFNGLGETMAPPARAMETERFVNVPROC* = proc (target: GLenum; pname: GLenum;
                                        params: ptr GLfloat) {.cdecl.}
  PFNGLGETMAPPARAMETERIVNVPROC* = proc (target: GLenum; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLMAPCONTROLPOINTSNVPROC* = proc (target: GLenum; index: GLuint;
                                       kind: GLenum; ustride: GLsizei;
                                       vstride: GLsizei; uorder: GLint;
                                       vorder: GLint; packed: GLboolean;
                                       points: pointer) {.cdecl.}
  PFNGLMAPPARAMETERFVNVPROC* = proc (target: GLenum; pname: GLenum;
                                     params: ptr GLfloat) {.cdecl.}
  PFNGLMAPPARAMETERIVNVPROC* = proc (target: GLenum; pname: GLenum;
                                     params: ptr GLint) {.cdecl.}
  PFNGLGETMULTISAMPLEFVNVPROC* = proc (pname: GLenum; index: GLuint;
                                       val: ptr GLfloat) {.cdecl.}
  PFNGLSAMPLEMASKINDEXEDNVPROC* = proc (index: GLuint; mask: GLbitfield) {.cdecl.}
  PFNGLTEXRENDERBUFFERNVPROC* = proc (target: GLenum; renderbuffer: GLuint) {.
      cdecl.}
  PFNGLDELETEFENCESNVPROC* = proc (n: GLsizei; fences: ptr GLuint) {.cdecl.}
  PFNGLFINISHFENCENVPROC* = proc (fence: GLuint) {.cdecl.}
  PFNGLGENFENCESNVPROC* = proc (n: GLsizei; fences: ptr GLuint) {.cdecl.}
  PFNGLGETFENCEIVNVPROC* = proc (fence: GLuint; pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLISFENCENVPROC* = proc (fence: GLuint): GLboolean {.cdecl.}
  PFNGLSETFENCENVPROC* = proc (fence: GLuint; condition: GLenum) {.cdecl.}
  PFNGLTESTFENCENVPROC* = proc (fence: GLuint): GLboolean {.cdecl.}
  PFNGLFRAGMENTCOVERAGECOLORNVPROC* = proc (color: GLuint) {.cdecl.}
  PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC* = proc (id: GLuint; len: GLsizei;
      name: ptr GLubyte; params: ptr GLdouble) {.cdecl.}
  PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC* = proc (id: GLuint; len: GLsizei;
      name: ptr GLubyte; params: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMNAMEDPARAMETER4DNVPROC* = proc (id: GLuint; len: GLsizei;
      name: ptr GLubyte; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) {.
      cdecl.}
  PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC* = proc (id: GLuint; len: GLsizei;
      name: ptr GLubyte; v: UncheckedArray[GLdouble]) {.cdecl.}
  PFNGLPROGRAMNAMEDPARAMETER4FNVPROC* = proc (id: GLuint; len: GLsizei;
      name: ptr GLubyte; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC* = proc (id: GLuint; len: GLsizei;
      name: ptr GLubyte; v: UncheckedArray[GLfloat]) {.cdecl.}
  PFNGLBLITFRAMEBUFFERNVPROC* = proc (srcX0: GLint; srcY0: GLint; srcX1: GLint;
                                      srcY1: GLint; dstX0: GLint; dstY0: GLint;
                                      dstX1: GLint; dstY1: GLint;
                                      mask: GLbitfield; filter: GLenum) {.cdecl.}
  PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC* = proc (target: GLenum;
      samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) {.
      cdecl.}
  PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC* = proc (target: GLenum;
      coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum;
      width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLPROGRAMVERTEXLIMITNVPROC* = proc (target: GLenum; limit: GLint) {.cdecl.}
  PFNGLMULTICASTBARRIERNVPROC* = proc () {.cdecl.}
  PFNGLMULTICASTBLITFRAMEBUFFERNVPROC* = proc (srcGpu: GLuint; dstGpu: GLuint;
      srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint;
      dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) {.
      cdecl.}
  PFNGLMULTICASTBUFFERSUBDATANVPROC* = proc (gpuMask: GLbitfield;
      buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: pointer) {.cdecl.}
  PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC* = proc (readGpu: GLuint;
      writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint;
      readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) {.cdecl.}
  PFNGLMULTICASTCOPYIMAGESUBDATANVPROC* = proc (srcGpu: GLuint;
      dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum;
      srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint;
      dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint;
      srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei) {.cdecl.}
  PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC* = proc (gpu: GLuint;
      framebuffer: GLuint; start: GLuint; count: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC* = proc (gpu: GLuint; id: GLuint;
      pname: GLenum; params: ptr GLint64) {.cdecl.}
  PFNGLMULTICASTGETQUERYOBJECTIVNVPROC* = proc (gpu: GLuint; id: GLuint;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC* = proc (gpu: GLuint; id: GLuint;
      pname: GLenum; params: ptr GLuint64) {.cdecl.}
  PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC* = proc (gpu: GLuint; id: GLuint;
      pname: GLenum; params: ptr GLuint) {.cdecl.}
  PFNGLMULTICASTWAITSYNCNVPROC* = proc (signalGpu: GLuint;
                                        waitGpuMask: GLbitfield) {.cdecl.}
  PFNGLRENDERGPUMASKNVPROC* = proc (mask: GLbitfield) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERI4INVPROC* = proc (target: GLenum; index: GLuint;
      x: GLint; y: GLint; z: GLint; w: GLint) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERI4IVNVPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLint) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERI4UINVPROC* = proc (target: GLenum; index: GLuint;
      x: GLuint; y: GLuint; z: GLuint; w: GLuint) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERI4UIVNVPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERSI4IVNVPROC* = proc (target: GLenum; index: GLuint;
      count: GLsizei; params: ptr GLint) {.cdecl.}
  PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC* = proc (target: GLenum; index: GLuint;
      count: GLsizei; params: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERI4INVPROC* = proc (target: GLenum; index: GLuint;
      x: GLint; y: GLint; z: GLint; w: GLint) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLint) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERI4UINVPROC* = proc (target: GLenum; index: GLuint;
      x: GLuint; y: GLuint; z: GLuint; w: GLuint) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC* = proc (target: GLenum; index: GLuint;
      count: GLsizei; params: ptr GLint) {.cdecl.}
  PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC* = proc (target: GLenum; index: GLuint;
      count: GLsizei; params: ptr GLuint) {.cdecl.}
  PFNGLGETUNIFORMI64VNVPROC* = proc (program: GLuint; location: GLint;
                                     params: ptr GLint64EXT) {.cdecl.}
  PFNGLGETUNIFORMUI64VNVPROC* = proc (program: GLuint; location: GLint;
                                      params: ptr GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM1I64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM1I64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UI64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM1UI64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM2I64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLint64EXT; y: GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM2I64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UI64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64EXT; y: GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM2UI64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM3I64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLint64EXT; y: GLint64EXT; z: GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM3I64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UI64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM3UI64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM4I64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM4I64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UI64NVPROC* = proc (program: GLuint; location: GLint;
      x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORM4UI64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM1I64NVPROC* = proc (location: GLint; x: GLint64EXT) {.cdecl.}
  PFNGLUNIFORM1I64VNVPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLint64EXT) {.cdecl.}
  PFNGLUNIFORM1UI64NVPROC* = proc (location: GLint; x: GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM1UI64VNVPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM2I64NVPROC* = proc (location: GLint; x: GLint64EXT; y: GLint64EXT) {.
      cdecl.}
  PFNGLUNIFORM2I64VNVPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLint64EXT) {.cdecl.}
  PFNGLUNIFORM2UI64NVPROC* = proc (location: GLint; x: GLuint64EXT;
                                   y: GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM2UI64VNVPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM3I64NVPROC* = proc (location: GLint; x: GLint64EXT; y: GLint64EXT;
                                  z: GLint64EXT) {.cdecl.}
  PFNGLUNIFORM3I64VNVPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLint64EXT) {.cdecl.}
  PFNGLUNIFORM3UI64NVPROC* = proc (location: GLint; x: GLuint64EXT;
                                   y: GLuint64EXT; z: GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM3UI64VNVPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM4I64NVPROC* = proc (location: GLint; x: GLint64EXT; y: GLint64EXT;
                                  z: GLint64EXT; w: GLint64EXT) {.cdecl.}
  PFNGLUNIFORM4I64VNVPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLint64EXT) {.cdecl.}
  PFNGLUNIFORM4UI64NVPROC* = proc (location: GLint; x: GLuint64EXT;
                                   y: GLuint64EXT; z: GLuint64EXT;
                                   w: GLuint64EXT) {.cdecl.}
  PFNGLUNIFORM4UI64VNVPROC* = proc (location: GLint; count: GLsizei;
                                    value: ptr GLuint64EXT) {.cdecl.}
  GLhalf* = cushort
  PFNGLCOLOR3HNVPROC* = proc (red: GLhalf; green: GLhalf; blue: GLhalf) {.cdecl.}
  PFNGLCOLOR3HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLCOLOR4HNVPROC* = proc (red: GLhalf; green: GLhalf; blue: GLhalf;
                              alpha: GLhalf) {.cdecl.}
  PFNGLCOLOR4HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLFOGCOORDHNVPROC* = proc (fog: GLhalf) {.cdecl.}
  PFNGLFOGCOORDHVNVPROC* = proc (fog: ptr GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD1HNVPROC* = proc (target: GLenum; s: GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD1HVNVPROC* = proc (target: GLenum; v: ptr GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD2HNVPROC* = proc (target: GLenum; s: GLhalf; t: GLhalf) {.
      cdecl.}
  PFNGLMULTITEXCOORD2HVNVPROC* = proc (target: GLenum; v: ptr GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD3HNVPROC* = proc (target: GLenum; s: GLhalf; t: GLhalf;
                                      r: GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD3HVNVPROC* = proc (target: GLenum; v: ptr GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD4HNVPROC* = proc (target: GLenum; s: GLhalf; t: GLhalf;
                                      r: GLhalf; q: GLhalf) {.cdecl.}
  PFNGLMULTITEXCOORD4HVNVPROC* = proc (target: GLenum; v: ptr GLhalf) {.cdecl.}
  PFNGLNORMAL3HNVPROC* = proc (nx: GLhalf; ny: GLhalf; nz: GLhalf) {.cdecl.}
  PFNGLNORMAL3HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLSECONDARYCOLOR3HNVPROC* = proc (red: GLhalf; green: GLhalf; blue: GLhalf) {.
      cdecl.}
  PFNGLSECONDARYCOLOR3HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLTEXCOORD1HNVPROC* = proc (s: GLhalf) {.cdecl.}
  PFNGLTEXCOORD1HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLTEXCOORD2HNVPROC* = proc (s: GLhalf; t: GLhalf) {.cdecl.}
  PFNGLTEXCOORD2HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLTEXCOORD3HNVPROC* = proc (s: GLhalf; t: GLhalf; r: GLhalf) {.cdecl.}
  PFNGLTEXCOORD3HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLTEXCOORD4HNVPROC* = proc (s: GLhalf; t: GLhalf; r: GLhalf; q: GLhalf) {.
      cdecl.}
  PFNGLTEXCOORD4HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEX2HNVPROC* = proc (x: GLhalf; y: GLhalf) {.cdecl.}
  PFNGLVERTEX2HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEX3HNVPROC* = proc (x: GLhalf; y: GLhalf; z: GLhalf) {.cdecl.}
  PFNGLVERTEX3HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEX4HNVPROC* = proc (x: GLhalf; y: GLhalf; z: GLhalf; w: GLhalf) {.
      cdecl.}
  PFNGLVERTEX4HVNVPROC* = proc (v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB1HNVPROC* = proc (index: GLuint; x: GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB1HVNVPROC* = proc (index: GLuint; v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB2HNVPROC* = proc (index: GLuint; x: GLhalf; y: GLhalf) {.
      cdecl.}
  PFNGLVERTEXATTRIB2HVNVPROC* = proc (index: GLuint; v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB3HNVPROC* = proc (index: GLuint; x: GLhalf; y: GLhalf;
                                     z: GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB3HVNVPROC* = proc (index: GLuint; v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB4HNVPROC* = proc (index: GLuint; x: GLhalf; y: GLhalf;
                                     z: GLhalf; w: GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIB4HVNVPROC* = proc (index: GLuint; v: ptr GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIBS1HVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLhalf) {.
      cdecl.}
  PFNGLVERTEXATTRIBS2HVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLhalf) {.
      cdecl.}
  PFNGLVERTEXATTRIBS3HVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLhalf) {.
      cdecl.}
  PFNGLVERTEXATTRIBS4HVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLhalf) {.
      cdecl.}
  PFNGLVERTEXWEIGHTHNVPROC* = proc (weight: GLhalf) {.cdecl.}
  PFNGLVERTEXWEIGHTHVNVPROC* = proc (weight: ptr GLhalf) {.cdecl.}
  PFNGLVERTEXATTRIBDIVISORNVPROC* = proc (index: GLuint; divisor: GLuint) {.
      cdecl.}
  PFNGLGETINTERNALFORMATSAMPLEIVNVPROC* = proc (target: GLenum;
      internalformat: GLenum; samples: GLsizei; pname: GLenum; bufSize: GLsizei;
      params: ptr GLint) {.cdecl.}
  PFNGLUNIFORMMATRIX2X3FVNVPROC* = proc (location: GLint; count: GLsizei;
      transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORMMATRIX2X4FVNVPROC* = proc (location: GLint; count: GLsizei;
      transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORMMATRIX3X2FVNVPROC* = proc (location: GLint; count: GLsizei;
      transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORMMATRIX3X4FVNVPROC* = proc (location: GLint; count: GLsizei;
      transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORMMATRIX4X2FVNVPROC* = proc (location: GLint; count: GLsizei;
      transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLUNIFORMMATRIX4X3FVNVPROC* = proc (location: GLint; count: GLsizei;
      transpose: GLboolean; value: ptr GLfloat) {.cdecl.}
  PFNGLBEGINOCCLUSIONQUERYNVPROC* = proc (id: GLuint) {.cdecl.}
  PFNGLDELETEOCCLUSIONQUERIESNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.
      cdecl.}
  PFNGLENDOCCLUSIONQUERYNVPROC* = proc () {.cdecl.}
  PFNGLGENOCCLUSIONQUERIESNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLGETOCCLUSIONQUERYIVNVPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETOCCLUSIONQUERYUIVNVPROC* = proc (id: GLuint; pname: GLenum;
      params: ptr GLuint) {.cdecl.}
  PFNGLISOCCLUSIONQUERYNVPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC* = proc (target: GLenum; buffer: GLuint;
      index: GLuint; count: GLsizei; params: ptr GLint) {.cdecl.}
  PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC* = proc (target: GLenum;
      buffer: GLuint; index: GLuint; count: GLsizei; params: ptr GLuint) {.cdecl.}
  PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC* = proc (target: GLenum; buffer: GLuint;
      index: GLuint; count: GLsizei; params: ptr GLfloat) {.cdecl.}
  PFNGLCOPYPATHNVPROC* = proc (resultPath: GLuint; srcPath: GLuint) {.cdecl.}
  PFNGLCOVERFILLPATHINSTANCEDNVPROC* = proc (numPaths: GLsizei;
      pathNameType: GLenum; paths: pointer; pathBase: GLuint; coverMode: GLenum;
      transformType: GLenum; transformValues: ptr GLfloat) {.cdecl.}
  PFNGLCOVERFILLPATHNVPROC* = proc (path: GLuint; coverMode: GLenum) {.cdecl.}
  PFNGLCOVERSTROKEPATHINSTANCEDNVPROC* = proc (numPaths: GLsizei;
      pathNameType: GLenum; paths: pointer; pathBase: GLuint; coverMode: GLenum;
      transformType: GLenum; transformValues: ptr GLfloat) {.cdecl.}
  PFNGLCOVERSTROKEPATHNVPROC* = proc (path: GLuint; coverMode: GLenum) {.cdecl.}
  PFNGLDELETEPATHSNVPROC* = proc (path: GLuint; range: GLsizei) {.cdecl.}
  PFNGLGENPATHSNVPROC* = proc (range: GLsizei): GLuint {.cdecl.}
  PFNGLGETPATHCOLORGENFVNVPROC* = proc (color: GLenum; pname: GLenum;
                                        value: ptr GLfloat) {.cdecl.}
  PFNGLGETPATHCOLORGENIVNVPROC* = proc (color: GLenum; pname: GLenum;
                                        value: ptr GLint) {.cdecl.}
  PFNGLGETPATHCOMMANDSNVPROC* = proc (path: GLuint; commands: ptr GLubyte) {.
      cdecl.}
  PFNGLGETPATHCOORDSNVPROC* = proc (path: GLuint; coords: ptr GLfloat) {.cdecl.}
  PFNGLGETPATHDASHARRAYNVPROC* = proc (path: GLuint; dashArray: ptr GLfloat) {.
      cdecl.}
  PFNGLGETPATHLENGTHNVPROC* = proc (path: GLuint; startSegment: GLsizei;
                                    numSegments: GLsizei): GLfloat {.cdecl.}
  PFNGLGETPATHMETRICRANGENVPROC* = proc (metricQueryMask: GLbitfield;
      firstPathName: GLuint; numPaths: GLsizei; stride: GLsizei;
      metrics: ptr GLfloat) {.cdecl.}
  PFNGLGETPATHMETRICSNVPROC* = proc (metricQueryMask: GLbitfield;
                                     numPaths: GLsizei; pathNameType: GLenum;
                                     paths: pointer; pathBase: GLuint;
                                     stride: GLsizei; metrics: ptr GLfloat) {.
      cdecl.}
  PFNGLGETPATHPARAMETERFVNVPROC* = proc (path: GLuint; pname: GLenum;
      value: ptr GLfloat) {.cdecl.}
  PFNGLGETPATHPARAMETERIVNVPROC* = proc (path: GLuint; pname: GLenum;
      value: ptr GLint) {.cdecl.}
  PFNGLGETPATHSPACINGNVPROC* = proc (pathListMode: GLenum; numPaths: GLsizei;
                                     pathNameType: GLenum; paths: pointer;
                                     pathBase: GLuint; advanceScale: GLfloat;
                                     kerningScale: GLfloat;
                                     transformType: GLenum;
                                     returnedSpacing: ptr GLfloat) {.cdecl.}
  PFNGLGETPATHTEXGENFVNVPROC* = proc (texCoordSet: GLenum; pname: GLenum;
                                      value: ptr GLfloat) {.cdecl.}
  PFNGLGETPATHTEXGENIVNVPROC* = proc (texCoordSet: GLenum; pname: GLenum;
                                      value: ptr GLint) {.cdecl.}
  PFNGLGETPROGRAMRESOURCEFVNVPROC* = proc (program: GLuint;
      programInterface: GLenum; index: GLuint; propCount: GLsizei;
      props: ptr GLenum; bufSize: GLsizei; length: ptr GLsizei;
      params: ptr GLfloat) {.cdecl.}
  PFNGLINTERPOLATEPATHSNVPROC* = proc (resultPath: GLuint; pathA: GLuint;
                                       pathB: GLuint; weight: GLfloat) {.cdecl.}
  PFNGLISPATHNVPROC* = proc (path: GLuint): GLboolean {.cdecl.}
  PFNGLISPOINTINFILLPATHNVPROC* = proc (path: GLuint; mask: GLuint; x: GLfloat;
                                        y: GLfloat): GLboolean {.cdecl.}
  PFNGLISPOINTINSTROKEPATHNVPROC* = proc (path: GLuint; x: GLfloat; y: GLfloat): GLboolean {.
      cdecl.}
  PFNGLMATRIXLOAD3X2FNVPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.cdecl.}
  PFNGLMATRIXLOAD3X3FNVPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.cdecl.}
  PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.
      cdecl.}
  PFNGLMATRIXMULT3X2FNVPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.cdecl.}
  PFNGLMATRIXMULT3X3FNVPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.cdecl.}
  PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC* = proc (matrixMode: GLenum; m: ptr GLfloat) {.
      cdecl.}
  PFNGLPATHCOLORGENNVPROC* = proc (color: GLenum; genMode: GLenum;
                                   colorFormat: GLenum; coeffs: ptr GLfloat) {.
      cdecl.}
  PFNGLPATHCOMMANDSNVPROC* = proc (path: GLuint; numCommands: GLsizei;
                                   commands: ptr GLubyte; numCoords: GLsizei;
                                   coordType: GLenum; coords: pointer) {.cdecl.}
  PFNGLPATHCOORDSNVPROC* = proc (path: GLuint; numCoords: GLsizei;
                                 coordType: GLenum; coords: pointer) {.cdecl.}
  PFNGLPATHCOVERDEPTHFUNCNVPROC* = proc (zfunc: GLenum) {.cdecl.}
  PFNGLPATHDASHARRAYNVPROC* = proc (path: GLuint; dashCount: GLsizei;
                                    dashArray: ptr GLfloat) {.cdecl.}
  PFNGLPATHFOGGENNVPROC* = proc (genMode: GLenum) {.cdecl.}
  PFNGLPATHGLYPHINDEXARRAYNVPROC* = proc (firstPathName: GLuint;
      fontTarget: GLenum; fontName: pointer; fontStyle: GLbitfield;
      firstGlyphIndex: GLuint; numGlyphs: GLsizei;
      pathParameterTemplate: GLuint; emScale: GLfloat): GLenum {.cdecl.}
  PFNGLPATHGLYPHINDEXRANGENVPROC* = proc (fontTarget: GLenum; fontName: pointer;
      fontStyle: GLbitfield; pathParameterTemplate: GLuint; emScale: GLfloat;
      baseAndCount: array[2, GLuint]): GLenum {.cdecl.}
  PFNGLPATHGLYPHRANGENVPROC* = proc (firstPathName: GLuint; fontTarget: GLenum;
                                     fontName: pointer; fontStyle: GLbitfield;
                                     firstGlyph: GLuint; numGlyphs: GLsizei;
                                     handleMissingGlyphs: GLenum;
                                     pathParameterTemplate: GLuint;
                                     emScale: GLfloat) {.cdecl.}
  PFNGLPATHGLYPHSNVPROC* = proc (firstPathName: GLuint; fontTarget: GLenum;
                                 fontName: pointer; fontStyle: GLbitfield;
                                 numGlyphs: GLsizei; kind: GLenum;
                                 charcodes: pointer;
                                 handleMissingGlyphs: GLenum;
                                 pathParameterTemplate: GLuint; emScale: GLfloat) {.
      cdecl.}
  PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC* = proc (firstPathName: GLuint;
      fontTarget: GLenum; fontSize: GLsizeiptr; fontData: pointer;
      faceIndex: GLsizei; firstGlyphIndex: GLuint; numGlyphs: GLsizei;
      pathParameterTemplate: GLuint; emScale: GLfloat): GLenum {.cdecl.}
  PFNGLPATHPARAMETERFNVPROC* = proc (path: GLuint; pname: GLenum; value: GLfloat) {.
      cdecl.}
  PFNGLPATHPARAMETERFVNVPROC* = proc (path: GLuint; pname: GLenum;
                                      value: ptr GLfloat) {.cdecl.}
  PFNGLPATHPARAMETERINVPROC* = proc (path: GLuint; pname: GLenum; value: GLint) {.
      cdecl.}
  PFNGLPATHPARAMETERIVNVPROC* = proc (path: GLuint; pname: GLenum;
                                      value: ptr GLint) {.cdecl.}
  PFNGLPATHSTENCILDEPTHOFFSETNVPROC* = proc (factor: GLfloat; units: GLfloat) {.
      cdecl.}
  PFNGLPATHSTENCILFUNCNVPROC* = proc (`func`: GLenum; `ref`: GLint; mask: GLuint) {.
      cdecl.}
  PFNGLPATHSTRINGNVPROC* = proc (path: GLuint; format: GLenum; length: GLsizei;
                                 pathString: pointer) {.cdecl.}
  PFNGLPATHSUBCOMMANDSNVPROC* = proc (path: GLuint; commandStart: GLsizei;
                                      commandsToDelete: GLsizei;
                                      numCommands: GLsizei;
                                      commands: ptr GLubyte; numCoords: GLsizei;
                                      coordType: GLenum; coords: pointer) {.
      cdecl.}
  PFNGLPATHSUBCOORDSNVPROC* = proc (path: GLuint; coordStart: GLsizei;
                                    numCoords: GLsizei; coordType: GLenum;
                                    coords: pointer) {.cdecl.}
  PFNGLPATHTEXGENNVPROC* = proc (texCoordSet: GLenum; genMode: GLenum;
                                 components: GLint; coeffs: ptr GLfloat) {.cdecl.}
  PFNGLPOINTALONGPATHNVPROC* = proc (path: GLuint; startSegment: GLsizei;
                                     numSegments: GLsizei; distance: GLfloat;
                                     x: ptr GLfloat; y: ptr GLfloat;
                                     tangentX: ptr GLfloat;
                                     tangentY: ptr GLfloat): GLboolean {.cdecl.}
  PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC* = proc (program: GLuint;
      location: GLint; genMode: GLenum; components: GLint; coeffs: ptr GLfloat) {.
      cdecl.}
  PFNGLSTENCILFILLPATHINSTANCEDNVPROC* = proc (numPaths: GLsizei;
      pathNameType: GLenum; paths: pointer; pathBase: GLuint; fillMode: GLenum;
      mask: GLuint; transformType: GLenum; transformValues: ptr GLfloat) {.cdecl.}
  PFNGLSTENCILFILLPATHNVPROC* = proc (path: GLuint; fillMode: GLenum;
                                      mask: GLuint) {.cdecl.}
  PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC* = proc (numPaths: GLsizei;
      pathNameType: GLenum; paths: pointer; pathBase: GLuint; reference: GLint;
      mask: GLuint; transformType: GLenum; transformValues: ptr GLfloat) {.cdecl.}
  PFNGLSTENCILSTROKEPATHNVPROC* = proc (path: GLuint; reference: GLint;
                                        mask: GLuint) {.cdecl.}
  PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC* = proc (numPaths: GLsizei;
      pathNameType: GLenum; paths: pointer; pathBase: GLuint; fillMode: GLenum;
      mask: GLuint; coverMode: GLenum; transformType: GLenum;
      transformValues: ptr GLfloat) {.cdecl.}
  PFNGLSTENCILTHENCOVERFILLPATHNVPROC* = proc (path: GLuint; fillMode: GLenum;
      mask: GLuint; coverMode: GLenum) {.cdecl.}
  PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC* = proc (numPaths: GLsizei;
      pathNameType: GLenum; paths: pointer; pathBase: GLuint; reference: GLint;
      mask: GLuint; coverMode: GLenum; transformType: GLenum;
      transformValues: ptr GLfloat) {.cdecl.}
  PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC* = proc (path: GLuint; reference: GLint;
      mask: GLuint; coverMode: GLenum) {.cdecl.}
  PFNGLTRANSFORMPATHNVPROC* = proc (resultPath: GLuint; srcPath: GLuint;
                                    transformType: GLenum;
                                    transformValues: ptr GLfloat) {.cdecl.}
  PFNGLWEIGHTPATHSNVPROC* = proc (resultPath: GLuint; numPaths: GLsizei;
                                  paths: UncheckedArray[GLuint];
                                  weights: UncheckedArray[GLfloat]) {.cdecl.}
  PFNGLFLUSHPIXELDATARANGENVPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLPIXELDATARANGENVPROC* = proc (target: GLenum; length: GLsizei;
                                     pointer: pointer) {.cdecl.}
  PFNGLPOINTPARAMETERINVPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLPOINTPARAMETERIVNVPROC* = proc (pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLPOLYGONMODENVPROC* = proc (face: GLenum; mode: GLenum) {.cdecl.}
  PFNGLGETVIDEOI64VNVPROC* = proc (videoSlot: GLuint; pname: GLenum;
                                   params: ptr GLint64EXT) {.cdecl.}
  PFNGLGETVIDEOIVNVPROC* = proc (videoSlot: GLuint; pname: GLenum;
                                 params: ptr GLint) {.cdecl.}
  PFNGLGETVIDEOUI64VNVPROC* = proc (videoSlot: GLuint; pname: GLenum;
                                    params: ptr GLuint64EXT) {.cdecl.}
  PFNGLGETVIDEOUIVNVPROC* = proc (videoSlot: GLuint; pname: GLenum;
                                  params: ptr GLuint) {.cdecl.}
  PFNGLPRESENTFRAMEDUALFILLNVPROC* = proc (videoSlot: GLuint;
      minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint;
      presentDurationId: GLuint; kind: GLenum; target0: GLenum; fill0: GLuint;
      target1: GLenum; fill1: GLuint; target2: GLenum; fill2: GLuint;
      target3: GLenum; fill3: GLuint) {.cdecl.}
  PFNGLPRESENTFRAMEKEYEDNVPROC* = proc (videoSlot: GLuint;
                                        minPresentTime: GLuint64EXT;
                                        beginPresentTimeId: GLuint;
                                        presentDurationId: GLuint; kind: GLenum;
                                        target0: GLenum; fill0: GLuint;
                                        key0: GLuint; target1: GLenum;
                                        fill1: GLuint; key1: GLuint) {.cdecl.}
  PFNGLPRIMITIVERESTARTINDEXNVPROC* = proc (index: GLuint) {.cdecl.}
  PFNGLPRIMITIVERESTARTNVPROC* = proc () {.cdecl.}
  PFNGLCOMBINERINPUTNVPROC* = proc (stage: GLenum; portion: GLenum;
                                    variable: GLenum; input: GLenum;
                                    mapping: GLenum; componentUsage: GLenum) {.
      cdecl.}
  PFNGLCOMBINEROUTPUTNVPROC* = proc (stage: GLenum; portion: GLenum;
                                     abOutput: GLenum; cdOutput: GLenum;
                                     sumOutput: GLenum; scale: GLenum;
                                     bias: GLenum; abDotProduct: GLboolean;
                                     cdDotProduct: GLboolean; muxSum: GLboolean) {.
      cdecl.}
  PFNGLCOMBINERPARAMETERFNVPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLCOMBINERPARAMETERFVNVPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLCOMBINERPARAMETERINVPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLCOMBINERPARAMETERIVNVPROC* = proc (pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLFINALCOMBINERINPUTNVPROC* = proc (variable: GLenum; input: GLenum;
      mapping: GLenum; componentUsage: GLenum) {.cdecl.}
  PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC* = proc (stage: GLenum;
      portion: GLenum; variable: GLenum; pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC* = proc (stage: GLenum;
      portion: GLenum; variable: GLenum; pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC* = proc (stage: GLenum;
      portion: GLenum; pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC* = proc (stage: GLenum;
      portion: GLenum; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC* = proc (variable: GLenum;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC* = proc (variable: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLCOMBINERSTAGEPARAMETERFVNVPROC* = proc (stage: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC* = proc (stage: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC* = proc (target: GLenum;
      start: GLuint; count: GLsizei; v: ptr GLfloat) {.cdecl.}
  PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC* = proc (framebuffer: GLuint;
      start: GLuint; count: GLsizei; v: ptr GLfloat) {.cdecl.}
  PFNGLGETBUFFERPARAMETERUI64VNVPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLuint64EXT) {.cdecl.}
  PFNGLGETINTEGERUI64VNVPROC* = proc (value: GLenum; result: ptr GLuint64EXT) {.
      cdecl.}
  PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC* = proc (buffer: GLuint;
      pname: GLenum; params: ptr GLuint64EXT) {.cdecl.}
  PFNGLISBUFFERRESIDENTNVPROC* = proc (target: GLenum): GLboolean {.cdecl.}
  PFNGLISNAMEDBUFFERRESIDENTNVPROC* = proc (buffer: GLuint): GLboolean {.cdecl.}
  PFNGLMAKEBUFFERNONRESIDENTNVPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLMAKEBUFFERRESIDENTNVPROC* = proc (target: GLenum; access: GLenum) {.cdecl.}
  PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC* = proc (buffer: GLuint) {.cdecl.}
  PFNGLMAKENAMEDBUFFERRESIDENTNVPROC* = proc (buffer: GLuint; access: GLenum) {.
      cdecl.}
  PFNGLPROGRAMUNIFORMUI64NVPROC* = proc (program: GLuint; location: GLint;
      value: GLuint64EXT) {.cdecl.}
  PFNGLPROGRAMUNIFORMUI64VNVPROC* = proc (program: GLuint; location: GLint;
      count: GLsizei; value: ptr GLuint64EXT) {.cdecl.}
  PFNGLUNIFORMUI64NVPROC* = proc (location: GLint; value: GLuint64EXT) {.cdecl.}
  PFNGLUNIFORMUI64VNVPROC* = proc (location: GLint; count: GLsizei;
                                   value: ptr GLuint64EXT) {.cdecl.}
  PFNGLCOMPRESSEDTEXIMAGE3DNVPROC* = proc (target: GLenum; level: GLint;
      internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei;
      border: GLint; imageSize: GLsizei; data: pointer) {.cdecl.}
  PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei;
      data: pointer) {.cdecl.}
  PFNGLCOPYTEXSUBIMAGE3DNVPROC* = proc (target: GLenum; level: GLint;
                                        xoffset: GLint; yoffset: GLint;
                                        zoffset: GLint; x: GLint; y: GLint;
                                        width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTURELAYERNVPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) {.cdecl.}
  PFNGLTEXIMAGE3DNVPROC* = proc (target: GLenum; level: GLint;
                                 internalFormat: GLenum; width: GLsizei;
                                 height: GLsizei; depth: GLsizei; border: GLint;
                                 format: GLenum; kind: GLenum; pixels: pointer) {.
      cdecl.}
  PFNGLTEXSUBIMAGE3DNVPROC* = proc (target: GLenum; level: GLint;
                                    xoffset: GLint; yoffset: GLint;
                                    zoffset: GLint; width: GLsizei;
                                    height: GLsizei; depth: GLsizei;
                                    format: GLenum; kind: GLenum;
                                    pixels: pointer) {.cdecl.}
  PFNGLTEXTUREBARRIERNVPROC* = proc () {.cdecl.}
  PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC* = proc (target: GLenum;
      coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint;
      width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean) {.cdecl.}
  PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC* = proc (target: GLenum;
      coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint;
      width: GLsizei; height: GLsizei; depth: GLsizei;
      fixedSampleLocations: GLboolean) {.cdecl.}
  PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC* = proc (texture: GLuint;
      target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei;
      internalFormat: GLint; width: GLsizei; height: GLsizei;
      fixedSampleLocations: GLboolean) {.cdecl.}
  PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC* = proc (texture: GLuint; target: GLenum;
      samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei;
      fixedSampleLocations: GLboolean) {.cdecl.}
  PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC* = proc (texture: GLuint;
      target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei;
      internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei;
      fixedSampleLocations: GLboolean) {.cdecl.}
  PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC* = proc (texture: GLuint; target: GLenum;
      samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei;
      depth: GLsizei; fixedSampleLocations: GLboolean) {.cdecl.}
  PFNGLACTIVEVARYINGNVPROC* = proc (program: GLuint; name: ptr GLchar) {.cdecl.}
  PFNGLBEGINTRANSFORMFEEDBACKNVPROC* = proc (primitiveMode: GLenum) {.cdecl.}
  PFNGLBINDBUFFERBASENVPROC* = proc (target: GLenum; index: GLuint;
                                     buffer: GLuint) {.cdecl.}
  PFNGLBINDBUFFEROFFSETNVPROC* = proc (target: GLenum; index: GLuint;
                                       buffer: GLuint; offset: GLintptr) {.cdecl.}
  PFNGLBINDBUFFERRANGENVPROC* = proc (target: GLenum; index: GLuint;
                                      buffer: GLuint; offset: GLintptr;
                                      size: GLsizeiptr) {.cdecl.}
  PFNGLENDTRANSFORMFEEDBACKNVPROC* = proc () {.cdecl.}
  PFNGLGETACTIVEVARYINGNVPROC* = proc (program: GLuint; index: GLuint;
                                       bufSize: GLsizei; length: ptr GLsizei;
                                       size: ptr GLsizei; kind: ptr GLenum;
                                       name: ptr GLchar) {.cdecl.}
  PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC* = proc (program: GLuint;
      index: GLuint; location: ptr GLint) {.cdecl.}
  PFNGLGETVARYINGLOCATIONNVPROC* = proc (program: GLuint; name: ptr GLchar): GLint {.
      cdecl.}
  PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC* = proc (count: GLuint;
      attribs: ptr GLint; bufferMode: GLenum) {.cdecl.}
  PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC* = proc (program: GLuint; count: GLsizei;
      locations: ptr GLint; bufferMode: GLenum) {.cdecl.}
  PFNGLBINDTRANSFORMFEEDBACKNVPROC* = proc (target: GLenum; id: GLuint) {.cdecl.}
  PFNGLDELETETRANSFORMFEEDBACKSNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.
      cdecl.}
  PFNGLDRAWTRANSFORMFEEDBACKNVPROC* = proc (mode: GLenum; id: GLuint) {.cdecl.}
  PFNGLGENTRANSFORMFEEDBACKSNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLISTRANSFORMFEEDBACKNVPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLPAUSETRANSFORMFEEDBACKNVPROC* = proc () {.cdecl.}
  PFNGLRESUMETRANSFORMFEEDBACKNVPROC* = proc () {.cdecl.}
  GLvdpauSurfaceNV* = GLintptr
  PFNGLVDPAUFININVPROC* = proc () {.cdecl.}
  PFNGLVDPAUGETSURFACEIVNVPROC* = proc (surface: GLvdpauSurfaceNV;
                                        pname: GLenum; bufSize: GLsizei;
                                        length: ptr GLsizei; values: ptr GLint) {.
      cdecl.}
  PFNGLVDPAUINITNVPROC* = proc (vdpDevice: pointer; getProcAddress: pointer) {.
      cdecl.}
  PFNGLVDPAUISSURFACENVPROC* = proc (surface: GLvdpauSurfaceNV) {.cdecl.}
  PFNGLVDPAUMAPSURFACESNVPROC* = proc (numSurfaces: GLsizei;
                                       surfaces: ptr GLvdpauSurfaceNV) {.cdecl.}
  PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC* = proc (vdpSurface: pointer;
      target: GLenum; numTextureNames: GLsizei; textureNames: ptr GLuint): GLvdpauSurfaceNV {.
      cdecl.}
  PFNGLVDPAUREGISTERVIDEOSURFACENVPROC* = proc (vdpSurface: pointer;
      target: GLenum; numTextureNames: GLsizei; textureNames: ptr GLuint): GLvdpauSurfaceNV {.
      cdecl.}
  PFNGLVDPAUSURFACEACCESSNVPROC* = proc (surface: GLvdpauSurfaceNV;
      access: GLenum) {.cdecl.}
  PFNGLVDPAUUNMAPSURFACESNVPROC* = proc (numSurface: GLsizei;
      surfaces: ptr GLvdpauSurfaceNV) {.cdecl.}
  PFNGLVDPAUUNREGISTERSURFACENVPROC* = proc (surface: GLvdpauSurfaceNV) {.cdecl.}
  PFNGLFLUSHVERTEXARRAYRANGENVPROC* = proc () {.cdecl.}
  PFNGLVERTEXARRAYRANGENVPROC* = proc (length: GLsizei; pointer: pointer) {.
      cdecl.}
  PFNGLGETVERTEXATTRIBLI64VNVPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLint64EXT) {.cdecl.}
  PFNGLGETVERTEXATTRIBLUI64VNVPROC* = proc (index: GLuint; pname: GLenum;
      params: ptr GLuint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL1I64NVPROC* = proc (index: GLuint; x: GLint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL1I64VNVPROC* = proc (index: GLuint; v: ptr GLint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL1UI64NVPROC* = proc (index: GLuint; x: GLuint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL1UI64VNVPROC* = proc (index: GLuint; v: ptr GLuint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL2I64NVPROC* = proc (index: GLuint; x: GLint64EXT;
                                        y: GLint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL2I64VNVPROC* = proc (index: GLuint; v: ptr GLint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL2UI64NVPROC* = proc (index: GLuint; x: GLuint64EXT;
      y: GLuint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL2UI64VNVPROC* = proc (index: GLuint; v: ptr GLuint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL3I64NVPROC* = proc (index: GLuint; x: GLint64EXT;
                                        y: GLint64EXT; z: GLint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL3I64VNVPROC* = proc (index: GLuint; v: ptr GLint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL3UI64NVPROC* = proc (index: GLuint; x: GLuint64EXT;
      y: GLuint64EXT; z: GLuint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL3UI64VNVPROC* = proc (index: GLuint; v: ptr GLuint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL4I64NVPROC* = proc (index: GLuint; x: GLint64EXT;
                                        y: GLint64EXT; z: GLint64EXT;
                                        w: GLint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL4I64VNVPROC* = proc (index: GLuint; v: ptr GLint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBL4UI64NVPROC* = proc (index: GLuint; x: GLuint64EXT;
      y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT) {.cdecl.}
  PFNGLVERTEXATTRIBL4UI64VNVPROC* = proc (index: GLuint; v: ptr GLuint64EXT) {.
      cdecl.}
  PFNGLVERTEXATTRIBLFORMATNVPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei) {.cdecl.}
  PFNGLBUFFERADDRESSRANGENVPROC* = proc (pname: GLenum; index: GLuint;
      address: GLuint64EXT; length: GLsizeiptr) {.cdecl.}
  PFNGLCOLORFORMATNVPROC* = proc (size: GLint; kind: GLenum; stride: GLsizei) {.
      cdecl.}
  PFNGLEDGEFLAGFORMATNVPROC* = proc (stride: GLsizei) {.cdecl.}
  PFNGLFOGCOORDFORMATNVPROC* = proc (kind: GLenum; stride: GLsizei) {.cdecl.}
  PFNGLGETINTEGERUI64I_VNVPROC* = proc (value: GLenum; index: GLuint;
                                        result: UncheckedArray[GLuint64EXT]) {.
      cdecl.}
  PFNGLINDEXFORMATNVPROC* = proc (kind: GLenum; stride: GLsizei) {.cdecl.}
  PFNGLNORMALFORMATNVPROC* = proc (kind: GLenum; stride: GLsizei) {.cdecl.}
  PFNGLSECONDARYCOLORFORMATNVPROC* = proc (size: GLint; kind: GLenum;
      stride: GLsizei) {.cdecl.}
  PFNGLTEXCOORDFORMATNVPROC* = proc (size: GLint; kind: GLenum; stride: GLsizei) {.
      cdecl.}
  PFNGLVERTEXATTRIBFORMATNVPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; normalized: GLboolean; stride: GLsizei) {.cdecl.}
  PFNGLVERTEXATTRIBIFORMATNVPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei) {.cdecl.}
  PFNGLVERTEXFORMATNVPROC* = proc (size: GLint; kind: GLenum; stride: GLsizei) {.
      cdecl.}
  PFNGLAREPROGRAMSRESIDENTNVPROC* = proc (n: GLsizei; ids: ptr GLuint;
      residences: ptr GLboolean): GLboolean {.cdecl.}
  PFNGLBINDPROGRAMNVPROC* = proc (target: GLenum; id: GLuint) {.cdecl.}
  PFNGLDELETEPROGRAMSNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLEXECUTEPROGRAMNVPROC* = proc (target: GLenum; id: GLuint;
                                     params: ptr GLfloat) {.cdecl.}
  PFNGLGENPROGRAMSNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.cdecl.}
  PFNGLGETPROGRAMPARAMETERDVNVPROC* = proc (target: GLenum; index: GLuint;
      pname: GLenum; params: ptr GLdouble) {.cdecl.}
  PFNGLGETPROGRAMPARAMETERFVNVPROC* = proc (target: GLenum; index: GLuint;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETPROGRAMSTRINGNVPROC* = proc (id: GLuint; pname: GLenum;
                                       program: ptr GLubyte) {.cdecl.}
  PFNGLGETPROGRAMIVNVPROC* = proc (id: GLuint; pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLGETTRACKMATRIXIVNVPROC* = proc (target: GLenum; address: GLuint;
                                       pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETVERTEXATTRIBPOINTERVNVPROC* = proc (index: GLuint; pname: GLenum;
      pointer: ptr pointer) {.cdecl.}
  PFNGLGETVERTEXATTRIBDVNVPROC* = proc (index: GLuint; pname: GLenum;
                                        params: ptr GLdouble) {.cdecl.}
  PFNGLGETVERTEXATTRIBFVNVPROC* = proc (index: GLuint; pname: GLenum;
                                        params: ptr GLfloat) {.cdecl.}
  PFNGLGETVERTEXATTRIBIVNVPROC* = proc (index: GLuint; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLISPROGRAMNVPROC* = proc (id: GLuint): GLboolean {.cdecl.}
  PFNGLLOADPROGRAMNVPROC* = proc (target: GLenum; id: GLuint; len: GLsizei;
                                  program: ptr GLubyte) {.cdecl.}
  PFNGLPROGRAMPARAMETER4DNVPROC* = proc (target: GLenum; index: GLuint;
      x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLPROGRAMPARAMETER4DVNVPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMPARAMETER4FNVPROC* = proc (target: GLenum; index: GLuint;
      x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLPROGRAMPARAMETER4FVNVPROC* = proc (target: GLenum; index: GLuint;
      params: ptr GLfloat) {.cdecl.}
  PFNGLPROGRAMPARAMETERS4DVNVPROC* = proc (target: GLenum; index: GLuint;
      num: GLsizei; params: ptr GLdouble) {.cdecl.}
  PFNGLPROGRAMPARAMETERS4FVNVPROC* = proc (target: GLenum; index: GLuint;
      num: GLsizei; params: ptr GLfloat) {.cdecl.}
  PFNGLREQUESTRESIDENTPROGRAMSNVPROC* = proc (n: GLsizei; ids: ptr GLuint) {.
      cdecl.}
  PFNGLTRACKMATRIXNVPROC* = proc (target: GLenum; address: GLuint;
                                  matrix: GLenum; transform: GLenum) {.cdecl.}
  PFNGLVERTEXATTRIB1DNVPROC* = proc (index: GLuint; x: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB1DVNVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB1FNVPROC* = proc (index: GLuint; x: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB1FVNVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB1SNVPROC* = proc (index: GLuint; x: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB1SVNVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB2DNVPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble) {.
      cdecl.}
  PFNGLVERTEXATTRIB2DVNVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB2FNVPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIB2FVNVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB2SNVPROC* = proc (index: GLuint; x: GLshort; y: GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIB2SVNVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB3DNVPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                     z: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB3DVNVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB3FNVPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                     z: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB3FVNVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB3SNVPROC* = proc (index: GLuint; x: GLshort; y: GLshort;
                                     z: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB3SVNVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4DNVPROC* = proc (index: GLuint; x: GLdouble; y: GLdouble;
                                     z: GLdouble; w: GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB4DVNVPROC* = proc (index: GLuint; v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIB4FNVPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                     z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB4FVNVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVERTEXATTRIB4SNVPROC* = proc (index: GLuint; x: GLshort; y: GLshort;
                                     z: GLshort; w: GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4SVNVPROC* = proc (index: GLuint; v: ptr GLshort) {.cdecl.}
  PFNGLVERTEXATTRIB4UBNVPROC* = proc (index: GLuint; x: GLubyte; y: GLubyte;
                                      z: GLubyte; w: GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIB4UBVNVPROC* = proc (index: GLuint; v: ptr GLubyte) {.cdecl.}
  PFNGLVERTEXATTRIBPOINTERNVPROC* = proc (index: GLuint; size: GLint;
      kind: GLenum; stride: GLsizei; pointer: pointer) {.cdecl.}
  PFNGLVERTEXATTRIBS1DVNVPROC* = proc (index: GLuint; n: GLsizei;
                                       v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBS1FVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIBS1SVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIBS2DVNVPROC* = proc (index: GLuint; n: GLsizei;
                                       v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBS2FVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIBS2SVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIBS3DVNVPROC* = proc (index: GLuint; n: GLsizei;
                                       v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBS3FVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIBS3SVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIBS4DVNVPROC* = proc (index: GLuint; n: GLsizei;
                                       v: ptr GLdouble) {.cdecl.}
  PFNGLVERTEXATTRIBS4FVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLfloat) {.
      cdecl.}
  PFNGLVERTEXATTRIBS4SVNVPROC* = proc (index: GLuint; n: GLsizei; v: ptr GLshort) {.
      cdecl.}
  PFNGLVERTEXATTRIBS4UBVNVPROC* = proc (index: GLuint; n: GLsizei;
                                        v: ptr GLubyte) {.cdecl.}
  PFNGLBEGINVIDEOCAPTURENVPROC* = proc (videoCaptureSlot: GLuint) {.cdecl.}
  PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; frameRegion: GLenum; offset: GLintptrARB) {.cdecl.}
  PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; frameRegion: GLenum; target: GLenum; texture: GLuint) {.
      cdecl.}
  PFNGLENDVIDEOCAPTURENVPROC* = proc (videoCaptureSlot: GLuint) {.cdecl.}
  PFNGLGETVIDEOCAPTURESTREAMDVNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; pname: GLenum; params: ptr GLdouble) {.cdecl.}
  PFNGLGETVIDEOCAPTURESTREAMFVNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETVIDEOCAPTURESTREAMIVNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLGETVIDEOCAPTUREIVNVPROC* = proc (videoCaptureSlot: GLuint; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLVIDEOCAPTURENVPROC* = proc (videoCaptureSlot: GLuint;
                                   sequenceNum: ptr GLuint;
                                   captureTime: ptr GLuint64EXT): GLenum {.cdecl.}
  PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; pname: GLenum; params: ptr GLdouble) {.cdecl.}
  PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC* = proc (videoCaptureSlot: GLuint;
      stream: GLuint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLDEPTHRANGEARRAYFVNVPROC* = proc (first: GLuint; count: GLsizei;
                                        v: ptr GLfloat) {.cdecl.}
  PFNGLDEPTHRANGEINDEXEDFNVPROC* = proc (index: GLuint; n: GLfloat; f: GLfloat) {.
      cdecl.}
  PFNGLDISABLEINVPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLENABLEINVPROC* = proc (target: GLenum; index: GLuint) {.cdecl.}
  PFNGLGETFLOATI_VNVPROC* = proc (target: GLenum; index: GLuint;
                                  data: ptr GLfloat) {.cdecl.}
  PFNGLISENABLEDINVPROC* = proc (target: GLenum; index: GLuint): GLboolean {.
      cdecl.}
  PFNGLSCISSORARRAYVNVPROC* = proc (first: GLuint; count: GLsizei; v: ptr GLint) {.
      cdecl.}
  PFNGLSCISSORINDEXEDNVPROC* = proc (index: GLuint; left: GLint; bottom: GLint;
                                     width: GLsizei; height: GLsizei) {.cdecl.}
  PFNGLSCISSORINDEXEDVNVPROC* = proc (index: GLuint; v: ptr GLint) {.cdecl.}
  PFNGLVIEWPORTARRAYVNVPROC* = proc (first: GLuint; count: GLsizei;
                                     v: ptr GLfloat) {.cdecl.}
  PFNGLVIEWPORTINDEXEDFNVPROC* = proc (index: GLuint; x: GLfloat; y: GLfloat;
                                       w: GLfloat; h: GLfloat) {.cdecl.}
  PFNGLVIEWPORTINDEXEDFVNVPROC* = proc (index: GLuint; v: ptr GLfloat) {.cdecl.}
  PFNGLVIEWPORTSWIZZLENVPROC* = proc (index: GLuint; swizzlex: GLenum;
                                      swizzley: GLenum; swizzlez: GLenum;
                                      swizzlew: GLenum) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; baseViewIndex: GLint;
      numViews: GLsizei) {.cdecl.}
  PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC* = proc (target: GLenum;
      attachment: GLenum; texture: GLuint; level: GLint; samples: GLsizei;
      baseViewIndex: GLint; numViews: GLsizei) {.cdecl.}
  PFNGLALPHAFUNCQCOMPROC* = proc (`func`: GLenum; `ref`: GLclampf) {.cdecl.}
  PFNGLDISABLEDRIVERCONTROLQCOMPROC* = proc (driverControl: GLuint) {.cdecl.}
  PFNGLENABLEDRIVERCONTROLQCOMPROC* = proc (driverControl: GLuint) {.cdecl.}
  PFNGLGETDRIVERCONTROLSTRINGQCOMPROC* = proc (driverControl: GLuint;
      bufSize: GLsizei; length: ptr GLsizei; driverControlString: ptr GLchar) {.
      cdecl.}
  PFNGLGETDRIVERCONTROLSQCOMPROC* = proc (num: ptr GLint; size: GLsizei;
      driverControls: ptr GLuint) {.cdecl.}
  PFNGLEXTGETBUFFERPOINTERVQCOMPROC* = proc (target: GLenum; params: ptr pointer) {.
      cdecl.}
  PFNGLEXTGETBUFFERSQCOMPROC* = proc (buffers: ptr GLuint; maxBuffers: GLint;
                                      numBuffers: ptr GLint) {.cdecl.}
  PFNGLEXTGETFRAMEBUFFERSQCOMPROC* = proc (framebuffers: ptr GLuint;
      maxFramebuffers: GLint; numFramebuffers: ptr GLint) {.cdecl.}
  PFNGLEXTGETRENDERBUFFERSQCOMPROC* = proc (renderbuffers: ptr GLuint;
      maxRenderbuffers: GLint; numRenderbuffers: ptr GLint) {.cdecl.}
  PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC* = proc (texture: GLuint; face: GLenum;
      level: GLint; pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLEXTGETTEXSUBIMAGEQCOMPROC* = proc (target: GLenum; level: GLint;
      xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei;
      height: GLsizei; depth: GLsizei; format: GLenum; kind: GLenum;
      texels: pointer) {.cdecl.}
  PFNGLEXTGETTEXTURESQCOMPROC* = proc (textures: ptr GLuint; maxTextures: GLint;
                                       numTextures: ptr GLint) {.cdecl.}
  PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC* = proc (target: GLenum;
      pname: GLenum; param: GLint) {.cdecl.}
  PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC* = proc (program: GLuint;
      shadertype: GLenum; source: ptr GLchar; length: ptr GLint) {.cdecl.}
  PFNGLEXTGETPROGRAMSQCOMPROC* = proc (programs: ptr GLuint; maxPrograms: GLint;
                                       numPrograms: ptr GLint) {.cdecl.}
  PFNGLEXTGETSHADERSQCOMPROC* = proc (shaders: ptr GLuint; maxShaders: GLint;
                                      numShaders: ptr GLint) {.cdecl.}
  PFNGLEXTISPROGRAMBINARYQCOMPROC* = proc (program: GLuint): GLboolean {.cdecl.}
  PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC* = proc (fbo: GLuint;
      numLayers: GLuint; focalPointsPerLayer: GLuint; requestedFeatures: GLuint;
      providedFeatures: ptr GLuint) {.cdecl.}
  PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC* = proc (fbo: GLuint;
      layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat;
      gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat) {.cdecl.}
  PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC* = proc () {.cdecl.}
  PFNGLENDTILINGQCOMPROC* = proc (preserveMask: GLbitfield) {.cdecl.}
  PFNGLSTARTTILINGQCOMPROC* = proc (x: GLuint; y: GLuint; width: GLuint;
                                    height: GLuint; preserveMask: GLbitfield) {.
      cdecl.}
  GLclampx* = cint
  PFNGLALPHAFUNCXPROC* = proc (`func`: GLenum; `ref`: GLclampx) {.cdecl.}
  PFNGLCLEARCOLORXPROC* = proc (red: GLclampx; green: GLclampx; blue: GLclampx;
                                alpha: GLclampx) {.cdecl.}
  PFNGLCLEARDEPTHXPROC* = proc (depth: GLclampx) {.cdecl.}
  PFNGLCOLOR4XPROC* = proc (red: GLfixed; green: GLfixed; blue: GLfixed;
                            alpha: GLfixed) {.cdecl.}
  PFNGLDEPTHRANGEXPROC* = proc (zNear: GLclampx; zFar: GLclampx) {.cdecl.}
  PFNGLFOGXPROC* = proc (pname: GLenum; param: GLfixed) {.cdecl.}
  PFNGLFOGXVPROC* = proc (pname: GLenum; params: ptr GLfixed) {.cdecl.}
  PFNGLFRUSTUMFPROC* = proc (left: GLfloat; right: GLfloat; bottom: GLfloat;
                             top: GLfloat; zNear: GLfloat; zFar: GLfloat) {.
      cdecl.}
  PFNGLFRUSTUMXPROC* = proc (left: GLfixed; right: GLfixed; bottom: GLfixed;
                             top: GLfixed; zNear: GLfixed; zFar: GLfixed) {.
      cdecl.}
  PFNGLLIGHTMODELXPROC* = proc (pname: GLenum; param: GLfixed) {.cdecl.}
  PFNGLLIGHTMODELXVPROC* = proc (pname: GLenum; params: ptr GLfixed) {.cdecl.}
  PFNGLLIGHTXPROC* = proc (light: GLenum; pname: GLenum; param: GLfixed) {.cdecl.}
  PFNGLLIGHTXVPROC* = proc (light: GLenum; pname: GLenum; params: ptr GLfixed) {.
      cdecl.}
  PFNGLLINEWIDTHXPROC* = proc (width: GLfixed) {.cdecl.}
  PFNGLLOADMATRIXXPROC* = proc (m: ptr GLfixed) {.cdecl.}
  PFNGLMATERIALXPROC* = proc (face: GLenum; pname: GLenum; param: GLfixed) {.
      cdecl.}
  PFNGLMATERIALXVPROC* = proc (face: GLenum; pname: GLenum; params: ptr GLfixed) {.
      cdecl.}
  PFNGLMULTMATRIXXPROC* = proc (m: ptr GLfixed) {.cdecl.}
  PFNGLMULTITEXCOORD4XPROC* = proc (target: GLenum; s: GLfixed; t: GLfixed;
                                    r: GLfixed; q: GLfixed) {.cdecl.}
  PFNGLNORMAL3XPROC* = proc (nx: GLfixed; ny: GLfixed; nz: GLfixed) {.cdecl.}
  PFNGLORTHOFPROC* = proc (left: GLfloat; right: GLfloat; bottom: GLfloat;
                           top: GLfloat; zNear: GLfloat; zFar: GLfloat) {.cdecl.}
  PFNGLORTHOXPROC* = proc (left: GLfixed; right: GLfixed; bottom: GLfixed;
                           top: GLfixed; zNear: GLfixed; zFar: GLfixed) {.cdecl.}
  PFNGLPOINTSIZEXPROC* = proc (size: GLfixed) {.cdecl.}
  PFNGLPOLYGONOFFSETXPROC* = proc (factor: GLfixed; units: GLfixed) {.cdecl.}
  PFNGLROTATEXPROC* = proc (angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed) {.
      cdecl.}
  PFNGLSAMPLECOVERAGEXPROC* = proc (value: GLclampx; invert: GLboolean) {.cdecl.}
  PFNGLSCALEXPROC* = proc (x: GLfixed; y: GLfixed; z: GLfixed) {.cdecl.}
  PFNGLTEXENVXPROC* = proc (target: GLenum; pname: GLenum; param: GLfixed) {.
      cdecl.}
  PFNGLTEXENVXVPROC* = proc (target: GLenum; pname: GLenum; params: ptr GLfixed) {.
      cdecl.}
  PFNGLTEXPARAMETERXPROC* = proc (target: GLenum; pname: GLenum; param: GLfixed) {.
      cdecl.}
  PFNGLTRANSLATEXPROC* = proc (x: GLfixed; y: GLfixed; z: GLfixed) {.cdecl.}
  PFNGLCLIPPLANEFPROC* = proc (plane: GLenum; equation: ptr GLfloat) {.cdecl.}
  PFNGLCLIPPLANEXPROC* = proc (plane: GLenum; equation: ptr GLfixed) {.cdecl.}
  PFNGLGETCLIPPLANEFPROC* = proc (pname: GLenum; eqn: array[4, GLfloat]) {.cdecl.}
  PFNGLGETCLIPPLANEXPROC* = proc (pname: GLenum; eqn: array[4, GLfixed]) {.cdecl.}
  PFNGLGETFIXEDVPROC* = proc (pname: GLenum; params: ptr GLfixed) {.cdecl.}
  PFNGLGETLIGHTXVPROC* = proc (light: GLenum; pname: GLenum; params: ptr GLfixed) {.
      cdecl.}
  PFNGLGETMATERIALXVPROC* = proc (face: GLenum; pname: GLenum;
                                  params: ptr GLfixed) {.cdecl.}
  PFNGLGETTEXENVXVPROC* = proc (env: GLenum; pname: GLenum; params: ptr GLfixed) {.
      cdecl.}
  PFNGLGETTEXPARAMETERXVPROC* = proc (target: GLenum; pname: GLenum;
                                      params: ptr GLfixed) {.cdecl.}
  PFNGLPOINTPARAMETERXPROC* = proc (pname: GLenum; param: GLfixed) {.cdecl.}
  PFNGLPOINTPARAMETERXVPROC* = proc (pname: GLenum; params: ptr GLfixed) {.cdecl.}
  PFNGLPOINTSIZEPOINTEROESPROC* = proc (kind: GLenum; stride: GLsizei;
                                        pointer: pointer) {.cdecl.}
  PFNGLTEXPARAMETERXVPROC* = proc (target: GLenum; pname: GLenum;
                                   params: ptr GLfixed) {.cdecl.}
  PFNGLERRORSTRINGREGALPROC* = proc (error: GLenum): ptr GLchar {.cdecl.}
  PFNGLGETEXTENSIONREGALPROC* = proc (ext: ptr GLchar): GLboolean {.cdecl.}
  PFNGLISSUPPORTEDREGALPROC* = proc (ext: ptr GLchar): GLboolean {.cdecl.}
  GLLOGPROCREGAL* = proc (stream: GLenum; length: GLsizei; message: ptr GLchar;
                          context: pointer) {.cdecl.}
  PFNGLLOGMESSAGECALLBACKREGALPROC* = proc (callback: GLLOGPROCREGAL) {.cdecl.}
  PFNGLGETPROCADDRESSREGALPROC* = proc (name: ptr GLchar): pointer {.cdecl.}
  PFNGLDETAILTEXFUNCSGISPROC* = proc (target: GLenum; n: GLsizei;
                                      points: ptr GLfloat) {.cdecl.}
  PFNGLGETDETAILTEXFUNCSGISPROC* = proc (target: GLenum; points: ptr GLfloat) {.
      cdecl.}
  PFNGLFOGFUNCSGISPROC* = proc (n: GLsizei; points: ptr GLfloat) {.cdecl.}
  PFNGLGETFOGFUNCSGISPROC* = proc (points: ptr GLfloat) {.cdecl.}
  PFNGLSAMPLEMASKSGISPROC* = proc (value: GLclampf; invert: GLboolean) {.cdecl.}
  PFNGLSAMPLEPATTERNSGISPROC* = proc (pattern: GLenum) {.cdecl.}
  PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC* = proc (factor: GLint) {.cdecl.}
  PFNGLSELECTTEXTURECOORDSETSGISPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLSELECTTEXTURESGISPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLSELECTTEXTURETRANSFORMSGISPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLMULTISAMPLESUBRECTPOSSGISPROC* = proc (x: GLint; y: GLint) {.cdecl.}
  PFNGLGETSHARPENTEXFUNCSGISPROC* = proc (target: GLenum; points: ptr GLfloat) {.
      cdecl.}
  PFNGLSHARPENTEXFUNCSGISPROC* = proc (target: GLenum; n: GLsizei;
                                       points: ptr GLfloat) {.cdecl.}
  PFNGLTEXIMAGE4DSGISPROC* = proc (target: GLenum; level: GLint;
                                   internalformat: GLenum; width: GLsizei;
                                   height: GLsizei; depth: GLsizei;
                                   extent: GLsizei; border: GLint;
                                   format: GLenum; kind: GLenum; pixels: pointer) {.
      cdecl.}
  PFNGLTEXSUBIMAGE4DSGISPROC* = proc (target: GLenum; level: GLint;
                                      xoffset: GLint; yoffset: GLint;
                                      zoffset: GLint; woffset: GLint;
                                      width: GLsizei; height: GLsizei;
                                      depth: GLsizei; extent: GLsizei;
                                      format: GLenum; kind: GLenum;
                                      pixels: pointer) {.cdecl.}
  PFNGLGETTEXFILTERFUNCSGISPROC* = proc (target: GLenum; filter: GLenum;
      weights: ptr GLfloat) {.cdecl.}
  PFNGLTEXFILTERFUNCSGISPROC* = proc (target: GLenum; filter: GLenum;
                                      n: GLsizei; weights: ptr GLfloat) {.cdecl.}
  PFNGLASYNCMARKERSGIXPROC* = proc (marker: GLuint) {.cdecl.}
  PFNGLDELETEASYNCMARKERSSGIXPROC* = proc (marker: GLuint; range: GLsizei) {.
      cdecl.}
  PFNGLFINISHASYNCSGIXPROC* = proc (markerp: ptr GLuint): GLint {.cdecl.}
  PFNGLGENASYNCMARKERSSGIXPROC* = proc (range: GLsizei): GLuint {.cdecl.}
  PFNGLISASYNCMARKERSGIXPROC* = proc (marker: GLuint): GLboolean {.cdecl.}
  PFNGLPOLLASYNCSGIXPROC* = proc (markerp: ptr GLuint): GLint {.cdecl.}
  PFNGLADDRESSSPACEPROC* = proc (space: GLenum; mask: GLbitfield) {.cdecl.}
  PFNGLDATAPIPEPROC* = proc (space: GLenum): GLint {.cdecl.}
  PFNGLFLUSHRASTERSGIXPROC* = proc () {.cdecl.}
  PFNGLFOGLAYERSSGIXPROC* = proc (n: GLsizei; points: ptr GLfloat) {.cdecl.}
  PFNGLGETFOGLAYERSSGIXPROC* = proc (points: ptr GLfloat) {.cdecl.}
  PFNGLTEXTUREFOGSGIXPROC* = proc (pname: GLenum) {.cdecl.}
  PFNGLFRAGMENTCOLORMATERIALSGIXPROC* = proc (face: GLenum; mode: GLenum) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTMODELFSGIXPROC* = proc (pname: GLenum; param: GLfloat) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTMODELFVSGIXPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTMODELISGIXPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLFRAGMENTLIGHTMODELIVSGIXPROC* = proc (pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLFRAGMENTLIGHTFSGIXPROC* = proc (light: GLenum; pname: GLenum;
                                       param: GLfloat) {.cdecl.}
  PFNGLFRAGMENTLIGHTFVSGIXPROC* = proc (light: GLenum; pname: GLenum;
                                        params: ptr GLfloat) {.cdecl.}
  PFNGLFRAGMENTLIGHTISGIXPROC* = proc (light: GLenum; pname: GLenum;
                                       param: GLint) {.cdecl.}
  PFNGLFRAGMENTLIGHTIVSGIXPROC* = proc (light: GLenum; pname: GLenum;
                                        params: ptr GLint) {.cdecl.}
  PFNGLFRAGMENTMATERIALFSGIXPROC* = proc (face: GLenum; pname: GLenum;
      param: GLfloat) {.cdecl.}
  PFNGLFRAGMENTMATERIALFVSGIXPROC* = proc (face: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLFRAGMENTMATERIALISGIXPROC* = proc (face: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLFRAGMENTMATERIALIVSGIXPROC* = proc (face: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETFRAGMENTLIGHTFVSGIXPROC* = proc (light: GLenum; value: GLenum;
      data: ptr GLfloat) {.cdecl.}
  PFNGLGETFRAGMENTLIGHTIVSGIXPROC* = proc (light: GLenum; value: GLenum;
      data: ptr GLint) {.cdecl.}
  PFNGLGETFRAGMENTMATERIALFVSGIXPROC* = proc (face: GLenum; pname: GLenum;
      data: ptr GLfloat) {.cdecl.}
  PFNGLGETFRAGMENTMATERIALIVSGIXPROC* = proc (face: GLenum; pname: GLenum;
      data: ptr GLint) {.cdecl.}
  PFNGLFRAMEZOOMSGIXPROC* = proc (factor: GLint) {.cdecl.}
  PFNGLIGLOOINTERFACESGIXPROC* = proc (pname: GLenum; param: pointer) {.cdecl.}
  PFNGLALLOCMPEGPREDICTORSSGIXPROC* = proc (width: GLsizei; height: GLsizei;
      n: GLsizei; predictors: ptr GLuint) {.cdecl.}
  PFNGLDELETEMPEGPREDICTORSSGIXPROC* = proc (n: GLsizei; predictors: ptr GLuint) {.
      cdecl.}
  PFNGLGENMPEGPREDICTORSSGIXPROC* = proc (n: GLsizei; predictors: ptr GLuint) {.
      cdecl.}
  PFNGLGETMPEGPARAMETERFVSGIXPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETMPEGPARAMETERIVSGIXPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETMPEGPREDICTORSGIXPROC* = proc (target: GLenum; format: GLenum;
      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLGETMPEGQUANTTABLEUBVPROC* = proc (target: GLenum; values: ptr GLubyte) {.
      cdecl.}
  PFNGLISMPEGPREDICTORSGIXPROC* = proc (predictor: GLuint): GLboolean {.cdecl.}
  PFNGLMPEGPREDICTORSGIXPROC* = proc (target: GLenum; format: GLenum;
                                      kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLMPEGQUANTTABLEUBVPROC* = proc (target: GLenum; values: ptr GLubyte) {.
      cdecl.}
  PFNGLSWAPMPEGPREDICTORSSGIXPROC* = proc (target0: GLenum; target1: GLenum) {.
      cdecl.}
  PFNGLGETNONLINLIGHTFVSGIXPROC* = proc (light: GLenum; pname: GLenum;
      terms: ptr GLint; data: ptr GLfloat) {.cdecl.}
  PFNGLGETNONLINMATERIALFVSGIXPROC* = proc (face: GLenum; pname: GLenum;
      terms: ptr GLint; data: ptr GLfloat) {.cdecl.}
  PFNGLNONLINLIGHTFVSGIXPROC* = proc (light: GLenum; pname: GLenum;
                                      terms: GLint; params: ptr GLfloat) {.cdecl.}
  PFNGLNONLINMATERIALFVSGIXPROC* = proc (face: GLenum; pname: GLenum;
      terms: GLint; params: ptr GLfloat) {.cdecl.}
  PFNGLPIXELTEXGENSGIXPROC* = proc (mode: GLenum) {.cdecl.}
  PFNGLDEFORMSGIXPROC* = proc (mask: GLbitfield) {.cdecl.}
  PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC* = proc (mask: GLbitfield) {.cdecl.}
  PFNGLMESHBREADTHSGIXPROC* = proc (breadth: GLint) {.cdecl.}
  PFNGLMESHSTRIDESGIXPROC* = proc (stride: GLint) {.cdecl.}
  PFNGLREFERENCEPLANESGIXPROC* = proc (equation: ptr GLdouble) {.cdecl.}
  PFNGLSPRITEPARAMETERFSGIXPROC* = proc (pname: GLenum; param: GLfloat) {.cdecl.}
  PFNGLSPRITEPARAMETERFVSGIXPROC* = proc (pname: GLenum; params: ptr GLfloat) {.
      cdecl.}
  PFNGLSPRITEPARAMETERISGIXPROC* = proc (pname: GLenum; param: GLint) {.cdecl.}
  PFNGLSPRITEPARAMETERIVSGIXPROC* = proc (pname: GLenum; params: ptr GLint) {.
      cdecl.}
  PFNGLTAGSAMPLEBUFFERSGIXPROC* = proc () {.cdecl.}
  PFNGLGETVECTOROPERATIONSGIXPROC* = proc (operation: GLenum) {.cdecl.}
  PFNGLVECTOROPERATIONSGIXPROC* = proc (operation: GLenum) {.cdecl.}
  PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC* = proc (n: GLsizei; arrays: ptr GLuint;
      residences: ptr GLboolean): GLboolean {.cdecl.}
  PFNGLBINDVERTEXARRAYSGIXPROC* = proc (array: GLuint) {.cdecl.}
  PFNGLDELETEVERTEXARRAYSSGIXPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.
      cdecl.}
  PFNGLGENVERTEXARRAYSSGIXPROC* = proc (n: GLsizei; arrays: ptr GLuint) {.cdecl.}
  PFNGLISVERTEXARRAYSGIXPROC* = proc (array: GLuint): GLboolean {.cdecl.}
  PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC* = proc (n: GLsizei; arrays: ptr GLuint;
      priorities: ptr GLclampf) {.cdecl.}
  PFNGLCOLORTABLEPARAMETERFVSGIPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLCOLORTABLEPARAMETERIVSGIPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLCOLORTABLESGIPROC* = proc (target: GLenum; internalformat: GLenum;
                                  width: GLsizei; format: GLenum; kind: GLenum;
                                  table: pointer) {.cdecl.}
  PFNGLCOPYCOLORTABLESGIPROC* = proc (target: GLenum; internalformat: GLenum;
                                      x: GLint; y: GLint; width: GLsizei) {.
      cdecl.}
  PFNGLGETCOLORTABLEPARAMETERFVSGIPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLGETCOLORTABLEPARAMETERIVSGIPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLGETCOLORTABLESGIPROC* = proc (target: GLenum; format: GLenum;
                                     kind: GLenum; table: pointer) {.cdecl.}
  PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC* = proc (target: GLenum;
      pname: GLenum; params: ptr GLfloat) {.cdecl.}
  PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC* = proc (target: GLenum;
      pname: GLenum; params: ptr GLint) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERFSGIPROC* = proc (target: GLenum; pname: GLenum;
      param: GLfloat) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLfloat) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERISGIPROC* = proc (target: GLenum; pname: GLenum;
      param: GLint) {.cdecl.}
  PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC* = proc (target: GLenum; pname: GLenum;
      params: ptr GLint) {.cdecl.}
  PFNGLPIXELTRANSFORMSGIPROC* = proc (target: GLenum) {.cdecl.}
  PFNGLFINISHTEXTURESUNXPROC* = proc () {.cdecl.}
  PFNGLGLOBALALPHAFACTORBSUNPROC* = proc (factor: GLbyte) {.cdecl.}
  PFNGLGLOBALALPHAFACTORDSUNPROC* = proc (factor: GLdouble) {.cdecl.}
  PFNGLGLOBALALPHAFACTORFSUNPROC* = proc (factor: GLfloat) {.cdecl.}
  PFNGLGLOBALALPHAFACTORISUNPROC* = proc (factor: GLint) {.cdecl.}
  PFNGLGLOBALALPHAFACTORSSUNPROC* = proc (factor: GLshort) {.cdecl.}
  PFNGLGLOBALALPHAFACTORUBSUNPROC* = proc (factor: GLubyte) {.cdecl.}
  PFNGLGLOBALALPHAFACTORUISUNPROC* = proc (factor: GLuint) {.cdecl.}
  PFNGLGLOBALALPHAFACTORUSSUNPROC* = proc (factor: GLushort) {.cdecl.}
  PFNGLREADVIDEOPIXELSSUNPROC* = proc (x: GLint; y: GLint; width: GLsizei;
                                       height: GLsizei; format: GLenum;
                                       kind: GLenum; pixels: pointer) {.cdecl.}
  PFNGLREPLACEMENTCODEPOINTERSUNPROC* = proc (kind: GLenum; stride: GLsizei;
      pointer: pointer) {.cdecl.}
  PFNGLREPLACEMENTCODEUBSUNPROC* = proc (code: GLubyte) {.cdecl.}
  PFNGLREPLACEMENTCODEUBVSUNPROC* = proc (code: ptr GLubyte) {.cdecl.}
  PFNGLREPLACEMENTCODEUISUNPROC* = proc (code: GLuint) {.cdecl.}
  PFNGLREPLACEMENTCODEUIVSUNPROC* = proc (code: ptr GLuint) {.cdecl.}
  PFNGLREPLACEMENTCODEUSSUNPROC* = proc (code: GLushort) {.cdecl.}
  PFNGLREPLACEMENTCODEUSVSUNPROC* = proc (code: ptr GLushort) {.cdecl.}
  PFNGLCOLOR3FVERTEX3FSUNPROC* = proc (r: GLfloat; g: GLfloat; b: GLfloat;
                                       x: GLfloat; y: GLfloat; z: GLfloat) {.
      cdecl.}
  PFNGLCOLOR3FVERTEX3FVSUNPROC* = proc (c: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC* = proc (r: GLfloat; g: GLfloat;
      b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat;
      y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC* = proc (c: ptr GLfloat; n: ptr GLfloat;
      v: ptr GLfloat) {.cdecl.}
  PFNGLCOLOR4UBVERTEX2FSUNPROC* = proc (r: GLubyte; g: GLubyte; b: GLubyte;
                                        a: GLubyte; x: GLfloat; y: GLfloat) {.
      cdecl.}
  PFNGLCOLOR4UBVERTEX2FVSUNPROC* = proc (c: ptr GLubyte; v: ptr GLfloat) {.cdecl.}
  PFNGLCOLOR4UBVERTEX3FSUNPROC* = proc (r: GLubyte; g: GLubyte; b: GLubyte;
                                        a: GLubyte; x: GLfloat; y: GLfloat;
                                        z: GLfloat) {.cdecl.}
  PFNGLCOLOR4UBVERTEX3FVSUNPROC* = proc (c: ptr GLubyte; v: ptr GLfloat) {.cdecl.}
  PFNGLNORMAL3FVERTEX3FSUNPROC* = proc (nx: GLfloat; ny: GLfloat; nz: GLfloat;
                                        x: GLfloat; y: GLfloat; z: GLfloat) {.
      cdecl.}
  PFNGLNORMAL3FVERTEX3FVSUNPROC* = proc (n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC* = proc (rc: GLuint; r: GLfloat;
      g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC* = proc (rc: ptr GLuint;
      c: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC* = proc (rc: GLuint;
      r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat;
      nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC* = proc (rc: ptr GLuint;
      c: ptr GLfloat; n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC* = proc (rc: GLuint; r: GLubyte;
      g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat) {.
      cdecl.}
  PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC* = proc (rc: ptr GLuint;
      c: ptr GLubyte; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC* = proc (rc: GLuint;
      nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.
      cdecl.}
  PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC* = proc (rc: ptr GLuint;
      n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC* = proc (
      rc: GLuint; s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat;
      a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat;
      z: GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC* = proc (
      rc: ptr GLuint; tc: ptr GLfloat; c: ptr GLfloat; n: ptr GLfloat;
      v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC* = proc (rc: GLuint;
      s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat;
      y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC* = proc (
      rc: ptr GLuint; tc: ptr GLfloat; n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC* = proc (rc: GLuint;
      s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC* = proc (rc: ptr GLuint;
      tc: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC* = proc (rc: GLuint; x: GLfloat;
      y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC* = proc (rc: ptr GLuint; v: ptr GLfloat) {.
      cdecl.}
  PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC* = proc (s: GLfloat; t: GLfloat;
      r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.
      cdecl.}
  PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC* = proc (tc: ptr GLfloat;
      c: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC* = proc (s: GLfloat; t: GLfloat;
      r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat;
      nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC* = proc (tc: ptr GLfloat;
      c: ptr GLfloat; n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC* = proc (s: GLfloat; t: GLfloat;
      r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat;
      z: GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC* = proc (tc: ptr GLfloat;
      c: ptr GLubyte; v: ptr GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC* = proc (s: GLfloat; t: GLfloat;
      nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.
      cdecl.}
  PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC* = proc (tc: ptr GLfloat;
      n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FVERTEX3FSUNPROC* = proc (s: GLfloat; t: GLfloat; x: GLfloat;
      y: GLfloat; z: GLfloat) {.cdecl.}
  PFNGLTEXCOORD2FVERTEX3FVSUNPROC* = proc (tc: ptr GLfloat; v: ptr GLfloat) {.
      cdecl.}
  PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC* = proc (s: GLfloat; t: GLfloat;
      p: GLfloat; q: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat;
      nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat;
      w: GLfloat) {.cdecl.}
  PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC* = proc (tc: ptr GLfloat;
      c: ptr GLfloat; n: ptr GLfloat; v: ptr GLfloat) {.cdecl.}
  PFNGLTEXCOORD4FVERTEX4FSUNPROC* = proc (s: GLfloat; t: GLfloat; p: GLfloat;
      q: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.cdecl.}
  PFNGLTEXCOORD4FVERTEX4FVSUNPROC* = proc (tc: ptr GLfloat; v: ptr GLfloat) {.
      cdecl.}
  PFNGLADDSWAPHINTRECTWINPROC* = proc (x: GLint; y: GLint; width: GLsizei;
                                       height: GLsizei) {.cdecl.}
var
  CopyTexSubImage3D* {.importc: "__glewCopyTexSubImage3D".}: PFNGLCOPYTEXSUBIMAGE3DPROC
  DrawRangeElements* {.importc: "__glewDrawRangeElements".}: PFNGLDRAWRANGEELEMENTSPROC
  TexImage3D* {.importc: "__glewTexImage3D".}: PFNGLTEXIMAGE3DPROC
  TexSubImage3D* {.importc: "__glewTexSubImage3D".}: PFNGLTEXSUBIMAGE3DPROC
  ActiveTexture* {.importc: "__glewActiveTexture".}: PFNGLACTIVETEXTUREPROC
  ClientActiveTexture* {.importc: "__glewClientActiveTexture".}: PFNGLCLIENTACTIVETEXTUREPROC
  CompressedTexImage1D* {.importc: "__glewCompressedTexImage1D".}: PFNGLCOMPRESSEDTEXIMAGE1DPROC
  CompressedTexImage2D* {.importc: "__glewCompressedTexImage2D".}: PFNGLCOMPRESSEDTEXIMAGE2DPROC
  CompressedTexImage3D* {.importc: "__glewCompressedTexImage3D".}: PFNGLCOMPRESSEDTEXIMAGE3DPROC
  CompressedTexSubImage1D* {.importc: "__glewCompressedTexSubImage1D".}: PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
  CompressedTexSubImage2D* {.importc: "__glewCompressedTexSubImage2D".}: PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
  CompressedTexSubImage3D* {.importc: "__glewCompressedTexSubImage3D".}: PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
  GetCompressedTexImage* {.importc: "__glewGetCompressedTexImage".}: PFNGLGETCOMPRESSEDTEXIMAGEPROC
  LoadTransposeMatrixd* {.importc: "__glewLoadTransposeMatrixd".}: PFNGLLOADTRANSPOSEMATRIXDPROC
  LoadTransposeMatrixf* {.importc: "__glewLoadTransposeMatrixf".}: PFNGLLOADTRANSPOSEMATRIXFPROC
  MultTransposeMatrixd* {.importc: "__glewMultTransposeMatrixd".}: PFNGLMULTTRANSPOSEMATRIXDPROC
  MultTransposeMatrixf* {.importc: "__glewMultTransposeMatrixf".}: PFNGLMULTTRANSPOSEMATRIXFPROC
  MultiTexCoord1d* {.importc: "__glewMultiTexCoord1d".}: PFNGLMULTITEXCOORD1DPROC
  MultiTexCoord1dv* {.importc: "__glewMultiTexCoord1dv".}: PFNGLMULTITEXCOORD1DVPROC
  MultiTexCoord1f* {.importc: "__glewMultiTexCoord1f".}: PFNGLMULTITEXCOORD1FPROC
  MultiTexCoord1fv* {.importc: "__glewMultiTexCoord1fv".}: PFNGLMULTITEXCOORD1FVPROC
  MultiTexCoord1i* {.importc: "__glewMultiTexCoord1i".}: PFNGLMULTITEXCOORD1IPROC
  MultiTexCoord1iv* {.importc: "__glewMultiTexCoord1iv".}: PFNGLMULTITEXCOORD1IVPROC
  MultiTexCoord1s* {.importc: "__glewMultiTexCoord1s".}: PFNGLMULTITEXCOORD1SPROC
  MultiTexCoord1sv* {.importc: "__glewMultiTexCoord1sv".}: PFNGLMULTITEXCOORD1SVPROC
  MultiTexCoord2d* {.importc: "__glewMultiTexCoord2d".}: PFNGLMULTITEXCOORD2DPROC
  MultiTexCoord2dv* {.importc: "__glewMultiTexCoord2dv".}: PFNGLMULTITEXCOORD2DVPROC
  MultiTexCoord2f* {.importc: "__glewMultiTexCoord2f".}: PFNGLMULTITEXCOORD2FPROC
  MultiTexCoord2fv* {.importc: "__glewMultiTexCoord2fv".}: PFNGLMULTITEXCOORD2FVPROC
  MultiTexCoord2i* {.importc: "__glewMultiTexCoord2i".}: PFNGLMULTITEXCOORD2IPROC
  MultiTexCoord2iv* {.importc: "__glewMultiTexCoord2iv".}: PFNGLMULTITEXCOORD2IVPROC
  MultiTexCoord2s* {.importc: "__glewMultiTexCoord2s".}: PFNGLMULTITEXCOORD2SPROC
  MultiTexCoord2sv* {.importc: "__glewMultiTexCoord2sv".}: PFNGLMULTITEXCOORD2SVPROC
  MultiTexCoord3d* {.importc: "__glewMultiTexCoord3d".}: PFNGLMULTITEXCOORD3DPROC
  MultiTexCoord3dv* {.importc: "__glewMultiTexCoord3dv".}: PFNGLMULTITEXCOORD3DVPROC
  MultiTexCoord3f* {.importc: "__glewMultiTexCoord3f".}: PFNGLMULTITEXCOORD3FPROC
  MultiTexCoord3fv* {.importc: "__glewMultiTexCoord3fv".}: PFNGLMULTITEXCOORD3FVPROC
  MultiTexCoord3i* {.importc: "__glewMultiTexCoord3i".}: PFNGLMULTITEXCOORD3IPROC
  MultiTexCoord3iv* {.importc: "__glewMultiTexCoord3iv".}: PFNGLMULTITEXCOORD3IVPROC
  MultiTexCoord3s* {.importc: "__glewMultiTexCoord3s".}: PFNGLMULTITEXCOORD3SPROC
  MultiTexCoord3sv* {.importc: "__glewMultiTexCoord3sv".}: PFNGLMULTITEXCOORD3SVPROC
  MultiTexCoord4d* {.importc: "__glewMultiTexCoord4d".}: PFNGLMULTITEXCOORD4DPROC
  MultiTexCoord4dv* {.importc: "__glewMultiTexCoord4dv".}: PFNGLMULTITEXCOORD4DVPROC
  MultiTexCoord4f* {.importc: "__glewMultiTexCoord4f".}: PFNGLMULTITEXCOORD4FPROC
  MultiTexCoord4fv* {.importc: "__glewMultiTexCoord4fv".}: PFNGLMULTITEXCOORD4FVPROC
  MultiTexCoord4i* {.importc: "__glewMultiTexCoord4i".}: PFNGLMULTITEXCOORD4IPROC
  MultiTexCoord4iv* {.importc: "__glewMultiTexCoord4iv".}: PFNGLMULTITEXCOORD4IVPROC
  MultiTexCoord4s* {.importc: "__glewMultiTexCoord4s".}: PFNGLMULTITEXCOORD4SPROC
  MultiTexCoord4sv* {.importc: "__glewMultiTexCoord4sv".}: PFNGLMULTITEXCOORD4SVPROC
  SampleCoverage* {.importc: "__glewSampleCoverage".}: PFNGLSAMPLECOVERAGEPROC
  BlendColor* {.importc: "__glewBlendColor".}: PFNGLBLENDCOLORPROC
  BlendEquation* {.importc: "__glewBlendEquation".}: PFNGLBLENDEQUATIONPROC
  BlendFuncSeparate* {.importc: "__glewBlendFuncSeparate".}: PFNGLBLENDFUNCSEPARATEPROC
  FogCoordPointer* {.importc: "__glewFogCoordPointer".}: PFNGLFOGCOORDPOINTERPROC
  FogCoordd* {.importc: "__glewFogCoordd".}: PFNGLFOGCOORDDPROC
  FogCoorddv* {.importc: "__glewFogCoorddv".}: PFNGLFOGCOORDDVPROC
  FogCoordf* {.importc: "__glewFogCoordf".}: PFNGLFOGCOORDFPROC
  FogCoordfv* {.importc: "__glewFogCoordfv".}: PFNGLFOGCOORDFVPROC
  MultiDrawArrays* {.importc: "__glewMultiDrawArrays".}: PFNGLMULTIDRAWARRAYSPROC
  MultiDrawElements* {.importc: "__glewMultiDrawElements".}: PFNGLMULTIDRAWELEMENTSPROC
  PointParameterf* {.importc: "__glewPointParameterf".}: PFNGLPOINTPARAMETERFPROC
  PointParameterfv* {.importc: "__glewPointParameterfv".}: PFNGLPOINTPARAMETERFVPROC
  PointParameteri* {.importc: "__glewPointParameteri".}: PFNGLPOINTPARAMETERIPROC
  PointParameteriv* {.importc: "__glewPointParameteriv".}: PFNGLPOINTPARAMETERIVPROC
  SecondaryColor3b* {.importc: "__glewSecondaryColor3b".}: PFNGLSECONDARYCOLOR3BPROC
  SecondaryColor3bv* {.importc: "__glewSecondaryColor3bv".}: PFNGLSECONDARYCOLOR3BVPROC
  SecondaryColor3d* {.importc: "__glewSecondaryColor3d".}: PFNGLSECONDARYCOLOR3DPROC
  SecondaryColor3dv* {.importc: "__glewSecondaryColor3dv".}: PFNGLSECONDARYCOLOR3DVPROC
  SecondaryColor3f* {.importc: "__glewSecondaryColor3f".}: PFNGLSECONDARYCOLOR3FPROC
  SecondaryColor3fv* {.importc: "__glewSecondaryColor3fv".}: PFNGLSECONDARYCOLOR3FVPROC
  SecondaryColor3i* {.importc: "__glewSecondaryColor3i".}: PFNGLSECONDARYCOLOR3IPROC
  SecondaryColor3iv* {.importc: "__glewSecondaryColor3iv".}: PFNGLSECONDARYCOLOR3IVPROC
  SecondaryColor3s* {.importc: "__glewSecondaryColor3s".}: PFNGLSECONDARYCOLOR3SPROC
  SecondaryColor3sv* {.importc: "__glewSecondaryColor3sv".}: PFNGLSECONDARYCOLOR3SVPROC
  SecondaryColor3ub* {.importc: "__glewSecondaryColor3ub".}: PFNGLSECONDARYCOLOR3UBPROC
  SecondaryColor3ubv* {.importc: "__glewSecondaryColor3ubv".}: PFNGLSECONDARYCOLOR3UBVPROC
  SecondaryColor3ui* {.importc: "__glewSecondaryColor3ui".}: PFNGLSECONDARYCOLOR3UIPROC
  SecondaryColor3uiv* {.importc: "__glewSecondaryColor3uiv".}: PFNGLSECONDARYCOLOR3UIVPROC
  SecondaryColor3us* {.importc: "__glewSecondaryColor3us".}: PFNGLSECONDARYCOLOR3USPROC
  SecondaryColor3usv* {.importc: "__glewSecondaryColor3usv".}: PFNGLSECONDARYCOLOR3USVPROC
  SecondaryColorPointer* {.importc: "__glewSecondaryColorPointer".}: PFNGLSECONDARYCOLORPOINTERPROC
  WindowPos2d* {.importc: "__glewWindowPos2d".}: PFNGLWINDOWPOS2DPROC
  WindowPos2dv* {.importc: "__glewWindowPos2dv".}: PFNGLWINDOWPOS2DVPROC
  WindowPos2f* {.importc: "__glewWindowPos2f".}: PFNGLWINDOWPOS2FPROC
  WindowPos2fv* {.importc: "__glewWindowPos2fv".}: PFNGLWINDOWPOS2FVPROC
  WindowPos2i* {.importc: "__glewWindowPos2i".}: PFNGLWINDOWPOS2IPROC
  WindowPos2iv* {.importc: "__glewWindowPos2iv".}: PFNGLWINDOWPOS2IVPROC
  WindowPos2s* {.importc: "__glewWindowPos2s".}: PFNGLWINDOWPOS2SPROC
  WindowPos2sv* {.importc: "__glewWindowPos2sv".}: PFNGLWINDOWPOS2SVPROC
  WindowPos3d* {.importc: "__glewWindowPos3d".}: PFNGLWINDOWPOS3DPROC
  WindowPos3dv* {.importc: "__glewWindowPos3dv".}: PFNGLWINDOWPOS3DVPROC
  WindowPos3f* {.importc: "__glewWindowPos3f".}: PFNGLWINDOWPOS3FPROC
  WindowPos3fv* {.importc: "__glewWindowPos3fv".}: PFNGLWINDOWPOS3FVPROC
  WindowPos3i* {.importc: "__glewWindowPos3i".}: PFNGLWINDOWPOS3IPROC
  WindowPos3iv* {.importc: "__glewWindowPos3iv".}: PFNGLWINDOWPOS3IVPROC
  WindowPos3s* {.importc: "__glewWindowPos3s".}: PFNGLWINDOWPOS3SPROC
  WindowPos3sv* {.importc: "__glewWindowPos3sv".}: PFNGLWINDOWPOS3SVPROC
  BeginQuery* {.importc: "__glewBeginQuery".}: PFNGLBEGINQUERYPROC
  BindBuffer* {.importc: "__glewBindBuffer".}: PFNGLBINDBUFFERPROC
  BufferData* {.importc: "__glewBufferData".}: PFNGLBUFFERDATAPROC
  BufferSubData* {.importc: "__glewBufferSubData".}: PFNGLBUFFERSUBDATAPROC
  DeleteBuffers* {.importc: "__glewDeleteBuffers".}: PFNGLDELETEBUFFERSPROC
  DeleteQueries* {.importc: "__glewDeleteQueries".}: PFNGLDELETEQUERIESPROC
  EndQuery* {.importc: "__glewEndQuery".}: PFNGLENDQUERYPROC
  GenBuffers* {.importc: "__glewGenBuffers".}: PFNGLGENBUFFERSPROC
  GenQueries* {.importc: "__glewGenQueries".}: PFNGLGENQUERIESPROC
  GetBufferParameteriv* {.importc: "__glewGetBufferParameteriv".}: PFNGLGETBUFFERPARAMETERIVPROC
  GetBufferPointerv* {.importc: "__glewGetBufferPointerv".}: PFNGLGETBUFFERPOINTERVPROC
  GetBufferSubData* {.importc: "__glewGetBufferSubData".}: PFNGLGETBUFFERSUBDATAPROC
  GetQueryObjectiv* {.importc: "__glewGetQueryObjectiv".}: PFNGLGETQUERYOBJECTIVPROC
  GetQueryObjectuiv* {.importc: "__glewGetQueryObjectuiv".}: PFNGLGETQUERYOBJECTUIVPROC
  GetQueryiv* {.importc: "__glewGetQueryiv".}: PFNGLGETQUERYIVPROC
  IsBuffer* {.importc: "__glewIsBuffer".}: PFNGLISBUFFERPROC
  IsQuery* {.importc: "__glewIsQuery".}: PFNGLISQUERYPROC
  MapBuffer* {.importc: "__glewMapBuffer".}: PFNGLMAPBUFFERPROC
  UnmapBuffer* {.importc: "__glewUnmapBuffer".}: PFNGLUNMAPBUFFERPROC
  AttachShader* {.importc: "__glewAttachShader".}: PFNGLATTACHSHADERPROC
  BindAttribLocation* {.importc: "__glewBindAttribLocation".}: PFNGLBINDATTRIBLOCATIONPROC
  BlendEquationSeparate* {.importc: "__glewBlendEquationSeparate".}: PFNGLBLENDEQUATIONSEPARATEPROC
  CompileShader* {.importc: "__glewCompileShader".}: PFNGLCOMPILESHADERPROC
  CreateProgram* {.importc: "__glewCreateProgram".}: PFNGLCREATEPROGRAMPROC
  CreateShader* {.importc: "__glewCreateShader".}: PFNGLCREATESHADERPROC
  DeleteProgram* {.importc: "__glewDeleteProgram".}: PFNGLDELETEPROGRAMPROC
  DeleteShader* {.importc: "__glewDeleteShader".}: PFNGLDELETESHADERPROC
  DetachShader* {.importc: "__glewDetachShader".}: PFNGLDETACHSHADERPROC
  DisableVertexAttribArray* {.importc: "__glewDisableVertexAttribArray".}: PFNGLDISABLEVERTEXATTRIBARRAYPROC
  DrawBuffers* {.importc: "__glewDrawBuffers".}: PFNGLDRAWBUFFERSPROC
  EnableVertexAttribArray* {.importc: "__glewEnableVertexAttribArray".}: PFNGLENABLEVERTEXATTRIBARRAYPROC
  GetActiveAttrib* {.importc: "__glewGetActiveAttrib".}: PFNGLGETACTIVEATTRIBPROC
  GetActiveUniform* {.importc: "__glewGetActiveUniform".}: PFNGLGETACTIVEUNIFORMPROC
  GetAttachedShaders* {.importc: "__glewGetAttachedShaders".}: PFNGLGETATTACHEDSHADERSPROC
  GetAttribLocation* {.importc: "__glewGetAttribLocation".}: PFNGLGETATTRIBLOCATIONPROC
  GetProgramInfoLog* {.importc: "__glewGetProgramInfoLog".}: PFNGLGETPROGRAMINFOLOGPROC
  GetProgramiv* {.importc: "__glewGetProgramiv".}: PFNGLGETPROGRAMIVPROC
  GetShaderInfoLog* {.importc: "__glewGetShaderInfoLog".}: PFNGLGETSHADERINFOLOGPROC
  GetShaderSource* {.importc: "__glewGetShaderSource".}: PFNGLGETSHADERSOURCEPROC
  GetShaderiv* {.importc: "__glewGetShaderiv".}: PFNGLGETSHADERIVPROC
  GetUniformLocation* {.importc: "__glewGetUniformLocation".}: PFNGLGETUNIFORMLOCATIONPROC
  GetUniformfv* {.importc: "__glewGetUniformfv".}: PFNGLGETUNIFORMFVPROC
  GetUniformiv* {.importc: "__glewGetUniformiv".}: PFNGLGETUNIFORMIVPROC
  GetVertexAttribPointerv* {.importc: "__glewGetVertexAttribPointerv".}: PFNGLGETVERTEXATTRIBPOINTERVPROC
  GetVertexAttribdv* {.importc: "__glewGetVertexAttribdv".}: PFNGLGETVERTEXATTRIBDVPROC
  GetVertexAttribfv* {.importc: "__glewGetVertexAttribfv".}: PFNGLGETVERTEXATTRIBFVPROC
  GetVertexAttribiv* {.importc: "__glewGetVertexAttribiv".}: PFNGLGETVERTEXATTRIBIVPROC
  IsProgram* {.importc: "__glewIsProgram".}: PFNGLISPROGRAMPROC
  IsShader* {.importc: "__glewIsShader".}: PFNGLISSHADERPROC
  LinkProgram* {.importc: "__glewLinkProgram".}: PFNGLLINKPROGRAMPROC
  ShaderSource* {.importc: "__glewShaderSource".}: PFNGLSHADERSOURCEPROC
  StencilFuncSeparate* {.importc: "__glewStencilFuncSeparate".}: PFNGLSTENCILFUNCSEPARATEPROC
  StencilMaskSeparate* {.importc: "__glewStencilMaskSeparate".}: PFNGLSTENCILMASKSEPARATEPROC
  StencilOpSeparate* {.importc: "__glewStencilOpSeparate".}: PFNGLSTENCILOPSEPARATEPROC
  Uniform1f* {.importc: "__glewUniform1f".}: PFNGLUNIFORM1FPROC
  Uniform1fv* {.importc: "__glewUniform1fv".}: PFNGLUNIFORM1FVPROC
  Uniform1i* {.importc: "__glewUniform1i".}: PFNGLUNIFORM1IPROC
  Uniform1iv* {.importc: "__glewUniform1iv".}: PFNGLUNIFORM1IVPROC
  Uniform2f* {.importc: "__glewUniform2f".}: PFNGLUNIFORM2FPROC
  Uniform2fv* {.importc: "__glewUniform2fv".}: PFNGLUNIFORM2FVPROC
  Uniform2i* {.importc: "__glewUniform2i".}: PFNGLUNIFORM2IPROC
  Uniform2iv* {.importc: "__glewUniform2iv".}: PFNGLUNIFORM2IVPROC
  Uniform3f* {.importc: "__glewUniform3f".}: PFNGLUNIFORM3FPROC
  Uniform3fv* {.importc: "__glewUniform3fv".}: PFNGLUNIFORM3FVPROC
  Uniform3i* {.importc: "__glewUniform3i".}: PFNGLUNIFORM3IPROC
  Uniform3iv* {.importc: "__glewUniform3iv".}: PFNGLUNIFORM3IVPROC
  Uniform4f* {.importc: "__glewUniform4f".}: PFNGLUNIFORM4FPROC
  Uniform4fv* {.importc: "__glewUniform4fv".}: PFNGLUNIFORM4FVPROC
  Uniform4i* {.importc: "__glewUniform4i".}: PFNGLUNIFORM4IPROC
  Uniform4iv* {.importc: "__glewUniform4iv".}: PFNGLUNIFORM4IVPROC
  UniformMatrix2fv* {.importc: "__glewUniformMatrix2fv".}: PFNGLUNIFORMMATRIX2FVPROC
  UniformMatrix3fv* {.importc: "__glewUniformMatrix3fv".}: PFNGLUNIFORMMATRIX3FVPROC
  UniformMatrix4fv* {.importc: "__glewUniformMatrix4fv".}: PFNGLUNIFORMMATRIX4FVPROC
  UseProgram* {.importc: "__glewUseProgram".}: PFNGLUSEPROGRAMPROC
  ValidateProgram* {.importc: "__glewValidateProgram".}: PFNGLVALIDATEPROGRAMPROC
  VertexAttrib1d* {.importc: "__glewVertexAttrib1d".}: PFNGLVERTEXATTRIB1DPROC
  VertexAttrib1dv* {.importc: "__glewVertexAttrib1dv".}: PFNGLVERTEXATTRIB1DVPROC
  VertexAttrib1f* {.importc: "__glewVertexAttrib1f".}: PFNGLVERTEXATTRIB1FPROC
  VertexAttrib1fv* {.importc: "__glewVertexAttrib1fv".}: PFNGLVERTEXATTRIB1FVPROC
  VertexAttrib1s* {.importc: "__glewVertexAttrib1s".}: PFNGLVERTEXATTRIB1SPROC
  VertexAttrib1sv* {.importc: "__glewVertexAttrib1sv".}: PFNGLVERTEXATTRIB1SVPROC
  VertexAttrib2d* {.importc: "__glewVertexAttrib2d".}: PFNGLVERTEXATTRIB2DPROC
  VertexAttrib2dv* {.importc: "__glewVertexAttrib2dv".}: PFNGLVERTEXATTRIB2DVPROC
  VertexAttrib2f* {.importc: "__glewVertexAttrib2f".}: PFNGLVERTEXATTRIB2FPROC
  VertexAttrib2fv* {.importc: "__glewVertexAttrib2fv".}: PFNGLVERTEXATTRIB2FVPROC
  VertexAttrib2s* {.importc: "__glewVertexAttrib2s".}: PFNGLVERTEXATTRIB2SPROC
  VertexAttrib2sv* {.importc: "__glewVertexAttrib2sv".}: PFNGLVERTEXATTRIB2SVPROC
  VertexAttrib3d* {.importc: "__glewVertexAttrib3d".}: PFNGLVERTEXATTRIB3DPROC
  VertexAttrib3dv* {.importc: "__glewVertexAttrib3dv".}: PFNGLVERTEXATTRIB3DVPROC
  VertexAttrib3f* {.importc: "__glewVertexAttrib3f".}: PFNGLVERTEXATTRIB3FPROC
  VertexAttrib3fv* {.importc: "__glewVertexAttrib3fv".}: PFNGLVERTEXATTRIB3FVPROC
  VertexAttrib3s* {.importc: "__glewVertexAttrib3s".}: PFNGLVERTEXATTRIB3SPROC
  VertexAttrib3sv* {.importc: "__glewVertexAttrib3sv".}: PFNGLVERTEXATTRIB3SVPROC
  VertexAttrib4Nbv* {.importc: "__glewVertexAttrib4Nbv".}: PFNGLVERTEXATTRIB4NBVPROC
  VertexAttrib4Niv* {.importc: "__glewVertexAttrib4Niv".}: PFNGLVERTEXATTRIB4NIVPROC
  VertexAttrib4Nsv* {.importc: "__glewVertexAttrib4Nsv".}: PFNGLVERTEXATTRIB4NSVPROC
  VertexAttrib4Nub* {.importc: "__glewVertexAttrib4Nub".}: PFNGLVERTEXATTRIB4NUBPROC
  VertexAttrib4Nubv* {.importc: "__glewVertexAttrib4Nubv".}: PFNGLVERTEXATTRIB4NUBVPROC
  VertexAttrib4Nuiv* {.importc: "__glewVertexAttrib4Nuiv".}: PFNGLVERTEXATTRIB4NUIVPROC
  VertexAttrib4Nusv* {.importc: "__glewVertexAttrib4Nusv".}: PFNGLVERTEXATTRIB4NUSVPROC
  VertexAttrib4bv* {.importc: "__glewVertexAttrib4bv".}: PFNGLVERTEXATTRIB4BVPROC
  VertexAttrib4d* {.importc: "__glewVertexAttrib4d".}: PFNGLVERTEXATTRIB4DPROC
  VertexAttrib4dv* {.importc: "__glewVertexAttrib4dv".}: PFNGLVERTEXATTRIB4DVPROC
  VertexAttrib4f* {.importc: "__glewVertexAttrib4f".}: PFNGLVERTEXATTRIB4FPROC
  VertexAttrib4fv* {.importc: "__glewVertexAttrib4fv".}: PFNGLVERTEXATTRIB4FVPROC
  VertexAttrib4iv* {.importc: "__glewVertexAttrib4iv".}: PFNGLVERTEXATTRIB4IVPROC
  VertexAttrib4s* {.importc: "__glewVertexAttrib4s".}: PFNGLVERTEXATTRIB4SPROC
  VertexAttrib4sv* {.importc: "__glewVertexAttrib4sv".}: PFNGLVERTEXATTRIB4SVPROC
  VertexAttrib4ubv* {.importc: "__glewVertexAttrib4ubv".}: PFNGLVERTEXATTRIB4UBVPROC
  VertexAttrib4uiv* {.importc: "__glewVertexAttrib4uiv".}: PFNGLVERTEXATTRIB4UIVPROC
  VertexAttrib4usv* {.importc: "__glewVertexAttrib4usv".}: PFNGLVERTEXATTRIB4USVPROC
  VertexAttribPointer* {.importc: "__glewVertexAttribPointer".}: PFNGLVERTEXATTRIBPOINTERPROC
  UniformMatrix2x3fv* {.importc: "__glewUniformMatrix2x3fv".}: PFNGLUNIFORMMATRIX2X3FVPROC
  UniformMatrix2x4fv* {.importc: "__glewUniformMatrix2x4fv".}: PFNGLUNIFORMMATRIX2X4FVPROC
  UniformMatrix3x2fv* {.importc: "__glewUniformMatrix3x2fv".}: PFNGLUNIFORMMATRIX3X2FVPROC
  UniformMatrix3x4fv* {.importc: "__glewUniformMatrix3x4fv".}: PFNGLUNIFORMMATRIX3X4FVPROC
  UniformMatrix4x2fv* {.importc: "__glewUniformMatrix4x2fv".}: PFNGLUNIFORMMATRIX4X2FVPROC
  UniformMatrix4x3fv* {.importc: "__glewUniformMatrix4x3fv".}: PFNGLUNIFORMMATRIX4X3FVPROC
  BeginConditionalRender* {.importc: "__glewBeginConditionalRender".}: PFNGLBEGINCONDITIONALRENDERPROC
  BeginTransformFeedback* {.importc: "__glewBeginTransformFeedback".}: PFNGLBEGINTRANSFORMFEEDBACKPROC
  BindFragDataLocation* {.importc: "__glewBindFragDataLocation".}: PFNGLBINDFRAGDATALOCATIONPROC
  ClampColor* {.importc: "__glewClampColor".}: PFNGLCLAMPCOLORPROC
  ClearBufferfi* {.importc: "__glewClearBufferfi".}: PFNGLCLEARBUFFERFIPROC
  ClearBufferfv* {.importc: "__glewClearBufferfv".}: PFNGLCLEARBUFFERFVPROC
  ClearBufferiv* {.importc: "__glewClearBufferiv".}: PFNGLCLEARBUFFERIVPROC
  ClearBufferuiv* {.importc: "__glewClearBufferuiv".}: PFNGLCLEARBUFFERUIVPROC
  ColorMaski* {.importc: "__glewColorMaski".}: PFNGLCOLORMASKIPROC
  Disablei* {.importc: "__glewDisablei".}: PFNGLDISABLEIPROC
  Enablei* {.importc: "__glewEnablei".}: PFNGLENABLEIPROC
  EndConditionalRender* {.importc: "__glewEndConditionalRender".}: PFNGLENDCONDITIONALRENDERPROC
  EndTransformFeedback* {.importc: "__glewEndTransformFeedback".}: PFNGLENDTRANSFORMFEEDBACKPROC
  GetBooleani_v* {.importc: "__glewGetBooleani_v".}: PFNGLGETBOOLEANI_VPROC
  GetFragDataLocation* {.importc: "__glewGetFragDataLocation".}: PFNGLGETFRAGDATALOCATIONPROC
  GetStringi* {.importc: "__glewGetStringi".}: PFNGLGETSTRINGIPROC
  GetTexParameterIiv* {.importc: "__glewGetTexParameterIiv".}: PFNGLGETTEXPARAMETERIIVPROC
  GetTexParameterIuiv* {.importc: "__glewGetTexParameterIuiv".}: PFNGLGETTEXPARAMETERIUIVPROC
  GetTransformFeedbackVarying* {.importc: "__glewGetTransformFeedbackVarying".}: PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
  GetUniformuiv* {.importc: "__glewGetUniformuiv".}: PFNGLGETUNIFORMUIVPROC
  GetVertexAttribIiv* {.importc: "__glewGetVertexAttribIiv".}: PFNGLGETVERTEXATTRIBIIVPROC
  GetVertexAttribIuiv* {.importc: "__glewGetVertexAttribIuiv".}: PFNGLGETVERTEXATTRIBIUIVPROC
  IsEnabledi* {.importc: "__glewIsEnabledi".}: PFNGLISENABLEDIPROC
  TexParameterIiv* {.importc: "__glewTexParameterIiv".}: PFNGLTEXPARAMETERIIVPROC
  TexParameterIuiv* {.importc: "__glewTexParameterIuiv".}: PFNGLTEXPARAMETERIUIVPROC
  TransformFeedbackVaryings* {.importc: "__glewTransformFeedbackVaryings".}: PFNGLTRANSFORMFEEDBACKVARYINGSPROC
  Uniform1ui* {.importc: "__glewUniform1ui".}: PFNGLUNIFORM1UIPROC
  Uniform1uiv* {.importc: "__glewUniform1uiv".}: PFNGLUNIFORM1UIVPROC
  Uniform2ui* {.importc: "__glewUniform2ui".}: PFNGLUNIFORM2UIPROC
  Uniform2uiv* {.importc: "__glewUniform2uiv".}: PFNGLUNIFORM2UIVPROC
  Uniform3ui* {.importc: "__glewUniform3ui".}: PFNGLUNIFORM3UIPROC
  Uniform3uiv* {.importc: "__glewUniform3uiv".}: PFNGLUNIFORM3UIVPROC
  Uniform4ui* {.importc: "__glewUniform4ui".}: PFNGLUNIFORM4UIPROC
  Uniform4uiv* {.importc: "__glewUniform4uiv".}: PFNGLUNIFORM4UIVPROC
  VertexAttribI1i* {.importc: "__glewVertexAttribI1i".}: PFNGLVERTEXATTRIBI1IPROC
  VertexAttribI1iv* {.importc: "__glewVertexAttribI1iv".}: PFNGLVERTEXATTRIBI1IVPROC
  VertexAttribI1ui* {.importc: "__glewVertexAttribI1ui".}: PFNGLVERTEXATTRIBI1UIPROC
  VertexAttribI1uiv* {.importc: "__glewVertexAttribI1uiv".}: PFNGLVERTEXATTRIBI1UIVPROC
  VertexAttribI2i* {.importc: "__glewVertexAttribI2i".}: PFNGLVERTEXATTRIBI2IPROC
  VertexAttribI2iv* {.importc: "__glewVertexAttribI2iv".}: PFNGLVERTEXATTRIBI2IVPROC
  VertexAttribI2ui* {.importc: "__glewVertexAttribI2ui".}: PFNGLVERTEXATTRIBI2UIPROC
  VertexAttribI2uiv* {.importc: "__glewVertexAttribI2uiv".}: PFNGLVERTEXATTRIBI2UIVPROC
  VertexAttribI3i* {.importc: "__glewVertexAttribI3i".}: PFNGLVERTEXATTRIBI3IPROC
  VertexAttribI3iv* {.importc: "__glewVertexAttribI3iv".}: PFNGLVERTEXATTRIBI3IVPROC
  VertexAttribI3ui* {.importc: "__glewVertexAttribI3ui".}: PFNGLVERTEXATTRIBI3UIPROC
  VertexAttribI3uiv* {.importc: "__glewVertexAttribI3uiv".}: PFNGLVERTEXATTRIBI3UIVPROC
  VertexAttribI4bv* {.importc: "__glewVertexAttribI4bv".}: PFNGLVERTEXATTRIBI4BVPROC
  VertexAttribI4i* {.importc: "__glewVertexAttribI4i".}: PFNGLVERTEXATTRIBI4IPROC
  VertexAttribI4iv* {.importc: "__glewVertexAttribI4iv".}: PFNGLVERTEXATTRIBI4IVPROC
  VertexAttribI4sv* {.importc: "__glewVertexAttribI4sv".}: PFNGLVERTEXATTRIBI4SVPROC
  VertexAttribI4ubv* {.importc: "__glewVertexAttribI4ubv".}: PFNGLVERTEXATTRIBI4UBVPROC
  VertexAttribI4ui* {.importc: "__glewVertexAttribI4ui".}: PFNGLVERTEXATTRIBI4UIPROC
  VertexAttribI4uiv* {.importc: "__glewVertexAttribI4uiv".}: PFNGLVERTEXATTRIBI4UIVPROC
  VertexAttribI4usv* {.importc: "__glewVertexAttribI4usv".}: PFNGLVERTEXATTRIBI4USVPROC
  VertexAttribIPointer* {.importc: "__glewVertexAttribIPointer".}: PFNGLVERTEXATTRIBIPOINTERPROC
  DrawArraysInstanced* {.importc: "__glewDrawArraysInstanced".}: PFNGLDRAWARRAYSINSTANCEDPROC
  DrawElementsInstanced* {.importc: "__glewDrawElementsInstanced".}: PFNGLDRAWELEMENTSINSTANCEDPROC
  PrimitiveRestartIndex* {.importc: "__glewPrimitiveRestartIndex".}: PFNGLPRIMITIVERESTARTINDEXPROC
  TexBuffer* {.importc: "__glewTexBuffer".}: PFNGLTEXBUFFERPROC
  FramebufferTexture* {.importc: "__glewFramebufferTexture".}: PFNGLFRAMEBUFFERTEXTUREPROC
  GetBufferParameteri64v* {.importc: "__glewGetBufferParameteri64v".}: PFNGLGETBUFFERPARAMETERI64VPROC
  GetInteger64i_v* {.importc: "__glewGetInteger64i_v".}: PFNGLGETINTEGER64I_VPROC
  VertexAttribDivisor* {.importc: "__glewVertexAttribDivisor".}: PFNGLVERTEXATTRIBDIVISORPROC
  BlendEquationSeparatei* {.importc: "__glewBlendEquationSeparatei".}: PFNGLBLENDEQUATIONSEPARATEIPROC
  BlendEquationi* {.importc: "__glewBlendEquationi".}: PFNGLBLENDEQUATIONIPROC
  BlendFuncSeparatei* {.importc: "__glewBlendFuncSeparatei".}: PFNGLBLENDFUNCSEPARATEIPROC
  BlendFunci* {.importc: "__glewBlendFunci".}: PFNGLBLENDFUNCIPROC
  MinSampleShading* {.importc: "__glewMinSampleShading".}: PFNGLMINSAMPLESHADINGPROC
  GetGraphicsResetStatus* {.importc: "__glewGetGraphicsResetStatus".}: PFNGLGETGRAPHICSRESETSTATUSPROC
  GetnCompressedTexImage* {.importc: "__glewGetnCompressedTexImage".}: PFNGLGETNCOMPRESSEDTEXIMAGEPROC
  GetnTexImage* {.importc: "__glewGetnTexImage".}: PFNGLGETNTEXIMAGEPROC
  GetnUniformdv* {.importc: "__glewGetnUniformdv".}: PFNGLGETNUNIFORMDVPROC
  MultiDrawArraysIndirectCount* {.importc: "__glewMultiDrawArraysIndirectCount".}: PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC
  MultiDrawElementsIndirectCount* {.importc: "__glewMultiDrawElementsIndirectCount".}: PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC
  SpecializeShader* {.importc: "__glewSpecializeShader".}: PFNGLSPECIALIZESHADERPROC
  TbufferMask3DFX* {.importc: "__glewTbufferMask3DFX".}: PFNGLTBUFFERMASK3DFXPROC
  DebugMessageCallbackAMD* {.importc: "__glewDebugMessageCallbackAMD".}: PFNGLDEBUGMESSAGECALLBACKAMDPROC
  DebugMessageEnableAMD* {.importc: "__glewDebugMessageEnableAMD".}: PFNGLDEBUGMESSAGEENABLEAMDPROC
  DebugMessageInsertAMD* {.importc: "__glewDebugMessageInsertAMD".}: PFNGLDEBUGMESSAGEINSERTAMDPROC
  GetDebugMessageLogAMD* {.importc: "__glewGetDebugMessageLogAMD".}: PFNGLGETDEBUGMESSAGELOGAMDPROC
  BlendEquationIndexedAMD* {.importc: "__glewBlendEquationIndexedAMD".}: PFNGLBLENDEQUATIONINDEXEDAMDPROC
  BlendEquationSeparateIndexedAMD* {.importc: "__glewBlendEquationSeparateIndexedAMD".}: PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
  BlendFuncIndexedAMD* {.importc: "__glewBlendFuncIndexedAMD".}: PFNGLBLENDFUNCINDEXEDAMDPROC
  BlendFuncSeparateIndexedAMD* {.importc: "__glewBlendFuncSeparateIndexedAMD".}: PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
  FramebufferSamplePositionsfvAMD* {.importc: "__glewFramebufferSamplePositionsfvAMD".}: PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC
  GetFramebufferParameterfvAMD* {.importc: "__glewGetFramebufferParameterfvAMD".}: PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC
  GetNamedFramebufferParameterfvAMD* {.importc: "__glewGetNamedFramebufferParameterfvAMD".}: PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC
  NamedFramebufferSamplePositionsfvAMD* {.
      importc: "__glewNamedFramebufferSamplePositionsfvAMD".}: PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC
  VertexAttribParameteriAMD* {.importc: "__glewVertexAttribParameteriAMD".}: PFNGLVERTEXATTRIBPARAMETERIAMDPROC
  MultiDrawArraysIndirectAMD* {.importc: "__glewMultiDrawArraysIndirectAMD".}: PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
  MultiDrawElementsIndirectAMD* {.importc: "__glewMultiDrawElementsIndirectAMD".}: PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
  DeleteNamesAMD* {.importc: "__glewDeleteNamesAMD".}: PFNGLDELETENAMESAMDPROC
  GenNamesAMD* {.importc: "__glewGenNamesAMD".}: PFNGLGENNAMESAMDPROC
  IsNameAMD* {.importc: "__glewIsNameAMD".}: PFNGLISNAMEAMDPROC
  QueryObjectParameteruiAMD* {.importc: "__glewQueryObjectParameteruiAMD".}: PFNGLQUERYOBJECTPARAMETERUIAMDPROC
  BeginPerfMonitorAMD* {.importc: "__glewBeginPerfMonitorAMD".}: PFNGLBEGINPERFMONITORAMDPROC
  DeletePerfMonitorsAMD* {.importc: "__glewDeletePerfMonitorsAMD".}: PFNGLDELETEPERFMONITORSAMDPROC
  EndPerfMonitorAMD* {.importc: "__glewEndPerfMonitorAMD".}: PFNGLENDPERFMONITORAMDPROC
  GenPerfMonitorsAMD* {.importc: "__glewGenPerfMonitorsAMD".}: PFNGLGENPERFMONITORSAMDPROC
  GetPerfMonitorCounterDataAMD* {.importc: "__glewGetPerfMonitorCounterDataAMD".}: PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
  GetPerfMonitorCounterInfoAMD* {.importc: "__glewGetPerfMonitorCounterInfoAMD".}: PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
  GetPerfMonitorCounterStringAMD* {.importc: "__glewGetPerfMonitorCounterStringAMD".}: PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
  GetPerfMonitorCountersAMD* {.importc: "__glewGetPerfMonitorCountersAMD".}: PFNGLGETPERFMONITORCOUNTERSAMDPROC
  GetPerfMonitorGroupStringAMD* {.importc: "__glewGetPerfMonitorGroupStringAMD".}: PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
  GetPerfMonitorGroupsAMD* {.importc: "__glewGetPerfMonitorGroupsAMD".}: PFNGLGETPERFMONITORGROUPSAMDPROC
  SelectPerfMonitorCountersAMD* {.importc: "__glewSelectPerfMonitorCountersAMD".}: PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
  SetMultisamplefvAMD* {.importc: "__glewSetMultisamplefvAMD".}: PFNGLSETMULTISAMPLEFVAMDPROC
  TexStorageSparseAMD* {.importc: "__glewTexStorageSparseAMD".}: PFNGLTEXSTORAGESPARSEAMDPROC
  TextureStorageSparseAMD* {.importc: "__glewTextureStorageSparseAMD".}: PFNGLTEXTURESTORAGESPARSEAMDPROC
  StencilOpValueAMD* {.importc: "__glewStencilOpValueAMD".}: PFNGLSTENCILOPVALUEAMDPROC
  TessellationFactorAMD* {.importc: "__glewTessellationFactorAMD".}: PFNGLTESSELLATIONFACTORAMDPROC
  TessellationModeAMD* {.importc: "__glewTessellationModeAMD".}: PFNGLTESSELLATIONMODEAMDPROC
  BlitFramebufferANGLE* {.importc: "__glewBlitFramebufferANGLE".}: PFNGLBLITFRAMEBUFFERANGLEPROC
  RenderbufferStorageMultisampleANGLE* {.
      importc: "__glewRenderbufferStorageMultisampleANGLE".}: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
  DrawArraysInstancedANGLE* {.importc: "__glewDrawArraysInstancedANGLE".}: PFNGLDRAWARRAYSINSTANCEDANGLEPROC
  DrawElementsInstancedANGLE* {.importc: "__glewDrawElementsInstancedANGLE".}: PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
  VertexAttribDivisorANGLE* {.importc: "__glewVertexAttribDivisorANGLE".}: PFNGLVERTEXATTRIBDIVISORANGLEPROC
  BeginQueryANGLE* {.importc: "__glewBeginQueryANGLE".}: PFNGLBEGINQUERYANGLEPROC
  DeleteQueriesANGLE* {.importc: "__glewDeleteQueriesANGLE".}: PFNGLDELETEQUERIESANGLEPROC
  EndQueryANGLE* {.importc: "__glewEndQueryANGLE".}: PFNGLENDQUERYANGLEPROC
  GenQueriesANGLE* {.importc: "__glewGenQueriesANGLE".}: PFNGLGENQUERIESANGLEPROC
  GetQueryObjecti64vANGLE* {.importc: "__glewGetQueryObjecti64vANGLE".}: PFNGLGETQUERYOBJECTI64VANGLEPROC
  GetQueryObjectivANGLE* {.importc: "__glewGetQueryObjectivANGLE".}: PFNGLGETQUERYOBJECTIVANGLEPROC
  GetQueryObjectui64vANGLE* {.importc: "__glewGetQueryObjectui64vANGLE".}: PFNGLGETQUERYOBJECTUI64VANGLEPROC
  GetQueryObjectuivANGLE* {.importc: "__glewGetQueryObjectuivANGLE".}: PFNGLGETQUERYOBJECTUIVANGLEPROC
  GetQueryivANGLE* {.importc: "__glewGetQueryivANGLE".}: PFNGLGETQUERYIVANGLEPROC
  IsQueryANGLE* {.importc: "__glewIsQueryANGLE".}: PFNGLISQUERYANGLEPROC
  QueryCounterANGLE* {.importc: "__glewQueryCounterANGLE".}: PFNGLQUERYCOUNTERANGLEPROC
  GetTranslatedShaderSourceANGLE* {.importc: "__glewGetTranslatedShaderSourceANGLE".}: PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
  CopyTextureLevelsAPPLE* {.importc: "__glewCopyTextureLevelsAPPLE".}: PFNGLCOPYTEXTURELEVELSAPPLEPROC
  DrawElementArrayAPPLE* {.importc: "__glewDrawElementArrayAPPLE".}: PFNGLDRAWELEMENTARRAYAPPLEPROC
  DrawRangeElementArrayAPPLE* {.importc: "__glewDrawRangeElementArrayAPPLE".}: PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
  ElementPointerAPPLE* {.importc: "__glewElementPointerAPPLE".}: PFNGLELEMENTPOINTERAPPLEPROC
  MultiDrawElementArrayAPPLE* {.importc: "__glewMultiDrawElementArrayAPPLE".}: PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
  MultiDrawRangeElementArrayAPPLE* {.importc: "__glewMultiDrawRangeElementArrayAPPLE".}: PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
  DeleteFencesAPPLE* {.importc: "__glewDeleteFencesAPPLE".}: PFNGLDELETEFENCESAPPLEPROC
  FinishFenceAPPLE* {.importc: "__glewFinishFenceAPPLE".}: PFNGLFINISHFENCEAPPLEPROC
  FinishObjectAPPLE* {.importc: "__glewFinishObjectAPPLE".}: PFNGLFINISHOBJECTAPPLEPROC
  GenFencesAPPLE* {.importc: "__glewGenFencesAPPLE".}: PFNGLGENFENCESAPPLEPROC
  IsFenceAPPLE* {.importc: "__glewIsFenceAPPLE".}: PFNGLISFENCEAPPLEPROC
  SetFenceAPPLE* {.importc: "__glewSetFenceAPPLE".}: PFNGLSETFENCEAPPLEPROC
  TestFenceAPPLE* {.importc: "__glewTestFenceAPPLE".}: PFNGLTESTFENCEAPPLEPROC
  TestObjectAPPLE* {.importc: "__glewTestObjectAPPLE".}: PFNGLTESTOBJECTAPPLEPROC
  BufferParameteriAPPLE* {.importc: "__glewBufferParameteriAPPLE".}: PFNGLBUFFERPARAMETERIAPPLEPROC
  FlushMappedBufferRangeAPPLE* {.importc: "__glewFlushMappedBufferRangeAPPLE".}: PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
  RenderbufferStorageMultisampleAPPLE* {.
      importc: "__glewRenderbufferStorageMultisampleAPPLE".}: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
  ResolveMultisampleFramebufferAPPLE* {.importc: "__glewResolveMultisampleFramebufferAPPLE".}: PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
  GetObjectParameterivAPPLE* {.importc: "__glewGetObjectParameterivAPPLE".}: PFNGLGETOBJECTPARAMETERIVAPPLEPROC
  ObjectPurgeableAPPLE* {.importc: "__glewObjectPurgeableAPPLE".}: PFNGLOBJECTPURGEABLEAPPLEPROC
  ObjectUnpurgeableAPPLE* {.importc: "__glewObjectUnpurgeableAPPLE".}: PFNGLOBJECTUNPURGEABLEAPPLEPROC
  ClientWaitSyncAPPLE* {.importc: "__glewClientWaitSyncAPPLE".}: PFNGLCLIENTWAITSYNCAPPLEPROC
  DeleteSyncAPPLE* {.importc: "__glewDeleteSyncAPPLE".}: PFNGLDELETESYNCAPPLEPROC
  FenceSyncAPPLE* {.importc: "__glewFenceSyncAPPLE".}: PFNGLFENCESYNCAPPLEPROC
  GetInteger64vAPPLE* {.importc: "__glewGetInteger64vAPPLE".}: PFNGLGETINTEGER64VAPPLEPROC
  GetSyncivAPPLE* {.importc: "__glewGetSyncivAPPLE".}: PFNGLGETSYNCIVAPPLEPROC
  IsSyncAPPLE* {.importc: "__glewIsSyncAPPLE".}: PFNGLISSYNCAPPLEPROC
  WaitSyncAPPLE* {.importc: "__glewWaitSyncAPPLE".}: PFNGLWAITSYNCAPPLEPROC
  GetTexParameterPointervAPPLE* {.importc: "__glewGetTexParameterPointervAPPLE".}: PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
  TextureRangeAPPLE* {.importc: "__glewTextureRangeAPPLE".}: PFNGLTEXTURERANGEAPPLEPROC
  BindVertexArrayAPPLE* {.importc: "__glewBindVertexArrayAPPLE".}: PFNGLBINDVERTEXARRAYAPPLEPROC
  DeleteVertexArraysAPPLE* {.importc: "__glewDeleteVertexArraysAPPLE".}: PFNGLDELETEVERTEXARRAYSAPPLEPROC
  GenVertexArraysAPPLE* {.importc: "__glewGenVertexArraysAPPLE".}: PFNGLGENVERTEXARRAYSAPPLEPROC
  IsVertexArrayAPPLE* {.importc: "__glewIsVertexArrayAPPLE".}: PFNGLISVERTEXARRAYAPPLEPROC
  FlushVertexArrayRangeAPPLE* {.importc: "__glewFlushVertexArrayRangeAPPLE".}: PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
  VertexArrayParameteriAPPLE* {.importc: "__glewVertexArrayParameteriAPPLE".}: PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
  VertexArrayRangeAPPLE* {.importc: "__glewVertexArrayRangeAPPLE".}: PFNGLVERTEXARRAYRANGEAPPLEPROC
  DisableVertexAttribAPPLE* {.importc: "__glewDisableVertexAttribAPPLE".}: PFNGLDISABLEVERTEXATTRIBAPPLEPROC
  EnableVertexAttribAPPLE* {.importc: "__glewEnableVertexAttribAPPLE".}: PFNGLENABLEVERTEXATTRIBAPPLEPROC
  IsVertexAttribEnabledAPPLE* {.importc: "__glewIsVertexAttribEnabledAPPLE".}: PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
  MapVertexAttrib1dAPPLE* {.importc: "__glewMapVertexAttrib1dAPPLE".}: PFNGLMAPVERTEXATTRIB1DAPPLEPROC
  MapVertexAttrib1fAPPLE* {.importc: "__glewMapVertexAttrib1fAPPLE".}: PFNGLMAPVERTEXATTRIB1FAPPLEPROC
  MapVertexAttrib2dAPPLE* {.importc: "__glewMapVertexAttrib2dAPPLE".}: PFNGLMAPVERTEXATTRIB2DAPPLEPROC
  MapVertexAttrib2fAPPLE* {.importc: "__glewMapVertexAttrib2fAPPLE".}: PFNGLMAPVERTEXATTRIB2FAPPLEPROC
  ClearDepthf* {.importc: "__glewClearDepthf".}: PFNGLCLEARDEPTHFPROC
  DepthRangef* {.importc: "__glewDepthRangef".}: PFNGLDEPTHRANGEFPROC
  GetShaderPrecisionFormat* {.importc: "__glewGetShaderPrecisionFormat".}: PFNGLGETSHADERPRECISIONFORMATPROC
  ReleaseShaderCompiler* {.importc: "__glewReleaseShaderCompiler".}: PFNGLRELEASESHADERCOMPILERPROC
  ShaderBinary* {.importc: "__glewShaderBinary".}: PFNGLSHADERBINARYPROC
  MemoryBarrierByRegion* {.importc: "__glewMemoryBarrierByRegion".}: PFNGLMEMORYBARRIERBYREGIONPROC
  PrimitiveBoundingBoxARB* {.importc: "__glewPrimitiveBoundingBoxARB".}: PFNGLPRIMITIVEBOUNDINGBOXARBPROC
  DrawArraysInstancedBaseInstance* {.importc: "__glewDrawArraysInstancedBaseInstance".}: PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
  DrawElementsInstancedBaseInstance* {.importc: "__glewDrawElementsInstancedBaseInstance".}: PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
  DrawElementsInstancedBaseVertexBaseInstance*
      {.importc: "__glewDrawElementsInstancedBaseVertexBaseInstance".}: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
  GetImageHandleARB* {.importc: "__glewGetImageHandleARB".}: PFNGLGETIMAGEHANDLEARBPROC
  GetTextureHandleARB* {.importc: "__glewGetTextureHandleARB".}: PFNGLGETTEXTUREHANDLEARBPROC
  GetTextureSamplerHandleARB* {.importc: "__glewGetTextureSamplerHandleARB".}: PFNGLGETTEXTURESAMPLERHANDLEARBPROC
  GetVertexAttribLui64vARB* {.importc: "__glewGetVertexAttribLui64vARB".}: PFNGLGETVERTEXATTRIBLUI64VARBPROC
  IsImageHandleResidentARB* {.importc: "__glewIsImageHandleResidentARB".}: PFNGLISIMAGEHANDLERESIDENTARBPROC
  IsTextureHandleResidentARB* {.importc: "__glewIsTextureHandleResidentARB".}: PFNGLISTEXTUREHANDLERESIDENTARBPROC
  MakeImageHandleNonResidentARB* {.importc: "__glewMakeImageHandleNonResidentARB".}: PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
  MakeImageHandleResidentARB* {.importc: "__glewMakeImageHandleResidentARB".}: PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
  MakeTextureHandleNonResidentARB* {.importc: "__glewMakeTextureHandleNonResidentARB".}: PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
  MakeTextureHandleResidentARB* {.importc: "__glewMakeTextureHandleResidentARB".}: PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
  ProgramUniformHandleui64ARB* {.importc: "__glewProgramUniformHandleui64ARB".}: PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
  ProgramUniformHandleui64vARB* {.importc: "__glewProgramUniformHandleui64vARB".}: PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
  UniformHandleui64ARB* {.importc: "__glewUniformHandleui64ARB".}: PFNGLUNIFORMHANDLEUI64ARBPROC
  UniformHandleui64vARB* {.importc: "__glewUniformHandleui64vARB".}: PFNGLUNIFORMHANDLEUI64VARBPROC
  VertexAttribL1ui64ARB* {.importc: "__glewVertexAttribL1ui64ARB".}: PFNGLVERTEXATTRIBL1UI64ARBPROC
  VertexAttribL1ui64vARB* {.importc: "__glewVertexAttribL1ui64vARB".}: PFNGLVERTEXATTRIBL1UI64VARBPROC
  BindFragDataLocationIndexed* {.importc: "__glewBindFragDataLocationIndexed".}: PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
  GetFragDataIndex* {.importc: "__glewGetFragDataIndex".}: PFNGLGETFRAGDATAINDEXPROC
  BufferStorage* {.importc: "__glewBufferStorage".}: PFNGLBUFFERSTORAGEPROC
  CreateSyncFromCLeventARB* {.importc: "__glewCreateSyncFromCLeventARB".}: PFNGLCREATESYNCFROMCLEVENTARBPROC
  ClearBufferData* {.importc: "__glewClearBufferData".}: PFNGLCLEARBUFFERDATAPROC
  ClearBufferSubData* {.importc: "__glewClearBufferSubData".}: PFNGLCLEARBUFFERSUBDATAPROC
  ClearNamedBufferDataEXT* {.importc: "__glewClearNamedBufferDataEXT".}: PFNGLCLEARNAMEDBUFFERDATAEXTPROC
  ClearNamedBufferSubDataEXT* {.importc: "__glewClearNamedBufferSubDataEXT".}: PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
  ClearTexImage* {.importc: "__glewClearTexImage".}: PFNGLCLEARTEXIMAGEPROC
  ClearTexSubImage* {.importc: "__glewClearTexSubImage".}: PFNGLCLEARTEXSUBIMAGEPROC
  ClipControl* {.importc: "__glewClipControl".}: PFNGLCLIPCONTROLPROC
  ClampColorARB* {.importc: "__glewClampColorARB".}: PFNGLCLAMPCOLORARBPROC
  DispatchCompute* {.importc: "__glewDispatchCompute".}: PFNGLDISPATCHCOMPUTEPROC
  DispatchComputeIndirect* {.importc: "__glewDispatchComputeIndirect".}: PFNGLDISPATCHCOMPUTEINDIRECTPROC
  DispatchComputeGroupSizeARB* {.importc: "__glewDispatchComputeGroupSizeARB".}: PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
  CopyBufferSubData* {.importc: "__glewCopyBufferSubData".}: PFNGLCOPYBUFFERSUBDATAPROC
  CopyImageSubData* {.importc: "__glewCopyImageSubData".}: PFNGLCOPYIMAGESUBDATAPROC
  DebugMessageCallbackARB* {.importc: "__glewDebugMessageCallbackARB".}: PFNGLDEBUGMESSAGECALLBACKARBPROC
  DebugMessageControlARB* {.importc: "__glewDebugMessageControlARB".}: PFNGLDEBUGMESSAGECONTROLARBPROC
  DebugMessageInsertARB* {.importc: "__glewDebugMessageInsertARB".}: PFNGLDEBUGMESSAGEINSERTARBPROC
  GetDebugMessageLogARB* {.importc: "__glewGetDebugMessageLogARB".}: PFNGLGETDEBUGMESSAGELOGARBPROC
  BindTextureUnit* {.importc: "__glewBindTextureUnit".}: PFNGLBINDTEXTUREUNITPROC
  BlitNamedFramebuffer* {.importc: "__glewBlitNamedFramebuffer".}: PFNGLBLITNAMEDFRAMEBUFFERPROC
  CheckNamedFramebufferStatus* {.importc: "__glewCheckNamedFramebufferStatus".}: PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
  ClearNamedBufferData* {.importc: "__glewClearNamedBufferData".}: PFNGLCLEARNAMEDBUFFERDATAPROC
  ClearNamedBufferSubData* {.importc: "__glewClearNamedBufferSubData".}: PFNGLCLEARNAMEDBUFFERSUBDATAPROC
  ClearNamedFramebufferfi* {.importc: "__glewClearNamedFramebufferfi".}: PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
  ClearNamedFramebufferfv* {.importc: "__glewClearNamedFramebufferfv".}: PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
  ClearNamedFramebufferiv* {.importc: "__glewClearNamedFramebufferiv".}: PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
  ClearNamedFramebufferuiv* {.importc: "__glewClearNamedFramebufferuiv".}: PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
  CompressedTextureSubImage1D* {.importc: "__glewCompressedTextureSubImage1D".}: PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
  CompressedTextureSubImage2D* {.importc: "__glewCompressedTextureSubImage2D".}: PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
  CompressedTextureSubImage3D* {.importc: "__glewCompressedTextureSubImage3D".}: PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
  CopyNamedBufferSubData* {.importc: "__glewCopyNamedBufferSubData".}: PFNGLCOPYNAMEDBUFFERSUBDATAPROC
  CopyTextureSubImage1D* {.importc: "__glewCopyTextureSubImage1D".}: PFNGLCOPYTEXTURESUBIMAGE1DPROC
  CopyTextureSubImage2D* {.importc: "__glewCopyTextureSubImage2D".}: PFNGLCOPYTEXTURESUBIMAGE2DPROC
  CopyTextureSubImage3D* {.importc: "__glewCopyTextureSubImage3D".}: PFNGLCOPYTEXTURESUBIMAGE3DPROC
  CreateBuffers* {.importc: "__glewCreateBuffers".}: PFNGLCREATEBUFFERSPROC
  CreateFramebuffers* {.importc: "__glewCreateFramebuffers".}: PFNGLCREATEFRAMEBUFFERSPROC
  CreateProgramPipelines* {.importc: "__glewCreateProgramPipelines".}: PFNGLCREATEPROGRAMPIPELINESPROC
  CreateQueries* {.importc: "__glewCreateQueries".}: PFNGLCREATEQUERIESPROC
  CreateRenderbuffers* {.importc: "__glewCreateRenderbuffers".}: PFNGLCREATERENDERBUFFERSPROC
  CreateSamplers* {.importc: "__glewCreateSamplers".}: PFNGLCREATESAMPLERSPROC
  CreateTextures* {.importc: "__glewCreateTextures".}: PFNGLCREATETEXTURESPROC
  CreateTransformFeedbacks* {.importc: "__glewCreateTransformFeedbacks".}: PFNGLCREATETRANSFORMFEEDBACKSPROC
  CreateVertexArrays* {.importc: "__glewCreateVertexArrays".}: PFNGLCREATEVERTEXARRAYSPROC
  DisableVertexArrayAttrib* {.importc: "__glewDisableVertexArrayAttrib".}: PFNGLDISABLEVERTEXARRAYATTRIBPROC
  EnableVertexArrayAttrib* {.importc: "__glewEnableVertexArrayAttrib".}: PFNGLENABLEVERTEXARRAYATTRIBPROC
  FlushMappedNamedBufferRange* {.importc: "__glewFlushMappedNamedBufferRange".}: PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
  GenerateTextureMipmap* {.importc: "__glewGenerateTextureMipmap".}: PFNGLGENERATETEXTUREMIPMAPPROC
  GetCompressedTextureImage* {.importc: "__glewGetCompressedTextureImage".}: PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
  GetNamedBufferParameteri64v* {.importc: "__glewGetNamedBufferParameteri64v".}: PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
  GetNamedBufferParameteriv* {.importc: "__glewGetNamedBufferParameteriv".}: PFNGLGETNAMEDBUFFERPARAMETERIVPROC
  GetNamedBufferPointerv* {.importc: "__glewGetNamedBufferPointerv".}: PFNGLGETNAMEDBUFFERPOINTERVPROC
  GetNamedBufferSubData* {.importc: "__glewGetNamedBufferSubData".}: PFNGLGETNAMEDBUFFERSUBDATAPROC
  GetNamedFramebufferAttachmentParameteriv*
      {.importc: "__glewGetNamedFramebufferAttachmentParameteriv".}: PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
  GetNamedFramebufferParameteriv* {.importc: "__glewGetNamedFramebufferParameteriv".}: PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
  GetNamedRenderbufferParameteriv* {.importc: "__glewGetNamedRenderbufferParameteriv".}: PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
  GetQueryBufferObjecti64v* {.importc: "__glewGetQueryBufferObjecti64v".}: PFNGLGETQUERYBUFFEROBJECTI64VPROC
  GetQueryBufferObjectiv* {.importc: "__glewGetQueryBufferObjectiv".}: PFNGLGETQUERYBUFFEROBJECTIVPROC
  GetQueryBufferObjectui64v* {.importc: "__glewGetQueryBufferObjectui64v".}: PFNGLGETQUERYBUFFEROBJECTUI64VPROC
  GetQueryBufferObjectuiv* {.importc: "__glewGetQueryBufferObjectuiv".}: PFNGLGETQUERYBUFFEROBJECTUIVPROC
  GetTextureImage* {.importc: "__glewGetTextureImage".}: PFNGLGETTEXTUREIMAGEPROC
  GetTextureLevelParameterfv* {.importc: "__glewGetTextureLevelParameterfv".}: PFNGLGETTEXTURELEVELPARAMETERFVPROC
  GetTextureLevelParameteriv* {.importc: "__glewGetTextureLevelParameteriv".}: PFNGLGETTEXTURELEVELPARAMETERIVPROC
  GetTextureParameterIiv* {.importc: "__glewGetTextureParameterIiv".}: PFNGLGETTEXTUREPARAMETERIIVPROC
  GetTextureParameterIuiv* {.importc: "__glewGetTextureParameterIuiv".}: PFNGLGETTEXTUREPARAMETERIUIVPROC
  GetTextureParameterfv* {.importc: "__glewGetTextureParameterfv".}: PFNGLGETTEXTUREPARAMETERFVPROC
  GetTextureParameteriv* {.importc: "__glewGetTextureParameteriv".}: PFNGLGETTEXTUREPARAMETERIVPROC
  GetTransformFeedbacki64_v* {.importc: "__glewGetTransformFeedbacki64_v".}: PFNGLGETTRANSFORMFEEDBACKI64_VPROC
  GetTransformFeedbacki_vu* {.importc: "__glewGetTransformFeedbacki_v".}: PFNGLGETTRANSFORMFEEDBACKI_VPROC
  GetTransformFeedbackiv* {.importc: "__glewGetTransformFeedbackiv".}: CPFNGLGETTRANSFORMFEEDBACKIVPROC
  GetVertexArrayIndexed64iv* {.importc: "__glewGetVertexArrayIndexed64iv".}: PFNGLGETVERTEXARRAYINDEXED64IVPROC
  GetVertexArrayIndexediv* {.importc: "__glewGetVertexArrayIndexediv".}: PFNGLGETVERTEXARRAYINDEXEDIVPROC
  GetVertexArrayiv* {.importc: "__glewGetVertexArrayiv".}: PFNGLGETVERTEXARRAYIVPROC
  InvalidateNamedFramebufferData* {.importc: "__glewInvalidateNamedFramebufferData".}: PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
  InvalidateNamedFramebufferSubData* {.importc: "__glewInvalidateNamedFramebufferSubData".}: PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
  MapNamedBuffer* {.importc: "__glewMapNamedBuffer".}: PFNGLMAPNAMEDBUFFERPROC
  MapNamedBufferRange* {.importc: "__glewMapNamedBufferRange".}: PFNGLMAPNAMEDBUFFERRANGEPROC
  NamedBufferData* {.importc: "__glewNamedBufferData".}: PFNGLNAMEDBUFFERDATAPROC
  NamedBufferStorage* {.importc: "__glewNamedBufferStorage".}: PFNGLNAMEDBUFFERSTORAGEPROC
  NamedBufferSubData* {.importc: "__glewNamedBufferSubData".}: PFNGLNAMEDBUFFERSUBDATAPROC
  NamedFramebufferDrawBuffer* {.importc: "__glewNamedFramebufferDrawBuffer".}: PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
  NamedFramebufferDrawBuffers* {.importc: "__glewNamedFramebufferDrawBuffers".}: PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
  NamedFramebufferParameteri* {.importc: "__glewNamedFramebufferParameteri".}: PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
  NamedFramebufferReadBuffer* {.importc: "__glewNamedFramebufferReadBuffer".}: PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
  NamedFramebufferRenderbuffer* {.importc: "__glewNamedFramebufferRenderbuffer".}: PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
  NamedFramebufferTexture* {.importc: "__glewNamedFramebufferTexture".}: PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
  NamedFramebufferTextureLayer* {.importc: "__glewNamedFramebufferTextureLayer".}: PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
  NamedRenderbufferStorage* {.importc: "__glewNamedRenderbufferStorage".}: PFNGLNAMEDRENDERBUFFERSTORAGEPROC
  NamedRenderbufferStorageMultisample* {.
      importc: "__glewNamedRenderbufferStorageMultisample".}: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
  TextureBuffer* {.importc: "__glewTextureBuffer".}: PFNGLTEXTUREBUFFERPROC
  TextureBufferRange* {.importc: "__glewTextureBufferRange".}: PFNGLTEXTUREBUFFERRANGEPROC
  TextureParameterIiv* {.importc: "__glewTextureParameterIiv".}: PFNGLTEXTUREPARAMETERIIVPROC
  TextureParameterIuiv* {.importc: "__glewTextureParameterIuiv".}: PFNGLTEXTUREPARAMETERIUIVPROC
  TextureParameterf* {.importc: "__glewTextureParameterf".}: PFNGLTEXTUREPARAMETERFPROC
  TextureParameterfv* {.importc: "__glewTextureParameterfv".}: PFNGLTEXTUREPARAMETERFVPROC
  TextureParameteri* {.importc: "__glewTextureParameteri".}: PFNGLTEXTUREPARAMETERIPROC
  TextureParameteriv* {.importc: "__glewTextureParameteriv".}: PFNGLTEXTUREPARAMETERIVPROC
  TextureStorage1D* {.importc: "__glewTextureStorage1D".}: PFNGLTEXTURESTORAGE1DPROC
  TextureStorage2D* {.importc: "__glewTextureStorage2D".}: PFNGLTEXTURESTORAGE2DPROC
  TextureStorage2DMultisample* {.importc: "__glewTextureStorage2DMultisample".}: PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
  TextureStorage3D* {.importc: "__glewTextureStorage3D".}: PFNGLTEXTURESTORAGE3DPROC
  TextureStorage3DMultisample* {.importc: "__glewTextureStorage3DMultisample".}: PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
  TextureSubImage1D* {.importc: "__glewTextureSubImage1D".}: PFNGLTEXTURESUBIMAGE1DPROC
  TextureSubImage2D* {.importc: "__glewTextureSubImage2D".}: PFNGLTEXTURESUBIMAGE2DPROC
  TextureSubImage3D* {.importc: "__glewTextureSubImage3D".}: PFNGLTEXTURESUBIMAGE3DPROC
  TransformFeedbackBufferBase* {.importc: "__glewTransformFeedbackBufferBase".}: PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
  TransformFeedbackBufferRange* {.importc: "__glewTransformFeedbackBufferRange".}: PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
  UnmapNamedBuffer* {.importc: "__glewUnmapNamedBuffer".}: PFNGLUNMAPNAMEDBUFFERPROC
  VertexArrayAttribBinding* {.importc: "__glewVertexArrayAttribBinding".}: PFNGLVERTEXARRAYATTRIBBINDINGPROC
  VertexArrayAttribFormat* {.importc: "__glewVertexArrayAttribFormat".}: PFNGLVERTEXARRAYATTRIBFORMATPROC
  VertexArrayAttribIFormat* {.importc: "__glewVertexArrayAttribIFormat".}: PFNGLVERTEXARRAYATTRIBIFORMATPROC
  VertexArrayAttribLFormat* {.importc: "__glewVertexArrayAttribLFormat".}: PFNGLVERTEXARRAYATTRIBLFORMATPROC
  VertexArrayBindingDivisor* {.importc: "__glewVertexArrayBindingDivisor".}: PFNGLVERTEXARRAYBINDINGDIVISORPROC
  VertexArrayElementBuffer* {.importc: "__glewVertexArrayElementBuffer".}: PFNGLVERTEXARRAYELEMENTBUFFERPROC
  VertexArrayVertexBuffer* {.importc: "__glewVertexArrayVertexBuffer".}: PFNGLVERTEXARRAYVERTEXBUFFERPROC
  VertexArrayVertexBuffers* {.importc: "__glewVertexArrayVertexBuffers".}: PFNGLVERTEXARRAYVERTEXBUFFERSPROC
  DrawBuffersARB* {.importc: "__glewDrawBuffersARB".}: PFNGLDRAWBUFFERSARBPROC
  BlendEquationSeparateiARB* {.importc: "__glewBlendEquationSeparateiARB".}: PFNGLBLENDEQUATIONSEPARATEIARBPROC
  BlendEquationiARB* {.importc: "__glewBlendEquationiARB".}: PFNGLBLENDEQUATIONIARBPROC
  BlendFuncSeparateiARB* {.importc: "__glewBlendFuncSeparateiARB".}: PFNGLBLENDFUNCSEPARATEIARBPROC
  BlendFunciARB* {.importc: "__glewBlendFunciARB".}: PFNGLBLENDFUNCIARBPROC
  DrawElementsBaseVertex* {.importc: "__glewDrawElementsBaseVertex".}: PFNGLDRAWELEMENTSBASEVERTEXPROC
  DrawElementsInstancedBaseVertex* {.importc: "__glewDrawElementsInstancedBaseVertex".}: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
  DrawRangeElementsBaseVertex* {.importc: "__glewDrawRangeElementsBaseVertex".}: PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
  MultiDrawElementsBaseVertex* {.importc: "__glewMultiDrawElementsBaseVertex".}: PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
  DrawArraysIndirect* {.importc: "__glewDrawArraysIndirect".}: PFNGLDRAWARRAYSINDIRECTPROC
  DrawElementsIndirect* {.importc: "__glewDrawElementsIndirect".}: PFNGLDRAWELEMENTSINDIRECTPROC
  FramebufferParameteri* {.importc: "__glewFramebufferParameteri".}: PFNGLFRAMEBUFFERPARAMETERIPROC
  GetFramebufferParameteriv* {.importc: "__glewGetFramebufferParameteriv".}: PFNGLGETFRAMEBUFFERPARAMETERIVPROC
  GetNamedFramebufferParameterivEXT* {.importc: "__glewGetNamedFramebufferParameterivEXT".}: PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
  NamedFramebufferParameteriEXT* {.importc: "__glewNamedFramebufferParameteriEXT".}: PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
  BindFramebuffer* {.importc: "__glewBindFramebuffer".}: PFNGLBINDFRAMEBUFFERPROC
  BindRenderbuffer* {.importc: "__glewBindRenderbuffer".}: PFNGLBINDRENDERBUFFERPROC
  BlitFramebuffer* {.importc: "__glewBlitFramebuffer".}: PFNGLBLITFRAMEBUFFERPROC
  CheckFramebufferStatus* {.importc: "__glewCheckFramebufferStatus".}: PFNGLCHECKFRAMEBUFFERSTATUSPROC
  DeleteFramebuffers* {.importc: "__glewDeleteFramebuffers".}: PFNGLDELETEFRAMEBUFFERSPROC
  DeleteRenderbuffers* {.importc: "__glewDeleteRenderbuffers".}: PFNGLDELETERENDERBUFFERSPROC
  FramebufferRenderbuffer* {.importc: "__glewFramebufferRenderbuffer".}: PFNGLFRAMEBUFFERRENDERBUFFERPROC
  FramebufferTexture1D* {.importc: "__glewFramebufferTexture1D".}: PFNGLFRAMEBUFFERTEXTURE1DPROC
  FramebufferTexture2D* {.importc: "__glewFramebufferTexture2D".}: PFNGLFRAMEBUFFERTEXTURE2DPROC
  FramebufferTexture3D* {.importc: "__glewFramebufferTexture3D".}: PFNGLFRAMEBUFFERTEXTURE3DPROC
  FramebufferTextureLayer* {.importc: "__glewFramebufferTextureLayer".}: PFNGLFRAMEBUFFERTEXTURELAYERPROC
  GenFramebuffers* {.importc: "__glewGenFramebuffers".}: PFNGLGENFRAMEBUFFERSPROC
  GenRenderbuffers* {.importc: "__glewGenRenderbuffers".}: PFNGLGENRENDERBUFFERSPROC
  GenerateMipmap* {.importc: "__glewGenerateMipmap".}: PFNGLGENERATEMIPMAPPROC
  GetFramebufferAttachmentParameteriv* {.
      importc: "__glewGetFramebufferAttachmentParameteriv".}: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
  GetRenderbufferParameteriv* {.importc: "__glewGetRenderbufferParameteriv".}: PFNGLGETRENDERBUFFERPARAMETERIVPROC
  IsFramebuffer* {.importc: "__glewIsFramebuffer".}: PFNGLISFRAMEBUFFERPROC
  IsRenderbuffer* {.importc: "__glewIsRenderbuffer".}: PFNGLISRENDERBUFFERPROC
  RenderbufferStorage* {.importc: "__glewRenderbufferStorage".}: PFNGLRENDERBUFFERSTORAGEPROC
  RenderbufferStorageMultisample* {.importc: "__glewRenderbufferStorageMultisample".}: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
  FramebufferTextureARB* {.importc: "__glewFramebufferTextureARB".}: PFNGLFRAMEBUFFERTEXTUREARBPROC
  FramebufferTextureFaceARB* {.importc: "__glewFramebufferTextureFaceARB".}: PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
  FramebufferTextureLayerARB* {.importc: "__glewFramebufferTextureLayerARB".}: PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
  ProgramParameteriARB* {.importc: "__glewProgramParameteriARB".}: PFNGLPROGRAMPARAMETERIARBPROC
  GetProgramBinary* {.importc: "__glewGetProgramBinary".}: PFNGLGETPROGRAMBINARYPROC
  ProgramBinary* {.importc: "__glewProgramBinary".}: PFNGLPROGRAMBINARYPROC
  ProgramParameteri* {.importc: "__glewProgramParameteri".}: PFNGLPROGRAMPARAMETERIPROC
  GetCompressedTextureSubImage* {.importc: "__glewGetCompressedTextureSubImage".}: PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
  GetTextureSubImage* {.importc: "__glewGetTextureSubImage".}: PFNGLGETTEXTURESUBIMAGEPROC
  SpecializeShaderARB* {.importc: "__glewSpecializeShaderARB".}: PFNGLSPECIALIZESHADERARBPROC
  GetUniformdv* {.importc: "__glewGetUniformdv".}: PFNGLGETUNIFORMDVPROC
  Uniform1d* {.importc: "__glewUniform1d".}: PFNGLUNIFORM1DPROC
  Uniform1dv* {.importc: "__glewUniform1dv".}: PFNGLUNIFORM1DVPROC
  Uniform2d* {.importc: "__glewUniform2d".}: PFNGLUNIFORM2DPROC
  Uniform2dv* {.importc: "__glewUniform2dv".}: PFNGLUNIFORM2DVPROC
  Uniform3d* {.importc: "__glewUniform3d".}: PFNGLUNIFORM3DPROC
  Uniform3dv* {.importc: "__glewUniform3dv".}: PFNGLUNIFORM3DVPROC
  Uniform4d* {.importc: "__glewUniform4d".}: PFNGLUNIFORM4DPROC
  Uniform4dv* {.importc: "__glewUniform4dv".}: PFNGLUNIFORM4DVPROC
  UniformMatrix2dv* {.importc: "__glewUniformMatrix2dv".}: PFNGLUNIFORMMATRIX2DVPROC
  UniformMatrix2x3dv* {.importc: "__glewUniformMatrix2x3dv".}: PFNGLUNIFORMMATRIX2X3DVPROC
  UniformMatrix2x4dv* {.importc: "__glewUniformMatrix2x4dv".}: PFNGLUNIFORMMATRIX2X4DVPROC
  UniformMatrix3dv* {.importc: "__glewUniformMatrix3dv".}: PFNGLUNIFORMMATRIX3DVPROC
  UniformMatrix3x2dv* {.importc: "__glewUniformMatrix3x2dv".}: PFNGLUNIFORMMATRIX3X2DVPROC
  UniformMatrix3x4dv* {.importc: "__glewUniformMatrix3x4dv".}: PFNGLUNIFORMMATRIX3X4DVPROC
  UniformMatrix4dv* {.importc: "__glewUniformMatrix4dv".}: PFNGLUNIFORMMATRIX4DVPROC
  UniformMatrix4x2dv* {.importc: "__glewUniformMatrix4x2dv".}: PFNGLUNIFORMMATRIX4X2DVPROC
  UniformMatrix4x3dv* {.importc: "__glewUniformMatrix4x3dv".}: PFNGLUNIFORMMATRIX4X3DVPROC
  GetUniformi64vARB* {.importc: "__glewGetUniformi64vARB".}: PFNGLGETUNIFORMI64VARBPROC
  GetUniformui64vARB* {.importc: "__glewGetUniformui64vARB".}: PFNGLGETUNIFORMUI64VARBPROC
  GetnUniformi64vARB* {.importc: "__glewGetnUniformi64vARB".}: PFNGLGETNUNIFORMI64VARBPROC
  GetnUniformui64vARB* {.importc: "__glewGetnUniformui64vARB".}: PFNGLGETNUNIFORMUI64VARBPROC
  ProgramUniform1i64ARB* {.importc: "__glewProgramUniform1i64ARB".}: PFNGLPROGRAMUNIFORM1I64ARBPROC
  ProgramUniform1i64vARB* {.importc: "__glewProgramUniform1i64vARB".}: PFNGLPROGRAMUNIFORM1I64VARBPROC
  ProgramUniform1ui64ARB* {.importc: "__glewProgramUniform1ui64ARB".}: PFNGLPROGRAMUNIFORM1UI64ARBPROC
  ProgramUniform1ui64vARB* {.importc: "__glewProgramUniform1ui64vARB".}: PFNGLPROGRAMUNIFORM1UI64VARBPROC
  ProgramUniform2i64ARB* {.importc: "__glewProgramUniform2i64ARB".}: PFNGLPROGRAMUNIFORM2I64ARBPROC
  ProgramUniform2i64vARB* {.importc: "__glewProgramUniform2i64vARB".}: PFNGLPROGRAMUNIFORM2I64VARBPROC
  ProgramUniform2ui64ARB* {.importc: "__glewProgramUniform2ui64ARB".}: PFNGLPROGRAMUNIFORM2UI64ARBPROC
  ProgramUniform2ui64vARB* {.importc: "__glewProgramUniform2ui64vARB".}: PFNGLPROGRAMUNIFORM2UI64VARBPROC
  ProgramUniform3i64ARB* {.importc: "__glewProgramUniform3i64ARB".}: PFNGLPROGRAMUNIFORM3I64ARBPROC
  ProgramUniform3i64vARB* {.importc: "__glewProgramUniform3i64vARB".}: PFNGLPROGRAMUNIFORM3I64VARBPROC
  ProgramUniform3ui64ARB* {.importc: "__glewProgramUniform3ui64ARB".}: PFNGLPROGRAMUNIFORM3UI64ARBPROC
  ProgramUniform3ui64vARB* {.importc: "__glewProgramUniform3ui64vARB".}: PFNGLPROGRAMUNIFORM3UI64VARBPROC
  ProgramUniform4i64ARB* {.importc: "__glewProgramUniform4i64ARB".}: PFNGLPROGRAMUNIFORM4I64ARBPROC
  ProgramUniform4i64vARB* {.importc: "__glewProgramUniform4i64vARB".}: PFNGLPROGRAMUNIFORM4I64VARBPROC
  ProgramUniform4ui64ARB* {.importc: "__glewProgramUniform4ui64ARB".}: PFNGLPROGRAMUNIFORM4UI64ARBPROC
  ProgramUniform4ui64vARB* {.importc: "__glewProgramUniform4ui64vARB".}: PFNGLPROGRAMUNIFORM4UI64VARBPROC
  Uniform1i64ARB* {.importc: "__glewUniform1i64ARB".}: PFNGLUNIFORM1I64ARBPROC
  Uniform1i64vARB* {.importc: "__glewUniform1i64vARB".}: PFNGLUNIFORM1I64VARBPROC
  Uniform1ui64ARB* {.importc: "__glewUniform1ui64ARB".}: PFNGLUNIFORM1UI64ARBPROC
  Uniform1ui64vARB* {.importc: "__glewUniform1ui64vARB".}: PFNGLUNIFORM1UI64VARBPROC
  Uniform2i64ARB* {.importc: "__glewUniform2i64ARB".}: PFNGLUNIFORM2I64ARBPROC
  Uniform2i64vARB* {.importc: "__glewUniform2i64vARB".}: PFNGLUNIFORM2I64VARBPROC
  Uniform2ui64ARB* {.importc: "__glewUniform2ui64ARB".}: PFNGLUNIFORM2UI64ARBPROC
  Uniform2ui64vARB* {.importc: "__glewUniform2ui64vARB".}: PFNGLUNIFORM2UI64VARBPROC
  Uniform3i64ARB* {.importc: "__glewUniform3i64ARB".}: PFNGLUNIFORM3I64ARBPROC
  Uniform3i64vARB* {.importc: "__glewUniform3i64vARB".}: PFNGLUNIFORM3I64VARBPROC
  Uniform3ui64ARB* {.importc: "__glewUniform3ui64ARB".}: PFNGLUNIFORM3UI64ARBPROC
  Uniform3ui64vARB* {.importc: "__glewUniform3ui64vARB".}: PFNGLUNIFORM3UI64VARBPROC
  Uniform4i64ARB* {.importc: "__glewUniform4i64ARB".}: PFNGLUNIFORM4I64ARBPROC
  Uniform4i64vARB* {.importc: "__glewUniform4i64vARB".}: PFNGLUNIFORM4I64VARBPROC
  Uniform4ui64ARB* {.importc: "__glewUniform4ui64ARB".}: PFNGLUNIFORM4UI64ARBPROC
  Uniform4ui64vARB* {.importc: "__glewUniform4ui64vARB".}: PFNGLUNIFORM4UI64VARBPROC
  ColorSubTable* {.importc: "__glewColorSubTable".}: PFNGLCOLORSUBTABLEPROC
  ColorTable* {.importc: "__glewColorTable".}: PFNGLCOLORTABLEPROC
  ColorTableParameterfv* {.importc: "__glewColorTableParameterfv".}: PFNGLCOLORTABLEPARAMETERFVPROC
  ColorTableParameteriv* {.importc: "__glewColorTableParameteriv".}: PFNGLCOLORTABLEPARAMETERIVPROC
  ConvolutionFilter1D* {.importc: "__glewConvolutionFilter1D".}: PFNGLCONVOLUTIONFILTER1DPROC
  ConvolutionFilter2D* {.importc: "__glewConvolutionFilter2D".}: PFNGLCONVOLUTIONFILTER2DPROC
  ConvolutionParameterf* {.importc: "__glewConvolutionParameterf".}: PFNGLCONVOLUTIONPARAMETERFPROC
  ConvolutionParameterfv* {.importc: "__glewConvolutionParameterfv".}: PFNGLCONVOLUTIONPARAMETERFVPROC
  ConvolutionParameteri* {.importc: "__glewConvolutionParameteri".}: PFNGLCONVOLUTIONPARAMETERIPROC
  ConvolutionParameteriv* {.importc: "__glewConvolutionParameteriv".}: PFNGLCONVOLUTIONPARAMETERIVPROC
  CopyColorSubTable* {.importc: "__glewCopyColorSubTable".}: PFNGLCOPYCOLORSUBTABLEPROC
  CopyColorTable* {.importc: "__glewCopyColorTable".}: PFNGLCOPYCOLORTABLEPROC
  CopyConvolutionFilter1D* {.importc: "__glewCopyConvolutionFilter1D".}: PFNGLCOPYCONVOLUTIONFILTER1DPROC
  CopyConvolutionFilter2D* {.importc: "__glewCopyConvolutionFilter2D".}: PFNGLCOPYCONVOLUTIONFILTER2DPROC
  GetColorTable* {.importc: "__glewGetColorTable".}: PFNGLGETCOLORTABLEPROC
  GetColorTableParameterfv* {.importc: "__glewGetColorTableParameterfv".}: PFNGLGETCOLORTABLEPARAMETERFVPROC
  GetColorTableParameteriv* {.importc: "__glewGetColorTableParameteriv".}: PFNGLGETCOLORTABLEPARAMETERIVPROC
  GetConvolutionFilter* {.importc: "__glewGetConvolutionFilter".}: PFNGLGETCONVOLUTIONFILTERPROC
  GetConvolutionParameterfv* {.importc: "__glewGetConvolutionParameterfv".}: PFNGLGETCONVOLUTIONPARAMETERFVPROC
  GetConvolutionParameteriv* {.importc: "__glewGetConvolutionParameteriv".}: PFNGLGETCONVOLUTIONPARAMETERIVPROC
  GetHistogram* {.importc: "__glewGetHistogram".}: PFNGLGETHISTOGRAMPROC
  GetHistogramParameterfv* {.importc: "__glewGetHistogramParameterfv".}: PFNGLGETHISTOGRAMPARAMETERFVPROC
  GetHistogramParameteriv* {.importc: "__glewGetHistogramParameteriv".}: PFNGLGETHISTOGRAMPARAMETERIVPROC
  GetMinmax* {.importc: "__glewGetMinmax".}: PFNGLGETMINMAXPROC
  GetMinmaxParameterfv* {.importc: "__glewGetMinmaxParameterfv".}: PFNGLGETMINMAXPARAMETERFVPROC
  GetMinmaxParameteriv* {.importc: "__glewGetMinmaxParameteriv".}: PFNGLGETMINMAXPARAMETERIVPROC
  GetSeparableFilter* {.importc: "__glewGetSeparableFilter".}: PFNGLGETSEPARABLEFILTERPROC
  Histogram* {.importc: "__glewHistogram".}: PFNGLHISTOGRAMPROC
  Minmax* {.importc: "__glewMinmax".}: PFNGLMINMAXPROC
  ResetHistogram* {.importc: "__glewResetHistogram".}: PFNGLRESETHISTOGRAMPROC
  ResetMinmax* {.importc: "__glewResetMinmax".}: PFNGLRESETMINMAXPROC
  SeparableFilter2D* {.importc: "__glewSeparableFilter2D".}: PFNGLSEPARABLEFILTER2DPROC
  MultiDrawArraysIndirectCountARB* {.importc: "__glewMultiDrawArraysIndirectCountARB".}: PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
  MultiDrawElementsIndirectCountARB* {.importc: "__glewMultiDrawElementsIndirectCountARB".}: PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
  DrawArraysInstancedARB* {.importc: "__glewDrawArraysInstancedARB".}: PFNGLDRAWARRAYSINSTANCEDARBPROC
  DrawElementsInstancedARB* {.importc: "__glewDrawElementsInstancedARB".}: PFNGLDRAWELEMENTSINSTANCEDARBPROC
  VertexAttribDivisorARB* {.importc: "__glewVertexAttribDivisorARB".}: PFNGLVERTEXATTRIBDIVISORARBPROC
  GetInternalformativ* {.importc: "__glewGetInternalformativ".}: PFNGLGETINTERNALFORMATIVPROC
  GetInternalformati64v* {.importc: "__glewGetInternalformati64v".}: PFNGLGETINTERNALFORMATI64VPROC
  InvalidateBufferData* {.importc: "__glewInvalidateBufferData".}: PFNGLINVALIDATEBUFFERDATAPROC
  InvalidateBufferSubData* {.importc: "__glewInvalidateBufferSubData".}: PFNGLINVALIDATEBUFFERSUBDATAPROC
  InvalidateFramebuffer* {.importc: "__glewInvalidateFramebuffer".}: PFNGLINVALIDATEFRAMEBUFFERPROC
  InvalidateSubFramebuffer* {.importc: "__glewInvalidateSubFramebuffer".}: PFNGLINVALIDATESUBFRAMEBUFFERPROC
  InvalidateTexImage* {.importc: "__glewInvalidateTexImage".}: PFNGLINVALIDATETEXIMAGEPROC
  InvalidateTexSubImage* {.importc: "__glewInvalidateTexSubImage".}: PFNGLINVALIDATETEXSUBIMAGEPROC
  FlushMappedBufferRange* {.importc: "__glewFlushMappedBufferRange".}: PFNGLFLUSHMAPPEDBUFFERRANGEPROC
  MapBufferRange* {.importc: "__glewMapBufferRange".}: PFNGLMAPBUFFERRANGEPROC
  CurrentPaletteMatrixARB* {.importc: "__glewCurrentPaletteMatrixARB".}: PFNGLCURRENTPALETTEMATRIXARBPROC
  MatrixIndexPointerARB* {.importc: "__glewMatrixIndexPointerARB".}: PFNGLMATRIXINDEXPOINTERARBPROC
  MatrixIndexubvARB* {.importc: "__glewMatrixIndexubvARB".}: PFNGLMATRIXINDEXUBVARBPROC
  MatrixIndexuivARB* {.importc: "__glewMatrixIndexuivARB".}: PFNGLMATRIXINDEXUIVARBPROC
  MatrixIndexusvARB* {.importc: "__glewMatrixIndexusvARB".}: PFNGLMATRIXINDEXUSVARBPROC
  BindBuffersBase* {.importc: "__glewBindBuffersBase".}: PFNGLBINDBUFFERSBASEPROC
  BindBuffersRange* {.importc: "__glewBindBuffersRange".}: PFNGLBINDBUFFERSRANGEPROC
  BindImageTextures* {.importc: "__glewBindImageTextures".}: PFNGLBINDIMAGETEXTURESPROC
  BindSamplers* {.importc: "__glewBindSamplers".}: PFNGLBINDSAMPLERSPROC
  BindTextures* {.importc: "__glewBindTextures".}: PFNGLBINDTEXTURESPROC
  BindVertexBuffers* {.importc: "__glewBindVertexBuffers".}: PFNGLBINDVERTEXBUFFERSPROC
  MultiDrawArraysIndirect* {.importc: "__glewMultiDrawArraysIndirect".}: PFNGLMULTIDRAWARRAYSINDIRECTPROC
  MultiDrawElementsIndirect* {.importc: "__glewMultiDrawElementsIndirect".}: PFNGLMULTIDRAWELEMENTSINDIRECTPROC
  SampleCoverageARB* {.importc: "__glewSampleCoverageARB".}: PFNGLSAMPLECOVERAGEARBPROC
  ActiveTextureARB* {.importc: "__glewActiveTextureARB".}: PFNGLACTIVETEXTUREARBPROC
  ClientActiveTextureARB* {.importc: "__glewClientActiveTextureARB".}: PFNGLCLIENTACTIVETEXTUREARBPROC
  MultiTexCoord1dARB* {.importc: "__glewMultiTexCoord1dARB".}: PFNGLMULTITEXCOORD1DARBPROC
  MultiTexCoord1dvARB* {.importc: "__glewMultiTexCoord1dvARB".}: PFNGLMULTITEXCOORD1DVARBPROC
  MultiTexCoord1fARB* {.importc: "__glewMultiTexCoord1fARB".}: PFNGLMULTITEXCOORD1FARBPROC
  MultiTexCoord1fvARB* {.importc: "__glewMultiTexCoord1fvARB".}: PFNGLMULTITEXCOORD1FVARBPROC
  MultiTexCoord1iARB* {.importc: "__glewMultiTexCoord1iARB".}: PFNGLMULTITEXCOORD1IARBPROC
  MultiTexCoord1ivARB* {.importc: "__glewMultiTexCoord1ivARB".}: PFNGLMULTITEXCOORD1IVARBPROC
  MultiTexCoord1sARB* {.importc: "__glewMultiTexCoord1sARB".}: PFNGLMULTITEXCOORD1SARBPROC
  MultiTexCoord1svARB* {.importc: "__glewMultiTexCoord1svARB".}: PFNGLMULTITEXCOORD1SVARBPROC
  MultiTexCoord2dARB* {.importc: "__glewMultiTexCoord2dARB".}: PFNGLMULTITEXCOORD2DARBPROC
  MultiTexCoord2dvARB* {.importc: "__glewMultiTexCoord2dvARB".}: PFNGLMULTITEXCOORD2DVARBPROC
  MultiTexCoord2fARB* {.importc: "__glewMultiTexCoord2fARB".}: PFNGLMULTITEXCOORD2FARBPROC
  MultiTexCoord2fvARB* {.importc: "__glewMultiTexCoord2fvARB".}: PFNGLMULTITEXCOORD2FVARBPROC
  MultiTexCoord2iARB* {.importc: "__glewMultiTexCoord2iARB".}: PFNGLMULTITEXCOORD2IARBPROC
  MultiTexCoord2ivARB* {.importc: "__glewMultiTexCoord2ivARB".}: PFNGLMULTITEXCOORD2IVARBPROC
  MultiTexCoord2sARB* {.importc: "__glewMultiTexCoord2sARB".}: PFNGLMULTITEXCOORD2SARBPROC
  MultiTexCoord2svARB* {.importc: "__glewMultiTexCoord2svARB".}: PFNGLMULTITEXCOORD2SVARBPROC
  MultiTexCoord3dARB* {.importc: "__glewMultiTexCoord3dARB".}: PFNGLMULTITEXCOORD3DARBPROC
  MultiTexCoord3dvARB* {.importc: "__glewMultiTexCoord3dvARB".}: PFNGLMULTITEXCOORD3DVARBPROC
  MultiTexCoord3fARB* {.importc: "__glewMultiTexCoord3fARB".}: PFNGLMULTITEXCOORD3FARBPROC
  MultiTexCoord3fvARB* {.importc: "__glewMultiTexCoord3fvARB".}: PFNGLMULTITEXCOORD3FVARBPROC
  MultiTexCoord3iARB* {.importc: "__glewMultiTexCoord3iARB".}: PFNGLMULTITEXCOORD3IARBPROC
  MultiTexCoord3ivARB* {.importc: "__glewMultiTexCoord3ivARB".}: PFNGLMULTITEXCOORD3IVARBPROC
  MultiTexCoord3sARB* {.importc: "__glewMultiTexCoord3sARB".}: PFNGLMULTITEXCOORD3SARBPROC
  MultiTexCoord3svARB* {.importc: "__glewMultiTexCoord3svARB".}: PFNGLMULTITEXCOORD3SVARBPROC
  MultiTexCoord4dARB* {.importc: "__glewMultiTexCoord4dARB".}: PFNGLMULTITEXCOORD4DARBPROC
  MultiTexCoord4dvARB* {.importc: "__glewMultiTexCoord4dvARB".}: PFNGLMULTITEXCOORD4DVARBPROC
  MultiTexCoord4fARB* {.importc: "__glewMultiTexCoord4fARB".}: PFNGLMULTITEXCOORD4FARBPROC
  MultiTexCoord4fvARB* {.importc: "__glewMultiTexCoord4fvARB".}: PFNGLMULTITEXCOORD4FVARBPROC
  MultiTexCoord4iARB* {.importc: "__glewMultiTexCoord4iARB".}: PFNGLMULTITEXCOORD4IARBPROC
  MultiTexCoord4ivARB* {.importc: "__glewMultiTexCoord4ivARB".}: PFNGLMULTITEXCOORD4IVARBPROC
  MultiTexCoord4sARB* {.importc: "__glewMultiTexCoord4sARB".}: PFNGLMULTITEXCOORD4SARBPROC
  MultiTexCoord4svARB* {.importc: "__glewMultiTexCoord4svARB".}: PFNGLMULTITEXCOORD4SVARBPROC
  BeginQueryARB* {.importc: "__glewBeginQueryARB".}: PFNGLBEGINQUERYARBPROC
  DeleteQueriesARB* {.importc: "__glewDeleteQueriesARB".}: PFNGLDELETEQUERIESARBPROC
  EndQueryARB* {.importc: "__glewEndQueryARB".}: PFNGLENDQUERYARBPROC
  GenQueriesARB* {.importc: "__glewGenQueriesARB".}: PFNGLGENQUERIESARBPROC
  GetQueryObjectivARB* {.importc: "__glewGetQueryObjectivARB".}: PFNGLGETQUERYOBJECTIVARBPROC
  GetQueryObjectuivARB* {.importc: "__glewGetQueryObjectuivARB".}: PFNGLGETQUERYOBJECTUIVARBPROC
  GetQueryivARB* {.importc: "__glewGetQueryivARB".}: PFNGLGETQUERYIVARBPROC
  IsQueryARB* {.importc: "__glewIsQueryARB".}: PFNGLISQUERYARBPROC
  MaxShaderCompilerThreadsARB* {.importc: "__glewMaxShaderCompilerThreadsARB".}: PFNGLMAXSHADERCOMPILERTHREADSARBPROC
  PointParameterfARB* {.importc: "__glewPointParameterfARB".}: PFNGLPOINTPARAMETERFARBPROC
  PointParameterfvARB* {.importc: "__glewPointParameterfvARB".}: PFNGLPOINTPARAMETERFVARBPROC
  PolygonOffsetClamp* {.importc: "__glewPolygonOffsetClamp".}: PFNGLPOLYGONOFFSETCLAMPPROC
  GetProgramInterfaceiv* {.importc: "__glewGetProgramInterfaceiv".}: PFNGLGETPROGRAMINTERFACEIVPROC
  GetProgramResourceIndex* {.importc: "__glewGetProgramResourceIndex".}: PFNGLGETPROGRAMRESOURCEINDEXPROC
  GetProgramResourceLocation* {.importc: "__glewGetProgramResourceLocation".}: PFNGLGETPROGRAMRESOURCELOCATIONPROC
  GetProgramResourceLocationIndex* {.importc: "__glewGetProgramResourceLocationIndex".}: PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
  GetProgramResourceName* {.importc: "__glewGetProgramResourceName".}: PFNGLGETPROGRAMRESOURCENAMEPROC
  GetProgramResourceiv* {.importc: "__glewGetProgramResourceiv".}: PFNGLGETPROGRAMRESOURCEIVPROC
  ProvokingVertex* {.importc: "__glewProvokingVertex".}: PFNGLPROVOKINGVERTEXPROC
  GetGraphicsResetStatusARB* {.importc: "__glewGetGraphicsResetStatusARB".}: PFNGLGETGRAPHICSRESETSTATUSARBPROC
  GetnColorTableARB* {.importc: "__glewGetnColorTableARB".}: PFNGLGETNCOLORTABLEARBPROC
  GetnCompressedTexImageARB* {.importc: "__glewGetnCompressedTexImageARB".}: PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
  GetnConvolutionFilterARB* {.importc: "__glewGetnConvolutionFilterARB".}: PFNGLGETNCONVOLUTIONFILTERARBPROC
  GetnHistogramARB* {.importc: "__glewGetnHistogramARB".}: PFNGLGETNHISTOGRAMARBPROC
  GetnMapdvARB* {.importc: "__glewGetnMapdvARB".}: PFNGLGETNMAPDVARBPROC
  GetnMapfvARB* {.importc: "__glewGetnMapfvARB".}: PFNGLGETNMAPFVARBPROC
  GetnMapivARB* {.importc: "__glewGetnMapivARB".}: PFNGLGETNMAPIVARBPROC
  GetnMinmaxARB* {.importc: "__glewGetnMinmaxARB".}: PFNGLGETNMINMAXARBPROC
  GetnPixelMapfvARB* {.importc: "__glewGetnPixelMapfvARB".}: PFNGLGETNPIXELMAPFVARBPROC
  GetnPixelMapuivARB* {.importc: "__glewGetnPixelMapuivARB".}: PFNGLGETNPIXELMAPUIVARBPROC
  GetnPixelMapusvARB* {.importc: "__glewGetnPixelMapusvARB".}: PFNGLGETNPIXELMAPUSVARBPROC
  GetnPolygonStippleARB* {.importc: "__glewGetnPolygonStippleARB".}: PFNGLGETNPOLYGONSTIPPLEARBPROC
  GetnSeparableFilterARB* {.importc: "__glewGetnSeparableFilterARB".}: PFNGLGETNSEPARABLEFILTERARBPROC
  GetnTexImageARB* {.importc: "__glewGetnTexImageARB".}: PFNGLGETNTEXIMAGEARBPROC
  GetnUniformdvARB* {.importc: "__glewGetnUniformdvARB".}: PFNGLGETNUNIFORMDVARBPROC
  GetnUniformfvARB* {.importc: "__glewGetnUniformfvARB".}: PFNGLGETNUNIFORMFVARBPROC
  GetnUniformivARB* {.importc: "__glewGetnUniformivARB".}: PFNGLGETNUNIFORMIVARBPROC
  GetnUniformuivARB* {.importc: "__glewGetnUniformuivARB".}: PFNGLGETNUNIFORMUIVARBPROC
  ReadnPixelsARB* {.importc: "__glewReadnPixelsARB".}: PFNGLREADNPIXELSARBPROC
  FramebufferSampleLocationsfvARB* {.importc: "__glewFramebufferSampleLocationsfvARB".}: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC
  NamedFramebufferSampleLocationsfvARB* {.
      importc: "__glewNamedFramebufferSampleLocationsfvARB".}: PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC
  MinSampleShadingARB* {.importc: "__glewMinSampleShadingARB".}: PFNGLMINSAMPLESHADINGARBPROC
  BindSampler* {.importc: "__glewBindSampler".}: PFNGLBINDSAMPLERPROC
  DeleteSamplers* {.importc: "__glewDeleteSamplers".}: PFNGLDELETESAMPLERSPROC
  GenSamplers* {.importc: "__glewGenSamplers".}: PFNGLGENSAMPLERSPROC
  GetSamplerParameterIiv* {.importc: "__glewGetSamplerParameterIiv".}: PFNGLGETSAMPLERPARAMETERIIVPROC
  GetSamplerParameterIuiv* {.importc: "__glewGetSamplerParameterIuiv".}: PFNGLGETSAMPLERPARAMETERIUIVPROC
  GetSamplerParameterfv* {.importc: "__glewGetSamplerParameterfv".}: PFNGLGETSAMPLERPARAMETERFVPROC
  GetSamplerParameteriv* {.importc: "__glewGetSamplerParameteriv".}: PFNGLGETSAMPLERPARAMETERIVPROC
  IsSampler* {.importc: "__glewIsSampler".}: PFNGLISSAMPLERPROC
  SamplerParameterIiv* {.importc: "__glewSamplerParameterIiv".}: PFNGLSAMPLERPARAMETERIIVPROC
  SamplerParameterIuiv* {.importc: "__glewSamplerParameterIuiv".}: PFNGLSAMPLERPARAMETERIUIVPROC
  SamplerParameterf* {.importc: "__glewSamplerParameterf".}: PFNGLSAMPLERPARAMETERFPROC
  SamplerParameterfv* {.importc: "__glewSamplerParameterfv".}: PFNGLSAMPLERPARAMETERFVPROC
  SamplerParameteri* {.importc: "__glewSamplerParameteri".}: PFNGLSAMPLERPARAMETERIPROC
  SamplerParameteriv* {.importc: "__glewSamplerParameteriv".}: PFNGLSAMPLERPARAMETERIVPROC
  ActiveShaderProgram* {.importc: "__glewActiveShaderProgram".}: PFNGLACTIVESHADERPROGRAMPROC
  BindProgramPipeline* {.importc: "__glewBindProgramPipeline".}: PFNGLBINDPROGRAMPIPELINEPROC
  CreateShaderProgramv* {.importc: "__glewCreateShaderProgramv".}: PFNGLCREATESHADERPROGRAMVPROC
  DeleteProgramPipelines* {.importc: "__glewDeleteProgramPipelines".}: PFNGLDELETEPROGRAMPIPELINESPROC
  GenProgramPipelines* {.importc: "__glewGenProgramPipelines".}: PFNGLGENPROGRAMPIPELINESPROC
  GetProgramPipelineInfoLog* {.importc: "__glewGetProgramPipelineInfoLog".}: PFNGLGETPROGRAMPIPELINEINFOLOGPROC
  GetProgramPipelineiv* {.importc: "__glewGetProgramPipelineiv".}: PFNGLGETPROGRAMPIPELINEIVPROC
  IsProgramPipeline* {.importc: "__glewIsProgramPipeline".}: PFNGLISPROGRAMPIPELINEPROC
  ProgramUniform1d* {.importc: "__glewProgramUniform1d".}: PFNGLPROGRAMUNIFORM1DPROC
  ProgramUniform1dv* {.importc: "__glewProgramUniform1dv".}: PFNGLPROGRAMUNIFORM1DVPROC
  ProgramUniform1f* {.importc: "__glewProgramUniform1f".}: PFNGLPROGRAMUNIFORM1FPROC
  ProgramUniform1fv* {.importc: "__glewProgramUniform1fv".}: PFNGLPROGRAMUNIFORM1FVPROC
  ProgramUniform1i* {.importc: "__glewProgramUniform1i".}: PFNGLPROGRAMUNIFORM1IPROC
  ProgramUniform1iv* {.importc: "__glewProgramUniform1iv".}: PFNGLPROGRAMUNIFORM1IVPROC
  ProgramUniform1ui* {.importc: "__glewProgramUniform1ui".}: PFNGLPROGRAMUNIFORM1UIPROC
  ProgramUniform1uiv* {.importc: "__glewProgramUniform1uiv".}: PFNGLPROGRAMUNIFORM1UIVPROC
  ProgramUniform2d* {.importc: "__glewProgramUniform2d".}: PFNGLPROGRAMUNIFORM2DPROC
  ProgramUniform2dv* {.importc: "__glewProgramUniform2dv".}: PFNGLPROGRAMUNIFORM2DVPROC
  ProgramUniform2f* {.importc: "__glewProgramUniform2f".}: PFNGLPROGRAMUNIFORM2FPROC
  ProgramUniform2fv* {.importc: "__glewProgramUniform2fv".}: PFNGLPROGRAMUNIFORM2FVPROC
  ProgramUniform2i* {.importc: "__glewProgramUniform2i".}: PFNGLPROGRAMUNIFORM2IPROC
  ProgramUniform2iv* {.importc: "__glewProgramUniform2iv".}: PFNGLPROGRAMUNIFORM2IVPROC
  ProgramUniform2ui* {.importc: "__glewProgramUniform2ui".}: PFNGLPROGRAMUNIFORM2UIPROC
  ProgramUniform2uiv* {.importc: "__glewProgramUniform2uiv".}: PFNGLPROGRAMUNIFORM2UIVPROC
  ProgramUniform3d* {.importc: "__glewProgramUniform3d".}: PFNGLPROGRAMUNIFORM3DPROC
  ProgramUniform3dv* {.importc: "__glewProgramUniform3dv".}: PFNGLPROGRAMUNIFORM3DVPROC
  ProgramUniform3f* {.importc: "__glewProgramUniform3f".}: PFNGLPROGRAMUNIFORM3FPROC
  ProgramUniform3fv* {.importc: "__glewProgramUniform3fv".}: PFNGLPROGRAMUNIFORM3FVPROC
  ProgramUniform3i* {.importc: "__glewProgramUniform3i".}: PFNGLPROGRAMUNIFORM3IPROC
  ProgramUniform3iv* {.importc: "__glewProgramUniform3iv".}: PFNGLPROGRAMUNIFORM3IVPROC
  ProgramUniform3ui* {.importc: "__glewProgramUniform3ui".}: PFNGLPROGRAMUNIFORM3UIPROC
  ProgramUniform3uiv* {.importc: "__glewProgramUniform3uiv".}: PFNGLPROGRAMUNIFORM3UIVPROC
  ProgramUniform4d* {.importc: "__glewProgramUniform4d".}: PFNGLPROGRAMUNIFORM4DPROC
  ProgramUniform4dv* {.importc: "__glewProgramUniform4dv".}: PFNGLPROGRAMUNIFORM4DVPROC
  ProgramUniform4f* {.importc: "__glewProgramUniform4f".}: PFNGLPROGRAMUNIFORM4FPROC
  ProgramUniform4fv* {.importc: "__glewProgramUniform4fv".}: PFNGLPROGRAMUNIFORM4FVPROC
  ProgramUniform4i* {.importc: "__glewProgramUniform4i".}: PFNGLPROGRAMUNIFORM4IPROC
  ProgramUniform4iv* {.importc: "__glewProgramUniform4iv".}: PFNGLPROGRAMUNIFORM4IVPROC
  ProgramUniform4ui* {.importc: "__glewProgramUniform4ui".}: PFNGLPROGRAMUNIFORM4UIPROC
  ProgramUniform4uiv* {.importc: "__glewProgramUniform4uiv".}: PFNGLPROGRAMUNIFORM4UIVPROC
  ProgramUniformMatrix2dv* {.importc: "__glewProgramUniformMatrix2dv".}: PFNGLPROGRAMUNIFORMMATRIX2DVPROC
  ProgramUniformMatrix2fv* {.importc: "__glewProgramUniformMatrix2fv".}: PFNGLPROGRAMUNIFORMMATRIX2FVPROC
  ProgramUniformMatrix2x3dv* {.importc: "__glewProgramUniformMatrix2x3dv".}: PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
  ProgramUniformMatrix2x3fv* {.importc: "__glewProgramUniformMatrix2x3fv".}: PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
  ProgramUniformMatrix2x4dv* {.importc: "__glewProgramUniformMatrix2x4dv".}: PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
  ProgramUniformMatrix2x4fv* {.importc: "__glewProgramUniformMatrix2x4fv".}: PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
  ProgramUniformMatrix3dv* {.importc: "__glewProgramUniformMatrix3dv".}: PFNGLPROGRAMUNIFORMMATRIX3DVPROC
  ProgramUniformMatrix3fv* {.importc: "__glewProgramUniformMatrix3fv".}: PFNGLPROGRAMUNIFORMMATRIX3FVPROC
  ProgramUniformMatrix3x2dv* {.importc: "__glewProgramUniformMatrix3x2dv".}: PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
  ProgramUniformMatrix3x2fv* {.importc: "__glewProgramUniformMatrix3x2fv".}: PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
  ProgramUniformMatrix3x4dv* {.importc: "__glewProgramUniformMatrix3x4dv".}: PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
  ProgramUniformMatrix3x4fv* {.importc: "__glewProgramUniformMatrix3x4fv".}: PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
  ProgramUniformMatrix4dv* {.importc: "__glewProgramUniformMatrix4dv".}: PFNGLPROGRAMUNIFORMMATRIX4DVPROC
  ProgramUniformMatrix4fv* {.importc: "__glewProgramUniformMatrix4fv".}: PFNGLPROGRAMUNIFORMMATRIX4FVPROC
  ProgramUniformMatrix4x2dv* {.importc: "__glewProgramUniformMatrix4x2dv".}: PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
  ProgramUniformMatrix4x2fv* {.importc: "__glewProgramUniformMatrix4x2fv".}: PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
  ProgramUniformMatrix4x3dv* {.importc: "__glewProgramUniformMatrix4x3dv".}: PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
  ProgramUniformMatrix4x3fv* {.importc: "__glewProgramUniformMatrix4x3fv".}: PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
  UseProgramStages* {.importc: "__glewUseProgramStages".}: PFNGLUSEPROGRAMSTAGESPROC
  ValidateProgramPipeline* {.importc: "__glewValidateProgramPipeline".}: PFNGLVALIDATEPROGRAMPIPELINEPROC
  GetActiveAtomicCounterBufferiv* {.importc: "__glewGetActiveAtomicCounterBufferiv".}: PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
  BindImageTexture* {.importc: "__glewBindImageTexture".}: PFNGLBINDIMAGETEXTUREPROC
  MemoryBarrier* {.importc: "__glewMemoryBarrier".}: PFNGLMEMORYBARRIERPROC
  AttachObjectARB* {.importc: "__glewAttachObjectARB".}: PFNGLATTACHOBJECTARBPROC
  CompileShaderARB* {.importc: "__glewCompileShaderARB".}: PFNGLCOMPILESHADERARBPROC
  CreateProgramObjectARB* {.importc: "__glewCreateProgramObjectARB".}: PFNGLCREATEPROGRAMOBJECTARBPROC
  CreateShaderObjectARB* {.importc: "__glewCreateShaderObjectARB".}: PFNGLCREATESHADEROBJECTARBPROC
  DeleteObjectARB* {.importc: "__glewDeleteObjectARB".}: PFNGLDELETEOBJECTARBPROC
  DetachObjectARB* {.importc: "__glewDetachObjectARB".}: PFNGLDETACHOBJECTARBPROC
  GetActiveUniformARB* {.importc: "__glewGetActiveUniformARB".}: PFNGLGETACTIVEUNIFORMARBPROC
  GetAttachedObjectsARB* {.importc: "__glewGetAttachedObjectsARB".}: PFNGLGETATTACHEDOBJECTSARBPROC
  GetHandleARB* {.importc: "__glewGetHandleARB".}: PFNGLGETHANDLEARBPROC
  GetInfoLogARB* {.importc: "__glewGetInfoLogARB".}: PFNGLGETINFOLOGARBPROC
  GetObjectParameterfvARB* {.importc: "__glewGetObjectParameterfvARB".}: PFNGLGETOBJECTPARAMETERFVARBPROC
  GetObjectParameterivARB* {.importc: "__glewGetObjectParameterivARB".}: PFNGLGETOBJECTPARAMETERIVARBPROC
  GetShaderSourceARB* {.importc: "__glewGetShaderSourceARB".}: PFNGLGETSHADERSOURCEARBPROC
  GetUniformLocationARB* {.importc: "__glewGetUniformLocationARB".}: PFNGLGETUNIFORMLOCATIONARBPROC
  GetUniformfvARB* {.importc: "__glewGetUniformfvARB".}: PFNGLGETUNIFORMFVARBPROC
  GetUniformivARB* {.importc: "__glewGetUniformivARB".}: PFNGLGETUNIFORMIVARBPROC
  LinkProgramARB* {.importc: "__glewLinkProgramARB".}: PFNGLLINKPROGRAMARBPROC
  ShaderSourceARB* {.importc: "__glewShaderSourceARB".}: PFNGLSHADERSOURCEARBPROC
  Uniform1fARB* {.importc: "__glewUniform1fARB".}: PFNGLUNIFORM1FARBPROC
  Uniform1fvARB* {.importc: "__glewUniform1fvARB".}: PFNGLUNIFORM1FVARBPROC
  Uniform1iARB* {.importc: "__glewUniform1iARB".}: PFNGLUNIFORM1IARBPROC
  Uniform1ivARB* {.importc: "__glewUniform1ivARB".}: PFNGLUNIFORM1IVARBPROC
  Uniform2fARB* {.importc: "__glewUniform2fARB".}: PFNGLUNIFORM2FARBPROC
  Uniform2fvARB* {.importc: "__glewUniform2fvARB".}: PFNGLUNIFORM2FVARBPROC
  Uniform2iARB* {.importc: "__glewUniform2iARB".}: PFNGLUNIFORM2IARBPROC
  Uniform2ivARB* {.importc: "__glewUniform2ivARB".}: PFNGLUNIFORM2IVARBPROC
  Uniform3fARB* {.importc: "__glewUniform3fARB".}: PFNGLUNIFORM3FARBPROC
  Uniform3fvARB* {.importc: "__glewUniform3fvARB".}: PFNGLUNIFORM3FVARBPROC
  Uniform3iARB* {.importc: "__glewUniform3iARB".}: PFNGLUNIFORM3IARBPROC
  Uniform3ivARB* {.importc: "__glewUniform3ivARB".}: PFNGLUNIFORM3IVARBPROC
  Uniform4fARB* {.importc: "__glewUniform4fARB".}: PFNGLUNIFORM4FARBPROC
  Uniform4fvARB* {.importc: "__glewUniform4fvARB".}: PFNGLUNIFORM4FVARBPROC
  Uniform4iARB* {.importc: "__glewUniform4iARB".}: PFNGLUNIFORM4IARBPROC
  Uniform4ivARB* {.importc: "__glewUniform4ivARB".}: PFNGLUNIFORM4IVARBPROC
  UniformMatrix2fvARB* {.importc: "__glewUniformMatrix2fvARB".}: PFNGLUNIFORMMATRIX2FVARBPROC
  UniformMatrix3fvARB* {.importc: "__glewUniformMatrix3fvARB".}: PFNGLUNIFORMMATRIX3FVARBPROC
  UniformMatrix4fvARB* {.importc: "__glewUniformMatrix4fvARB".}: PFNGLUNIFORMMATRIX4FVARBPROC
  UseProgramObjectARB* {.importc: "__glewUseProgramObjectARB".}: PFNGLUSEPROGRAMOBJECTARBPROC
  ValidateProgramARB* {.importc: "__glewValidateProgramARB".}: PFNGLVALIDATEPROGRAMARBPROC
  ShaderStorageBlockBinding* {.importc: "__glewShaderStorageBlockBinding".}: PFNGLSHADERSTORAGEBLOCKBINDINGPROC
  GetActiveSubroutineName* {.importc: "__glewGetActiveSubroutineName".}: PFNGLGETACTIVESUBROUTINENAMEPROC
  GetActiveSubroutineUniformName* {.importc: "__glewGetActiveSubroutineUniformName".}: PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
  GetActiveSubroutineUniformiv* {.importc: "__glewGetActiveSubroutineUniformiv".}: PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
  GetProgramStageiv* {.importc: "__glewGetProgramStageiv".}: PFNGLGETPROGRAMSTAGEIVPROC
  GetSubroutineIndex* {.importc: "__glewGetSubroutineIndex".}: PFNGLGETSUBROUTINEINDEXPROC
  GetSubroutineUniformLocation* {.importc: "__glewGetSubroutineUniformLocation".}: PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
  GetUniformSubroutineuiv* {.importc: "__glewGetUniformSubroutineuiv".}: PFNGLGETUNIFORMSUBROUTINEUIVPROC
  UniformSubroutinesuiv* {.importc: "__glewUniformSubroutinesuiv".}: PFNGLUNIFORMSUBROUTINESUIVPROC
  CompileShaderIncludeARB* {.importc: "__glewCompileShaderIncludeARB".}: PFNGLCOMPILESHADERINCLUDEARBPROC
  DeleteNamedStringARB* {.importc: "__glewDeleteNamedStringARB".}: PFNGLDELETENAMEDSTRINGARBPROC
  GetNamedStringARB* {.importc: "__glewGetNamedStringARB".}: PFNGLGETNAMEDSTRINGARBPROC
  GetNamedStringivARB* {.importc: "__glewGetNamedStringivARB".}: PFNGLGETNAMEDSTRINGIVARBPROC
  IsNamedStringARB* {.importc: "__glewIsNamedStringARB".}: PFNGLISNAMEDSTRINGARBPROC
  NamedStringARB* {.importc: "__glewNamedStringARB".}: PFNGLNAMEDSTRINGARBPROC
  BufferPageCommitmentARB* {.importc: "__glewBufferPageCommitmentARB".}: PFNGLBUFFERPAGECOMMITMENTARBPROC
  TexPageCommitmentARB* {.importc: "__glewTexPageCommitmentARB".}: PFNGLTEXPAGECOMMITMENTARBPROC
  ClientWaitSync* {.importc: "__glewClientWaitSync".}: PFNGLCLIENTWAITSYNCPROC
  DeleteSync* {.importc: "__glewDeleteSync".}: PFNGLDELETESYNCPROC
  FenceSync* {.importc: "__glewFenceSync".}: PFNGLFENCESYNCPROC
  GetInteger64v* {.importc: "__glewGetInteger64v".}: PFNGLGETINTEGER64VPROC
  GetSynciv* {.importc: "__glewGetSynciv".}: PFNGLGETSYNCIVPROC
  IsSync* {.importc: "__glewIsSync".}: PFNGLISSYNCPROC
  WaitSync* {.importc: "__glewWaitSync".}: PFNGLWAITSYNCPROC
  PatchParameterfv* {.importc: "__glewPatchParameterfv".}: PFNGLPATCHPARAMETERFVPROC
  PatchParameteri* {.importc: "__glewPatchParameteri".}: PFNGLPATCHPARAMETERIPROC
  TextureBarrier* {.importc: "__glewTextureBarrier".}: PFNGLTEXTUREBARRIERPROC
  TexBufferARB* {.importc: "__glewTexBufferARB".}: PFNGLTEXBUFFERARBPROC
  TexBufferRange* {.importc: "__glewTexBufferRange".}: PFNGLTEXBUFFERRANGEPROC
  TextureBufferRangeEXT* {.importc: "__glewTextureBufferRangeEXT".}: PFNGLTEXTUREBUFFERRANGEEXTPROC
  CompressedTexImage1DARB* {.importc: "__glewCompressedTexImage1DARB".}: PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
  CompressedTexImage2DARB* {.importc: "__glewCompressedTexImage2DARB".}: PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
  CompressedTexImage3DARB* {.importc: "__glewCompressedTexImage3DARB".}: PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
  CompressedTexSubImage1DARB* {.importc: "__glewCompressedTexSubImage1DARB".}: PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
  CompressedTexSubImage2DARB* {.importc: "__glewCompressedTexSubImage2DARB".}: PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
  CompressedTexSubImage3DARB* {.importc: "__glewCompressedTexSubImage3DARB".}: PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
  GetCompressedTexImageARB* {.importc: "__glewGetCompressedTexImageARB".}: PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
  GetMultisamplefv* {.importc: "__glewGetMultisamplefv".}: PFNGLGETMULTISAMPLEFVPROC
  SampleMaski* {.importc: "__glewSampleMaski".}: PFNGLSAMPLEMASKIPROC
  TexImage2DMultisample* {.importc: "__glewTexImage2DMultisample".}: PFNGLTEXIMAGE2DMULTISAMPLEPROC
  TexImage3DMultisample* {.importc: "__glewTexImage3DMultisample".}: PFNGLTEXIMAGE3DMULTISAMPLEPROC
  TexStorage1D* {.importc: "__glewTexStorage1D".}: PFNGLTEXSTORAGE1DPROC
  TexStorage2D* {.importc: "__glewTexStorage2D".}: PFNGLTEXSTORAGE2DPROC
  TexStorage3D* {.importc: "__glewTexStorage3D".}: PFNGLTEXSTORAGE3DPROC
  TexStorage2DMultisample* {.importc: "__glewTexStorage2DMultisample".}: PFNGLTEXSTORAGE2DMULTISAMPLEPROC
  TexStorage3DMultisample* {.importc: "__glewTexStorage3DMultisample".}: PFNGLTEXSTORAGE3DMULTISAMPLEPROC
  TextureStorage2DMultisampleEXT* {.importc: "__glewTextureStorage2DMultisampleEXT".}: PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
  TextureStorage3DMultisampleEXT* {.importc: "__glewTextureStorage3DMultisampleEXT".}: PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
  TextureView* {.importc: "__glewTextureView".}: PFNGLTEXTUREVIEWPROC
  GetQueryObjecti64v* {.importc: "__glewGetQueryObjecti64v".}: PFNGLGETQUERYOBJECTI64VPROC
  GetQueryObjectui64v* {.importc: "__glewGetQueryObjectui64v".}: PFNGLGETQUERYOBJECTUI64VPROC
  QueryCounter* {.importc: "__glewQueryCounter".}: PFNGLQUERYCOUNTERPROC
  BindTransformFeedback* {.importc: "__glewBindTransformFeedback".}: PFNGLBINDTRANSFORMFEEDBACKPROC
  DeleteTransformFeedbacks* {.importc: "__glewDeleteTransformFeedbacks".}: PFNGLDELETETRANSFORMFEEDBACKSPROC
  DrawTransformFeedback* {.importc: "__glewDrawTransformFeedback".}: PFNGLDRAWTRANSFORMFEEDBACKPROC
  GenTransformFeedbacks* {.importc: "__glewGenTransformFeedbacks".}: PFNGLGENTRANSFORMFEEDBACKSPROC
  IsTransformFeedback* {.importc: "__glewIsTransformFeedback".}: PFNGLISTRANSFORMFEEDBACKPROC
  PauseTransformFeedback* {.importc: "__glewPauseTransformFeedback".}: PFNGLPAUSETRANSFORMFEEDBACKPROC
  ResumeTransformFeedback* {.importc: "__glewResumeTransformFeedback".}: PFNGLRESUMETRANSFORMFEEDBACKPROC
  BeginQueryIndexed* {.importc: "__glewBeginQueryIndexed".}: PFNGLBEGINQUERYINDEXEDPROC
  DrawTransformFeedbackStream* {.importc: "__glewDrawTransformFeedbackStream".}: PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
  EndQueryIndexed* {.importc: "__glewEndQueryIndexed".}: PFNGLENDQUERYINDEXEDPROC
  GetQueryIndexediv* {.importc: "__glewGetQueryIndexediv".}: PFNGLGETQUERYINDEXEDIVPROC
  DrawTransformFeedbackInstanced* {.importc: "__glewDrawTransformFeedbackInstanced".}: PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
  DrawTransformFeedbackStreamInstanced* {.
      importc: "__glewDrawTransformFeedbackStreamInstanced".}: PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
  LoadTransposeMatrixdARB* {.importc: "__glewLoadTransposeMatrixdARB".}: PFNGLLOADTRANSPOSEMATRIXDARBPROC
  LoadTransposeMatrixfARB* {.importc: "__glewLoadTransposeMatrixfARB".}: PFNGLLOADTRANSPOSEMATRIXFARBPROC
  MultTransposeMatrixdARB* {.importc: "__glewMultTransposeMatrixdARB".}: PFNGLMULTTRANSPOSEMATRIXDARBPROC
  MultTransposeMatrixfARB* {.importc: "__glewMultTransposeMatrixfARB".}: PFNGLMULTTRANSPOSEMATRIXFARBPROC
  BindBufferBase* {.importc: "__glewBindBufferBase".}: PFNGLBINDBUFFERBASEPROC
  BindBufferRange* {.importc: "__glewBindBufferRange".}: PFNGLBINDBUFFERRANGEPROC
  GetActiveUniformBlockName* {.importc: "__glewGetActiveUniformBlockName".}: PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
  GetActiveUniformBlockiv* {.importc: "__glewGetActiveUniformBlockiv".}: PFNGLGETACTIVEUNIFORMBLOCKIVPROC
  GetActiveUniformName* {.importc: "__glewGetActiveUniformName".}: PFNGLGETACTIVEUNIFORMNAMEPROC
  GetActiveUniformsiv* {.importc: "__glewGetActiveUniformsiv".}: PFNGLGETACTIVEUNIFORMSIVPROC
  GetIntegeri_v* {.importc: "__glewGetIntegeri_v".}: PFNGLGETINTEGERI_VPROC
  GetUniformBlockIndex* {.importc: "__glewGetUniformBlockIndex".}: PFNGLGETUNIFORMBLOCKINDEXPROC
  GetUniformIndices* {.importc: "__glewGetUniformIndices".}: PFNGLGETUNIFORMINDICESPROC
  UniformBlockBinding* {.importc: "__glewUniformBlockBinding".}: PFNGLUNIFORMBLOCKBINDINGPROC
  BindVertexArray* {.importc: "__glewBindVertexArray".}: PFNGLBINDVERTEXARRAYPROC
  DeleteVertexArrays* {.importc: "__glewDeleteVertexArrays".}: PFNGLDELETEVERTEXARRAYSPROC
  GenVertexArrays* {.importc: "__glewGenVertexArrays".}: PFNGLGENVERTEXARRAYSPROC
  IsVertexArray* {.importc: "__glewIsVertexArray".}: PFNGLISVERTEXARRAYPROC
  GetVertexAttribLdv* {.importc: "__glewGetVertexAttribLdv".}: PFNGLGETVERTEXATTRIBLDVPROC
  VertexAttribL1d* {.importc: "__glewVertexAttribL1d".}: PFNGLVERTEXATTRIBL1DPROC
  VertexAttribL1dv* {.importc: "__glewVertexAttribL1dv".}: PFNGLVERTEXATTRIBL1DVPROC
  VertexAttribL2d* {.importc: "__glewVertexAttribL2d".}: PFNGLVERTEXATTRIBL2DPROC
  VertexAttribL2dv* {.importc: "__glewVertexAttribL2dv".}: PFNGLVERTEXATTRIBL2DVPROC
  VertexAttribL3d* {.importc: "__glewVertexAttribL3d".}: PFNGLVERTEXATTRIBL3DPROC
  VertexAttribL3dv* {.importc: "__glewVertexAttribL3dv".}: PFNGLVERTEXATTRIBL3DVPROC
  VertexAttribL4d* {.importc: "__glewVertexAttribL4d".}: PFNGLVERTEXATTRIBL4DPROC
  VertexAttribL4dv* {.importc: "__glewVertexAttribL4dv".}: PFNGLVERTEXATTRIBL4DVPROC
  VertexAttribLPointer* {.importc: "__glewVertexAttribLPointer".}: PFNGLVERTEXATTRIBLPOINTERPROC
  BindVertexBuffer* {.importc: "__glewBindVertexBuffer".}: PFNGLBINDVERTEXBUFFERPROC
  VertexArrayBindVertexBufferEXT* {.importc: "__glewVertexArrayBindVertexBufferEXT".}: PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
  VertexArrayVertexAttribBindingEXT* {.importc: "__glewVertexArrayVertexAttribBindingEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
  VertexArrayVertexAttribFormatEXT* {.importc: "__glewVertexArrayVertexAttribFormatEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
  VertexArrayVertexAttribIFormatEXT* {.importc: "__glewVertexArrayVertexAttribIFormatEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
  VertexArrayVertexAttribLFormatEXT* {.importc: "__glewVertexArrayVertexAttribLFormatEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
  VertexArrayVertexBindingDivisorEXT* {.importc: "__glewVertexArrayVertexBindingDivisorEXT".}: PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
  VertexAttribBinding* {.importc: "__glewVertexAttribBinding".}: PFNGLVERTEXATTRIBBINDINGPROC
  VertexAttribFormat* {.importc: "__glewVertexAttribFormat".}: PFNGLVERTEXATTRIBFORMATPROC
  VertexAttribIFormat* {.importc: "__glewVertexAttribIFormat".}: PFNGLVERTEXATTRIBIFORMATPROC
  VertexAttribLFormat* {.importc: "__glewVertexAttribLFormat".}: PFNGLVERTEXATTRIBLFORMATPROC
  VertexBindingDivisor* {.importc: "__glewVertexBindingDivisor".}: PFNGLVERTEXBINDINGDIVISORPROC
  VertexBlendARB* {.importc: "__glewVertexBlendARB".}: PFNGLVERTEXBLENDARBPROC
  WeightPointerARB* {.importc: "__glewWeightPointerARB".}: PFNGLWEIGHTPOINTERARBPROC
  WeightbvARB* {.importc: "__glewWeightbvARB".}: PFNGLWEIGHTBVARBPROC
  WeightdvARB* {.importc: "__glewWeightdvARB".}: PFNGLWEIGHTDVARBPROC
  WeightfvARB* {.importc: "__glewWeightfvARB".}: PFNGLWEIGHTFVARBPROC
  WeightivARB* {.importc: "__glewWeightivARB".}: PFNGLWEIGHTIVARBPROC
  WeightsvARB* {.importc: "__glewWeightsvARB".}: PFNGLWEIGHTSVARBPROC
  WeightubvARB* {.importc: "__glewWeightubvARB".}: PFNGLWEIGHTUBVARBPROC
  WeightuivARB* {.importc: "__glewWeightuivARB".}: PFNGLWEIGHTUIVARBPROC
  WeightusvARB* {.importc: "__glewWeightusvARB".}: PFNGLWEIGHTUSVARBPROC
  BindBufferARB* {.importc: "__glewBindBufferARB".}: PFNGLBINDBUFFERARBPROC
  BufferDataARB* {.importc: "__glewBufferDataARB".}: PFNGLBUFFERDATAARBPROC
  BufferSubDataARB* {.importc: "__glewBufferSubDataARB".}: PFNGLBUFFERSUBDATAARBPROC
  DeleteBuffersARB* {.importc: "__glewDeleteBuffersARB".}: PFNGLDELETEBUFFERSARBPROC
  GenBuffersARB* {.importc: "__glewGenBuffersARB".}: PFNGLGENBUFFERSARBPROC
  GetBufferParameterivARB* {.importc: "__glewGetBufferParameterivARB".}: PFNGLGETBUFFERPARAMETERIVARBPROC
  GetBufferPointervARB* {.importc: "__glewGetBufferPointervARB".}: PFNGLGETBUFFERPOINTERVARBPROC
  GetBufferSubDataARB* {.importc: "__glewGetBufferSubDataARB".}: PFNGLGETBUFFERSUBDATAARBPROC
  IsBufferARB* {.importc: "__glewIsBufferARB".}: PFNGLISBUFFERARBPROC
  MapBufferARB* {.importc: "__glewMapBufferARB".}: PFNGLMAPBUFFERARBPROC
  UnmapBufferARB* {.importc: "__glewUnmapBufferARB".}: PFNGLUNMAPBUFFERARBPROC
  BindProgramARB* {.importc: "__glewBindProgramARB".}: PFNGLBINDPROGRAMARBPROC
  DeleteProgramsARB* {.importc: "__glewDeleteProgramsARB".}: PFNGLDELETEPROGRAMSARBPROC
  DisableVertexAttribArrayARB* {.importc: "__glewDisableVertexAttribArrayARB".}: PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
  EnableVertexAttribArrayARB* {.importc: "__glewEnableVertexAttribArrayARB".}: PFNGLENABLEVERTEXATTRIBARRAYARBPROC
  GenProgramsARB* {.importc: "__glewGenProgramsARB".}: PFNGLGENPROGRAMSARBPROC
  GetProgramEnvParameterdvARB* {.importc: "__glewGetProgramEnvParameterdvARB".}: PFNGLGETPROGRAMENVPARAMETERDVARBPROC
  GetProgramEnvParameterfvARB* {.importc: "__glewGetProgramEnvParameterfvARB".}: PFNGLGETPROGRAMENVPARAMETERFVARBPROC
  GetProgramLocalParameterdvARB* {.importc: "__glewGetProgramLocalParameterdvARB".}: PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
  GetProgramLocalParameterfvARB* {.importc: "__glewGetProgramLocalParameterfvARB".}: PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
  GetProgramStringARB* {.importc: "__glewGetProgramStringARB".}: PFNGLGETPROGRAMSTRINGARBPROC
  GetProgramivARB* {.importc: "__glewGetProgramivARB".}: PFNGLGETPROGRAMIVARBPROC
  GetVertexAttribPointervARB* {.importc: "__glewGetVertexAttribPointervARB".}: PFNGLGETVERTEXATTRIBPOINTERVARBPROC
  GetVertexAttribdvARB* {.importc: "__glewGetVertexAttribdvARB".}: PFNGLGETVERTEXATTRIBDVARBPROC
  GetVertexAttribfvARB* {.importc: "__glewGetVertexAttribfvARB".}: PFNGLGETVERTEXATTRIBFVARBPROC
  GetVertexAttribivARB* {.importc: "__glewGetVertexAttribivARB".}: PFNGLGETVERTEXATTRIBIVARBPROC
  IsProgramARB* {.importc: "__glewIsProgramARB".}: PFNGLISPROGRAMARBPROC
  ProgramEnvParameter4dARB* {.importc: "__glewProgramEnvParameter4dARB".}: PFNGLPROGRAMENVPARAMETER4DARBPROC
  ProgramEnvParameter4dvARB* {.importc: "__glewProgramEnvParameter4dvARB".}: PFNGLPROGRAMENVPARAMETER4DVARBPROC
  ProgramEnvParameter4fARB* {.importc: "__glewProgramEnvParameter4fARB".}: PFNGLPROGRAMENVPARAMETER4FARBPROC
  ProgramEnvParameter4fvARB* {.importc: "__glewProgramEnvParameter4fvARB".}: PFNGLPROGRAMENVPARAMETER4FVARBPROC
  ProgramLocalParameter4dARB* {.importc: "__glewProgramLocalParameter4dARB".}: PFNGLPROGRAMLOCALPARAMETER4DARBPROC
  ProgramLocalParameter4dvARB* {.importc: "__glewProgramLocalParameter4dvARB".}: PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
  ProgramLocalParameter4fARB* {.importc: "__glewProgramLocalParameter4fARB".}: PFNGLPROGRAMLOCALPARAMETER4FARBPROC
  ProgramLocalParameter4fvARB* {.importc: "__glewProgramLocalParameter4fvARB".}: PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
  ProgramStringARB* {.importc: "__glewProgramStringARB".}: PFNGLPROGRAMSTRINGARBPROC
  VertexAttrib1dARB* {.importc: "__glewVertexAttrib1dARB".}: PFNGLVERTEXATTRIB1DARBPROC
  VertexAttrib1dvARB* {.importc: "__glewVertexAttrib1dvARB".}: PFNGLVERTEXATTRIB1DVARBPROC
  VertexAttrib1fARB* {.importc: "__glewVertexAttrib1fARB".}: PFNGLVERTEXATTRIB1FARBPROC
  VertexAttrib1fvARB* {.importc: "__glewVertexAttrib1fvARB".}: PFNGLVERTEXATTRIB1FVARBPROC
  VertexAttrib1sARB* {.importc: "__glewVertexAttrib1sARB".}: PFNGLVERTEXATTRIB1SARBPROC
  VertexAttrib1svARB* {.importc: "__glewVertexAttrib1svARB".}: PFNGLVERTEXATTRIB1SVARBPROC
  VertexAttrib2dARB* {.importc: "__glewVertexAttrib2dARB".}: PFNGLVERTEXATTRIB2DARBPROC
  VertexAttrib2dvARB* {.importc: "__glewVertexAttrib2dvARB".}: PFNGLVERTEXATTRIB2DVARBPROC
  VertexAttrib2fARB* {.importc: "__glewVertexAttrib2fARB".}: PFNGLVERTEXATTRIB2FARBPROC
  VertexAttrib2fvARB* {.importc: "__glewVertexAttrib2fvARB".}: PFNGLVERTEXATTRIB2FVARBPROC
  VertexAttrib2sARB* {.importc: "__glewVertexAttrib2sARB".}: PFNGLVERTEXATTRIB2SARBPROC
  VertexAttrib2svARB* {.importc: "__glewVertexAttrib2svARB".}: PFNGLVERTEXATTRIB2SVARBPROC
  VertexAttrib3dARB* {.importc: "__glewVertexAttrib3dARB".}: PFNGLVERTEXATTRIB3DARBPROC
  VertexAttrib3dvARB* {.importc: "__glewVertexAttrib3dvARB".}: PFNGLVERTEXATTRIB3DVARBPROC
  VertexAttrib3fARB* {.importc: "__glewVertexAttrib3fARB".}: PFNGLVERTEXATTRIB3FARBPROC
  VertexAttrib3fvARB* {.importc: "__glewVertexAttrib3fvARB".}: PFNGLVERTEXATTRIB3FVARBPROC
  VertexAttrib3sARB* {.importc: "__glewVertexAttrib3sARB".}: PFNGLVERTEXATTRIB3SARBPROC
  VertexAttrib3svARB* {.importc: "__glewVertexAttrib3svARB".}: PFNGLVERTEXATTRIB3SVARBPROC
  VertexAttrib4NbvARB* {.importc: "__glewVertexAttrib4NbvARB".}: PFNGLVERTEXATTRIB4NBVARBPROC
  VertexAttrib4NivARB* {.importc: "__glewVertexAttrib4NivARB".}: PFNGLVERTEXATTRIB4NIVARBPROC
  VertexAttrib4NsvARB* {.importc: "__glewVertexAttrib4NsvARB".}: PFNGLVERTEXATTRIB4NSVARBPROC
  VertexAttrib4NubARB* {.importc: "__glewVertexAttrib4NubARB".}: PFNGLVERTEXATTRIB4NUBARBPROC
  VertexAttrib4NubvARB* {.importc: "__glewVertexAttrib4NubvARB".}: PFNGLVERTEXATTRIB4NUBVARBPROC
  VertexAttrib4NuivARB* {.importc: "__glewVertexAttrib4NuivARB".}: PFNGLVERTEXATTRIB4NUIVARBPROC
  VertexAttrib4NusvARB* {.importc: "__glewVertexAttrib4NusvARB".}: PFNGLVERTEXATTRIB4NUSVARBPROC
  VertexAttrib4bvARB* {.importc: "__glewVertexAttrib4bvARB".}: PFNGLVERTEXATTRIB4BVARBPROC
  VertexAttrib4dARB* {.importc: "__glewVertexAttrib4dARB".}: PFNGLVERTEXATTRIB4DARBPROC
  VertexAttrib4dvARB* {.importc: "__glewVertexAttrib4dvARB".}: PFNGLVERTEXATTRIB4DVARBPROC
  VertexAttrib4fARB* {.importc: "__glewVertexAttrib4fARB".}: PFNGLVERTEXATTRIB4FARBPROC
  VertexAttrib4fvARB* {.importc: "__glewVertexAttrib4fvARB".}: PFNGLVERTEXATTRIB4FVARBPROC
  VertexAttrib4ivARB* {.importc: "__glewVertexAttrib4ivARB".}: PFNGLVERTEXATTRIB4IVARBPROC
  VertexAttrib4sARB* {.importc: "__glewVertexAttrib4sARB".}: PFNGLVERTEXATTRIB4SARBPROC
  VertexAttrib4svARB* {.importc: "__glewVertexAttrib4svARB".}: PFNGLVERTEXATTRIB4SVARBPROC
  VertexAttrib4ubvARB* {.importc: "__glewVertexAttrib4ubvARB".}: PFNGLVERTEXATTRIB4UBVARBPROC
  VertexAttrib4uivARB* {.importc: "__glewVertexAttrib4uivARB".}: PFNGLVERTEXATTRIB4UIVARBPROC
  VertexAttrib4usvARB* {.importc: "__glewVertexAttrib4usvARB".}: PFNGLVERTEXATTRIB4USVARBPROC
  VertexAttribPointerARB* {.importc: "__glewVertexAttribPointerARB".}: PFNGLVERTEXATTRIBPOINTERARBPROC
  BindAttribLocationARB* {.importc: "__glewBindAttribLocationARB".}: PFNGLBINDATTRIBLOCATIONARBPROC
  GetActiveAttribARB* {.importc: "__glewGetActiveAttribARB".}: PFNGLGETACTIVEATTRIBARBPROC
  GetAttribLocationARB* {.importc: "__glewGetAttribLocationARB".}: PFNGLGETATTRIBLOCATIONARBPROC
  ColorP3ui* {.importc: "__glewColorP3ui".}: PFNGLCOLORP3UIPROC
  ColorP3uiv* {.importc: "__glewColorP3uiv".}: PFNGLCOLORP3UIVPROC
  ColorP4ui* {.importc: "__glewColorP4ui".}: PFNGLCOLORP4UIPROC
  ColorP4uiv* {.importc: "__glewColorP4uiv".}: PFNGLCOLORP4UIVPROC
  MultiTexCoordP1ui* {.importc: "__glewMultiTexCoordP1ui".}: PFNGLMULTITEXCOORDP1UIPROC
  MultiTexCoordP1uiv* {.importc: "__glewMultiTexCoordP1uiv".}: PFNGLMULTITEXCOORDP1UIVPROC
  MultiTexCoordP2ui* {.importc: "__glewMultiTexCoordP2ui".}: PFNGLMULTITEXCOORDP2UIPROC
  MultiTexCoordP2uiv* {.importc: "__glewMultiTexCoordP2uiv".}: PFNGLMULTITEXCOORDP2UIVPROC
  MultiTexCoordP3ui* {.importc: "__glewMultiTexCoordP3ui".}: PFNGLMULTITEXCOORDP3UIPROC
  MultiTexCoordP3uiv* {.importc: "__glewMultiTexCoordP3uiv".}: PFNGLMULTITEXCOORDP3UIVPROC
  MultiTexCoordP4ui* {.importc: "__glewMultiTexCoordP4ui".}: PFNGLMULTITEXCOORDP4UIPROC
  MultiTexCoordP4uiv* {.importc: "__glewMultiTexCoordP4uiv".}: PFNGLMULTITEXCOORDP4UIVPROC
  NormalP3ui* {.importc: "__glewNormalP3ui".}: PFNGLNORMALP3UIPROC
  NormalP3uiv* {.importc: "__glewNormalP3uiv".}: PFNGLNORMALP3UIVPROC
  SecondaryColorP3ui* {.importc: "__glewSecondaryColorP3ui".}: PFNGLSECONDARYCOLORP3UIPROC
  SecondaryColorP3uiv* {.importc: "__glewSecondaryColorP3uiv".}: PFNGLSECONDARYCOLORP3UIVPROC
  TexCoordP1ui* {.importc: "__glewTexCoordP1ui".}: PFNGLTEXCOORDP1UIPROC
  TexCoordP1uiv* {.importc: "__glewTexCoordP1uiv".}: PFNGLTEXCOORDP1UIVPROC
  TexCoordP2ui* {.importc: "__glewTexCoordP2ui".}: PFNGLTEXCOORDP2UIPROC
  TexCoordP2uiv* {.importc: "__glewTexCoordP2uiv".}: PFNGLTEXCOORDP2UIVPROC
  TexCoordP3ui* {.importc: "__glewTexCoordP3ui".}: PFNGLTEXCOORDP3UIPROC
  TexCoordP3uiv* {.importc: "__glewTexCoordP3uiv".}: PFNGLTEXCOORDP3UIVPROC
  TexCoordP4ui* {.importc: "__glewTexCoordP4ui".}: PFNGLTEXCOORDP4UIPROC
  TexCoordP4uiv* {.importc: "__glewTexCoordP4uiv".}: PFNGLTEXCOORDP4UIVPROC
  VertexAttribP1ui* {.importc: "__glewVertexAttribP1ui".}: PFNGLVERTEXATTRIBP1UIPROC
  VertexAttribP1uiv* {.importc: "__glewVertexAttribP1uiv".}: PFNGLVERTEXATTRIBP1UIVPROC
  VertexAttribP2ui* {.importc: "__glewVertexAttribP2ui".}: PFNGLVERTEXATTRIBP2UIPROC
  VertexAttribP2uiv* {.importc: "__glewVertexAttribP2uiv".}: PFNGLVERTEXATTRIBP2UIVPROC
  VertexAttribP3ui* {.importc: "__glewVertexAttribP3ui".}: PFNGLVERTEXATTRIBP3UIPROC
  VertexAttribP3uiv* {.importc: "__glewVertexAttribP3uiv".}: PFNGLVERTEXATTRIBP3UIVPROC
  VertexAttribP4ui* {.importc: "__glewVertexAttribP4ui".}: PFNGLVERTEXATTRIBP4UIPROC
  VertexAttribP4uiv* {.importc: "__glewVertexAttribP4uiv".}: PFNGLVERTEXATTRIBP4UIVPROC
  VertexP2ui* {.importc: "__glewVertexP2ui".}: PFNGLVERTEXP2UIPROC
  VertexP2uiv* {.importc: "__glewVertexP2uiv".}: PFNGLVERTEXP2UIVPROC
  VertexP3ui* {.importc: "__glewVertexP3ui".}: PFNGLVERTEXP3UIPROC
  VertexP3uiv* {.importc: "__glewVertexP3uiv".}: PFNGLVERTEXP3UIVPROC
  VertexP4ui* {.importc: "__glewVertexP4ui".}: PFNGLVERTEXP4UIPROC
  VertexP4uiv* {.importc: "__glewVertexP4uiv".}: PFNGLVERTEXP4UIVPROC
  DepthRangeArrayv* {.importc: "__glewDepthRangeArrayv".}: PFNGLDEPTHRANGEARRAYVPROC
  DepthRangeIndexed* {.importc: "__glewDepthRangeIndexed".}: PFNGLDEPTHRANGEINDEXEDPROC
  GetDoublei_v* {.importc: "__glewGetDoublei_v".}: PFNGLGETDOUBLEI_VPROC
  GetFloati_v* {.importc: "__glewGetFloati_v".}: PFNGLGETFLOATI_VPROC
  ScissorArrayv* {.importc: "__glewScissorArrayv".}: PFNGLSCISSORARRAYVPROC
  ScissorIndexed* {.importc: "__glewScissorIndexed".}: PFNGLSCISSORINDEXEDPROC
  ScissorIndexedv* {.importc: "__glewScissorIndexedv".}: PFNGLSCISSORINDEXEDVPROC
  ViewportArrayv* {.importc: "__glewViewportArrayv".}: PFNGLVIEWPORTARRAYVPROC
  ViewportIndexedf* {.importc: "__glewViewportIndexedf".}: PFNGLVIEWPORTINDEXEDFPROC
  ViewportIndexedfv* {.importc: "__glewViewportIndexedfv".}: PFNGLVIEWPORTINDEXEDFVPROC
  WindowPos2dARB* {.importc: "__glewWindowPos2dARB".}: PFNGLWINDOWPOS2DARBPROC
  WindowPos2dvARB* {.importc: "__glewWindowPos2dvARB".}: PFNGLWINDOWPOS2DVARBPROC
  WindowPos2fARB* {.importc: "__glewWindowPos2fARB".}: PFNGLWINDOWPOS2FARBPROC
  WindowPos2fvARB* {.importc: "__glewWindowPos2fvARB".}: PFNGLWINDOWPOS2FVARBPROC
  WindowPos2iARB* {.importc: "__glewWindowPos2iARB".}: PFNGLWINDOWPOS2IARBPROC
  WindowPos2ivARB* {.importc: "__glewWindowPos2ivARB".}: PFNGLWINDOWPOS2IVARBPROC
  WindowPos2sARB* {.importc: "__glewWindowPos2sARB".}: PFNGLWINDOWPOS2SARBPROC
  WindowPos2svARB* {.importc: "__glewWindowPos2svARB".}: PFNGLWINDOWPOS2SVARBPROC
  WindowPos3dARB* {.importc: "__glewWindowPos3dARB".}: PFNGLWINDOWPOS3DARBPROC
  WindowPos3dvARB* {.importc: "__glewWindowPos3dvARB".}: PFNGLWINDOWPOS3DVARBPROC
  WindowPos3fARB* {.importc: "__glewWindowPos3fARB".}: PFNGLWINDOWPOS3FARBPROC
  WindowPos3fvARB* {.importc: "__glewWindowPos3fvARB".}: PFNGLWINDOWPOS3FVARBPROC
  WindowPos3iARB* {.importc: "__glewWindowPos3iARB".}: PFNGLWINDOWPOS3IARBPROC
  WindowPos3ivARB* {.importc: "__glewWindowPos3ivARB".}: PFNGLWINDOWPOS3IVARBPROC
  WindowPos3sARB* {.importc: "__glewWindowPos3sARB".}: PFNGLWINDOWPOS3SARBPROC
  WindowPos3svARB* {.importc: "__glewWindowPos3svARB".}: PFNGLWINDOWPOS3SVARBPROC
  DrawBuffersATI* {.importc: "__glewDrawBuffersATI".}: PFNGLDRAWBUFFERSATIPROC
  DrawElementArrayATI* {.importc: "__glewDrawElementArrayATI".}: PFNGLDRAWELEMENTARRAYATIPROC
  DrawRangeElementArrayATI* {.importc: "__glewDrawRangeElementArrayATI".}: PFNGLDRAWRANGEELEMENTARRAYATIPROC
  ElementPointerATI* {.importc: "__glewElementPointerATI".}: PFNGLELEMENTPOINTERATIPROC
  GetTexBumpParameterfvATI* {.importc: "__glewGetTexBumpParameterfvATI".}: PFNGLGETTEXBUMPPARAMETERFVATIPROC
  GetTexBumpParameterivATI* {.importc: "__glewGetTexBumpParameterivATI".}: PFNGLGETTEXBUMPPARAMETERIVATIPROC
  TexBumpParameterfvATI* {.importc: "__glewTexBumpParameterfvATI".}: PFNGLTEXBUMPPARAMETERFVATIPROC
  TexBumpParameterivATI* {.importc: "__glewTexBumpParameterivATI".}: PFNGLTEXBUMPPARAMETERIVATIPROC
  AlphaFragmentOp1ATI* {.importc: "__glewAlphaFragmentOp1ATI".}: PFNGLALPHAFRAGMENTOP1ATIPROC
  AlphaFragmentOp2ATI* {.importc: "__glewAlphaFragmentOp2ATI".}: PFNGLALPHAFRAGMENTOP2ATIPROC
  AlphaFragmentOp3ATI* {.importc: "__glewAlphaFragmentOp3ATI".}: PFNGLALPHAFRAGMENTOP3ATIPROC
  BeginFragmentShaderATI* {.importc: "__glewBeginFragmentShaderATI".}: PFNGLBEGINFRAGMENTSHADERATIPROC
  BindFragmentShaderATI* {.importc: "__glewBindFragmentShaderATI".}: PFNGLBINDFRAGMENTSHADERATIPROC
  ColorFragmentOp1ATI* {.importc: "__glewColorFragmentOp1ATI".}: PFNGLCOLORFRAGMENTOP1ATIPROC
  ColorFragmentOp2ATI* {.importc: "__glewColorFragmentOp2ATI".}: PFNGLCOLORFRAGMENTOP2ATIPROC
  ColorFragmentOp3ATI* {.importc: "__glewColorFragmentOp3ATI".}: PFNGLCOLORFRAGMENTOP3ATIPROC
  DeleteFragmentShaderATI* {.importc: "__glewDeleteFragmentShaderATI".}: PFNGLDELETEFRAGMENTSHADERATIPROC
  EndFragmentShaderATI* {.importc: "__glewEndFragmentShaderATI".}: PFNGLENDFRAGMENTSHADERATIPROC
  GenFragmentShadersATI* {.importc: "__glewGenFragmentShadersATI".}: PFNGLGENFRAGMENTSHADERSATIPROC
  PassTexCoordATI* {.importc: "__glewPassTexCoordATI".}: PFNGLPASSTEXCOORDATIPROC
  SampleMapATI* {.importc: "__glewSampleMapATI".}: PFNGLSAMPLEMAPATIPROC
  SetFragmentShaderConstantATI* {.importc: "__glewSetFragmentShaderConstantATI".}: PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
  MapObjectBufferATI* {.importc: "__glewMapObjectBufferATI".}: PFNGLMAPOBJECTBUFFERATIPROC
  UnmapObjectBufferATI* {.importc: "__glewUnmapObjectBufferATI".}: PFNGLUNMAPOBJECTBUFFERATIPROC
  PNTrianglesfATI* {.importc: "__glewPNTrianglesfATI".}: PFNGLPNTRIANGLESFATIPROC
  PNTrianglesiATI* {.importc: "__glewPNTrianglesiATI".}: PFNGLPNTRIANGLESIATIPROC
  StencilFuncSeparateATI* {.importc: "__glewStencilFuncSeparateATI".}: PFNGLSTENCILFUNCSEPARATEATIPROC
  StencilOpSeparateATI* {.importc: "__glewStencilOpSeparateATI".}: PFNGLSTENCILOPSEPARATEATIPROC
  ArrayObjectATI* {.importc: "__glewArrayObjectATI".}: PFNGLARRAYOBJECTATIPROC
  FreeObjectBufferATI* {.importc: "__glewFreeObjectBufferATI".}: PFNGLFREEOBJECTBUFFERATIPROC
  GetArrayObjectfvATI* {.importc: "__glewGetArrayObjectfvATI".}: PFNGLGETARRAYOBJECTFVATIPROC
  GetArrayObjectivATI* {.importc: "__glewGetArrayObjectivATI".}: PFNGLGETARRAYOBJECTIVATIPROC
  GetObjectBufferfvATI* {.importc: "__glewGetObjectBufferfvATI".}: PFNGLGETOBJECTBUFFERFVATIPROC
  GetObjectBufferivATI* {.importc: "__glewGetObjectBufferivATI".}: PFNGLGETOBJECTBUFFERIVATIPROC
  GetVariantArrayObjectfvATI* {.importc: "__glewGetVariantArrayObjectfvATI".}: PFNGLGETVARIANTARRAYOBJECTFVATIPROC
  GetVariantArrayObjectivATI* {.importc: "__glewGetVariantArrayObjectivATI".}: PFNGLGETVARIANTARRAYOBJECTIVATIPROC
  IsObjectBufferATI* {.importc: "__glewIsObjectBufferATI".}: PFNGLISOBJECTBUFFERATIPROC
  NewObjectBufferATI* {.importc: "__glewNewObjectBufferATI".}: PFNGLNEWOBJECTBUFFERATIPROC
  UpdateObjectBufferATI* {.importc: "__glewUpdateObjectBufferATI".}: PFNGLUPDATEOBJECTBUFFERATIPROC
  VariantArrayObjectATI* {.importc: "__glewVariantArrayObjectATI".}: PFNGLVARIANTARRAYOBJECTATIPROC
  GetVertexAttribArrayObjectfvATI* {.importc: "__glewGetVertexAttribArrayObjectfvATI".}: PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
  GetVertexAttribArrayObjectivATI* {.importc: "__glewGetVertexAttribArrayObjectivATI".}: PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
  VertexAttribArrayObjectATI* {.importc: "__glewVertexAttribArrayObjectATI".}: PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
  ClientActiveVertexStreamATI* {.importc: "__glewClientActiveVertexStreamATI".}: PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
  NormalStream3bATI* {.importc: "__glewNormalStream3bATI".}: PFNGLNORMALSTREAM3BATIPROC
  NormalStream3bvATI* {.importc: "__glewNormalStream3bvATI".}: PFNGLNORMALSTREAM3BVATIPROC
  NormalStream3dATI* {.importc: "__glewNormalStream3dATI".}: PFNGLNORMALSTREAM3DATIPROC
  NormalStream3dvATI* {.importc: "__glewNormalStream3dvATI".}: PFNGLNORMALSTREAM3DVATIPROC
  NormalStream3fATI* {.importc: "__glewNormalStream3fATI".}: PFNGLNORMALSTREAM3FATIPROC
  NormalStream3fvATI* {.importc: "__glewNormalStream3fvATI".}: PFNGLNORMALSTREAM3FVATIPROC
  NormalStream3iATI* {.importc: "__glewNormalStream3iATI".}: PFNGLNORMALSTREAM3IATIPROC
  NormalStream3ivATI* {.importc: "__glewNormalStream3ivATI".}: PFNGLNORMALSTREAM3IVATIPROC
  NormalStream3sATI* {.importc: "__glewNormalStream3sATI".}: PFNGLNORMALSTREAM3SATIPROC
  NormalStream3svATI* {.importc: "__glewNormalStream3svATI".}: PFNGLNORMALSTREAM3SVATIPROC
  VertexBlendEnvfATI* {.importc: "__glewVertexBlendEnvfATI".}: PFNGLVERTEXBLENDENVFATIPROC
  VertexBlendEnviATI* {.importc: "__glewVertexBlendEnviATI".}: PFNGLVERTEXBLENDENVIATIPROC
  VertexStream1dATI* {.importc: "__glewVertexStream1dATI".}: PFNGLVERTEXSTREAM1DATIPROC
  VertexStream1dvATI* {.importc: "__glewVertexStream1dvATI".}: PFNGLVERTEXSTREAM1DVATIPROC
  VertexStream1fATI* {.importc: "__glewVertexStream1fATI".}: PFNGLVERTEXSTREAM1FATIPROC
  VertexStream1fvATI* {.importc: "__glewVertexStream1fvATI".}: PFNGLVERTEXSTREAM1FVATIPROC
  VertexStream1iATI* {.importc: "__glewVertexStream1iATI".}: PFNGLVERTEXSTREAM1IATIPROC
  VertexStream1ivATI* {.importc: "__glewVertexStream1ivATI".}: PFNGLVERTEXSTREAM1IVATIPROC
  VertexStream1sATI* {.importc: "__glewVertexStream1sATI".}: PFNGLVERTEXSTREAM1SATIPROC
  VertexStream1svATI* {.importc: "__glewVertexStream1svATI".}: PFNGLVERTEXSTREAM1SVATIPROC
  VertexStream2dATI* {.importc: "__glewVertexStream2dATI".}: PFNGLVERTEXSTREAM2DATIPROC
  VertexStream2dvATI* {.importc: "__glewVertexStream2dvATI".}: PFNGLVERTEXSTREAM2DVATIPROC
  VertexStream2fATI* {.importc: "__glewVertexStream2fATI".}: PFNGLVERTEXSTREAM2FATIPROC
  VertexStream2fvATI* {.importc: "__glewVertexStream2fvATI".}: PFNGLVERTEXSTREAM2FVATIPROC
  VertexStream2iATI* {.importc: "__glewVertexStream2iATI".}: PFNGLVERTEXSTREAM2IATIPROC
  VertexStream2ivATI* {.importc: "__glewVertexStream2ivATI".}: PFNGLVERTEXSTREAM2IVATIPROC
  VertexStream2sATI* {.importc: "__glewVertexStream2sATI".}: PFNGLVERTEXSTREAM2SATIPROC
  VertexStream2svATI* {.importc: "__glewVertexStream2svATI".}: PFNGLVERTEXSTREAM2SVATIPROC
  VertexStream3dATI* {.importc: "__glewVertexStream3dATI".}: PFNGLVERTEXSTREAM3DATIPROC
  VertexStream3dvATI* {.importc: "__glewVertexStream3dvATI".}: PFNGLVERTEXSTREAM3DVATIPROC
  VertexStream3fATI* {.importc: "__glewVertexStream3fATI".}: PFNGLVERTEXSTREAM3FATIPROC
  VertexStream3fvATI* {.importc: "__glewVertexStream3fvATI".}: PFNGLVERTEXSTREAM3FVATIPROC
  VertexStream3iATI* {.importc: "__glewVertexStream3iATI".}: PFNGLVERTEXSTREAM3IATIPROC
  VertexStream3ivATI* {.importc: "__glewVertexStream3ivATI".}: PFNGLVERTEXSTREAM3IVATIPROC
  VertexStream3sATI* {.importc: "__glewVertexStream3sATI".}: PFNGLVERTEXSTREAM3SATIPROC
  VertexStream3svATI* {.importc: "__glewVertexStream3svATI".}: PFNGLVERTEXSTREAM3SVATIPROC
  VertexStream4dATI* {.importc: "__glewVertexStream4dATI".}: PFNGLVERTEXSTREAM4DATIPROC
  VertexStream4dvATI* {.importc: "__glewVertexStream4dvATI".}: PFNGLVERTEXSTREAM4DVATIPROC
  VertexStream4fATI* {.importc: "__glewVertexStream4fATI".}: PFNGLVERTEXSTREAM4FATIPROC
  VertexStream4fvATI* {.importc: "__glewVertexStream4fvATI".}: PFNGLVERTEXSTREAM4FVATIPROC
  VertexStream4iATI* {.importc: "__glewVertexStream4iATI".}: PFNGLVERTEXSTREAM4IATIPROC
  VertexStream4ivATI* {.importc: "__glewVertexStream4ivATI".}: PFNGLVERTEXSTREAM4IVATIPROC
  VertexStream4sATI* {.importc: "__glewVertexStream4sATI".}: PFNGLVERTEXSTREAM4SATIPROC
  VertexStream4svATI* {.importc: "__glewVertexStream4svATI".}: PFNGLVERTEXSTREAM4SVATIPROC
  DrawArraysInstancedBaseInstanceEXT* {.importc: "__glewDrawArraysInstancedBaseInstanceEXT".}: PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC
  DrawElementsInstancedBaseInstanceEXT* {.
      importc: "__glewDrawElementsInstancedBaseInstanceEXT".}: PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC
  DrawElementsInstancedBaseVertexBaseInstanceEXT*
      {.importc: "__glewDrawElementsInstancedBaseVertexBaseInstanceEXT".}: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC
  GetUniformBufferSizeEXT* {.importc: "__glewGetUniformBufferSizeEXT".}: PFNGLGETUNIFORMBUFFERSIZEEXTPROC
  GetUniformOffsetEXT* {.importc: "__glewGetUniformOffsetEXT".}: PFNGLGETUNIFORMOFFSETEXTPROC
  UniformBufferEXT* {.importc: "__glewUniformBufferEXT".}: PFNGLUNIFORMBUFFEREXTPROC
  BlendColorEXT* {.importc: "__glewBlendColorEXT".}: PFNGLBLENDCOLOREXTPROC
  BlendEquationSeparateEXT* {.importc: "__glewBlendEquationSeparateEXT".}: PFNGLBLENDEQUATIONSEPARATEEXTPROC
  BindFragDataLocationIndexedEXT* {.importc: "__glewBindFragDataLocationIndexedEXT".}: PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC
  GetFragDataIndexEXT* {.importc: "__glewGetFragDataIndexEXT".}: PFNGLGETFRAGDATAINDEXEXTPROC
  GetProgramResourceLocationIndexEXT* {.importc: "__glewGetProgramResourceLocationIndexEXT".}: PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC
  BlendFuncSeparateEXT* {.importc: "__glewBlendFuncSeparateEXT".}: PFNGLBLENDFUNCSEPARATEEXTPROC
  BlendEquationEXT* {.importc: "__glewBlendEquationEXT".}: PFNGLBLENDEQUATIONEXTPROC
  BufferStorageEXT* {.importc: "__glewBufferStorageEXT".}: PFNGLBUFFERSTORAGEEXTPROC
  NamedBufferStorageEXT* {.importc: "__glewNamedBufferStorageEXT".}: PFNGLNAMEDBUFFERSTORAGEEXTPROC
  ClearTexImageEXT* {.importc: "__glewClearTexImageEXT".}: PFNGLCLEARTEXIMAGEEXTPROC
  ClearTexSubImageEXT* {.importc: "__glewClearTexSubImageEXT".}: PFNGLCLEARTEXSUBIMAGEEXTPROC
  ColorSubTableEXT* {.importc: "__glewColorSubTableEXT".}: PFNGLCOLORSUBTABLEEXTPROC
  CopyColorSubTableEXT* {.importc: "__glewCopyColorSubTableEXT".}: PFNGLCOPYCOLORSUBTABLEEXTPROC
  LockArraysEXT* {.importc: "__glewLockArraysEXT".}: PFNGLLOCKARRAYSEXTPROC
  UnlockArraysEXT* {.importc: "__glewUnlockArraysEXT".}: PFNGLUNLOCKARRAYSEXTPROC
  ConvolutionFilter1DEXT* {.importc: "__glewConvolutionFilter1DEXT".}: PFNGLCONVOLUTIONFILTER1DEXTPROC
  ConvolutionFilter2DEXT* {.importc: "__glewConvolutionFilter2DEXT".}: PFNGLCONVOLUTIONFILTER2DEXTPROC
  ConvolutionParameterfEXT* {.importc: "__glewConvolutionParameterfEXT".}: PFNGLCONVOLUTIONPARAMETERFEXTPROC
  ConvolutionParameterfvEXT* {.importc: "__glewConvolutionParameterfvEXT".}: PFNGLCONVOLUTIONPARAMETERFVEXTPROC
  ConvolutionParameteriEXT* {.importc: "__glewConvolutionParameteriEXT".}: PFNGLCONVOLUTIONPARAMETERIEXTPROC
  ConvolutionParameterivEXT* {.importc: "__glewConvolutionParameterivEXT".}: PFNGLCONVOLUTIONPARAMETERIVEXTPROC
  CopyConvolutionFilter1DEXT* {.importc: "__glewCopyConvolutionFilter1DEXT".}: PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
  CopyConvolutionFilter2DEXT* {.importc: "__glewCopyConvolutionFilter2DEXT".}: PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
  GetConvolutionFilterEXT* {.importc: "__glewGetConvolutionFilterEXT".}: PFNGLGETCONVOLUTIONFILTEREXTPROC
  GetConvolutionParameterfvEXT* {.importc: "__glewGetConvolutionParameterfvEXT".}: PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
  GetConvolutionParameterivEXT* {.importc: "__glewGetConvolutionParameterivEXT".}: PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
  GetSeparableFilterEXT* {.importc: "__glewGetSeparableFilterEXT".}: PFNGLGETSEPARABLEFILTEREXTPROC
  SeparableFilter2DEXT* {.importc: "__glewSeparableFilter2DEXT".}: PFNGLSEPARABLEFILTER2DEXTPROC
  BinormalPointerEXT* {.importc: "__glewBinormalPointerEXT".}: PFNGLBINORMALPOINTEREXTPROC
  TangentPointerEXT* {.importc: "__glewTangentPointerEXT".}: PFNGLTANGENTPOINTEREXTPROC
  CopyImageSubDataEXT* {.importc: "__glewCopyImageSubDataEXT".}: PFNGLCOPYIMAGESUBDATAEXTPROC
  CopyTexImage1DEXT* {.importc: "__glewCopyTexImage1DEXT".}: PFNGLCOPYTEXIMAGE1DEXTPROC
  CopyTexImage2DEXT* {.importc: "__glewCopyTexImage2DEXT".}: PFNGLCOPYTEXIMAGE2DEXTPROC
  CopyTexSubImage1DEXT* {.importc: "__glewCopyTexSubImage1DEXT".}: PFNGLCOPYTEXSUBIMAGE1DEXTPROC
  CopyTexSubImage2DEXT* {.importc: "__glewCopyTexSubImage2DEXT".}: PFNGLCOPYTEXSUBIMAGE2DEXTPROC
  CopyTexSubImage3DEXT* {.importc: "__glewCopyTexSubImage3DEXT".}: PFNGLCOPYTEXSUBIMAGE3DEXTPROC
  CullParameterdvEXT* {.importc: "__glewCullParameterdvEXT".}: PFNGLCULLPARAMETERDVEXTPROC
  CullParameterfvEXT* {.importc: "__glewCullParameterfvEXT".}: PFNGLCULLPARAMETERFVEXTPROC
  GetObjectLabelEXT* {.importc: "__glewGetObjectLabelEXT".}: PFNGLGETOBJECTLABELEXTPROC
  LabelObjectEXT* {.importc: "__glewLabelObjectEXT".}: PFNGLLABELOBJECTEXTPROC
  InsertEventMarkerEXT* {.importc: "__glewInsertEventMarkerEXT".}: PFNGLINSERTEVENTMARKEREXTPROC
  PopGroupMarkerEXT* {.importc: "__glewPopGroupMarkerEXT".}: PFNGLPOPGROUPMARKEREXTPROC
  PushGroupMarkerEXT* {.importc: "__glewPushGroupMarkerEXT".}: PFNGLPUSHGROUPMARKEREXTPROC
  DepthBoundsEXT* {.importc: "__glewDepthBoundsEXT".}: PFNGLDEPTHBOUNDSEXTPROC
  BindMultiTextureEXT* {.importc: "__glewBindMultiTextureEXT".}: PFNGLBINDMULTITEXTUREEXTPROC
  CheckNamedFramebufferStatusEXT* {.importc: "__glewCheckNamedFramebufferStatusEXT".}: PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
  ClientAttribDefaultEXT* {.importc: "__glewClientAttribDefaultEXT".}: PFNGLCLIENTATTRIBDEFAULTEXTPROC
  CompressedMultiTexImage1DEXT* {.importc: "__glewCompressedMultiTexImage1DEXT".}: PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
  CompressedMultiTexImage2DEXT* {.importc: "__glewCompressedMultiTexImage2DEXT".}: PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
  CompressedMultiTexImage3DEXT* {.importc: "__glewCompressedMultiTexImage3DEXT".}: PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
  CompressedMultiTexSubImage1DEXT* {.importc: "__glewCompressedMultiTexSubImage1DEXT".}: PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
  CompressedMultiTexSubImage2DEXT* {.importc: "__glewCompressedMultiTexSubImage2DEXT".}: PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
  CompressedMultiTexSubImage3DEXT* {.importc: "__glewCompressedMultiTexSubImage3DEXT".}: PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
  CompressedTextureImage1DEXT* {.importc: "__glewCompressedTextureImage1DEXT".}: PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
  CompressedTextureImage2DEXT* {.importc: "__glewCompressedTextureImage2DEXT".}: PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
  CompressedTextureImage3DEXT* {.importc: "__glewCompressedTextureImage3DEXT".}: PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
  CompressedTextureSubImage1DEXT* {.importc: "__glewCompressedTextureSubImage1DEXT".}: PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
  CompressedTextureSubImage2DEXT* {.importc: "__glewCompressedTextureSubImage2DEXT".}: PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
  CompressedTextureSubImage3DEXT* {.importc: "__glewCompressedTextureSubImage3DEXT".}: PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
  CopyMultiTexImage1DEXT* {.importc: "__glewCopyMultiTexImage1DEXT".}: PFNGLCOPYMULTITEXIMAGE1DEXTPROC
  CopyMultiTexImage2DEXT* {.importc: "__glewCopyMultiTexImage2DEXT".}: PFNGLCOPYMULTITEXIMAGE2DEXTPROC
  CopyMultiTexSubImage1DEXT* {.importc: "__glewCopyMultiTexSubImage1DEXT".}: PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
  CopyMultiTexSubImage2DEXT* {.importc: "__glewCopyMultiTexSubImage2DEXT".}: PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
  CopyMultiTexSubImage3DEXT* {.importc: "__glewCopyMultiTexSubImage3DEXT".}: PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
  CopyTextureImage1DEXT* {.importc: "__glewCopyTextureImage1DEXT".}: PFNGLCOPYTEXTUREIMAGE1DEXTPROC
  CopyTextureImage2DEXT* {.importc: "__glewCopyTextureImage2DEXT".}: PFNGLCOPYTEXTUREIMAGE2DEXTPROC
  CopyTextureSubImage1DEXT* {.importc: "__glewCopyTextureSubImage1DEXT".}: PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
  CopyTextureSubImage2DEXT* {.importc: "__glewCopyTextureSubImage2DEXT".}: PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
  CopyTextureSubImage3DEXT* {.importc: "__glewCopyTextureSubImage3DEXT".}: PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
  DisableClientStateIndexedEXT* {.importc: "__glewDisableClientStateIndexedEXT".}: PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
  DisableClientStateiEXT* {.importc: "__glewDisableClientStateiEXT".}: PFNGLDISABLECLIENTSTATEIEXTPROC
  DisableVertexArrayAttribEXT* {.importc: "__glewDisableVertexArrayAttribEXT".}: PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC
  DisableVertexArrayEXT* {.importc: "__glewDisableVertexArrayEXT".}: PFNGLDISABLEVERTEXARRAYEXTPROC
  EnableClientStateIndexedEXT* {.importc: "__glewEnableClientStateIndexedEXT".}: PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
  EnableClientStateiEXT* {.importc: "__glewEnableClientStateiEXT".}: PFNGLENABLECLIENTSTATEIEXTPROC
  EnableVertexArrayAttribEXT* {.importc: "__glewEnableVertexArrayAttribEXT".}: PFNGLENABLEVERTEXARRAYATTRIBEXTPROC
  EnableVertexArrayEXT* {.importc: "__glewEnableVertexArrayEXT".}: PFNGLENABLEVERTEXARRAYEXTPROC
  FlushMappedNamedBufferRangeEXT* {.importc: "__glewFlushMappedNamedBufferRangeEXT".}: PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
  FramebufferDrawBufferEXT* {.importc: "__glewFramebufferDrawBufferEXT".}: PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
  FramebufferDrawBuffersEXT* {.importc: "__glewFramebufferDrawBuffersEXT".}: PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
  FramebufferReadBufferEXT* {.importc: "__glewFramebufferReadBufferEXT".}: PFNGLFRAMEBUFFERREADBUFFEREXTPROC
  GenerateMultiTexMipmapEXT* {.importc: "__glewGenerateMultiTexMipmapEXT".}: PFNGLGENERATEMULTITEXMIPMAPEXTPROC
  GenerateTextureMipmapEXT* {.importc: "__glewGenerateTextureMipmapEXT".}: PFNGLGENERATETEXTUREMIPMAPEXTPROC
  GetCompressedMultiTexImageEXT* {.importc: "__glewGetCompressedMultiTexImageEXT".}: PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
  GetCompressedTextureImageEXT* {.importc: "__glewGetCompressedTextureImageEXT".}: PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
  GetDoubleIndexedvEXT* {.importc: "__glewGetDoubleIndexedvEXT".}: PFNGLGETDOUBLEINDEXEDVEXTPROC
  GetDoublei_vEXT* {.importc: "__glewGetDoublei_vEXT".}: PFNGLGETDOUBLEI_VEXTPROC
  GetFloatIndexedvEXT* {.importc: "__glewGetFloatIndexedvEXT".}: PFNGLGETFLOATINDEXEDVEXTPROC
  GetFloati_vEXT* {.importc: "__glewGetFloati_vEXT".}: PFNGLGETFLOATI_VEXTPROC
  GetFramebufferParameterivEXT* {.importc: "__glewGetFramebufferParameterivEXT".}: PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
  GetMultiTexEnvfvEXT* {.importc: "__glewGetMultiTexEnvfvEXT".}: PFNGLGETMULTITEXENVFVEXTPROC
  GetMultiTexEnvivEXT* {.importc: "__glewGetMultiTexEnvivEXT".}: PFNGLGETMULTITEXENVIVEXTPROC
  GetMultiTexGendvEXT* {.importc: "__glewGetMultiTexGendvEXT".}: PFNGLGETMULTITEXGENDVEXTPROC
  GetMultiTexGenfvEXT* {.importc: "__glewGetMultiTexGenfvEXT".}: PFNGLGETMULTITEXGENFVEXTPROC
  GetMultiTexGenivEXT* {.importc: "__glewGetMultiTexGenivEXT".}: PFNGLGETMULTITEXGENIVEXTPROC
  GetMultiTexImageEXT* {.importc: "__glewGetMultiTexImageEXT".}: PFNGLGETMULTITEXIMAGEEXTPROC
  GetMultiTexLevelParameterfvEXT* {.importc: "__glewGetMultiTexLevelParameterfvEXT".}: PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
  GetMultiTexLevelParameterivEXT* {.importc: "__glewGetMultiTexLevelParameterivEXT".}: PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
  GetMultiTexParameterIivEXT* {.importc: "__glewGetMultiTexParameterIivEXT".}: PFNGLGETMULTITEXPARAMETERIIVEXTPROC
  GetMultiTexParameterIuivEXT* {.importc: "__glewGetMultiTexParameterIuivEXT".}: PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
  GetMultiTexParameterfvEXT* {.importc: "__glewGetMultiTexParameterfvEXT".}: PFNGLGETMULTITEXPARAMETERFVEXTPROC
  GetMultiTexParameterivEXT* {.importc: "__glewGetMultiTexParameterivEXT".}: PFNGLGETMULTITEXPARAMETERIVEXTPROC
  GetNamedBufferParameterivEXT* {.importc: "__glewGetNamedBufferParameterivEXT".}: PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
  GetNamedBufferPointervEXT* {.importc: "__glewGetNamedBufferPointervEXT".}: PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
  GetNamedBufferSubDataEXT* {.importc: "__glewGetNamedBufferSubDataEXT".}: PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
  GetNamedFramebufferAttachmentParameterivEXT*
      {.importc: "__glewGetNamedFramebufferAttachmentParameterivEXT".}: PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
  GetNamedProgramLocalParameterIivEXT* {.
      importc: "__glewGetNamedProgramLocalParameterIivEXT".}: PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
  GetNamedProgramLocalParameterIuivEXT* {.
      importc: "__glewGetNamedProgramLocalParameterIuivEXT".}: PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
  GetNamedProgramLocalParameterdvEXT* {.importc: "__glewGetNamedProgramLocalParameterdvEXT".}: PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
  GetNamedProgramLocalParameterfvEXT* {.importc: "__glewGetNamedProgramLocalParameterfvEXT".}: PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
  GetNamedProgramStringEXT* {.importc: "__glewGetNamedProgramStringEXT".}: PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
  GetNamedProgramivEXT* {.importc: "__glewGetNamedProgramivEXT".}: PFNGLGETNAMEDPROGRAMIVEXTPROC
  GetNamedRenderbufferParameterivEXT* {.importc: "__glewGetNamedRenderbufferParameterivEXT".}: PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
  GetPointerIndexedvEXT* {.importc: "__glewGetPointerIndexedvEXT".}: PFNGLGETPOINTERINDEXEDVEXTPROC
  GetPointeri_vEXT* {.importc: "__glewGetPointeri_vEXT".}: PFNGLGETPOINTERI_VEXTPROC
  GetTextureImageEXT* {.importc: "__glewGetTextureImageEXT".}: PFNGLGETTEXTUREIMAGEEXTPROC
  GetTextureLevelParameterfvEXT* {.importc: "__glewGetTextureLevelParameterfvEXT".}: PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
  GetTextureLevelParameterivEXT* {.importc: "__glewGetTextureLevelParameterivEXT".}: PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
  GetTextureParameterIivEXT* {.importc: "__glewGetTextureParameterIivEXT".}: PFNGLGETTEXTUREPARAMETERIIVEXTPROC
  GetTextureParameterIuivEXT* {.importc: "__glewGetTextureParameterIuivEXT".}: PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
  GetTextureParameterfvEXT* {.importc: "__glewGetTextureParameterfvEXT".}: PFNGLGETTEXTUREPARAMETERFVEXTPROC
  GetTextureParameterivEXT* {.importc: "__glewGetTextureParameterivEXT".}: PFNGLGETTEXTUREPARAMETERIVEXTPROC
  GetVertexArrayIntegeri_vEXT* {.importc: "__glewGetVertexArrayIntegeri_vEXT".}: PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC
  GetVertexArrayIntegervEXT* {.importc: "__glewGetVertexArrayIntegervEXT".}: PFNGLGETVERTEXARRAYINTEGERVEXTPROC
  GetVertexArrayPointeri_vEXT* {.importc: "__glewGetVertexArrayPointeri_vEXT".}: PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC
  GetVertexArrayPointervEXT* {.importc: "__glewGetVertexArrayPointervEXT".}: PFNGLGETVERTEXARRAYPOINTERVEXTPROC
  MapNamedBufferEXT* {.importc: "__glewMapNamedBufferEXT".}: PFNGLMAPNAMEDBUFFEREXTPROC
  MapNamedBufferRangeEXT* {.importc: "__glewMapNamedBufferRangeEXT".}: PFNGLMAPNAMEDBUFFERRANGEEXTPROC
  MatrixFrustumEXT* {.importc: "__glewMatrixFrustumEXT".}: PFNGLMATRIXFRUSTUMEXTPROC
  MatrixLoadIdentityEXT* {.importc: "__glewMatrixLoadIdentityEXT".}: PFNGLMATRIXLOADIDENTITYEXTPROC
  MatrixLoadTransposedEXT* {.importc: "__glewMatrixLoadTransposedEXT".}: PFNGLMATRIXLOADTRANSPOSEDEXTPROC
  MatrixLoadTransposefEXT* {.importc: "__glewMatrixLoadTransposefEXT".}: PFNGLMATRIXLOADTRANSPOSEFEXTPROC
  MatrixLoaddEXT* {.importc: "__glewMatrixLoaddEXT".}: PFNGLMATRIXLOADDEXTPROC
  MatrixLoadfEXT* {.importc: "__glewMatrixLoadfEXT".}: PFNGLMATRIXLOADFEXTPROC
  MatrixMultTransposedEXT* {.importc: "__glewMatrixMultTransposedEXT".}: PFNGLMATRIXMULTTRANSPOSEDEXTPROC
  MatrixMultTransposefEXT* {.importc: "__glewMatrixMultTransposefEXT".}: PFNGLMATRIXMULTTRANSPOSEFEXTPROC
  MatrixMultdEXT* {.importc: "__glewMatrixMultdEXT".}: PFNGLMATRIXMULTDEXTPROC
  MatrixMultfEXT* {.importc: "__glewMatrixMultfEXT".}: PFNGLMATRIXMULTFEXTPROC
  MatrixOrthoEXT* {.importc: "__glewMatrixOrthoEXT".}: PFNGLMATRIXORTHOEXTPROC
  MatrixPopEXT* {.importc: "__glewMatrixPopEXT".}: PFNGLMATRIXPOPEXTPROC
  MatrixPushEXT* {.importc: "__glewMatrixPushEXT".}: PFNGLMATRIXPUSHEXTPROC
  MatrixRotatedEXT* {.importc: "__glewMatrixRotatedEXT".}: PFNGLMATRIXROTATEDEXTPROC
  MatrixRotatefEXT* {.importc: "__glewMatrixRotatefEXT".}: PFNGLMATRIXROTATEFEXTPROC
  MatrixScaledEXT* {.importc: "__glewMatrixScaledEXT".}: PFNGLMATRIXSCALEDEXTPROC
  MatrixScalefEXT* {.importc: "__glewMatrixScalefEXT".}: PFNGLMATRIXSCALEFEXTPROC
  MatrixTranslatedEXT* {.importc: "__glewMatrixTranslatedEXT".}: PFNGLMATRIXTRANSLATEDEXTPROC
  MatrixTranslatefEXT* {.importc: "__glewMatrixTranslatefEXT".}: PFNGLMATRIXTRANSLATEFEXTPROC
  MultiTexBufferEXT* {.importc: "__glewMultiTexBufferEXT".}: PFNGLMULTITEXBUFFEREXTPROC
  MultiTexCoordPointerEXT* {.importc: "__glewMultiTexCoordPointerEXT".}: PFNGLMULTITEXCOORDPOINTEREXTPROC
  MultiTexEnvfEXT* {.importc: "__glewMultiTexEnvfEXT".}: PFNGLMULTITEXENVFEXTPROC
  MultiTexEnvfvEXT* {.importc: "__glewMultiTexEnvfvEXT".}: PFNGLMULTITEXENVFVEXTPROC
  MultiTexEnviEXT* {.importc: "__glewMultiTexEnviEXT".}: PFNGLMULTITEXENVIEXTPROC
  MultiTexEnvivEXT* {.importc: "__glewMultiTexEnvivEXT".}: PFNGLMULTITEXENVIVEXTPROC
  MultiTexGendEXT* {.importc: "__glewMultiTexGendEXT".}: PFNGLMULTITEXGENDEXTPROC
  MultiTexGendvEXT* {.importc: "__glewMultiTexGendvEXT".}: PFNGLMULTITEXGENDVEXTPROC
  MultiTexGenfEXT* {.importc: "__glewMultiTexGenfEXT".}: PFNGLMULTITEXGENFEXTPROC
  MultiTexGenfvEXT* {.importc: "__glewMultiTexGenfvEXT".}: PFNGLMULTITEXGENFVEXTPROC
  MultiTexGeniEXT* {.importc: "__glewMultiTexGeniEXT".}: PFNGLMULTITEXGENIEXTPROC
  MultiTexGenivEXT* {.importc: "__glewMultiTexGenivEXT".}: PFNGLMULTITEXGENIVEXTPROC
  MultiTexImage1DEXT* {.importc: "__glewMultiTexImage1DEXT".}: PFNGLMULTITEXIMAGE1DEXTPROC
  MultiTexImage2DEXT* {.importc: "__glewMultiTexImage2DEXT".}: PFNGLMULTITEXIMAGE2DEXTPROC
  MultiTexImage3DEXT* {.importc: "__glewMultiTexImage3DEXT".}: PFNGLMULTITEXIMAGE3DEXTPROC
  MultiTexParameterIivEXT* {.importc: "__glewMultiTexParameterIivEXT".}: PFNGLMULTITEXPARAMETERIIVEXTPROC
  MultiTexParameterIuivEXT* {.importc: "__glewMultiTexParameterIuivEXT".}: PFNGLMULTITEXPARAMETERIUIVEXTPROC
  MultiTexParameterfEXT* {.importc: "__glewMultiTexParameterfEXT".}: PFNGLMULTITEXPARAMETERFEXTPROC
  MultiTexParameterfvEXT* {.importc: "__glewMultiTexParameterfvEXT".}: PFNGLMULTITEXPARAMETERFVEXTPROC
  MultiTexParameteriEXT* {.importc: "__glewMultiTexParameteriEXT".}: PFNGLMULTITEXPARAMETERIEXTPROC
  MultiTexParameterivEXT* {.importc: "__glewMultiTexParameterivEXT".}: PFNGLMULTITEXPARAMETERIVEXTPROC
  MultiTexRenderbufferEXT* {.importc: "__glewMultiTexRenderbufferEXT".}: PFNGLMULTITEXRENDERBUFFEREXTPROC
  MultiTexSubImage1DEXT* {.importc: "__glewMultiTexSubImage1DEXT".}: PFNGLMULTITEXSUBIMAGE1DEXTPROC
  MultiTexSubImage2DEXT* {.importc: "__glewMultiTexSubImage2DEXT".}: PFNGLMULTITEXSUBIMAGE2DEXTPROC
  MultiTexSubImage3DEXT* {.importc: "__glewMultiTexSubImage3DEXT".}: PFNGLMULTITEXSUBIMAGE3DEXTPROC
  NamedBufferDataEXT* {.importc: "__glewNamedBufferDataEXT".}: PFNGLNAMEDBUFFERDATAEXTPROC
  NamedBufferSubDataEXT* {.importc: "__glewNamedBufferSubDataEXT".}: PFNGLNAMEDBUFFERSUBDATAEXTPROC
  NamedCopyBufferSubDataEXT* {.importc: "__glewNamedCopyBufferSubDataEXT".}: PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
  NamedFramebufferRenderbufferEXT* {.importc: "__glewNamedFramebufferRenderbufferEXT".}: PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
  NamedFramebufferTexture1DEXT* {.importc: "__glewNamedFramebufferTexture1DEXT".}: PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
  NamedFramebufferTexture2DEXT* {.importc: "__glewNamedFramebufferTexture2DEXT".}: PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
  NamedFramebufferTexture3DEXT* {.importc: "__glewNamedFramebufferTexture3DEXT".}: PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
  NamedFramebufferTextureEXT* {.importc: "__glewNamedFramebufferTextureEXT".}: PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
  NamedFramebufferTextureFaceEXT* {.importc: "__glewNamedFramebufferTextureFaceEXT".}: PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
  NamedFramebufferTextureLayerEXT* {.importc: "__glewNamedFramebufferTextureLayerEXT".}: PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
  NamedProgramLocalParameter4dEXT* {.importc: "__glewNamedProgramLocalParameter4dEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
  NamedProgramLocalParameter4dvEXT* {.importc: "__glewNamedProgramLocalParameter4dvEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
  NamedProgramLocalParameter4fEXT* {.importc: "__glewNamedProgramLocalParameter4fEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
  NamedProgramLocalParameter4fvEXT* {.importc: "__glewNamedProgramLocalParameter4fvEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
  NamedProgramLocalParameterI4iEXT* {.importc: "__glewNamedProgramLocalParameterI4iEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
  NamedProgramLocalParameterI4ivEXT* {.importc: "__glewNamedProgramLocalParameterI4ivEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
  NamedProgramLocalParameterI4uiEXT* {.importc: "__glewNamedProgramLocalParameterI4uiEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
  NamedProgramLocalParameterI4uivEXT* {.importc: "__glewNamedProgramLocalParameterI4uivEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
  NamedProgramLocalParameters4fvEXT* {.importc: "__glewNamedProgramLocalParameters4fvEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
  NamedProgramLocalParametersI4ivEXT* {.importc: "__glewNamedProgramLocalParametersI4ivEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
  NamedProgramLocalParametersI4uivEXT* {.
      importc: "__glewNamedProgramLocalParametersI4uivEXT".}: PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
  NamedProgramStringEXT* {.importc: "__glewNamedProgramStringEXT".}: PFNGLNAMEDPROGRAMSTRINGEXTPROC
  NamedRenderbufferStorageEXT* {.importc: "__glewNamedRenderbufferStorageEXT".}: PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
  NamedRenderbufferStorageMultisampleCoverageEXT*
      {.importc: "__glewNamedRenderbufferStorageMultisampleCoverageEXT".}: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
  NamedRenderbufferStorageMultisampleEXT*
      {.importc: "__glewNamedRenderbufferStorageMultisampleEXT".}: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
  ProgramUniform1fEXT* {.importc: "__glewProgramUniform1fEXT".}: PFNGLPROGRAMUNIFORM1FEXTPROC
  ProgramUniform1fvEXT* {.importc: "__glewProgramUniform1fvEXT".}: PFNGLPROGRAMUNIFORM1FVEXTPROC
  ProgramUniform1iEXT* {.importc: "__glewProgramUniform1iEXT".}: PFNGLPROGRAMUNIFORM1IEXTPROC
  ProgramUniform1ivEXT* {.importc: "__glewProgramUniform1ivEXT".}: PFNGLPROGRAMUNIFORM1IVEXTPROC
  ProgramUniform1uiEXT* {.importc: "__glewProgramUniform1uiEXT".}: PFNGLPROGRAMUNIFORM1UIEXTPROC
  ProgramUniform1uivEXT* {.importc: "__glewProgramUniform1uivEXT".}: PFNGLPROGRAMUNIFORM1UIVEXTPROC
  ProgramUniform2fEXT* {.importc: "__glewProgramUniform2fEXT".}: PFNGLPROGRAMUNIFORM2FEXTPROC
  ProgramUniform2fvEXT* {.importc: "__glewProgramUniform2fvEXT".}: PFNGLPROGRAMUNIFORM2FVEXTPROC
  ProgramUniform2iEXT* {.importc: "__glewProgramUniform2iEXT".}: PFNGLPROGRAMUNIFORM2IEXTPROC
  ProgramUniform2ivEXT* {.importc: "__glewProgramUniform2ivEXT".}: PFNGLPROGRAMUNIFORM2IVEXTPROC
  ProgramUniform2uiEXT* {.importc: "__glewProgramUniform2uiEXT".}: PFNGLPROGRAMUNIFORM2UIEXTPROC
  ProgramUniform2uivEXT* {.importc: "__glewProgramUniform2uivEXT".}: PFNGLPROGRAMUNIFORM2UIVEXTPROC
  ProgramUniform3fEXT* {.importc: "__glewProgramUniform3fEXT".}: PFNGLPROGRAMUNIFORM3FEXTPROC
  ProgramUniform3fvEXT* {.importc: "__glewProgramUniform3fvEXT".}: PFNGLPROGRAMUNIFORM3FVEXTPROC
  ProgramUniform3iEXT* {.importc: "__glewProgramUniform3iEXT".}: PFNGLPROGRAMUNIFORM3IEXTPROC
  ProgramUniform3ivEXT* {.importc: "__glewProgramUniform3ivEXT".}: PFNGLPROGRAMUNIFORM3IVEXTPROC
  ProgramUniform3uiEXT* {.importc: "__glewProgramUniform3uiEXT".}: PFNGLPROGRAMUNIFORM3UIEXTPROC
  ProgramUniform3uivEXT* {.importc: "__glewProgramUniform3uivEXT".}: PFNGLPROGRAMUNIFORM3UIVEXTPROC
  ProgramUniform4fEXT* {.importc: "__glewProgramUniform4fEXT".}: PFNGLPROGRAMUNIFORM4FEXTPROC
  ProgramUniform4fvEXT* {.importc: "__glewProgramUniform4fvEXT".}: PFNGLPROGRAMUNIFORM4FVEXTPROC
  ProgramUniform4iEXT* {.importc: "__glewProgramUniform4iEXT".}: PFNGLPROGRAMUNIFORM4IEXTPROC
  ProgramUniform4ivEXT* {.importc: "__glewProgramUniform4ivEXT".}: PFNGLPROGRAMUNIFORM4IVEXTPROC
  ProgramUniform4uiEXT* {.importc: "__glewProgramUniform4uiEXT".}: PFNGLPROGRAMUNIFORM4UIEXTPROC
  ProgramUniform4uivEXT* {.importc: "__glewProgramUniform4uivEXT".}: PFNGLPROGRAMUNIFORM4UIVEXTPROC
  ProgramUniformMatrix2fvEXT* {.importc: "__glewProgramUniformMatrix2fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
  ProgramUniformMatrix2x3fvEXT* {.importc: "__glewProgramUniformMatrix2x3fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
  ProgramUniformMatrix2x4fvEXT* {.importc: "__glewProgramUniformMatrix2x4fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
  ProgramUniformMatrix3fvEXT* {.importc: "__glewProgramUniformMatrix3fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
  ProgramUniformMatrix3x2fvEXT* {.importc: "__glewProgramUniformMatrix3x2fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
  ProgramUniformMatrix3x4fvEXT* {.importc: "__glewProgramUniformMatrix3x4fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
  ProgramUniformMatrix4fvEXT* {.importc: "__glewProgramUniformMatrix4fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
  ProgramUniformMatrix4x2fvEXT* {.importc: "__glewProgramUniformMatrix4x2fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
  ProgramUniformMatrix4x3fvEXT* {.importc: "__glewProgramUniformMatrix4x3fvEXT".}: PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
  PushClientAttribDefaultEXT* {.importc: "__glewPushClientAttribDefaultEXT".}: PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
  TextureBufferEXT* {.importc: "__glewTextureBufferEXT".}: PFNGLTEXTUREBUFFEREXTPROC
  TextureImage1DEXT* {.importc: "__glewTextureImage1DEXT".}: PFNGLTEXTUREIMAGE1DEXTPROC
  TextureImage2DEXT* {.importc: "__glewTextureImage2DEXT".}: PFNGLTEXTUREIMAGE2DEXTPROC
  TextureImage3DEXT* {.importc: "__glewTextureImage3DEXT".}: PFNGLTEXTUREIMAGE3DEXTPROC
  TextureParameterIivEXT* {.importc: "__glewTextureParameterIivEXT".}: PFNGLTEXTUREPARAMETERIIVEXTPROC
  TextureParameterIuivEXT* {.importc: "__glewTextureParameterIuivEXT".}: PFNGLTEXTUREPARAMETERIUIVEXTPROC
  TextureParameterfEXT* {.importc: "__glewTextureParameterfEXT".}: PFNGLTEXTUREPARAMETERFEXTPROC
  TextureParameterfvEXT* {.importc: "__glewTextureParameterfvEXT".}: PFNGLTEXTUREPARAMETERFVEXTPROC
  TextureParameteriEXT* {.importc: "__glewTextureParameteriEXT".}: PFNGLTEXTUREPARAMETERIEXTPROC
  TextureParameterivEXT* {.importc: "__glewTextureParameterivEXT".}: PFNGLTEXTUREPARAMETERIVEXTPROC
  TextureRenderbufferEXT* {.importc: "__glewTextureRenderbufferEXT".}: PFNGLTEXTURERENDERBUFFEREXTPROC
  TextureSubImage1DEXT* {.importc: "__glewTextureSubImage1DEXT".}: PFNGLTEXTURESUBIMAGE1DEXTPROC
  TextureSubImage2DEXT* {.importc: "__glewTextureSubImage2DEXT".}: PFNGLTEXTURESUBIMAGE2DEXTPROC
  TextureSubImage3DEXT* {.importc: "__glewTextureSubImage3DEXT".}: PFNGLTEXTURESUBIMAGE3DEXTPROC
  UnmapNamedBufferEXT* {.importc: "__glewUnmapNamedBufferEXT".}: PFNGLUNMAPNAMEDBUFFEREXTPROC
  VertexArrayColorOffsetEXT* {.importc: "__glewVertexArrayColorOffsetEXT".}: PFNGLVERTEXARRAYCOLOROFFSETEXTPROC
  VertexArrayEdgeFlagOffsetEXT* {.importc: "__glewVertexArrayEdgeFlagOffsetEXT".}: PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC
  VertexArrayFogCoordOffsetEXT* {.importc: "__glewVertexArrayFogCoordOffsetEXT".}: PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC
  VertexArrayIndexOffsetEXT* {.importc: "__glewVertexArrayIndexOffsetEXT".}: PFNGLVERTEXARRAYINDEXOFFSETEXTPROC
  VertexArrayMultiTexCoordOffsetEXT* {.importc: "__glewVertexArrayMultiTexCoordOffsetEXT".}: PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
  VertexArrayNormalOffsetEXT* {.importc: "__glewVertexArrayNormalOffsetEXT".}: PFNGLVERTEXARRAYNORMALOFFSETEXTPROC
  VertexArraySecondaryColorOffsetEXT* {.importc: "__glewVertexArraySecondaryColorOffsetEXT".}: PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
  VertexArrayTexCoordOffsetEXT* {.importc: "__glewVertexArrayTexCoordOffsetEXT".}: PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC
  VertexArrayVertexAttribDivisorEXT* {.importc: "__glewVertexArrayVertexAttribDivisorEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
  VertexArrayVertexAttribIOffsetEXT* {.importc: "__glewVertexArrayVertexAttribIOffsetEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
  VertexArrayVertexAttribOffsetEXT* {.importc: "__glewVertexArrayVertexAttribOffsetEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
  VertexArrayVertexOffsetEXT* {.importc: "__glewVertexArrayVertexOffsetEXT".}: PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC
  DiscardFramebufferEXT* {.importc: "__glewDiscardFramebufferEXT".}: PFNGLDISCARDFRAMEBUFFEREXTPROC
  DrawBuffersEXT* {.importc: "__glewDrawBuffersEXT".}: PFNGLDRAWBUFFERSEXTPROC
  ColorMaskIndexedEXT* {.importc: "__glewColorMaskIndexedEXT".}: PFNGLCOLORMASKINDEXEDEXTPROC
  DisableIndexedEXT* {.importc: "__glewDisableIndexedEXT".}: PFNGLDISABLEINDEXEDEXTPROC
  EnableIndexedEXT* {.importc: "__glewEnableIndexedEXT".}: PFNGLENABLEINDEXEDEXTPROC
  GetBooleanIndexedvEXT* {.importc: "__glewGetBooleanIndexedvEXT".}: PFNGLGETBOOLEANINDEXEDVEXTPROC
  GetIntegerIndexedvEXT* {.importc: "__glewGetIntegerIndexedvEXT".}: PFNGLGETINTEGERINDEXEDVEXTPROC
  IsEnabledIndexedEXT* {.importc: "__glewIsEnabledIndexedEXT".}: PFNGLISENABLEDINDEXEDEXTPROC
  BlendEquationSeparateiEXT* {.importc: "__glewBlendEquationSeparateiEXT".}: PFNGLBLENDEQUATIONSEPARATEIEXTPROC
  BlendEquationiEXT* {.importc: "__glewBlendEquationiEXT".}: PFNGLBLENDEQUATIONIEXTPROC
  BlendFuncSeparateiEXT* {.importc: "__glewBlendFuncSeparateiEXT".}: PFNGLBLENDFUNCSEPARATEIEXTPROC
  BlendFunciEXT* {.importc: "__glewBlendFunciEXT".}: PFNGLBLENDFUNCIEXTPROC
  ColorMaskiEXT* {.importc: "__glewColorMaskiEXT".}: PFNGLCOLORMASKIEXTPROC
  DisableiEXT* {.importc: "__glewDisableiEXT".}: PFNGLDISABLEIEXTPROC
  EnableiEXT* {.importc: "__glewEnableiEXT".}: PFNGLENABLEIEXTPROC
  IsEnablediEXT* {.importc: "__glewIsEnablediEXT".}: PFNGLISENABLEDIEXTPROC
  DrawElementsBaseVertexEXT* {.importc: "__glewDrawElementsBaseVertexEXT".}: PFNGLDRAWELEMENTSBASEVERTEXEXTPROC
  DrawElementsInstancedBaseVertexEXT* {.importc: "__glewDrawElementsInstancedBaseVertexEXT".}: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC
  DrawRangeElementsBaseVertexEXT* {.importc: "__glewDrawRangeElementsBaseVertexEXT".}: PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC
  MultiDrawElementsBaseVertexEXT* {.importc: "__glewMultiDrawElementsBaseVertexEXT".}: PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC
  DrawArraysInstancedEXT* {.importc: "__glewDrawArraysInstancedEXT".}: PFNGLDRAWARRAYSINSTANCEDEXTPROC
  DrawElementsInstancedEXT* {.importc: "__glewDrawElementsInstancedEXT".}: PFNGLDRAWELEMENTSINSTANCEDEXTPROC
  DrawRangeElementsEXT* {.importc: "__glewDrawRangeElementsEXT".}: PFNGLDRAWRANGEELEMENTSEXTPROC
  BufferStorageExternalEXT* {.importc: "__glewBufferStorageExternalEXT".}: PFNGLBUFFERSTORAGEEXTERNALEXTPROC
  NamedBufferStorageExternalEXT* {.importc: "__glewNamedBufferStorageExternalEXT".}: PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC
  FogCoordPointerEXT* {.importc: "__glewFogCoordPointerEXT".}: PFNGLFOGCOORDPOINTEREXTPROC
  FogCoorddEXT* {.importc: "__glewFogCoorddEXT".}: PFNGLFOGCOORDDEXTPROC
  FogCoorddvEXT* {.importc: "__glewFogCoorddvEXT".}: PFNGLFOGCOORDDVEXTPROC
  FogCoordfEXT* {.importc: "__glewFogCoordfEXT".}: PFNGLFOGCOORDFEXTPROC
  FogCoordfvEXT* {.importc: "__glewFogCoordfvEXT".}: PFNGLFOGCOORDFVEXTPROC
  FragmentColorMaterialEXT* {.importc: "__glewFragmentColorMaterialEXT".}: PFNGLFRAGMENTCOLORMATERIALEXTPROC
  FragmentLightModelfEXT* {.importc: "__glewFragmentLightModelfEXT".}: PFNGLFRAGMENTLIGHTMODELFEXTPROC
  FragmentLightModelfvEXT* {.importc: "__glewFragmentLightModelfvEXT".}: PFNGLFRAGMENTLIGHTMODELFVEXTPROC
  FragmentLightModeliEXT* {.importc: "__glewFragmentLightModeliEXT".}: PFNGLFRAGMENTLIGHTMODELIEXTPROC
  FragmentLightModelivEXT* {.importc: "__glewFragmentLightModelivEXT".}: PFNGLFRAGMENTLIGHTMODELIVEXTPROC
  FragmentLightfEXT* {.importc: "__glewFragmentLightfEXT".}: PFNGLFRAGMENTLIGHTFEXTPROC
  FragmentLightfvEXT* {.importc: "__glewFragmentLightfvEXT".}: PFNGLFRAGMENTLIGHTFVEXTPROC
  FragmentLightiEXT* {.importc: "__glewFragmentLightiEXT".}: PFNGLFRAGMENTLIGHTIEXTPROC
  FragmentLightivEXT* {.importc: "__glewFragmentLightivEXT".}: PFNGLFRAGMENTLIGHTIVEXTPROC
  FragmentMaterialfEXT* {.importc: "__glewFragmentMaterialfEXT".}: PFNGLFRAGMENTMATERIALFEXTPROC
  FragmentMaterialfvEXT* {.importc: "__glewFragmentMaterialfvEXT".}: PFNGLFRAGMENTMATERIALFVEXTPROC
  FragmentMaterialiEXT* {.importc: "__glewFragmentMaterialiEXT".}: PFNGLFRAGMENTMATERIALIEXTPROC
  FragmentMaterialivEXT* {.importc: "__glewFragmentMaterialivEXT".}: PFNGLFRAGMENTMATERIALIVEXTPROC
  GetFragmentLightfvEXT* {.importc: "__glewGetFragmentLightfvEXT".}: PFNGLGETFRAGMENTLIGHTFVEXTPROC
  GetFragmentLightivEXT* {.importc: "__glewGetFragmentLightivEXT".}: PFNGLGETFRAGMENTLIGHTIVEXTPROC
  GetFragmentMaterialfvEXT* {.importc: "__glewGetFragmentMaterialfvEXT".}: PFNGLGETFRAGMENTMATERIALFVEXTPROC
  GetFragmentMaterialivEXT* {.importc: "__glewGetFragmentMaterialivEXT".}: PFNGLGETFRAGMENTMATERIALIVEXTPROC
  LightEnviEXT* {.importc: "__glewLightEnviEXT".}: PFNGLLIGHTENVIEXTPROC
  BlitFramebufferEXT* {.importc: "__glewBlitFramebufferEXT".}: PFNGLBLITFRAMEBUFFEREXTPROC
  RenderbufferStorageMultisampleEXT* {.importc: "__glewRenderbufferStorageMultisampleEXT".}: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
  BindFramebufferEXT* {.importc: "__glewBindFramebufferEXT".}: PFNGLBINDFRAMEBUFFEREXTPROC
  BindRenderbufferEXT* {.importc: "__glewBindRenderbufferEXT".}: PFNGLBINDRENDERBUFFEREXTPROC
  CheckFramebufferStatusEXT* {.importc: "__glewCheckFramebufferStatusEXT".}: PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
  DeleteFramebuffersEXT* {.importc: "__glewDeleteFramebuffersEXT".}: PFNGLDELETEFRAMEBUFFERSEXTPROC
  DeleteRenderbuffersEXT* {.importc: "__glewDeleteRenderbuffersEXT".}: PFNGLDELETERENDERBUFFERSEXTPROC
  FramebufferRenderbufferEXT* {.importc: "__glewFramebufferRenderbufferEXT".}: PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
  FramebufferTexture1DEXT* {.importc: "__glewFramebufferTexture1DEXT".}: PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
  FramebufferTexture2DEXT* {.importc: "__glewFramebufferTexture2DEXT".}: PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
  FramebufferTexture3DEXT* {.importc: "__glewFramebufferTexture3DEXT".}: PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
  GenFramebuffersEXT* {.importc: "__glewGenFramebuffersEXT".}: PFNGLGENFRAMEBUFFERSEXTPROC
  GenRenderbuffersEXT* {.importc: "__glewGenRenderbuffersEXT".}: PFNGLGENRENDERBUFFERSEXTPROC
  GenerateMipmapEXT* {.importc: "__glewGenerateMipmapEXT".}: PFNGLGENERATEMIPMAPEXTPROC
  GetFramebufferAttachmentParameterivEXT*
      {.importc: "__glewGetFramebufferAttachmentParameterivEXT".}: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
  GetRenderbufferParameterivEXT* {.importc: "__glewGetRenderbufferParameterivEXT".}: PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
  IsFramebufferEXT* {.importc: "__glewIsFramebufferEXT".}: PFNGLISFRAMEBUFFEREXTPROC
  IsRenderbufferEXT* {.importc: "__glewIsRenderbufferEXT".}: PFNGLISRENDERBUFFEREXTPROC
  RenderbufferStorageEXT* {.importc: "__glewRenderbufferStorageEXT".}: PFNGLRENDERBUFFERSTORAGEEXTPROC
  FramebufferTextureEXT* {.importc: "__glewFramebufferTextureEXT".}: PFNGLFRAMEBUFFERTEXTUREEXTPROC
  FramebufferTextureFaceEXT* {.importc: "__glewFramebufferTextureFaceEXT".}: PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
  ProgramParameteriEXT* {.importc: "__glewProgramParameteriEXT".}: PFNGLPROGRAMPARAMETERIEXTPROC
  ProgramEnvParameters4fvEXT* {.importc: "__glewProgramEnvParameters4fvEXT".}: PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
  ProgramLocalParameters4fvEXT* {.importc: "__glewProgramLocalParameters4fvEXT".}: PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
  BindFragDataLocationEXT* {.importc: "__glewBindFragDataLocationEXT".}: PFNGLBINDFRAGDATALOCATIONEXTPROC
  GetFragDataLocationEXT* {.importc: "__glewGetFragDataLocationEXT".}: PFNGLGETFRAGDATALOCATIONEXTPROC
  GetUniformuivEXT* {.importc: "__glewGetUniformuivEXT".}: PFNGLGETUNIFORMUIVEXTPROC
  GetVertexAttribIivEXT* {.importc: "__glewGetVertexAttribIivEXT".}: PFNGLGETVERTEXATTRIBIIVEXTPROC
  GetVertexAttribIuivEXT* {.importc: "__glewGetVertexAttribIuivEXT".}: PFNGLGETVERTEXATTRIBIUIVEXTPROC
  Uniform1uiEXT* {.importc: "__glewUniform1uiEXT".}: PFNGLUNIFORM1UIEXTPROC
  Uniform1uivEXT* {.importc: "__glewUniform1uivEXT".}: PFNGLUNIFORM1UIVEXTPROC
  Uniform2uiEXT* {.importc: "__glewUniform2uiEXT".}: PFNGLUNIFORM2UIEXTPROC
  Uniform2uivEXT* {.importc: "__glewUniform2uivEXT".}: PFNGLUNIFORM2UIVEXTPROC
  Uniform3uiEXT* {.importc: "__glewUniform3uiEXT".}: PFNGLUNIFORM3UIEXTPROC
  Uniform3uivEXT* {.importc: "__glewUniform3uivEXT".}: PFNGLUNIFORM3UIVEXTPROC
  Uniform4uiEXT* {.importc: "__glewUniform4uiEXT".}: PFNGLUNIFORM4UIEXTPROC
  Uniform4uivEXT* {.importc: "__glewUniform4uivEXT".}: PFNGLUNIFORM4UIVEXTPROC
  VertexAttribI1iEXT* {.importc: "__glewVertexAttribI1iEXT".}: PFNGLVERTEXATTRIBI1IEXTPROC
  VertexAttribI1ivEXT* {.importc: "__glewVertexAttribI1ivEXT".}: PFNGLVERTEXATTRIBI1IVEXTPROC
  VertexAttribI1uiEXT* {.importc: "__glewVertexAttribI1uiEXT".}: PFNGLVERTEXATTRIBI1UIEXTPROC
  VertexAttribI1uivEXT* {.importc: "__glewVertexAttribI1uivEXT".}: PFNGLVERTEXATTRIBI1UIVEXTPROC
  VertexAttribI2iEXT* {.importc: "__glewVertexAttribI2iEXT".}: PFNGLVERTEXATTRIBI2IEXTPROC
  VertexAttribI2ivEXT* {.importc: "__glewVertexAttribI2ivEXT".}: PFNGLVERTEXATTRIBI2IVEXTPROC
  VertexAttribI2uiEXT* {.importc: "__glewVertexAttribI2uiEXT".}: PFNGLVERTEXATTRIBI2UIEXTPROC
  VertexAttribI2uivEXT* {.importc: "__glewVertexAttribI2uivEXT".}: PFNGLVERTEXATTRIBI2UIVEXTPROC
  VertexAttribI3iEXT* {.importc: "__glewVertexAttribI3iEXT".}: PFNGLVERTEXATTRIBI3IEXTPROC
  VertexAttribI3ivEXT* {.importc: "__glewVertexAttribI3ivEXT".}: PFNGLVERTEXATTRIBI3IVEXTPROC
  VertexAttribI3uiEXT* {.importc: "__glewVertexAttribI3uiEXT".}: PFNGLVERTEXATTRIBI3UIEXTPROC
  VertexAttribI3uivEXT* {.importc: "__glewVertexAttribI3uivEXT".}: PFNGLVERTEXATTRIBI3UIVEXTPROC
  VertexAttribI4bvEXT* {.importc: "__glewVertexAttribI4bvEXT".}: PFNGLVERTEXATTRIBI4BVEXTPROC
  VertexAttribI4iEXT* {.importc: "__glewVertexAttribI4iEXT".}: PFNGLVERTEXATTRIBI4IEXTPROC
  VertexAttribI4ivEXT* {.importc: "__glewVertexAttribI4ivEXT".}: PFNGLVERTEXATTRIBI4IVEXTPROC
  VertexAttribI4svEXT* {.importc: "__glewVertexAttribI4svEXT".}: PFNGLVERTEXATTRIBI4SVEXTPROC
  VertexAttribI4ubvEXT* {.importc: "__glewVertexAttribI4ubvEXT".}: PFNGLVERTEXATTRIBI4UBVEXTPROC
  VertexAttribI4uiEXT* {.importc: "__glewVertexAttribI4uiEXT".}: PFNGLVERTEXATTRIBI4UIEXTPROC
  VertexAttribI4uivEXT* {.importc: "__glewVertexAttribI4uivEXT".}: PFNGLVERTEXATTRIBI4UIVEXTPROC
  VertexAttribI4usvEXT* {.importc: "__glewVertexAttribI4usvEXT".}: PFNGLVERTEXATTRIBI4USVEXTPROC
  VertexAttribIPointerEXT* {.importc: "__glewVertexAttribIPointerEXT".}: PFNGLVERTEXATTRIBIPOINTEREXTPROC
  GetHistogramEXT* {.importc: "__glewGetHistogramEXT".}: PFNGLGETHISTOGRAMEXTPROC
  GetHistogramParameterfvEXT* {.importc: "__glewGetHistogramParameterfvEXT".}: PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
  GetHistogramParameterivEXT* {.importc: "__glewGetHistogramParameterivEXT".}: PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
  GetMinmaxEXT* {.importc: "__glewGetMinmaxEXT".}: PFNGLGETMINMAXEXTPROC
  GetMinmaxParameterfvEXT* {.importc: "__glewGetMinmaxParameterfvEXT".}: PFNGLGETMINMAXPARAMETERFVEXTPROC
  GetMinmaxParameterivEXT* {.importc: "__glewGetMinmaxParameterivEXT".}: PFNGLGETMINMAXPARAMETERIVEXTPROC
  HistogramEXT* {.importc: "__glewHistogramEXT".}: PFNGLHISTOGRAMEXTPROC
  MinmaxEXT* {.importc: "__glewMinmaxEXT".}: PFNGLMINMAXEXTPROC
  ResetHistogramEXT* {.importc: "__glewResetHistogramEXT".}: PFNGLRESETHISTOGRAMEXTPROC
  ResetMinmaxEXT* {.importc: "__glewResetMinmaxEXT".}: PFNGLRESETMINMAXEXTPROC
  IndexFuncEXT* {.importc: "__glewIndexFuncEXT".}: PFNGLINDEXFUNCEXTPROC
  IndexMaterialEXT* {.importc: "__glewIndexMaterialEXT".}: PFNGLINDEXMATERIALEXTPROC
  VertexAttribDivisorEXT* {.importc: "__glewVertexAttribDivisorEXT".}: PFNGLVERTEXATTRIBDIVISOREXTPROC
  ApplyTextureEXT* {.importc: "__glewApplyTextureEXT".}: PFNGLAPPLYTEXTUREEXTPROC
  TextureLightEXT* {.importc: "__glewTextureLightEXT".}: PFNGLTEXTURELIGHTEXTPROC
  TextureMaterialEXT* {.importc: "__glewTextureMaterialEXT".}: PFNGLTEXTUREMATERIALEXTPROC
  FlushMappedBufferRangeEXT* {.importc: "__glewFlushMappedBufferRangeEXT".}: PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
  MapBufferRangeEXT* {.importc: "__glewMapBufferRangeEXT".}: PFNGLMAPBUFFERRANGEEXTPROC
  BufferStorageMemEXT* {.importc: "__glewBufferStorageMemEXT".}: PFNGLBUFFERSTORAGEMEMEXTPROC
  CreateMemoryObjectsEXT* {.importc: "__glewCreateMemoryObjectsEXT".}: PFNGLCREATEMEMORYOBJECTSEXTPROC
  DeleteMemoryObjectsEXT* {.importc: "__glewDeleteMemoryObjectsEXT".}: PFNGLDELETEMEMORYOBJECTSEXTPROC
  GetMemoryObjectParameterivEXT* {.importc: "__glewGetMemoryObjectParameterivEXT".}: PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC
  GetUnsignedBytei_vEXT* {.importc: "__glewGetUnsignedBytei_vEXT".}: PFNGLGETUNSIGNEDBYTEI_VEXTPROC
  GetUnsignedBytevEXT* {.importc: "__glewGetUnsignedBytevEXT".}: PFNGLGETUNSIGNEDBYTEVEXTPROC
  IsMemoryObjectEXT* {.importc: "__glewIsMemoryObjectEXT".}: PFNGLISMEMORYOBJECTEXTPROC
  MemoryObjectParameterivEXT* {.importc: "__glewMemoryObjectParameterivEXT".}: PFNGLMEMORYOBJECTPARAMETERIVEXTPROC
  NamedBufferStorageMemEXT* {.importc: "__glewNamedBufferStorageMemEXT".}: PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC
  TexStorageMem1DEXT* {.importc: "__glewTexStorageMem1DEXT".}: PFNGLTEXSTORAGEMEM1DEXTPROC
  TexStorageMem2DEXT* {.importc: "__glewTexStorageMem2DEXT".}: PFNGLTEXSTORAGEMEM2DEXTPROC
  TexStorageMem2DMultisampleEXT* {.importc: "__glewTexStorageMem2DMultisampleEXT".}: PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC
  TexStorageMem3DEXT* {.importc: "__glewTexStorageMem3DEXT".}: PFNGLTEXSTORAGEMEM3DEXTPROC
  TexStorageMem3DMultisampleEXT* {.importc: "__glewTexStorageMem3DMultisampleEXT".}: PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC
  TextureStorageMem1DEXT* {.importc: "__glewTextureStorageMem1DEXT".}: PFNGLTEXTURESTORAGEMEM1DEXTPROC
  TextureStorageMem2DEXT* {.importc: "__glewTextureStorageMem2DEXT".}: PFNGLTEXTURESTORAGEMEM2DEXTPROC
  TextureStorageMem2DMultisampleEXT* {.importc: "__glewTextureStorageMem2DMultisampleEXT".}: PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC
  TextureStorageMem3DEXT* {.importc: "__glewTextureStorageMem3DEXT".}: PFNGLTEXTURESTORAGEMEM3DEXTPROC
  TextureStorageMem3DMultisampleEXT* {.importc: "__glewTextureStorageMem3DMultisampleEXT".}: PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC
  ImportMemoryFdEXT* {.importc: "__glewImportMemoryFdEXT".}: PFNGLIMPORTMEMORYFDEXTPROC
  ImportMemoryWin32HandleEXT* {.importc: "__glewImportMemoryWin32HandleEXT".}: PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC
  ImportMemoryWin32NameEXT* {.importc: "__glewImportMemoryWin32NameEXT".}: PFNGLIMPORTMEMORYWIN32NAMEEXTPROC
  MultiDrawArraysEXT* {.importc: "__glewMultiDrawArraysEXT".}: PFNGLMULTIDRAWARRAYSEXTPROC
  MultiDrawElementsEXT* {.importc: "__glewMultiDrawElementsEXT".}: PFNGLMULTIDRAWELEMENTSEXTPROC
  MultiDrawArraysIndirectEXT* {.importc: "__glewMultiDrawArraysIndirectEXT".}: PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC
  MultiDrawElementsIndirectEXT* {.importc: "__glewMultiDrawElementsIndirectEXT".}: PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC
  SampleMaskEXT* {.importc: "__glewSampleMaskEXT".}: PFNGLSAMPLEMASKEXTPROC
  SamplePatternEXT* {.importc: "__glewSamplePatternEXT".}: PFNGLSAMPLEPATTERNEXTPROC
  FramebufferTexture2DMultisampleEXT* {.importc: "__glewFramebufferTexture2DMultisampleEXT".}: PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
  DrawBuffersIndexedEXT* {.importc: "__glewDrawBuffersIndexedEXT".}: PFNGLDRAWBUFFERSINDEXEDEXTPROC
  GetIntegeri_vEXT* {.importc: "__glewGetIntegeri_vEXT".}: PFNGLGETINTEGERI_VEXTPROC
  ReadBufferIndexedEXT* {.importc: "__glewReadBufferIndexedEXT".}: PFNGLREADBUFFERINDEXEDEXTPROC
  ColorTableEXT* {.importc: "__glewColorTableEXT".}: PFNGLCOLORTABLEEXTPROC
  GetColorTableEXT* {.importc: "__glewGetColorTableEXT".}: PFNGLGETCOLORTABLEEXTPROC
  GetColorTableParameterfvEXT* {.importc: "__glewGetColorTableParameterfvEXT".}: PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
  GetColorTableParameterivEXT* {.importc: "__glewGetColorTableParameterivEXT".}: PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
  GetPixelTransformParameterfvEXT* {.importc: "__glewGetPixelTransformParameterfvEXT".}: PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
  GetPixelTransformParameterivEXT* {.importc: "__glewGetPixelTransformParameterivEXT".}: PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
  PixelTransformParameterfEXT* {.importc: "__glewPixelTransformParameterfEXT".}: PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
  PixelTransformParameterfvEXT* {.importc: "__glewPixelTransformParameterfvEXT".}: PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
  PixelTransformParameteriEXT* {.importc: "__glewPixelTransformParameteriEXT".}: PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
  PixelTransformParameterivEXT* {.importc: "__glewPixelTransformParameterivEXT".}: PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
  PointParameterfEXT* {.importc: "__glewPointParameterfEXT".}: PFNGLPOINTPARAMETERFEXTPROC
  PointParameterfvEXT* {.importc: "__glewPointParameterfvEXT".}: PFNGLPOINTPARAMETERFVEXTPROC
  PolygonOffsetEXT* {.importc: "__glewPolygonOffsetEXT".}: PFNGLPOLYGONOFFSETEXTPROC
  PolygonOffsetClampEXT* {.importc: "__glewPolygonOffsetClampEXT".}: PFNGLPOLYGONOFFSETCLAMPEXTPROC
  ProvokingVertexEXT* {.importc: "__glewProvokingVertexEXT".}: PFNGLPROVOKINGVERTEXEXTPROC
  CoverageModulationNV* {.importc: "__glewCoverageModulationNV".}: PFNGLCOVERAGEMODULATIONNVPROC
  CoverageModulationTableNV* {.importc: "__glewCoverageModulationTableNV".}: PFNGLCOVERAGEMODULATIONTABLENVPROC
  GetCoverageModulationTableNV* {.importc: "__glewGetCoverageModulationTableNV".}: PFNGLGETCOVERAGEMODULATIONTABLENVPROC
  RasterSamplesEXT* {.importc: "__glewRasterSamplesEXT".}: PFNGLRASTERSAMPLESEXTPROC
  BeginSceneEXT* {.importc: "__glewBeginSceneEXT".}: PFNGLBEGINSCENEEXTPROC
  EndSceneEXT* {.importc: "__glewEndSceneEXT".}: PFNGLENDSCENEEXTPROC
  SecondaryColor3bEXT* {.importc: "__glewSecondaryColor3bEXT".}: PFNGLSECONDARYCOLOR3BEXTPROC
  SecondaryColor3bvEXT* {.importc: "__glewSecondaryColor3bvEXT".}: PFNGLSECONDARYCOLOR3BVEXTPROC
  SecondaryColor3dEXT* {.importc: "__glewSecondaryColor3dEXT".}: PFNGLSECONDARYCOLOR3DEXTPROC
  SecondaryColor3dvEXT* {.importc: "__glewSecondaryColor3dvEXT".}: PFNGLSECONDARYCOLOR3DVEXTPROC
  SecondaryColor3fEXT* {.importc: "__glewSecondaryColor3fEXT".}: PFNGLSECONDARYCOLOR3FEXTPROC
  SecondaryColor3fvEXT* {.importc: "__glewSecondaryColor3fvEXT".}: PFNGLSECONDARYCOLOR3FVEXTPROC
  SecondaryColor3iEXT* {.importc: "__glewSecondaryColor3iEXT".}: PFNGLSECONDARYCOLOR3IEXTPROC
  SecondaryColor3ivEXT* {.importc: "__glewSecondaryColor3ivEXT".}: PFNGLSECONDARYCOLOR3IVEXTPROC
  SecondaryColor3sEXT* {.importc: "__glewSecondaryColor3sEXT".}: PFNGLSECONDARYCOLOR3SEXTPROC
  SecondaryColor3svEXT* {.importc: "__glewSecondaryColor3svEXT".}: PFNGLSECONDARYCOLOR3SVEXTPROC
  SecondaryColor3ubEXT* {.importc: "__glewSecondaryColor3ubEXT".}: PFNGLSECONDARYCOLOR3UBEXTPROC
  SecondaryColor3ubvEXT* {.importc: "__glewSecondaryColor3ubvEXT".}: PFNGLSECONDARYCOLOR3UBVEXTPROC
  SecondaryColor3uiEXT* {.importc: "__glewSecondaryColor3uiEXT".}: PFNGLSECONDARYCOLOR3UIEXTPROC
  SecondaryColor3uivEXT* {.importc: "__glewSecondaryColor3uivEXT".}: PFNGLSECONDARYCOLOR3UIVEXTPROC
  SecondaryColor3usEXT* {.importc: "__glewSecondaryColor3usEXT".}: PFNGLSECONDARYCOLOR3USEXTPROC
  SecondaryColor3usvEXT* {.importc: "__glewSecondaryColor3usvEXT".}: PFNGLSECONDARYCOLOR3USVEXTPROC
  SecondaryColorPointerEXT* {.importc: "__glewSecondaryColorPointerEXT".}: PFNGLSECONDARYCOLORPOINTEREXTPROC
  DeleteSemaphoresEXT* {.importc: "__glewDeleteSemaphoresEXT".}: PFNGLDELETESEMAPHORESEXTPROC
  GenSemaphoresEXT* {.importc: "__glewGenSemaphoresEXT".}: PFNGLGENSEMAPHORESEXTPROC
  GetSemaphoreParameterui64vEXT* {.importc: "__glewGetSemaphoreParameterui64vEXT".}: PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC
  IsSemaphoreEXT* {.importc: "__glewIsSemaphoreEXT".}: PFNGLISSEMAPHOREEXTPROC
  SemaphoreParameterui64vEXT* {.importc: "__glewSemaphoreParameterui64vEXT".}: PFNGLSEMAPHOREPARAMETERUI64VEXTPROC
  SignalSemaphoreEXT* {.importc: "__glewSignalSemaphoreEXT".}: PFNGLSIGNALSEMAPHOREEXTPROC
  WaitSemaphoreEXT* {.importc: "__glewWaitSemaphoreEXT".}: PFNGLWAITSEMAPHOREEXTPROC
  ImportSemaphoreFdEXT* {.importc: "__glewImportSemaphoreFdEXT".}: PFNGLIMPORTSEMAPHOREFDEXTPROC
  ImportSemaphoreWin32HandleEXT* {.importc: "__glewImportSemaphoreWin32HandleEXT".}: PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC
  ImportSemaphoreWin32NameEXT* {.importc: "__glewImportSemaphoreWin32NameEXT".}: PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC
  ActiveProgramEXT* {.importc: "__glewActiveProgramEXT".}: PFNGLACTIVEPROGRAMEXTPROC
  CreateShaderProgramEXT* {.importc: "__glewCreateShaderProgramEXT".}: PFNGLCREATESHADERPROGRAMEXTPROC
  UseShaderProgramEXT* {.importc: "__glewUseShaderProgramEXT".}: PFNGLUSESHADERPROGRAMEXTPROC
  BindImageTextureEXT* {.importc: "__glewBindImageTextureEXT".}: PFNGLBINDIMAGETEXTUREEXTPROC
  MemoryBarrierEXT* {.importc: "__glewMemoryBarrierEXT".}: PFNGLMEMORYBARRIEREXTPROC
  ClearPixelLocalStorageuiEXT* {.importc: "__glewClearPixelLocalStorageuiEXT".}: PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC
  FramebufferPixelLocalStorageSizeEXT* {.
      importc: "__glewFramebufferPixelLocalStorageSizeEXT".}: PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC
  GetFramebufferPixelLocalStorageSizeEXT*
      {.importc: "__glewGetFramebufferPixelLocalStorageSizeEXT".}: PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC
  TexPageCommitmentEXT* {.importc: "__glewTexPageCommitmentEXT".}: PFNGLTEXPAGECOMMITMENTEXTPROC
  TexturePageCommitmentEXT* {.importc: "__glewTexturePageCommitmentEXT".}: PFNGLTEXTUREPAGECOMMITMENTEXTPROC
  ActiveStencilFaceEXT* {.importc: "__glewActiveStencilFaceEXT".}: PFNGLACTIVESTENCILFACEEXTPROC
  TexSubImage1DEXT* {.importc: "__glewTexSubImage1DEXT".}: PFNGLTEXSUBIMAGE1DEXTPROC
  TexSubImage2DEXT* {.importc: "__glewTexSubImage2DEXT".}: PFNGLTEXSUBIMAGE2DEXTPROC
  TexSubImage3DEXT* {.importc: "__glewTexSubImage3DEXT".}: PFNGLTEXSUBIMAGE3DEXTPROC
  TexImage3DEXT* {.importc: "__glewTexImage3DEXT".}: PFNGLTEXIMAGE3DEXTPROC
  FramebufferTextureLayerEXT* {.importc: "__glewFramebufferTextureLayerEXT".}: PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
  TexBufferEXT* {.importc: "__glewTexBufferEXT".}: PFNGLTEXBUFFEREXTPROC
  ClearColorIiEXT* {.importc: "__glewClearColorIiEXT".}: PFNGLCLEARCOLORIIEXTPROC
  ClearColorIuiEXT* {.importc: "__glewClearColorIuiEXT".}: PFNGLCLEARCOLORIUIEXTPROC
  GetTexParameterIivEXT* {.importc: "__glewGetTexParameterIivEXT".}: PFNGLGETTEXPARAMETERIIVEXTPROC
  GetTexParameterIuivEXT* {.importc: "__glewGetTexParameterIuivEXT".}: PFNGLGETTEXPARAMETERIUIVEXTPROC
  TexParameterIivEXT* {.importc: "__glewTexParameterIivEXT".}: PFNGLTEXPARAMETERIIVEXTPROC
  TexParameterIuivEXT* {.importc: "__glewTexParameterIuivEXT".}: PFNGLTEXPARAMETERIUIVEXTPROC
  AreTexturesResidentEXT* {.importc: "__glewAreTexturesResidentEXT".}: PFNGLARETEXTURESRESIDENTEXTPROC
  BindTextureEXT* {.importc: "__glewBindTextureEXT".}: PFNGLBINDTEXTUREEXTPROC
  DeleteTexturesEXT* {.importc: "__glewDeleteTexturesEXT".}: PFNGLDELETETEXTURESEXTPROC
  GenTexturesEXT* {.importc: "__glewGenTexturesEXT".}: PFNGLGENTEXTURESEXTPROC
  IsTextureEXT* {.importc: "__glewIsTextureEXT".}: PFNGLISTEXTUREEXTPROC
  PrioritizeTexturesEXT* {.importc: "__glewPrioritizeTexturesEXT".}: PFNGLPRIORITIZETEXTURESEXTPROC
  TextureNormalEXT* {.importc: "__glewTextureNormalEXT".}: PFNGLTEXTURENORMALEXTPROC
  TexStorage1DEXT* {.importc: "__glewTexStorage1DEXT".}: PFNGLTEXSTORAGE1DEXTPROC
  TexStorage2DEXT* {.importc: "__glewTexStorage2DEXT".}: PFNGLTEXSTORAGE2DEXTPROC
  TexStorage3DEXT* {.importc: "__glewTexStorage3DEXT".}: PFNGLTEXSTORAGE3DEXTPROC
  TextureStorage1DEXT* {.importc: "__glewTextureStorage1DEXT".}: PFNGLTEXTURESTORAGE1DEXTPROC
  TextureStorage2DEXT* {.importc: "__glewTextureStorage2DEXT".}: PFNGLTEXTURESTORAGE2DEXTPROC
  TextureStorage3DEXT* {.importc: "__glewTextureStorage3DEXT".}: PFNGLTEXTURESTORAGE3DEXTPROC
  TextureViewEXT* {.importc: "__glewTextureViewEXT".}: PFNGLTEXTUREVIEWEXTPROC
  GetQueryObjecti64vEXT* {.importc: "__glewGetQueryObjecti64vEXT".}: PFNGLGETQUERYOBJECTI64VEXTPROC
  GetQueryObjectui64vEXT* {.importc: "__glewGetQueryObjectui64vEXT".}: PFNGLGETQUERYOBJECTUI64VEXTPROC
  BeginTransformFeedbackEXT* {.importc: "__glewBeginTransformFeedbackEXT".}: PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
  BindBufferBaseEXT* {.importc: "__glewBindBufferBaseEXT".}: PFNGLBINDBUFFERBASEEXTPROC
  BindBufferOffsetEXT* {.importc: "__glewBindBufferOffsetEXT".}: PFNGLBINDBUFFEROFFSETEXTPROC
  BindBufferRangeEXT* {.importc: "__glewBindBufferRangeEXT".}: PFNGLBINDBUFFERRANGEEXTPROC
  EndTransformFeedbackEXT* {.importc: "__glewEndTransformFeedbackEXT".}: PFNGLENDTRANSFORMFEEDBACKEXTPROC
  GetTransformFeedbackVaryingEXT* {.importc: "__glewGetTransformFeedbackVaryingEXT".}: PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
  TransformFeedbackVaryingsEXT* {.importc: "__glewTransformFeedbackVaryingsEXT".}: PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
  ArrayElementEXT* {.importc: "__glewArrayElementEXT".}: PFNGLARRAYELEMENTEXTPROC
  ColorPointerEXT* {.importc: "__glewColorPointerEXT".}: PFNGLCOLORPOINTEREXTPROC
  DrawArraysEXT* {.importc: "__glewDrawArraysEXT".}: PFNGLDRAWARRAYSEXTPROC
  EdgeFlagPointerEXT* {.importc: "__glewEdgeFlagPointerEXT".}: PFNGLEDGEFLAGPOINTEREXTPROC
  IndexPointerEXT* {.importc: "__glewIndexPointerEXT".}: PFNGLINDEXPOINTEREXTPROC
  NormalPointerEXT* {.importc: "__glewNormalPointerEXT".}: PFNGLNORMALPOINTEREXTPROC
  TexCoordPointerEXT* {.importc: "__glewTexCoordPointerEXT".}: PFNGLTEXCOORDPOINTEREXTPROC
  VertexPointerEXT* {.importc: "__glewVertexPointerEXT".}: PFNGLVERTEXPOINTEREXTPROC
  BindArraySetEXT* {.importc: "__glewBindArraySetEXT".}: PFNGLBINDARRAYSETEXTPROC
  CreateArraySetExt* {.importc: "__glewCreateArraySetExt".}: PFNGLCREATEARRAYSETEXTPROC
  DeleteArraySetsEXT* {.importc: "__glewDeleteArraySetsEXT".}: PFNGLDELETEARRAYSETSEXTPROC
  GetVertexAttribLdvEXT* {.importc: "__glewGetVertexAttribLdvEXT".}: PFNGLGETVERTEXATTRIBLDVEXTPROC
  VertexArrayVertexAttribLOffsetEXT* {.importc: "__glewVertexArrayVertexAttribLOffsetEXT".}: PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
  VertexAttribL1dEXT* {.importc: "__glewVertexAttribL1dEXT".}: PFNGLVERTEXATTRIBL1DEXTPROC
  VertexAttribL1dvEXT* {.importc: "__glewVertexAttribL1dvEXT".}: PFNGLVERTEXATTRIBL1DVEXTPROC
  VertexAttribL2dEXT* {.importc: "__glewVertexAttribL2dEXT".}: PFNGLVERTEXATTRIBL2DEXTPROC
  VertexAttribL2dvEXT* {.importc: "__glewVertexAttribL2dvEXT".}: PFNGLVERTEXATTRIBL2DVEXTPROC
  VertexAttribL3dEXT* {.importc: "__glewVertexAttribL3dEXT".}: PFNGLVERTEXATTRIBL3DEXTPROC
  VertexAttribL3dvEXT* {.importc: "__glewVertexAttribL3dvEXT".}: PFNGLVERTEXATTRIBL3DVEXTPROC
  VertexAttribL4dEXT* {.importc: "__glewVertexAttribL4dEXT".}: PFNGLVERTEXATTRIBL4DEXTPROC
  VertexAttribL4dvEXT* {.importc: "__glewVertexAttribL4dvEXT".}: PFNGLVERTEXATTRIBL4DVEXTPROC
  VertexAttribLPointerEXT* {.importc: "__glewVertexAttribLPointerEXT".}: PFNGLVERTEXATTRIBLPOINTEREXTPROC
  BeginVertexShaderEXT* {.importc: "__glewBeginVertexShaderEXT".}: PFNGLBEGINVERTEXSHADEREXTPROC
  BindLightParameterEXT* {.importc: "__glewBindLightParameterEXT".}: PFNGLBINDLIGHTPARAMETEREXTPROC
  BindMaterialParameterEXT* {.importc: "__glewBindMaterialParameterEXT".}: PFNGLBINDMATERIALPARAMETEREXTPROC
  BindParameterEXT* {.importc: "__glewBindParameterEXT".}: PFNGLBINDPARAMETEREXTPROC
  BindTexGenParameterEXT* {.importc: "__glewBindTexGenParameterEXT".}: PFNGLBINDTEXGENPARAMETEREXTPROC
  BindTextureUnitParameterEXT* {.importc: "__glewBindTextureUnitParameterEXT".}: PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
  BindVertexShaderEXT* {.importc: "__glewBindVertexShaderEXT".}: PFNGLBINDVERTEXSHADEREXTPROC
  DeleteVertexShaderEXT* {.importc: "__glewDeleteVertexShaderEXT".}: PFNGLDELETEVERTEXSHADEREXTPROC
  DisableVariantClientStateEXT* {.importc: "__glewDisableVariantClientStateEXT".}: PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
  EnableVariantClientStateEXT* {.importc: "__glewEnableVariantClientStateEXT".}: PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
  EndVertexShaderEXT* {.importc: "__glewEndVertexShaderEXT".}: PFNGLENDVERTEXSHADEREXTPROC
  ExtractComponentEXT* {.importc: "__glewExtractComponentEXT".}: PFNGLEXTRACTCOMPONENTEXTPROC
  GenSymbolsEXT* {.importc: "__glewGenSymbolsEXT".}: PFNGLGENSYMBOLSEXTPROC
  GenVertexShadersEXT* {.importc: "__glewGenVertexShadersEXT".}: PFNGLGENVERTEXSHADERSEXTPROC
  GetInvariantBooleanvEXT* {.importc: "__glewGetInvariantBooleanvEXT".}: PFNGLGETINVARIANTBOOLEANVEXTPROC
  GetInvariantFloatvEXT* {.importc: "__glewGetInvariantFloatvEXT".}: PFNGLGETINVARIANTFLOATVEXTPROC
  GetInvariantIntegervEXT* {.importc: "__glewGetInvariantIntegervEXT".}: PFNGLGETINVARIANTINTEGERVEXTPROC
  GetLocalConstantBooleanvEXT* {.importc: "__glewGetLocalConstantBooleanvEXT".}: PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
  GetLocalConstantFloatvEXT* {.importc: "__glewGetLocalConstantFloatvEXT".}: PFNGLGETLOCALCONSTANTFLOATVEXTPROC
  GetLocalConstantIntegervEXT* {.importc: "__glewGetLocalConstantIntegervEXT".}: PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
  GetVariantBooleanvEXT* {.importc: "__glewGetVariantBooleanvEXT".}: PFNGLGETVARIANTBOOLEANVEXTPROC
  GetVariantFloatvEXT* {.importc: "__glewGetVariantFloatvEXT".}: PFNGLGETVARIANTFLOATVEXTPROC
  GetVariantIntegervEXT* {.importc: "__glewGetVariantIntegervEXT".}: PFNGLGETVARIANTINTEGERVEXTPROC
  GetVariantPointervEXT* {.importc: "__glewGetVariantPointervEXT".}: PFNGLGETVARIANTPOINTERVEXTPROC
  InsertComponentEXT* {.importc: "__glewInsertComponentEXT".}: PFNGLINSERTCOMPONENTEXTPROC
  IsVariantEnabledEXT* {.importc: "__glewIsVariantEnabledEXT".}: PFNGLISVARIANTENABLEDEXTPROC
  SetInvariantEXT* {.importc: "__glewSetInvariantEXT".}: PFNGLSETINVARIANTEXTPROC
  SetLocalConstantEXT* {.importc: "__glewSetLocalConstantEXT".}: PFNGLSETLOCALCONSTANTEXTPROC
  ShaderOp1EXT* {.importc: "__glewShaderOp1EXT".}: PFNGLSHADEROP1EXTPROC
  ShaderOp2EXT* {.importc: "__glewShaderOp2EXT".}: PFNGLSHADEROP2EXTPROC
  ShaderOp3EXT* {.importc: "__glewShaderOp3EXT".}: PFNGLSHADEROP3EXTPROC
  SwizzleEXT* {.importc: "__glewSwizzleEXT".}: PFNGLSWIZZLEEXTPROC
  VariantPointerEXT* {.importc: "__glewVariantPointerEXT".}: PFNGLVARIANTPOINTEREXTPROC
  VariantbvEXT* {.importc: "__glewVariantbvEXT".}: PFNGLVARIANTBVEXTPROC
  VariantdvEXT* {.importc: "__glewVariantdvEXT".}: PFNGLVARIANTDVEXTPROC
  VariantfvEXT* {.importc: "__glewVariantfvEXT".}: PFNGLVARIANTFVEXTPROC
  VariantivEXT* {.importc: "__glewVariantivEXT".}: PFNGLVARIANTIVEXTPROC
  VariantsvEXT* {.importc: "__glewVariantsvEXT".}: PFNGLVARIANTSVEXTPROC
  VariantubvEXT* {.importc: "__glewVariantubvEXT".}: PFNGLVARIANTUBVEXTPROC
  VariantuivEXT* {.importc: "__glewVariantuivEXT".}: PFNGLVARIANTUIVEXTPROC
  VariantusvEXT* {.importc: "__glewVariantusvEXT".}: PFNGLVARIANTUSVEXTPROC
  WriteMaskEXT* {.importc: "__glewWriteMaskEXT".}: PFNGLWRITEMASKEXTPROC
  VertexWeightPointerEXT* {.importc: "__glewVertexWeightPointerEXT".}: PFNGLVERTEXWEIGHTPOINTEREXTPROC
  VertexWeightfEXT* {.importc: "__glewVertexWeightfEXT".}: PFNGLVERTEXWEIGHTFEXTPROC
  VertexWeightfvEXT* {.importc: "__glewVertexWeightfvEXT".}: PFNGLVERTEXWEIGHTFVEXTPROC
  AcquireKeyedMutexWin32EXT* {.importc: "__glewAcquireKeyedMutexWin32EXT".}: PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC
  ReleaseKeyedMutexWin32EXT* {.importc: "__glewReleaseKeyedMutexWin32EXT".}: PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC
  WindowRectanglesEXT* {.importc: "__glewWindowRectanglesEXT".}: PFNGLWINDOWRECTANGLESEXTPROC
  ImportSyncEXT* {.importc: "__glewImportSyncEXT".}: PFNGLIMPORTSYNCEXTPROC
  FrameTerminatorGREMEDY* {.importc: "__glewFrameTerminatorGREMEDY".}: PFNGLFRAMETERMINATORGREMEDYPROC
  StringMarkerGREMEDY* {.importc: "__glewStringMarkerGREMEDY".}: PFNGLSTRINGMARKERGREMEDYPROC
  GetImageTransformParameterfvHP* {.importc: "__glewGetImageTransformParameterfvHP".}: PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
  GetImageTransformParameterivHP* {.importc: "__glewGetImageTransformParameterivHP".}: PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
  ImageTransformParameterfHP* {.importc: "__glewImageTransformParameterfHP".}: PFNGLIMAGETRANSFORMPARAMETERFHPPROC
  ImageTransformParameterfvHP* {.importc: "__glewImageTransformParameterfvHP".}: PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
  ImageTransformParameteriHP* {.importc: "__glewImageTransformParameteriHP".}: PFNGLIMAGETRANSFORMPARAMETERIHPPROC
  ImageTransformParameterivHP* {.importc: "__glewImageTransformParameterivHP".}: PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
  MultiModeDrawArraysIBM* {.importc: "__glewMultiModeDrawArraysIBM".}: PFNGLMULTIMODEDRAWARRAYSIBMPROC
  MultiModeDrawElementsIBM* {.importc: "__glewMultiModeDrawElementsIBM".}: PFNGLMULTIMODEDRAWELEMENTSIBMPROC
  ColorPointerListIBM* {.importc: "__glewColorPointerListIBM".}: PFNGLCOLORPOINTERLISTIBMPROC
  EdgeFlagPointerListIBM* {.importc: "__glewEdgeFlagPointerListIBM".}: PFNGLEDGEFLAGPOINTERLISTIBMPROC
  FogCoordPointerListIBM* {.importc: "__glewFogCoordPointerListIBM".}: PFNGLFOGCOORDPOINTERLISTIBMPROC
  IndexPointerListIBM* {.importc: "__glewIndexPointerListIBM".}: PFNGLINDEXPOINTERLISTIBMPROC
  NormalPointerListIBM* {.importc: "__glewNormalPointerListIBM".}: PFNGLNORMALPOINTERLISTIBMPROC
  SecondaryColorPointerListIBM* {.importc: "__glewSecondaryColorPointerListIBM".}: PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
  TexCoordPointerListIBM* {.importc: "__glewTexCoordPointerListIBM".}: PFNGLTEXCOORDPOINTERLISTIBMPROC
  VertexPointerListIBM* {.importc: "__glewVertexPointerListIBM".}: PFNGLVERTEXPOINTERLISTIBMPROC
  MapTexture2DINTEL* {.importc: "__glewMapTexture2DINTEL".}: PFNGLMAPTEXTURE2DINTELPROC
  SyncTextureINTEL* {.importc: "__glewSyncTextureINTEL".}: PFNGLSYNCTEXTUREINTELPROC
  UnmapTexture2DINTEL* {.importc: "__glewUnmapTexture2DINTEL".}: PFNGLUNMAPTEXTURE2DINTELPROC
  ColorPointervINTEL* {.importc: "__glewColorPointervINTEL".}: PFNGLCOLORPOINTERVINTELPROC
  NormalPointervINTEL* {.importc: "__glewNormalPointervINTEL".}: PFNGLNORMALPOINTERVINTELPROC
  TexCoordPointervINTEL* {.importc: "__glewTexCoordPointervINTEL".}: PFNGLTEXCOORDPOINTERVINTELPROC
  VertexPointervINTEL* {.importc: "__glewVertexPointervINTEL".}: PFNGLVERTEXPOINTERVINTELPROC
  BeginPerfQueryINTEL* {.importc: "__glewBeginPerfQueryINTEL".}: PFNGLBEGINPERFQUERYINTELPROC
  CreatePerfQueryINTEL* {.importc: "__glewCreatePerfQueryINTEL".}: PFNGLCREATEPERFQUERYINTELPROC
  DeletePerfQueryINTEL* {.importc: "__glewDeletePerfQueryINTEL".}: PFNGLDELETEPERFQUERYINTELPROC
  EndPerfQueryINTEL* {.importc: "__glewEndPerfQueryINTEL".}: PFNGLENDPERFQUERYINTELPROC
  GetFirstPerfQueryIdINTEL* {.importc: "__glewGetFirstPerfQueryIdINTEL".}: PFNGLGETFIRSTPERFQUERYIDINTELPROC
  GetNextPerfQueryIdINTEL* {.importc: "__glewGetNextPerfQueryIdINTEL".}: PFNGLGETNEXTPERFQUERYIDINTELPROC
  GetPerfCounterInfoINTEL* {.importc: "__glewGetPerfCounterInfoINTEL".}: PFNGLGETPERFCOUNTERINFOINTELPROC
  GetPerfQueryDataINTEL* {.importc: "__glewGetPerfQueryDataINTEL".}: PFNGLGETPERFQUERYDATAINTELPROC
  GetPerfQueryIdByNameINTEL* {.importc: "__glewGetPerfQueryIdByNameINTEL".}: PFNGLGETPERFQUERYIDBYNAMEINTELPROC
  GetPerfQueryInfoINTEL* {.importc: "__glewGetPerfQueryInfoINTEL".}: PFNGLGETPERFQUERYINFOINTELPROC
  TexScissorFuncINTEL* {.importc: "__glewTexScissorFuncINTEL".}: PFNGLTEXSCISSORFUNCINTELPROC
  TexScissorINTEL* {.importc: "__glewTexScissorINTEL".}: PFNGLTEXSCISSORINTELPROC
  BlendBarrierKHR* {.importc: "__glewBlendBarrierKHR".}: PFNGLBLENDBARRIERKHRPROC
  DebugMessageCallback* {.importc: "__glewDebugMessageCallback".}: PFNGLDEBUGMESSAGECALLBACKPROC
  DebugMessageControl* {.importc: "__glewDebugMessageControl".}: PFNGLDEBUGMESSAGECONTROLPROC
  DebugMessageInsert* {.importc: "__glewDebugMessageInsert".}: PFNGLDEBUGMESSAGEINSERTPROC
  GetDebugMessageLog* {.importc: "__glewGetDebugMessageLog".}: PFNGLGETDEBUGMESSAGELOGPROC
  GetObjectLabel* {.importc: "__glewGetObjectLabel".}: PFNGLGETOBJECTLABELPROC
  GetObjectPtrLabel* {.importc: "__glewGetObjectPtrLabel".}: PFNGLGETOBJECTPTRLABELPROC
  ObjectLabel* {.importc: "__glewObjectLabel".}: PFNGLOBJECTLABELPROC
  ObjectPtrLabel* {.importc: "__glewObjectPtrLabel".}: PFNGLOBJECTPTRLABELPROC
  PopDebugGroup* {.importc: "__glewPopDebugGroup".}: PFNGLPOPDEBUGGROUPPROC
  PushDebugGroup* {.importc: "__glewPushDebugGroup".}: PFNGLPUSHDEBUGGROUPPROC
  MaxShaderCompilerThreadsKHR* {.importc: "__glewMaxShaderCompilerThreadsKHR".}: PFNGLMAXSHADERCOMPILERTHREADSKHRPROC
  GetnUniformfv* {.importc: "__glewGetnUniformfv".}: PFNGLGETNUNIFORMFVPROC
  GetnUniformiv* {.importc: "__glewGetnUniformiv".}: PFNGLGETNUNIFORMIVPROC
  GetnUniformuiv* {.importc: "__glewGetnUniformuiv".}: PFNGLGETNUNIFORMUIVPROC
  ReadnPixels* {.importc: "__glewReadnPixels".}: PFNGLREADNPIXELSPROC
  BufferRegionEnabled* {.importc: "__glewBufferRegionEnabled".}: PFNGLBUFFERREGIONENABLEDPROC
  DeleteBufferRegion* {.importc: "__glewDeleteBufferRegion".}: PFNGLDELETEBUFFERREGIONPROC
  DrawBufferRegion* {.importc: "__glewDrawBufferRegion".}: PFNGLDRAWBUFFERREGIONPROC
  NewBufferRegion* {.importc: "__glewNewBufferRegion".}: PFNGLNEWBUFFERREGIONPROC
  ReadBufferRegion* {.importc: "__glewReadBufferRegion".}: PFNGLREADBUFFERREGIONPROC
  ResizeBuffersMESA* {.importc: "__glewResizeBuffersMESA".}: PFNGLRESIZEBUFFERSMESAPROC
  WindowPos2dMESA* {.importc: "__glewWindowPos2dMESA".}: PFNGLWINDOWPOS2DMESAPROC
  WindowPos2dvMESA* {.importc: "__glewWindowPos2dvMESA".}: PFNGLWINDOWPOS2DVMESAPROC
  WindowPos2fMESA* {.importc: "__glewWindowPos2fMESA".}: PFNGLWINDOWPOS2FMESAPROC
  WindowPos2fvMESA* {.importc: "__glewWindowPos2fvMESA".}: PFNGLWINDOWPOS2FVMESAPROC
  WindowPos2iMESA* {.importc: "__glewWindowPos2iMESA".}: PFNGLWINDOWPOS2IMESAPROC
  WindowPos2ivMESA* {.importc: "__glewWindowPos2ivMESA".}: PFNGLWINDOWPOS2IVMESAPROC
  WindowPos2sMESA* {.importc: "__glewWindowPos2sMESA".}: PFNGLWINDOWPOS2SMESAPROC
  WindowPos2svMESA* {.importc: "__glewWindowPos2svMESA".}: PFNGLWINDOWPOS2SVMESAPROC
  WindowPos3dMESA* {.importc: "__glewWindowPos3dMESA".}: PFNGLWINDOWPOS3DMESAPROC
  WindowPos3dvMESA* {.importc: "__glewWindowPos3dvMESA".}: PFNGLWINDOWPOS3DVMESAPROC
  WindowPos3fMESA* {.importc: "__glewWindowPos3fMESA".}: PFNGLWINDOWPOS3FMESAPROC
  WindowPos3fvMESA* {.importc: "__glewWindowPos3fvMESA".}: PFNGLWINDOWPOS3FVMESAPROC
  WindowPos3iMESA* {.importc: "__glewWindowPos3iMESA".}: PFNGLWINDOWPOS3IMESAPROC
  WindowPos3ivMESA* {.importc: "__glewWindowPos3ivMESA".}: PFNGLWINDOWPOS3IVMESAPROC
  WindowPos3sMESA* {.importc: "__glewWindowPos3sMESA".}: PFNGLWINDOWPOS3SMESAPROC
  WindowPos3svMESA* {.importc: "__glewWindowPos3svMESA".}: PFNGLWINDOWPOS3SVMESAPROC
  WindowPos4dMESA* {.importc: "__glewWindowPos4dMESA".}: PFNGLWINDOWPOS4DMESAPROC
  WindowPos4dvMESA* {.importc: "__glewWindowPos4dvMESA".}: PFNGLWINDOWPOS4DVMESAPROC
  WindowPos4fMESA* {.importc: "__glewWindowPos4fMESA".}: PFNGLWINDOWPOS4FMESAPROC
  WindowPos4fvMESA* {.importc: "__glewWindowPos4fvMESA".}: PFNGLWINDOWPOS4FVMESAPROC
  WindowPos4iMESA* {.importc: "__glewWindowPos4iMESA".}: PFNGLWINDOWPOS4IMESAPROC
  WindowPos4ivMESA* {.importc: "__glewWindowPos4ivMESA".}: PFNGLWINDOWPOS4IVMESAPROC
  WindowPos4sMESA* {.importc: "__glewWindowPos4sMESA".}: PFNGLWINDOWPOS4SMESAPROC
  WindowPos4svMESA* {.importc: "__glewWindowPos4svMESA".}: PFNGLWINDOWPOS4SVMESAPROC
  BeginConditionalRenderNVX* {.importc: "__glewBeginConditionalRenderNVX".}: PFNGLBEGINCONDITIONALRENDERNVXPROC
  EndConditionalRenderNVX* {.importc: "__glewEndConditionalRenderNVX".}: PFNGLENDCONDITIONALRENDERNVXPROC
  LGPUCopyImageSubDataNVX* {.importc: "__glewLGPUCopyImageSubDataNVX".}: PFNGLLGPUCOPYIMAGESUBDATANVXPROC
  LGPUInterlockNVX* {.importc: "__glewLGPUInterlockNVX".}: PFNGLLGPUINTERLOCKNVXPROC
  LGPUNamedBufferSubDataNVX* {.importc: "__glewLGPUNamedBufferSubDataNVX".}: PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC
  StereoParameterfNV* {.importc: "__glewStereoParameterfNV".}: PFNGLSTEREOPARAMETERFNVPROC
  StereoParameteriNV* {.importc: "__glewStereoParameteriNV".}: PFNGLSTEREOPARAMETERINVPROC
  MultiDrawArraysIndirectBindlessNV* {.importc: "__glewMultiDrawArraysIndirectBindlessNV".}: PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC
  MultiDrawElementsIndirectBindlessNV* {.
      importc: "__glewMultiDrawElementsIndirectBindlessNV".}: PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC
  MultiDrawArraysIndirectBindlessCountNV*
      {.importc: "__glewMultiDrawArraysIndirectBindlessCountNV".}: PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC
  MultiDrawElementsIndirectBindlessCountNV*
      {.importc: "__glewMultiDrawElementsIndirectBindlessCountNV".}: PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC
  GetImageHandleNV* {.importc: "__glewGetImageHandleNV".}: PFNGLGETIMAGEHANDLENVPROC
  GetTextureHandleNV* {.importc: "__glewGetTextureHandleNV".}: PFNGLGETTEXTUREHANDLENVPROC
  GetTextureSamplerHandleNV* {.importc: "__glewGetTextureSamplerHandleNV".}: PFNGLGETTEXTURESAMPLERHANDLENVPROC
  IsImageHandleResidentNV* {.importc: "__glewIsImageHandleResidentNV".}: PFNGLISIMAGEHANDLERESIDENTNVPROC
  IsTextureHandleResidentNV* {.importc: "__glewIsTextureHandleResidentNV".}: PFNGLISTEXTUREHANDLERESIDENTNVPROC
  MakeImageHandleNonResidentNV* {.importc: "__glewMakeImageHandleNonResidentNV".}: PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
  MakeImageHandleResidentNV* {.importc: "__glewMakeImageHandleResidentNV".}: PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
  MakeTextureHandleNonResidentNV* {.importc: "__glewMakeTextureHandleNonResidentNV".}: PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
  MakeTextureHandleResidentNV* {.importc: "__glewMakeTextureHandleResidentNV".}: PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
  ProgramUniformHandleui64NV* {.importc: "__glewProgramUniformHandleui64NV".}: PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
  ProgramUniformHandleui64vNV* {.importc: "__glewProgramUniformHandleui64vNV".}: PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
  UniformHandleui64NV* {.importc: "__glewUniformHandleui64NV".}: PFNGLUNIFORMHANDLEUI64NVPROC
  UniformHandleui64vNV* {.importc: "__glewUniformHandleui64vNV".}: PFNGLUNIFORMHANDLEUI64VNVPROC
  BlendBarrierNV* {.importc: "__glewBlendBarrierNV".}: PFNGLBLENDBARRIERNVPROC
  BlendParameteriNV* {.importc: "__glewBlendParameteriNV".}: PFNGLBLENDPARAMETERINVPROC
  ViewportPositionWScaleNV* {.importc: "__glewViewportPositionWScaleNV".}: PFNGLVIEWPORTPOSITIONWSCALENVPROC
  CallCommandListNV* {.importc: "__glewCallCommandListNV".}: PFNGLCALLCOMMANDLISTNVPROC
  CommandListSegmentsNV* {.importc: "__glewCommandListSegmentsNV".}: PFNGLCOMMANDLISTSEGMENTSNVPROC
  CompileCommandListNV* {.importc: "__glewCompileCommandListNV".}: PFNGLCOMPILECOMMANDLISTNVPROC
  CreateCommandListsNV* {.importc: "__glewCreateCommandListsNV".}: PFNGLCREATECOMMANDLISTSNVPROC
  CreateStatesNV* {.importc: "__glewCreateStatesNV".}: PFNGLCREATESTATESNVPROC
  DeleteCommandListsNV* {.importc: "__glewDeleteCommandListsNV".}: PFNGLDELETECOMMANDLISTSNVPROC
  DeleteStatesNV* {.importc: "__glewDeleteStatesNV".}: PFNGLDELETESTATESNVPROC
  DrawCommandsAddressNV* {.importc: "__glewDrawCommandsAddressNV".}: PFNGLDRAWCOMMANDSADDRESSNVPROC
  DrawCommandsNV* {.importc: "__glewDrawCommandsNV".}: PFNGLDRAWCOMMANDSNVPROC
  DrawCommandsStatesAddressNV* {.importc: "__glewDrawCommandsStatesAddressNV".}: PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC
  DrawCommandsStatesNV* {.importc: "__glewDrawCommandsStatesNV".}: PFNGLDRAWCOMMANDSSTATESNVPROC
  GetCommandHeaderNV* {.importc: "__glewGetCommandHeaderNV".}: PFNGLGETCOMMANDHEADERNVPROC
  GetStageIndexNV* {.importc: "__glewGetStageIndexNV".}: PFNGLGETSTAGEINDEXNVPROC
  IsCommandListNV* {.importc: "__glewIsCommandListNV".}: PFNGLISCOMMANDLISTNVPROC
  IsStateNV* {.importc: "__glewIsStateNV".}: PFNGLISSTATENVPROC
  ListDrawCommandsStatesClientNV* {.importc: "__glewListDrawCommandsStatesClientNV".}: PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC
  StateCaptureNV* {.importc: "__glewStateCaptureNV".}: PFNGLSTATECAPTURENVPROC
  BeginConditionalRenderNV* {.importc: "__glewBeginConditionalRenderNV".}: PFNGLBEGINCONDITIONALRENDERNVPROC
  EndConditionalRenderNV* {.importc: "__glewEndConditionalRenderNV".}: PFNGLENDCONDITIONALRENDERNVPROC
  SubpixelPrecisionBiasNV* {.importc: "__glewSubpixelPrecisionBiasNV".}: PFNGLSUBPIXELPRECISIONBIASNVPROC
  ConservativeRasterParameterfNV* {.importc: "__glewConservativeRasterParameterfNV".}: PFNGLCONSERVATIVERASTERPARAMETERFNVPROC
  ConservativeRasterParameteriNV* {.importc: "__glewConservativeRasterParameteriNV".}: PFNGLCONSERVATIVERASTERPARAMETERINVPROC
  CopyBufferSubDataNV* {.importc: "__glewCopyBufferSubDataNV".}: PFNGLCOPYBUFFERSUBDATANVPROC
  CopyImageSubDataNV* {.importc: "__glewCopyImageSubDataNV".}: PFNGLCOPYIMAGESUBDATANVPROC
  ClearDepthdNV* {.importc: "__glewClearDepthdNV".}: PFNGLCLEARDEPTHDNVPROC
  DepthBoundsdNV* {.importc: "__glewDepthBoundsdNV".}: PFNGLDEPTHBOUNDSDNVPROC
  DepthRangedNV* {.importc: "__glewDepthRangedNV".}: PFNGLDEPTHRANGEDNVPROC
  DrawBuffersNV* {.importc: "__glewDrawBuffersNV".}: PFNGLDRAWBUFFERSNVPROC
  DrawArraysInstancedNV* {.importc: "__glewDrawArraysInstancedNV".}: PFNGLDRAWARRAYSINSTANCEDNVPROC
  DrawElementsInstancedNV* {.importc: "__glewDrawElementsInstancedNV".}: PFNGLDRAWELEMENTSINSTANCEDNVPROC
  DrawTextureNV* {.importc: "__glewDrawTextureNV".}: PFNGLDRAWTEXTURENVPROC
  DrawVkImageNV* {.importc: "__glewDrawVkImageNV".}: PFNGLDRAWVKIMAGENVPROC
  GetVkProcAddrNV* {.importc: "__glewGetVkProcAddrNV".}: PFNGLGETVKPROCADDRNVPROC
  SignalVkFenceNV* {.importc: "__glewSignalVkFenceNV".}: PFNGLSIGNALVKFENCENVPROC
  SignalVkSemaphoreNV* {.importc: "__glewSignalVkSemaphoreNV".}: PFNGLSIGNALVKSEMAPHORENVPROC
  WaitVkSemaphoreNV* {.importc: "__glewWaitVkSemaphoreNV".}: PFNGLWAITVKSEMAPHORENVPROC
  EvalMapsNV* {.importc: "__glewEvalMapsNV".}: PFNGLEVALMAPSNVPROC
  GetMapAttribParameterfvNV* {.importc: "__glewGetMapAttribParameterfvNV".}: PFNGLGETMAPATTRIBPARAMETERFVNVPROC
  GetMapAttribParameterivNV* {.importc: "__glewGetMapAttribParameterivNV".}: PFNGLGETMAPATTRIBPARAMETERIVNVPROC
  GetMapControlPointsNV* {.importc: "__glewGetMapControlPointsNV".}: PFNGLGETMAPCONTROLPOINTSNVPROC
  GetMapParameterfvNV* {.importc: "__glewGetMapParameterfvNV".}: PFNGLGETMAPPARAMETERFVNVPROC
  GetMapParameterivNV* {.importc: "__glewGetMapParameterivNV".}: PFNGLGETMAPPARAMETERIVNVPROC
  MapControlPointsNV* {.importc: "__glewMapControlPointsNV".}: PFNGLMAPCONTROLPOINTSNVPROC
  MapParameterfvNV* {.importc: "__glewMapParameterfvNV".}: PFNGLMAPPARAMETERFVNVPROC
  MapParameterivNV* {.importc: "__glewMapParameterivNV".}: PFNGLMAPPARAMETERIVNVPROC
  GetMultisamplefvNV* {.importc: "__glewGetMultisamplefvNV".}: PFNGLGETMULTISAMPLEFVNVPROC
  SampleMaskIndexedNV* {.importc: "__glewSampleMaskIndexedNV".}: PFNGLSAMPLEMASKINDEXEDNVPROC
  TexRenderbufferNV* {.importc: "__glewTexRenderbufferNV".}: PFNGLTEXRENDERBUFFERNVPROC
  DeleteFencesNV* {.importc: "__glewDeleteFencesNV".}: PFNGLDELETEFENCESNVPROC
  FinishFenceNV* {.importc: "__glewFinishFenceNV".}: PFNGLFINISHFENCENVPROC
  GenFencesNV* {.importc: "__glewGenFencesNV".}: PFNGLGENFENCESNVPROC
  GetFenceivNV* {.importc: "__glewGetFenceivNV".}: PFNGLGETFENCEIVNVPROC
  IsFenceNV* {.importc: "__glewIsFenceNV".}: PFNGLISFENCENVPROC
  SetFenceNV* {.importc: "__glewSetFenceNV".}: PFNGLSETFENCENVPROC
  TestFenceNV* {.importc: "__glewTestFenceNV".}: PFNGLTESTFENCENVPROC
  FragmentCoverageColorNV* {.importc: "__glewFragmentCoverageColorNV".}: PFNGLFRAGMENTCOVERAGECOLORNVPROC
  GetProgramNamedParameterdvNV* {.importc: "__glewGetProgramNamedParameterdvNV".}: PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
  GetProgramNamedParameterfvNV* {.importc: "__glewGetProgramNamedParameterfvNV".}: PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
  ProgramNamedParameter4dNV* {.importc: "__glewProgramNamedParameter4dNV".}: PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
  ProgramNamedParameter4dvNV* {.importc: "__glewProgramNamedParameter4dvNV".}: PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
  ProgramNamedParameter4fNV* {.importc: "__glewProgramNamedParameter4fNV".}: PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
  ProgramNamedParameter4fvNV* {.importc: "__glewProgramNamedParameter4fvNV".}: PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
  BlitFramebufferNV* {.importc: "__glewBlitFramebufferNV".}: PFNGLBLITFRAMEBUFFERNVPROC
  RenderbufferStorageMultisampleNV* {.importc: "__glewRenderbufferStorageMultisampleNV".}: PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
  RenderbufferStorageMultisampleCoverageNV*
      {.importc: "__glewRenderbufferStorageMultisampleCoverageNV".}: PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
  ProgramVertexLimitNV* {.importc: "__glewProgramVertexLimitNV".}: PFNGLPROGRAMVERTEXLIMITNVPROC
  MulticastBarrierNV* {.importc: "__glewMulticastBarrierNV".}: PFNGLMULTICASTBARRIERNVPROC
  MulticastBlitFramebufferNV* {.importc: "__glewMulticastBlitFramebufferNV".}: PFNGLMULTICASTBLITFRAMEBUFFERNVPROC
  MulticastBufferSubDataNV* {.importc: "__glewMulticastBufferSubDataNV".}: PFNGLMULTICASTBUFFERSUBDATANVPROC
  MulticastCopyBufferSubDataNV* {.importc: "__glewMulticastCopyBufferSubDataNV".}: PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC
  MulticastCopyImageSubDataNV* {.importc: "__glewMulticastCopyImageSubDataNV".}: PFNGLMULTICASTCOPYIMAGESUBDATANVPROC
  MulticastFramebufferSampleLocationsfvNV*
      {.importc: "__glewMulticastFramebufferSampleLocationsfvNV".}: PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
  MulticastGetQueryObjecti64vNV* {.importc: "__glewMulticastGetQueryObjecti64vNV".}: PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC
  MulticastGetQueryObjectivNV* {.importc: "__glewMulticastGetQueryObjectivNV".}: PFNGLMULTICASTGETQUERYOBJECTIVNVPROC
  MulticastGetQueryObjectui64vNV* {.importc: "__glewMulticastGetQueryObjectui64vNV".}: PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC
  MulticastGetQueryObjectuivNV* {.importc: "__glewMulticastGetQueryObjectuivNV".}: PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC
  MulticastWaitSyncNV* {.importc: "__glewMulticastWaitSyncNV".}: PFNGLMULTICASTWAITSYNCNVPROC
  RenderGpuMaskNV* {.importc: "__glewRenderGpuMaskNV".}: PFNGLRENDERGPUMASKNVPROC
  ProgramEnvParameterI4iNV* {.importc: "__glewProgramEnvParameterI4iNV".}: PFNGLPROGRAMENVPARAMETERI4INVPROC
  ProgramEnvParameterI4ivNV* {.importc: "__glewProgramEnvParameterI4ivNV".}: PFNGLPROGRAMENVPARAMETERI4IVNVPROC
  ProgramEnvParameterI4uiNV* {.importc: "__glewProgramEnvParameterI4uiNV".}: PFNGLPROGRAMENVPARAMETERI4UINVPROC
  ProgramEnvParameterI4uivNV* {.importc: "__glewProgramEnvParameterI4uivNV".}: PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
  ProgramEnvParametersI4ivNV* {.importc: "__glewProgramEnvParametersI4ivNV".}: PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
  ProgramEnvParametersI4uivNV* {.importc: "__glewProgramEnvParametersI4uivNV".}: PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
  ProgramLocalParameterI4iNV* {.importc: "__glewProgramLocalParameterI4iNV".}: PFNGLPROGRAMLOCALPARAMETERI4INVPROC
  ProgramLocalParameterI4ivNV* {.importc: "__glewProgramLocalParameterI4ivNV".}: PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
  ProgramLocalParameterI4uiNV* {.importc: "__glewProgramLocalParameterI4uiNV".}: PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
  ProgramLocalParameterI4uivNV* {.importc: "__glewProgramLocalParameterI4uivNV".}: PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
  ProgramLocalParametersI4ivNV* {.importc: "__glewProgramLocalParametersI4ivNV".}: PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
  ProgramLocalParametersI4uivNV* {.importc: "__glewProgramLocalParametersI4uivNV".}: PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
  GetUniformi64vNV* {.importc: "__glewGetUniformi64vNV".}: PFNGLGETUNIFORMI64VNVPROC
  GetUniformui64vNV* {.importc: "__glewGetUniformui64vNV".}: PFNGLGETUNIFORMUI64VNVPROC
  ProgramUniform1i64NV* {.importc: "__glewProgramUniform1i64NV".}: PFNGLPROGRAMUNIFORM1I64NVPROC
  ProgramUniform1i64vNV* {.importc: "__glewProgramUniform1i64vNV".}: PFNGLPROGRAMUNIFORM1I64VNVPROC
  ProgramUniform1ui64NV* {.importc: "__glewProgramUniform1ui64NV".}: PFNGLPROGRAMUNIFORM1UI64NVPROC
  ProgramUniform1ui64vNV* {.importc: "__glewProgramUniform1ui64vNV".}: PFNGLPROGRAMUNIFORM1UI64VNVPROC
  ProgramUniform2i64NV* {.importc: "__glewProgramUniform2i64NV".}: PFNGLPROGRAMUNIFORM2I64NVPROC
  ProgramUniform2i64vNV* {.importc: "__glewProgramUniform2i64vNV".}: PFNGLPROGRAMUNIFORM2I64VNVPROC
  ProgramUniform2ui64NV* {.importc: "__glewProgramUniform2ui64NV".}: PFNGLPROGRAMUNIFORM2UI64NVPROC
  ProgramUniform2ui64vNV* {.importc: "__glewProgramUniform2ui64vNV".}: PFNGLPROGRAMUNIFORM2UI64VNVPROC
  ProgramUniform3i64NV* {.importc: "__glewProgramUniform3i64NV".}: PFNGLPROGRAMUNIFORM3I64NVPROC
  ProgramUniform3i64vNV* {.importc: "__glewProgramUniform3i64vNV".}: PFNGLPROGRAMUNIFORM3I64VNVPROC
  ProgramUniform3ui64NV* {.importc: "__glewProgramUniform3ui64NV".}: PFNGLPROGRAMUNIFORM3UI64NVPROC
  ProgramUniform3ui64vNV* {.importc: "__glewProgramUniform3ui64vNV".}: PFNGLPROGRAMUNIFORM3UI64VNVPROC
  ProgramUniform4i64NV* {.importc: "__glewProgramUniform4i64NV".}: PFNGLPROGRAMUNIFORM4I64NVPROC
  ProgramUniform4i64vNV* {.importc: "__glewProgramUniform4i64vNV".}: PFNGLPROGRAMUNIFORM4I64VNVPROC
  ProgramUniform4ui64NV* {.importc: "__glewProgramUniform4ui64NV".}: PFNGLPROGRAMUNIFORM4UI64NVPROC
  ProgramUniform4ui64vNV* {.importc: "__glewProgramUniform4ui64vNV".}: PFNGLPROGRAMUNIFORM4UI64VNVPROC
  Uniform1i64NV* {.importc: "__glewUniform1i64NV".}: PFNGLUNIFORM1I64NVPROC
  Uniform1i64vNV* {.importc: "__glewUniform1i64vNV".}: PFNGLUNIFORM1I64VNVPROC
  Uniform1ui64NV* {.importc: "__glewUniform1ui64NV".}: PFNGLUNIFORM1UI64NVPROC
  Uniform1ui64vNV* {.importc: "__glewUniform1ui64vNV".}: PFNGLUNIFORM1UI64VNVPROC
  Uniform2i64NV* {.importc: "__glewUniform2i64NV".}: PFNGLUNIFORM2I64NVPROC
  Uniform2i64vNV* {.importc: "__glewUniform2i64vNV".}: PFNGLUNIFORM2I64VNVPROC
  Uniform2ui64NV* {.importc: "__glewUniform2ui64NV".}: PFNGLUNIFORM2UI64NVPROC
  Uniform2ui64vNV* {.importc: "__glewUniform2ui64vNV".}: PFNGLUNIFORM2UI64VNVPROC
  Uniform3i64NV* {.importc: "__glewUniform3i64NV".}: PFNGLUNIFORM3I64NVPROC
  Uniform3i64vNV* {.importc: "__glewUniform3i64vNV".}: PFNGLUNIFORM3I64VNVPROC
  Uniform3ui64NV* {.importc: "__glewUniform3ui64NV".}: PFNGLUNIFORM3UI64NVPROC
  Uniform3ui64vNV* {.importc: "__glewUniform3ui64vNV".}: PFNGLUNIFORM3UI64VNVPROC
  Uniform4i64NV* {.importc: "__glewUniform4i64NV".}: PFNGLUNIFORM4I64NVPROC
  Uniform4i64vNV* {.importc: "__glewUniform4i64vNV".}: PFNGLUNIFORM4I64VNVPROC
  Uniform4ui64NV* {.importc: "__glewUniform4ui64NV".}: PFNGLUNIFORM4UI64NVPROC
  Uniform4ui64vNV* {.importc: "__glewUniform4ui64vNV".}: PFNGLUNIFORM4UI64VNVPROC
  Color3hNV* {.importc: "__glewColor3hNV".}: PFNGLCOLOR3HNVPROC
  Color3hvNV* {.importc: "__glewColor3hvNV".}: PFNGLCOLOR3HVNVPROC
  Color4hNV* {.importc: "__glewColor4hNV".}: PFNGLCOLOR4HNVPROC
  Color4hvNV* {.importc: "__glewColor4hvNV".}: PFNGLCOLOR4HVNVPROC
  FogCoordhNV* {.importc: "__glewFogCoordhNV".}: PFNGLFOGCOORDHNVPROC
  FogCoordhvNV* {.importc: "__glewFogCoordhvNV".}: PFNGLFOGCOORDHVNVPROC
  MultiTexCoord1hNV* {.importc: "__glewMultiTexCoord1hNV".}: PFNGLMULTITEXCOORD1HNVPROC
  MultiTexCoord1hvNV* {.importc: "__glewMultiTexCoord1hvNV".}: PFNGLMULTITEXCOORD1HVNVPROC
  MultiTexCoord2hNV* {.importc: "__glewMultiTexCoord2hNV".}: PFNGLMULTITEXCOORD2HNVPROC
  MultiTexCoord2hvNV* {.importc: "__glewMultiTexCoord2hvNV".}: PFNGLMULTITEXCOORD2HVNVPROC
  MultiTexCoord3hNV* {.importc: "__glewMultiTexCoord3hNV".}: PFNGLMULTITEXCOORD3HNVPROC
  MultiTexCoord3hvNV* {.importc: "__glewMultiTexCoord3hvNV".}: PFNGLMULTITEXCOORD3HVNVPROC
  MultiTexCoord4hNV* {.importc: "__glewMultiTexCoord4hNV".}: PFNGLMULTITEXCOORD4HNVPROC
  MultiTexCoord4hvNV* {.importc: "__glewMultiTexCoord4hvNV".}: PFNGLMULTITEXCOORD4HVNVPROC
  Normal3hNV* {.importc: "__glewNormal3hNV".}: PFNGLNORMAL3HNVPROC
  Normal3hvNV* {.importc: "__glewNormal3hvNV".}: PFNGLNORMAL3HVNVPROC
  SecondaryColor3hNV* {.importc: "__glewSecondaryColor3hNV".}: PFNGLSECONDARYCOLOR3HNVPROC
  SecondaryColor3hvNV* {.importc: "__glewSecondaryColor3hvNV".}: PFNGLSECONDARYCOLOR3HVNVPROC
  TexCoord1hNV* {.importc: "__glewTexCoord1hNV".}: PFNGLTEXCOORD1HNVPROC
  TexCoord1hvNV* {.importc: "__glewTexCoord1hvNV".}: PFNGLTEXCOORD1HVNVPROC
  TexCoord2hNV* {.importc: "__glewTexCoord2hNV".}: PFNGLTEXCOORD2HNVPROC
  TexCoord2hvNV* {.importc: "__glewTexCoord2hvNV".}: PFNGLTEXCOORD2HVNVPROC
  TexCoord3hNV* {.importc: "__glewTexCoord3hNV".}: PFNGLTEXCOORD3HNVPROC
  TexCoord3hvNV* {.importc: "__glewTexCoord3hvNV".}: PFNGLTEXCOORD3HVNVPROC
  TexCoord4hNV* {.importc: "__glewTexCoord4hNV".}: PFNGLTEXCOORD4HNVPROC
  TexCoord4hvNV* {.importc: "__glewTexCoord4hvNV".}: PFNGLTEXCOORD4HVNVPROC
  Vertex2hNV* {.importc: "__glewVertex2hNV".}: PFNGLVERTEX2HNVPROC
  Vertex2hvNV* {.importc: "__glewVertex2hvNV".}: PFNGLVERTEX2HVNVPROC
  Vertex3hNV* {.importc: "__glewVertex3hNV".}: PFNGLVERTEX3HNVPROC
  Vertex3hvNV* {.importc: "__glewVertex3hvNV".}: PFNGLVERTEX3HVNVPROC
  Vertex4hNV* {.importc: "__glewVertex4hNV".}: PFNGLVERTEX4HNVPROC
  Vertex4hvNV* {.importc: "__glewVertex4hvNV".}: PFNGLVERTEX4HVNVPROC
  VertexAttrib1hNV* {.importc: "__glewVertexAttrib1hNV".}: PFNGLVERTEXATTRIB1HNVPROC
  VertexAttrib1hvNV* {.importc: "__glewVertexAttrib1hvNV".}: PFNGLVERTEXATTRIB1HVNVPROC
  VertexAttrib2hNV* {.importc: "__glewVertexAttrib2hNV".}: PFNGLVERTEXATTRIB2HNVPROC
  VertexAttrib2hvNV* {.importc: "__glewVertexAttrib2hvNV".}: PFNGLVERTEXATTRIB2HVNVPROC
  VertexAttrib3hNV* {.importc: "__glewVertexAttrib3hNV".}: PFNGLVERTEXATTRIB3HNVPROC
  VertexAttrib3hvNV* {.importc: "__glewVertexAttrib3hvNV".}: PFNGLVERTEXATTRIB3HVNVPROC
  VertexAttrib4hNV* {.importc: "__glewVertexAttrib4hNV".}: PFNGLVERTEXATTRIB4HNVPROC
  VertexAttrib4hvNV* {.importc: "__glewVertexAttrib4hvNV".}: PFNGLVERTEXATTRIB4HVNVPROC
  VertexAttribs1hvNV* {.importc: "__glewVertexAttribs1hvNV".}: PFNGLVERTEXATTRIBS1HVNVPROC
  VertexAttribs2hvNV* {.importc: "__glewVertexAttribs2hvNV".}: PFNGLVERTEXATTRIBS2HVNVPROC
  VertexAttribs3hvNV* {.importc: "__glewVertexAttribs3hvNV".}: PFNGLVERTEXATTRIBS3HVNVPROC
  VertexAttribs4hvNV* {.importc: "__glewVertexAttribs4hvNV".}: PFNGLVERTEXATTRIBS4HVNVPROC
  VertexWeighthNV* {.importc: "__glewVertexWeighthNV".}: PFNGLVERTEXWEIGHTHNVPROC
  VertexWeighthvNV* {.importc: "__glewVertexWeighthvNV".}: PFNGLVERTEXWEIGHTHVNVPROC
  VertexAttribDivisorNV* {.importc: "__glewVertexAttribDivisorNV".}: PFNGLVERTEXATTRIBDIVISORNVPROC
  GetInternalformatSampleivNV* {.importc: "__glewGetInternalformatSampleivNV".}: PFNGLGETINTERNALFORMATSAMPLEIVNVPROC
  UniformMatrix2x3fvNV* {.importc: "__glewUniformMatrix2x3fvNV".}: PFNGLUNIFORMMATRIX2X3FVNVPROC
  UniformMatrix2x4fvNV* {.importc: "__glewUniformMatrix2x4fvNV".}: PFNGLUNIFORMMATRIX2X4FVNVPROC
  UniformMatrix3x2fvNV* {.importc: "__glewUniformMatrix3x2fvNV".}: PFNGLUNIFORMMATRIX3X2FVNVPROC
  UniformMatrix3x4fvNV* {.importc: "__glewUniformMatrix3x4fvNV".}: PFNGLUNIFORMMATRIX3X4FVNVPROC
  UniformMatrix4x2fvNV* {.importc: "__glewUniformMatrix4x2fvNV".}: PFNGLUNIFORMMATRIX4X2FVNVPROC
  UniformMatrix4x3fvNV* {.importc: "__glewUniformMatrix4x3fvNV".}: PFNGLUNIFORMMATRIX4X3FVNVPROC
  BeginOcclusionQueryNV* {.importc: "__glewBeginOcclusionQueryNV".}: PFNGLBEGINOCCLUSIONQUERYNVPROC
  DeleteOcclusionQueriesNV* {.importc: "__glewDeleteOcclusionQueriesNV".}: PFNGLDELETEOCCLUSIONQUERIESNVPROC
  EndOcclusionQueryNV* {.importc: "__glewEndOcclusionQueryNV".}: PFNGLENDOCCLUSIONQUERYNVPROC
  GenOcclusionQueriesNV* {.importc: "__glewGenOcclusionQueriesNV".}: PFNGLGENOCCLUSIONQUERIESNVPROC
  GetOcclusionQueryivNV* {.importc: "__glewGetOcclusionQueryivNV".}: PFNGLGETOCCLUSIONQUERYIVNVPROC
  GetOcclusionQueryuivNV* {.importc: "__glewGetOcclusionQueryuivNV".}: PFNGLGETOCCLUSIONQUERYUIVNVPROC
  IsOcclusionQueryNV* {.importc: "__glewIsOcclusionQueryNV".}: PFNGLISOCCLUSIONQUERYNVPROC
  ProgramBufferParametersIivNV* {.importc: "__glewProgramBufferParametersIivNV".}: PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
  ProgramBufferParametersIuivNV* {.importc: "__glewProgramBufferParametersIuivNV".}: PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
  ProgramBufferParametersfvNV* {.importc: "__glewProgramBufferParametersfvNV".}: PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
  CopyPathNV* {.importc: "__glewCopyPathNV".}: PFNGLCOPYPATHNVPROC
  CoverFillPathInstancedNV* {.importc: "__glewCoverFillPathInstancedNV".}: PFNGLCOVERFILLPATHINSTANCEDNVPROC
  CoverFillPathNV* {.importc: "__glewCoverFillPathNV".}: PFNGLCOVERFILLPATHNVPROC
  CoverStrokePathInstancedNV* {.importc: "__glewCoverStrokePathInstancedNV".}: PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
  CoverStrokePathNV* {.importc: "__glewCoverStrokePathNV".}: PFNGLCOVERSTROKEPATHNVPROC
  DeletePathsNV* {.importc: "__glewDeletePathsNV".}: PFNGLDELETEPATHSNVPROC
  GenPathsNV* {.importc: "__glewGenPathsNV".}: PFNGLGENPATHSNVPROC
  GetPathColorGenfvNV* {.importc: "__glewGetPathColorGenfvNV".}: PFNGLGETPATHCOLORGENFVNVPROC
  GetPathColorGenivNV* {.importc: "__glewGetPathColorGenivNV".}: PFNGLGETPATHCOLORGENIVNVPROC
  GetPathCommandsNV* {.importc: "__glewGetPathCommandsNV".}: PFNGLGETPATHCOMMANDSNVPROC
  GetPathCoordsNV* {.importc: "__glewGetPathCoordsNV".}: PFNGLGETPATHCOORDSNVPROC
  GetPathDashArrayNV* {.importc: "__glewGetPathDashArrayNV".}: PFNGLGETPATHDASHARRAYNVPROC
  GetPathLengthNV* {.importc: "__glewGetPathLengthNV".}: PFNGLGETPATHLENGTHNVPROC
  GetPathMetricRangeNV* {.importc: "__glewGetPathMetricRangeNV".}: PFNGLGETPATHMETRICRANGENVPROC
  GetPathMetricsNV* {.importc: "__glewGetPathMetricsNV".}: PFNGLGETPATHMETRICSNVPROC
  GetPathParameterfvNV* {.importc: "__glewGetPathParameterfvNV".}: PFNGLGETPATHPARAMETERFVNVPROC
  GetPathParameterivNV* {.importc: "__glewGetPathParameterivNV".}: PFNGLGETPATHPARAMETERIVNVPROC
  GetPathSpacingNV* {.importc: "__glewGetPathSpacingNV".}: PFNGLGETPATHSPACINGNVPROC
  GetPathTexGenfvNV* {.importc: "__glewGetPathTexGenfvNV".}: PFNGLGETPATHTEXGENFVNVPROC
  GetPathTexGenivNV* {.importc: "__glewGetPathTexGenivNV".}: PFNGLGETPATHTEXGENIVNVPROC
  GetProgramResourcefvNV* {.importc: "__glewGetProgramResourcefvNV".}: PFNGLGETPROGRAMRESOURCEFVNVPROC
  InterpolatePathsNV* {.importc: "__glewInterpolatePathsNV".}: PFNGLINTERPOLATEPATHSNVPROC
  IsPathNV* {.importc: "__glewIsPathNV".}: PFNGLISPATHNVPROC
  IsPointInFillPathNV* {.importc: "__glewIsPointInFillPathNV".}: PFNGLISPOINTINFILLPATHNVPROC
  IsPointInStrokePathNV* {.importc: "__glewIsPointInStrokePathNV".}: PFNGLISPOINTINSTROKEPATHNVPROC
  MatrixLoad3x2fNV* {.importc: "__glewMatrixLoad3x2fNV".}: PFNGLMATRIXLOAD3X2FNVPROC
  MatrixLoad3x3fNV* {.importc: "__glewMatrixLoad3x3fNV".}: PFNGLMATRIXLOAD3X3FNVPROC
  MatrixLoadTranspose3x3fNV* {.importc: "__glewMatrixLoadTranspose3x3fNV".}: PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC
  MatrixMult3x2fNV* {.importc: "__glewMatrixMult3x2fNV".}: PFNGLMATRIXMULT3X2FNVPROC
  MatrixMult3x3fNV* {.importc: "__glewMatrixMult3x3fNV".}: PFNGLMATRIXMULT3X3FNVPROC
  MatrixMultTranspose3x3fNV* {.importc: "__glewMatrixMultTranspose3x3fNV".}: PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC
  PathColorGenNV* {.importc: "__glewPathColorGenNV".}: PFNGLPATHCOLORGENNVPROC
  PathCommandsNV* {.importc: "__glewPathCommandsNV".}: PFNGLPATHCOMMANDSNVPROC
  PathCoordsNV* {.importc: "__glewPathCoordsNV".}: PFNGLPATHCOORDSNVPROC
  PathCoverDepthFuncNV* {.importc: "__glewPathCoverDepthFuncNV".}: PFNGLPATHCOVERDEPTHFUNCNVPROC
  PathDashArrayNV* {.importc: "__glewPathDashArrayNV".}: PFNGLPATHDASHARRAYNVPROC
  PathFogGenNV* {.importc: "__glewPathFogGenNV".}: PFNGLPATHFOGGENNVPROC
  PathGlyphIndexArrayNV* {.importc: "__glewPathGlyphIndexArrayNV".}: PFNGLPATHGLYPHINDEXARRAYNVPROC
  PathGlyphIndexRangeNV* {.importc: "__glewPathGlyphIndexRangeNV".}: PFNGLPATHGLYPHINDEXRANGENVPROC
  PathGlyphRangeNV* {.importc: "__glewPathGlyphRangeNV".}: PFNGLPATHGLYPHRANGENVPROC
  PathGlyphsNV* {.importc: "__glewPathGlyphsNV".}: PFNGLPATHGLYPHSNVPROC
  PathMemoryGlyphIndexArrayNV* {.importc: "__glewPathMemoryGlyphIndexArrayNV".}: PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC
  PathParameterfNV* {.importc: "__glewPathParameterfNV".}: PFNGLPATHPARAMETERFNVPROC
  PathParameterfvNV* {.importc: "__glewPathParameterfvNV".}: PFNGLPATHPARAMETERFVNVPROC
  PathParameteriNV* {.importc: "__glewPathParameteriNV".}: PFNGLPATHPARAMETERINVPROC
  PathParameterivNV* {.importc: "__glewPathParameterivNV".}: PFNGLPATHPARAMETERIVNVPROC
  PathStencilDepthOffsetNV* {.importc: "__glewPathStencilDepthOffsetNV".}: PFNGLPATHSTENCILDEPTHOFFSETNVPROC
  PathStencilFuncNV* {.importc: "__glewPathStencilFuncNV".}: PFNGLPATHSTENCILFUNCNVPROC
  PathStringNV* {.importc: "__glewPathStringNV".}: PFNGLPATHSTRINGNVPROC
  PathSubCommandsNV* {.importc: "__glewPathSubCommandsNV".}: PFNGLPATHSUBCOMMANDSNVPROC
  PathSubCoordsNV* {.importc: "__glewPathSubCoordsNV".}: PFNGLPATHSUBCOORDSNVPROC
  PathTexGenNV* {.importc: "__glewPathTexGenNV".}: PFNGLPATHTEXGENNVPROC
  PointAlongPathNV* {.importc: "__glewPointAlongPathNV".}: PFNGLPOINTALONGPATHNVPROC
  ProgramPathFragmentInputGenNV* {.importc: "__glewProgramPathFragmentInputGenNV".}: PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC
  StencilFillPathInstancedNV* {.importc: "__glewStencilFillPathInstancedNV".}: PFNGLSTENCILFILLPATHINSTANCEDNVPROC
  StencilFillPathNV* {.importc: "__glewStencilFillPathNV".}: PFNGLSTENCILFILLPATHNVPROC
  StencilStrokePathInstancedNV* {.importc: "__glewStencilStrokePathInstancedNV".}: PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
  StencilStrokePathNV* {.importc: "__glewStencilStrokePathNV".}: PFNGLSTENCILSTROKEPATHNVPROC
  StencilThenCoverFillPathInstancedNV* {.
      importc: "__glewStencilThenCoverFillPathInstancedNV".}: PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC
  StencilThenCoverFillPathNV* {.importc: "__glewStencilThenCoverFillPathNV".}: PFNGLSTENCILTHENCOVERFILLPATHNVPROC
  StencilThenCoverStrokePathInstancedNV* {.
      importc: "__glewStencilThenCoverStrokePathInstancedNV".}: PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC
  StencilThenCoverStrokePathNV* {.importc: "__glewStencilThenCoverStrokePathNV".}: PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC
  TransformPathNV* {.importc: "__glewTransformPathNV".}: PFNGLTRANSFORMPATHNVPROC
  WeightPathsNV* {.importc: "__glewWeightPathsNV".}: PFNGLWEIGHTPATHSNVPROC
  FlushPixelDataRangeNV* {.importc: "__glewFlushPixelDataRangeNV".}: PFNGLFLUSHPIXELDATARANGENVPROC
  PixelDataRangeNV* {.importc: "__glewPixelDataRangeNV".}: PFNGLPIXELDATARANGENVPROC
  PointParameteriNV* {.importc: "__glewPointParameteriNV".}: PFNGLPOINTPARAMETERINVPROC
  PointParameterivNV* {.importc: "__glewPointParameterivNV".}: PFNGLPOINTPARAMETERIVNVPROC
  PolygonModeNV* {.importc: "__glewPolygonModeNV".}: PFNGLPOLYGONMODENVPROC
  GetVideoi64vNV* {.importc: "__glewGetVideoi64vNV".}: PFNGLGETVIDEOI64VNVPROC
  GetVideoivNV* {.importc: "__glewGetVideoivNV".}: PFNGLGETVIDEOIVNVPROC
  GetVideoui64vNV* {.importc: "__glewGetVideoui64vNV".}: PFNGLGETVIDEOUI64VNVPROC
  GetVideouivNV* {.importc: "__glewGetVideouivNV".}: PFNGLGETVIDEOUIVNVPROC
  PresentFrameDualFillNV* {.importc: "__glewPresentFrameDualFillNV".}: PFNGLPRESENTFRAMEDUALFILLNVPROC
  PresentFrameKeyedNV* {.importc: "__glewPresentFrameKeyedNV".}: PFNGLPRESENTFRAMEKEYEDNVPROC
  PrimitiveRestartIndexNV* {.importc: "__glewPrimitiveRestartIndexNV".}: PFNGLPRIMITIVERESTARTINDEXNVPROC
  PrimitiveRestartNV* {.importc: "__glewPrimitiveRestartNV".}: PFNGLPRIMITIVERESTARTNVPROC
  CombinerInputNV* {.importc: "__glewCombinerInputNV".}: PFNGLCOMBINERINPUTNVPROC
  CombinerOutputNV* {.importc: "__glewCombinerOutputNV".}: PFNGLCOMBINEROUTPUTNVPROC
  CombinerParameterfNV* {.importc: "__glewCombinerParameterfNV".}: PFNGLCOMBINERPARAMETERFNVPROC
  CombinerParameterfvNV* {.importc: "__glewCombinerParameterfvNV".}: PFNGLCOMBINERPARAMETERFVNVPROC
  CombinerParameteriNV* {.importc: "__glewCombinerParameteriNV".}: PFNGLCOMBINERPARAMETERINVPROC
  CombinerParameterivNV* {.importc: "__glewCombinerParameterivNV".}: PFNGLCOMBINERPARAMETERIVNVPROC
  FinalCombinerInputNV* {.importc: "__glewFinalCombinerInputNV".}: PFNGLFINALCOMBINERINPUTNVPROC
  GetCombinerInputParameterfvNV* {.importc: "__glewGetCombinerInputParameterfvNV".}: PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
  GetCombinerInputParameterivNV* {.importc: "__glewGetCombinerInputParameterivNV".}: PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
  GetCombinerOutputParameterfvNV* {.importc: "__glewGetCombinerOutputParameterfvNV".}: PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
  GetCombinerOutputParameterivNV* {.importc: "__glewGetCombinerOutputParameterivNV".}: PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
  GetFinalCombinerInputParameterfvNV* {.importc: "__glewGetFinalCombinerInputParameterfvNV".}: PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
  GetFinalCombinerInputParameterivNV* {.importc: "__glewGetFinalCombinerInputParameterivNV".}: PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
  CombinerStageParameterfvNV* {.importc: "__glewCombinerStageParameterfvNV".}: PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
  GetCombinerStageParameterfvNV* {.importc: "__glewGetCombinerStageParameterfvNV".}: PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
  FramebufferSampleLocationsfvNV* {.importc: "__glewFramebufferSampleLocationsfvNV".}: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
  NamedFramebufferSampleLocationsfvNV* {.
      importc: "__glewNamedFramebufferSampleLocationsfvNV".}: PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
  GetBufferParameterui64vNV* {.importc: "__glewGetBufferParameterui64vNV".}: PFNGLGETBUFFERPARAMETERUI64VNVPROC
  GetIntegerui64vNV* {.importc: "__glewGetIntegerui64vNV".}: PFNGLGETINTEGERUI64VNVPROC
  GetNamedBufferParameterui64vNV* {.importc: "__glewGetNamedBufferParameterui64vNV".}: PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
  IsBufferResidentNV* {.importc: "__glewIsBufferResidentNV".}: PFNGLISBUFFERRESIDENTNVPROC
  IsNamedBufferResidentNV* {.importc: "__glewIsNamedBufferResidentNV".}: PFNGLISNAMEDBUFFERRESIDENTNVPROC
  MakeBufferNonResidentNV* {.importc: "__glewMakeBufferNonResidentNV".}: PFNGLMAKEBUFFERNONRESIDENTNVPROC
  MakeBufferResidentNV* {.importc: "__glewMakeBufferResidentNV".}: PFNGLMAKEBUFFERRESIDENTNVPROC
  MakeNamedBufferNonResidentNV* {.importc: "__glewMakeNamedBufferNonResidentNV".}: PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
  MakeNamedBufferResidentNV* {.importc: "__glewMakeNamedBufferResidentNV".}: PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
  ProgramUniformui64NV* {.importc: "__glewProgramUniformui64NV".}: PFNGLPROGRAMUNIFORMUI64NVPROC
  ProgramUniformui64vNV* {.importc: "__glewProgramUniformui64vNV".}: PFNGLPROGRAMUNIFORMUI64VNVPROC
  Uniformui64NV* {.importc: "__glewUniformui64NV".}: PFNGLUNIFORMUI64NVPROC
  Uniformui64vNV* {.importc: "__glewUniformui64vNV".}: PFNGLUNIFORMUI64VNVPROC
  CompressedTexImage3DNV* {.importc: "__glewCompressedTexImage3DNV".}: PFNGLCOMPRESSEDTEXIMAGE3DNVPROC
  CompressedTexSubImage3DNV* {.importc: "__glewCompressedTexSubImage3DNV".}: PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC
  CopyTexSubImage3DNV* {.importc: "__glewCopyTexSubImage3DNV".}: PFNGLCOPYTEXSUBIMAGE3DNVPROC
  FramebufferTextureLayerNV* {.importc: "__glewFramebufferTextureLayerNV".}: PFNGLFRAMEBUFFERTEXTURELAYERNVPROC
  TexImage3DNV* {.importc: "__glewTexImage3DNV".}: PFNGLTEXIMAGE3DNVPROC
  TexSubImage3DNV* {.importc: "__glewTexSubImage3DNV".}: PFNGLTEXSUBIMAGE3DNVPROC
  TextureBarrierNV* {.importc: "__glewTextureBarrierNV".}: PFNGLTEXTUREBARRIERNVPROC
  TexImage2DMultisampleCoverageNV* {.importc: "__glewTexImage2DMultisampleCoverageNV".}: PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
  TexImage3DMultisampleCoverageNV* {.importc: "__glewTexImage3DMultisampleCoverageNV".}: PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
  TextureImage2DMultisampleCoverageNV* {.
      importc: "__glewTextureImage2DMultisampleCoverageNV".}: PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
  TextureImage2DMultisampleNV* {.importc: "__glewTextureImage2DMultisampleNV".}: PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
  TextureImage3DMultisampleCoverageNV* {.
      importc: "__glewTextureImage3DMultisampleCoverageNV".}: PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
  TextureImage3DMultisampleNV* {.importc: "__glewTextureImage3DMultisampleNV".}: PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
  ActiveVaryingNV* {.importc: "__glewActiveVaryingNV".}: PFNGLACTIVEVARYINGNVPROC
  BeginTransformFeedbackNV* {.importc: "__glewBeginTransformFeedbackNV".}: PFNGLBEGINTRANSFORMFEEDBACKNVPROC
  BindBufferBaseNV* {.importc: "__glewBindBufferBaseNV".}: PFNGLBINDBUFFERBASENVPROC
  BindBufferOffsetNV* {.importc: "__glewBindBufferOffsetNV".}: PFNGLBINDBUFFEROFFSETNVPROC
  BindBufferRangeNV* {.importc: "__glewBindBufferRangeNV".}: PFNGLBINDBUFFERRANGENVPROC
  EndTransformFeedbackNV* {.importc: "__glewEndTransformFeedbackNV".}: PFNGLENDTRANSFORMFEEDBACKNVPROC
  GetActiveVaryingNV* {.importc: "__glewGetActiveVaryingNV".}: PFNGLGETACTIVEVARYINGNVPROC
  GetTransformFeedbackVaryingNV* {.importc: "__glewGetTransformFeedbackVaryingNV".}: PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
  GetVaryingLocationNV* {.importc: "__glewGetVaryingLocationNV".}: PFNGLGETVARYINGLOCATIONNVPROC
  TransformFeedbackAttribsNV* {.importc: "__glewTransformFeedbackAttribsNV".}: PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
  TransformFeedbackVaryingsNV* {.importc: "__glewTransformFeedbackVaryingsNV".}: PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
  BindTransformFeedbackNV* {.importc: "__glewBindTransformFeedbackNV".}: PFNGLBINDTRANSFORMFEEDBACKNVPROC
  DeleteTransformFeedbacksNV* {.importc: "__glewDeleteTransformFeedbacksNV".}: PFNGLDELETETRANSFORMFEEDBACKSNVPROC
  DrawTransformFeedbackNV* {.importc: "__glewDrawTransformFeedbackNV".}: PFNGLDRAWTRANSFORMFEEDBACKNVPROC
  GenTransformFeedbacksNV* {.importc: "__glewGenTransformFeedbacksNV".}: PFNGLGENTRANSFORMFEEDBACKSNVPROC
  IsTransformFeedbackNV* {.importc: "__glewIsTransformFeedbackNV".}: PFNGLISTRANSFORMFEEDBACKNVPROC
  PauseTransformFeedbackNV* {.importc: "__glewPauseTransformFeedbackNV".}: PFNGLPAUSETRANSFORMFEEDBACKNVPROC
  ResumeTransformFeedbackNV* {.importc: "__glewResumeTransformFeedbackNV".}: PFNGLRESUMETRANSFORMFEEDBACKNVPROC
  VDPAUFiniNV* {.importc: "__glewVDPAUFiniNV".}: PFNGLVDPAUFININVPROC
  VDPAUGetSurfaceivNV* {.importc: "__glewVDPAUGetSurfaceivNV".}: PFNGLVDPAUGETSURFACEIVNVPROC
  VDPAUInitNV* {.importc: "__glewVDPAUInitNV".}: PFNGLVDPAUINITNVPROC
  VDPAUIsSurfaceNV* {.importc: "__glewVDPAUIsSurfaceNV".}: PFNGLVDPAUISSURFACENVPROC
  VDPAUMapSurfacesNV* {.importc: "__glewVDPAUMapSurfacesNV".}: PFNGLVDPAUMAPSURFACESNVPROC
  VDPAURegisterOutputSurfaceNV* {.importc: "__glewVDPAURegisterOutputSurfaceNV".}: PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
  VDPAURegisterVideoSurfaceNV* {.importc: "__glewVDPAURegisterVideoSurfaceNV".}: PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
  VDPAUSurfaceAccessNV* {.importc: "__glewVDPAUSurfaceAccessNV".}: PFNGLVDPAUSURFACEACCESSNVPROC
  VDPAUUnmapSurfacesNV* {.importc: "__glewVDPAUUnmapSurfacesNV".}: PFNGLVDPAUUNMAPSURFACESNVPROC
  VDPAUUnregisterSurfaceNV* {.importc: "__glewVDPAUUnregisterSurfaceNV".}: PFNGLVDPAUUNREGISTERSURFACENVPROC
  FlushVertexArrayRangeNV* {.importc: "__glewFlushVertexArrayRangeNV".}: PFNGLFLUSHVERTEXARRAYRANGENVPROC
  VertexArrayRangeNV* {.importc: "__glewVertexArrayRangeNV".}: PFNGLVERTEXARRAYRANGENVPROC
  GetVertexAttribLi64vNV* {.importc: "__glewGetVertexAttribLi64vNV".}: PFNGLGETVERTEXATTRIBLI64VNVPROC
  GetVertexAttribLui64vNV* {.importc: "__glewGetVertexAttribLui64vNV".}: PFNGLGETVERTEXATTRIBLUI64VNVPROC
  VertexAttribL1i64NV* {.importc: "__glewVertexAttribL1i64NV".}: PFNGLVERTEXATTRIBL1I64NVPROC
  VertexAttribL1i64vNV* {.importc: "__glewVertexAttribL1i64vNV".}: PFNGLVERTEXATTRIBL1I64VNVPROC
  VertexAttribL1ui64NV* {.importc: "__glewVertexAttribL1ui64NV".}: PFNGLVERTEXATTRIBL1UI64NVPROC
  VertexAttribL1ui64vNV* {.importc: "__glewVertexAttribL1ui64vNV".}: PFNGLVERTEXATTRIBL1UI64VNVPROC
  VertexAttribL2i64NV* {.importc: "__glewVertexAttribL2i64NV".}: PFNGLVERTEXATTRIBL2I64NVPROC
  VertexAttribL2i64vNV* {.importc: "__glewVertexAttribL2i64vNV".}: PFNGLVERTEXATTRIBL2I64VNVPROC
  VertexAttribL2ui64NV* {.importc: "__glewVertexAttribL2ui64NV".}: PFNGLVERTEXATTRIBL2UI64NVPROC
  VertexAttribL2ui64vNV* {.importc: "__glewVertexAttribL2ui64vNV".}: PFNGLVERTEXATTRIBL2UI64VNVPROC
  VertexAttribL3i64NV* {.importc: "__glewVertexAttribL3i64NV".}: PFNGLVERTEXATTRIBL3I64NVPROC
  VertexAttribL3i64vNV* {.importc: "__glewVertexAttribL3i64vNV".}: PFNGLVERTEXATTRIBL3I64VNVPROC
  VertexAttribL3ui64NV* {.importc: "__glewVertexAttribL3ui64NV".}: PFNGLVERTEXATTRIBL3UI64NVPROC
  VertexAttribL3ui64vNV* {.importc: "__glewVertexAttribL3ui64vNV".}: PFNGLVERTEXATTRIBL3UI64VNVPROC
  VertexAttribL4i64NV* {.importc: "__glewVertexAttribL4i64NV".}: PFNGLVERTEXATTRIBL4I64NVPROC
  VertexAttribL4i64vNV* {.importc: "__glewVertexAttribL4i64vNV".}: PFNGLVERTEXATTRIBL4I64VNVPROC
  VertexAttribL4ui64NV* {.importc: "__glewVertexAttribL4ui64NV".}: PFNGLVERTEXATTRIBL4UI64NVPROC
  VertexAttribL4ui64vNV* {.importc: "__glewVertexAttribL4ui64vNV".}: PFNGLVERTEXATTRIBL4UI64VNVPROC
  VertexAttribLFormatNV* {.importc: "__glewVertexAttribLFormatNV".}: PFNGLVERTEXATTRIBLFORMATNVPROC
  BufferAddressRangeNV* {.importc: "__glewBufferAddressRangeNV".}: PFNGLBUFFERADDRESSRANGENVPROC
  ColorFormatNV* {.importc: "__glewColorFormatNV".}: PFNGLCOLORFORMATNVPROC
  EdgeFlagFormatNV* {.importc: "__glewEdgeFlagFormatNV".}: PFNGLEDGEFLAGFORMATNVPROC
  FogCoordFormatNV* {.importc: "__glewFogCoordFormatNV".}: PFNGLFOGCOORDFORMATNVPROC
  GetIntegerui64i_vNV* {.importc: "__glewGetIntegerui64i_vNV".}: PFNGLGETINTEGERUI64I_VNVPROC
  IndexFormatNV* {.importc: "__glewIndexFormatNV".}: PFNGLINDEXFORMATNVPROC
  NormalFormatNV* {.importc: "__glewNormalFormatNV".}: PFNGLNORMALFORMATNVPROC
  SecondaryColorFormatNV* {.importc: "__glewSecondaryColorFormatNV".}: PFNGLSECONDARYCOLORFORMATNVPROC
  TexCoordFormatNV* {.importc: "__glewTexCoordFormatNV".}: PFNGLTEXCOORDFORMATNVPROC
  VertexAttribFormatNV* {.importc: "__glewVertexAttribFormatNV".}: PFNGLVERTEXATTRIBFORMATNVPROC
  VertexAttribIFormatNV* {.importc: "__glewVertexAttribIFormatNV".}: PFNGLVERTEXATTRIBIFORMATNVPROC
  VertexFormatNV* {.importc: "__glewVertexFormatNV".}: PFNGLVERTEXFORMATNVPROC
  AreProgramsResidentNV* {.importc: "__glewAreProgramsResidentNV".}: PFNGLAREPROGRAMSRESIDENTNVPROC
  BindProgramNV* {.importc: "__glewBindProgramNV".}: PFNGLBINDPROGRAMNVPROC
  DeleteProgramsNV* {.importc: "__glewDeleteProgramsNV".}: PFNGLDELETEPROGRAMSNVPROC
  ExecuteProgramNV* {.importc: "__glewExecuteProgramNV".}: PFNGLEXECUTEPROGRAMNVPROC
  GenProgramsNV* {.importc: "__glewGenProgramsNV".}: PFNGLGENPROGRAMSNVPROC
  GetProgramParameterdvNV* {.importc: "__glewGetProgramParameterdvNV".}: PFNGLGETPROGRAMPARAMETERDVNVPROC
  GetProgramParameterfvNV* {.importc: "__glewGetProgramParameterfvNV".}: PFNGLGETPROGRAMPARAMETERFVNVPROC
  GetProgramStringNV* {.importc: "__glewGetProgramStringNV".}: PFNGLGETPROGRAMSTRINGNVPROC
  GetProgramivNV* {.importc: "__glewGetProgramivNV".}: PFNGLGETPROGRAMIVNVPROC
  GetTrackMatrixivNV* {.importc: "__glewGetTrackMatrixivNV".}: PFNGLGETTRACKMATRIXIVNVPROC
  GetVertexAttribPointervNV* {.importc: "__glewGetVertexAttribPointervNV".}: PFNGLGETVERTEXATTRIBPOINTERVNVPROC
  GetVertexAttribdvNV* {.importc: "__glewGetVertexAttribdvNV".}: PFNGLGETVERTEXATTRIBDVNVPROC
  GetVertexAttribfvNV* {.importc: "__glewGetVertexAttribfvNV".}: PFNGLGETVERTEXATTRIBFVNVPROC
  GetVertexAttribivNV* {.importc: "__glewGetVertexAttribivNV".}: PFNGLGETVERTEXATTRIBIVNVPROC
  IsProgramNV* {.importc: "__glewIsProgramNV".}: PFNGLISPROGRAMNVPROC
  LoadProgramNV* {.importc: "__glewLoadProgramNV".}: PFNGLLOADPROGRAMNVPROC
  ProgramParameter4dNV* {.importc: "__glewProgramParameter4dNV".}: PFNGLPROGRAMPARAMETER4DNVPROC
  ProgramParameter4dvNV* {.importc: "__glewProgramParameter4dvNV".}: PFNGLPROGRAMPARAMETER4DVNVPROC
  ProgramParameter4fNV* {.importc: "__glewProgramParameter4fNV".}: PFNGLPROGRAMPARAMETER4FNVPROC
  ProgramParameter4fvNV* {.importc: "__glewProgramParameter4fvNV".}: PFNGLPROGRAMPARAMETER4FVNVPROC
  ProgramParameters4dvNV* {.importc: "__glewProgramParameters4dvNV".}: PFNGLPROGRAMPARAMETERS4DVNVPROC
  ProgramParameters4fvNV* {.importc: "__glewProgramParameters4fvNV".}: PFNGLPROGRAMPARAMETERS4FVNVPROC
  RequestResidentProgramsNV* {.importc: "__glewRequestResidentProgramsNV".}: PFNGLREQUESTRESIDENTPROGRAMSNVPROC
  TrackMatrixNV* {.importc: "__glewTrackMatrixNV".}: PFNGLTRACKMATRIXNVPROC
  VertexAttrib1dNV* {.importc: "__glewVertexAttrib1dNV".}: PFNGLVERTEXATTRIB1DNVPROC
  VertexAttrib1dvNV* {.importc: "__glewVertexAttrib1dvNV".}: PFNGLVERTEXATTRIB1DVNVPROC
  VertexAttrib1fNV* {.importc: "__glewVertexAttrib1fNV".}: PFNGLVERTEXATTRIB1FNVPROC
  VertexAttrib1fvNV* {.importc: "__glewVertexAttrib1fvNV".}: PFNGLVERTEXATTRIB1FVNVPROC
  VertexAttrib1sNV* {.importc: "__glewVertexAttrib1sNV".}: PFNGLVERTEXATTRIB1SNVPROC
  VertexAttrib1svNV* {.importc: "__glewVertexAttrib1svNV".}: PFNGLVERTEXATTRIB1SVNVPROC
  VertexAttrib2dNV* {.importc: "__glewVertexAttrib2dNV".}: PFNGLVERTEXATTRIB2DNVPROC
  VertexAttrib2dvNV* {.importc: "__glewVertexAttrib2dvNV".}: PFNGLVERTEXATTRIB2DVNVPROC
  VertexAttrib2fNV* {.importc: "__glewVertexAttrib2fNV".}: PFNGLVERTEXATTRIB2FNVPROC
  VertexAttrib2fvNV* {.importc: "__glewVertexAttrib2fvNV".}: PFNGLVERTEXATTRIB2FVNVPROC
  VertexAttrib2sNV* {.importc: "__glewVertexAttrib2sNV".}: PFNGLVERTEXATTRIB2SNVPROC
  VertexAttrib2svNV* {.importc: "__glewVertexAttrib2svNV".}: PFNGLVERTEXATTRIB2SVNVPROC
  VertexAttrib3dNV* {.importc: "__glewVertexAttrib3dNV".}: PFNGLVERTEXATTRIB3DNVPROC
  VertexAttrib3dvNV* {.importc: "__glewVertexAttrib3dvNV".}: PFNGLVERTEXATTRIB3DVNVPROC
  VertexAttrib3fNV* {.importc: "__glewVertexAttrib3fNV".}: PFNGLVERTEXATTRIB3FNVPROC
  VertexAttrib3fvNV* {.importc: "__glewVertexAttrib3fvNV".}: PFNGLVERTEXATTRIB3FVNVPROC
  VertexAttrib3sNV* {.importc: "__glewVertexAttrib3sNV".}: PFNGLVERTEXATTRIB3SNVPROC
  VertexAttrib3svNV* {.importc: "__glewVertexAttrib3svNV".}: PFNGLVERTEXATTRIB3SVNVPROC
  VertexAttrib4dNV* {.importc: "__glewVertexAttrib4dNV".}: PFNGLVERTEXATTRIB4DNVPROC
  VertexAttrib4dvNV* {.importc: "__glewVertexAttrib4dvNV".}: PFNGLVERTEXATTRIB4DVNVPROC
  VertexAttrib4fNV* {.importc: "__glewVertexAttrib4fNV".}: PFNGLVERTEXATTRIB4FNVPROC
  VertexAttrib4fvNV* {.importc: "__glewVertexAttrib4fvNV".}: PFNGLVERTEXATTRIB4FVNVPROC
  VertexAttrib4sNV* {.importc: "__glewVertexAttrib4sNV".}: PFNGLVERTEXATTRIB4SNVPROC
  VertexAttrib4svNV* {.importc: "__glewVertexAttrib4svNV".}: PFNGLVERTEXATTRIB4SVNVPROC
  VertexAttrib4ubNV* {.importc: "__glewVertexAttrib4ubNV".}: PFNGLVERTEXATTRIB4UBNVPROC
  VertexAttrib4ubvNV* {.importc: "__glewVertexAttrib4ubvNV".}: PFNGLVERTEXATTRIB4UBVNVPROC
  VertexAttribPointerNV* {.importc: "__glewVertexAttribPointerNV".}: PFNGLVERTEXATTRIBPOINTERNVPROC
  VertexAttribs1dvNV* {.importc: "__glewVertexAttribs1dvNV".}: PFNGLVERTEXATTRIBS1DVNVPROC
  VertexAttribs1fvNV* {.importc: "__glewVertexAttribs1fvNV".}: PFNGLVERTEXATTRIBS1FVNVPROC
  VertexAttribs1svNV* {.importc: "__glewVertexAttribs1svNV".}: PFNGLVERTEXATTRIBS1SVNVPROC
  VertexAttribs2dvNV* {.importc: "__glewVertexAttribs2dvNV".}: PFNGLVERTEXATTRIBS2DVNVPROC
  VertexAttribs2fvNV* {.importc: "__glewVertexAttribs2fvNV".}: PFNGLVERTEXATTRIBS2FVNVPROC
  VertexAttribs2svNV* {.importc: "__glewVertexAttribs2svNV".}: PFNGLVERTEXATTRIBS2SVNVPROC
  VertexAttribs3dvNV* {.importc: "__glewVertexAttribs3dvNV".}: PFNGLVERTEXATTRIBS3DVNVPROC
  VertexAttribs3fvNV* {.importc: "__glewVertexAttribs3fvNV".}: PFNGLVERTEXATTRIBS3FVNVPROC
  VertexAttribs3svNV* {.importc: "__glewVertexAttribs3svNV".}: PFNGLVERTEXATTRIBS3SVNVPROC
  VertexAttribs4dvNV* {.importc: "__glewVertexAttribs4dvNV".}: PFNGLVERTEXATTRIBS4DVNVPROC
  VertexAttribs4fvNV* {.importc: "__glewVertexAttribs4fvNV".}: PFNGLVERTEXATTRIBS4FVNVPROC
  VertexAttribs4svNV* {.importc: "__glewVertexAttribs4svNV".}: PFNGLVERTEXATTRIBS4SVNVPROC
  VertexAttribs4ubvNV* {.importc: "__glewVertexAttribs4ubvNV".}: PFNGLVERTEXATTRIBS4UBVNVPROC
  BeginVideoCaptureNV* {.importc: "__glewBeginVideoCaptureNV".}: PFNGLBEGINVIDEOCAPTURENVPROC
  BindVideoCaptureStreamBufferNV* {.importc: "__glewBindVideoCaptureStreamBufferNV".}: PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
  BindVideoCaptureStreamTextureNV* {.importc: "__glewBindVideoCaptureStreamTextureNV".}: PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
  EndVideoCaptureNV* {.importc: "__glewEndVideoCaptureNV".}: PFNGLENDVIDEOCAPTURENVPROC
  GetVideoCaptureStreamdvNV* {.importc: "__glewGetVideoCaptureStreamdvNV".}: PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
  GetVideoCaptureStreamfvNV* {.importc: "__glewGetVideoCaptureStreamfvNV".}: PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
  GetVideoCaptureStreamivNV* {.importc: "__glewGetVideoCaptureStreamivNV".}: PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
  GetVideoCaptureivNV* {.importc: "__glewGetVideoCaptureivNV".}: PFNGLGETVIDEOCAPTUREIVNVPROC
  VideoCaptureNV* {.importc: "__glewVideoCaptureNV".}: PFNGLVIDEOCAPTURENVPROC
  VideoCaptureStreamParameterdvNV* {.importc: "__glewVideoCaptureStreamParameterdvNV".}: PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
  VideoCaptureStreamParameterfvNV* {.importc: "__glewVideoCaptureStreamParameterfvNV".}: PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
  VideoCaptureStreamParameterivNV* {.importc: "__glewVideoCaptureStreamParameterivNV".}: PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
  DepthRangeArrayfvNV* {.importc: "__glewDepthRangeArrayfvNV".}: PFNGLDEPTHRANGEARRAYFVNVPROC
  DepthRangeIndexedfNV* {.importc: "__glewDepthRangeIndexedfNV".}: PFNGLDEPTHRANGEINDEXEDFNVPROC
  DisableiNV* {.importc: "__glewDisableiNV".}: PFNGLDISABLEINVPROC
  EnableiNV* {.importc: "__glewEnableiNV".}: PFNGLENABLEINVPROC
  GetFloati_vNV* {.importc: "__glewGetFloati_vNV".}: PFNGLGETFLOATI_VNVPROC
  IsEnablediNV* {.importc: "__glewIsEnablediNV".}: PFNGLISENABLEDINVPROC
  ScissorArrayvNV* {.importc: "__glewScissorArrayvNV".}: PFNGLSCISSORARRAYVNVPROC
  ScissorIndexedNV* {.importc: "__glewScissorIndexedNV".}: PFNGLSCISSORINDEXEDNVPROC
  ScissorIndexedvNV* {.importc: "__glewScissorIndexedvNV".}: PFNGLSCISSORINDEXEDVNVPROC
  ViewportArrayvNV* {.importc: "__glewViewportArrayvNV".}: PFNGLVIEWPORTARRAYVNVPROC
  ViewportIndexedfNV* {.importc: "__glewViewportIndexedfNV".}: PFNGLVIEWPORTINDEXEDFNVPROC
  ViewportIndexedfvNV* {.importc: "__glewViewportIndexedfvNV".}: PFNGLVIEWPORTINDEXEDFVNVPROC
  ViewportSwizzleNV* {.importc: "__glewViewportSwizzleNV".}: PFNGLVIEWPORTSWIZZLENVPROC
  FramebufferTextureMultiviewOVR* {.importc: "__glewFramebufferTextureMultiviewOVR".}: PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC
  FramebufferTextureMultisampleMultiviewOVR*
      {.importc: "__glewFramebufferTextureMultisampleMultiviewOVR".}: PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC
  AlphaFuncQCOM* {.importc: "__glewAlphaFuncQCOM".}: PFNGLALPHAFUNCQCOMPROC
  DisableDriverControlQCOM* {.importc: "__glewDisableDriverControlQCOM".}: PFNGLDISABLEDRIVERCONTROLQCOMPROC
  EnableDriverControlQCOM* {.importc: "__glewEnableDriverControlQCOM".}: PFNGLENABLEDRIVERCONTROLQCOMPROC
  GetDriverControlStringQCOM* {.importc: "__glewGetDriverControlStringQCOM".}: PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
  GetDriverControlsQCOM* {.importc: "__glewGetDriverControlsQCOM".}: PFNGLGETDRIVERCONTROLSQCOMPROC
  ExtGetBufferPointervQCOM* {.importc: "__glewExtGetBufferPointervQCOM".}: PFNGLEXTGETBUFFERPOINTERVQCOMPROC
  ExtGetBuffersQCOM* {.importc: "__glewExtGetBuffersQCOM".}: PFNGLEXTGETBUFFERSQCOMPROC
  ExtGetFramebuffersQCOM* {.importc: "__glewExtGetFramebuffersQCOM".}: PFNGLEXTGETFRAMEBUFFERSQCOMPROC
  ExtGetRenderbuffersQCOM* {.importc: "__glewExtGetRenderbuffersQCOM".}: PFNGLEXTGETRENDERBUFFERSQCOMPROC
  ExtGetTexLevelParameterivQCOM* {.importc: "__glewExtGetTexLevelParameterivQCOM".}: PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
  ExtGetTexSubImageQCOM* {.importc: "__glewExtGetTexSubImageQCOM".}: PFNGLEXTGETTEXSUBIMAGEQCOMPROC
  ExtGetTexturesQCOM* {.importc: "__glewExtGetTexturesQCOM".}: PFNGLEXTGETTEXTURESQCOMPROC
  ExtTexObjectStateOverrideiQCOM* {.importc: "__glewExtTexObjectStateOverrideiQCOM".}: PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
  ExtGetProgramBinarySourceQCOM* {.importc: "__glewExtGetProgramBinarySourceQCOM".}: PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
  ExtGetProgramsQCOM* {.importc: "__glewExtGetProgramsQCOM".}: PFNGLEXTGETPROGRAMSQCOMPROC
  ExtGetShadersQCOM* {.importc: "__glewExtGetShadersQCOM".}: PFNGLEXTGETSHADERSQCOMPROC
  ExtIsProgramBinaryQCOM* {.importc: "__glewExtIsProgramBinaryQCOM".}: PFNGLEXTISPROGRAMBINARYQCOMPROC
  FramebufferFoveationConfigQCOM* {.importc: "__glewFramebufferFoveationConfigQCOM".}: PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC
  FramebufferFoveationParametersQCOM* {.importc: "__glewFramebufferFoveationParametersQCOM".}: PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC
  FramebufferFetchBarrierQCOM* {.importc: "__glewFramebufferFetchBarrierQCOM".}: PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC
  EndTilingQCOM* {.importc: "__glewEndTilingQCOM".}: PFNGLENDTILINGQCOMPROC
  StartTilingQCOM* {.importc: "__glewStartTilingQCOM".}: PFNGLSTARTTILINGQCOMPROC
  AlphaFuncx* {.importc: "__glewAlphaFuncx".}: PFNGLALPHAFUNCXPROC
  ClearColorx* {.importc: "__glewClearColorx".}: PFNGLCLEARCOLORXPROC
  ClearDepthx* {.importc: "__glewClearDepthx".}: PFNGLCLEARDEPTHXPROC
  Color4x* {.importc: "__glewColor4x".}: PFNGLCOLOR4XPROC
  DepthRangex* {.importc: "__glewDepthRangex".}: PFNGLDEPTHRANGEXPROC
  Fogx* {.importc: "__glewFogx".}: PFNGLFOGXPROC
  Fogxv* {.importc: "__glewFogxv".}: PFNGLFOGXVPROC
  Frustumf* {.importc: "__glewFrustumf".}: PFNGLFRUSTUMFPROC
  Frustumx* {.importc: "__glewFrustumx".}: PFNGLFRUSTUMXPROC
  LightModelx* {.importc: "__glewLightModelx".}: PFNGLLIGHTMODELXPROC
  LightModelxv* {.importc: "__glewLightModelxv".}: PFNGLLIGHTMODELXVPROC
  Lightx* {.importc: "__glewLightx".}: PFNGLLIGHTXPROC
  Lightxv* {.importc: "__glewLightxv".}: PFNGLLIGHTXVPROC
  LineWidthx* {.importc: "__glewLineWidthx".}: PFNGLLINEWIDTHXPROC
  LoadMatrixx* {.importc: "__glewLoadMatrixx".}: PFNGLLOADMATRIXXPROC
  Materialx* {.importc: "__glewMaterialx".}: PFNGLMATERIALXPROC
  Materialxv* {.importc: "__glewMaterialxv".}: PFNGLMATERIALXVPROC
  MultMatrixx* {.importc: "__glewMultMatrixx".}: PFNGLMULTMATRIXXPROC
  MultiTexCoord4x* {.importc: "__glewMultiTexCoord4x".}: PFNGLMULTITEXCOORD4XPROC
  Normal3x* {.importc: "__glewNormal3x".}: PFNGLNORMAL3XPROC
  Orthof* {.importc: "__glewOrthof".}: PFNGLORTHOFPROC
  Orthox* {.importc: "__glewOrthox".}: PFNGLORTHOXPROC
  PointSizex* {.importc: "__glewPointSizex".}: PFNGLPOINTSIZEXPROC
  PolygonOffsetx* {.importc: "__glewPolygonOffsetx".}: PFNGLPOLYGONOFFSETXPROC
  Rotatex* {.importc: "__glewRotatex".}: PFNGLROTATEXPROC
  SampleCoveragex* {.importc: "__glewSampleCoveragex".}: PFNGLSAMPLECOVERAGEXPROC
  Scalex* {.importc: "__glewScalex".}: PFNGLSCALEXPROC
  TexEnvx* {.importc: "__glewTexEnvx".}: PFNGLTEXENVXPROC
  TexEnvxv* {.importc: "__glewTexEnvxv".}: PFNGLTEXENVXVPROC
  TexParameterx* {.importc: "__glewTexParameterx".}: PFNGLTEXPARAMETERXPROC
  Translatex* {.importc: "__glewTranslatex".}: PFNGLTRANSLATEXPROC
  ClipPlanef* {.importc: "__glewClipPlanef".}: PFNGLCLIPPLANEFPROC
  ClipPlanex* {.importc: "__glewClipPlanex".}: PFNGLCLIPPLANEXPROC
  GetClipPlanef* {.importc: "__glewGetClipPlanef".}: PFNGLGETCLIPPLANEFPROC
  GetClipPlanex* {.importc: "__glewGetClipPlanex".}: PFNGLGETCLIPPLANEXPROC
  GetFixedv* {.importc: "__glewGetFixedv".}: PFNGLGETFIXEDVPROC
  GetLightxv* {.importc: "__glewGetLightxv".}: PFNGLGETLIGHTXVPROC
  GetMaterialxv* {.importc: "__glewGetMaterialxv".}: PFNGLGETMATERIALXVPROC
  GetTexEnvxv* {.importc: "__glewGetTexEnvxv".}: PFNGLGETTEXENVXVPROC
  GetTexParameterxv* {.importc: "__glewGetTexParameterxv".}: PFNGLGETTEXPARAMETERXVPROC
  PointParameterx* {.importc: "__glewPointParameterx".}: PFNGLPOINTPARAMETERXPROC
  PointParameterxv* {.importc: "__glewPointParameterxv".}: PFNGLPOINTPARAMETERXVPROC
  PointSizePointerOES* {.importc: "__glewPointSizePointerOES".}: PFNGLPOINTSIZEPOINTEROESPROC
  TexParameterxv* {.importc: "__glewTexParameterxv".}: PFNGLTEXPARAMETERXVPROC
  ErrorStringREGAL* {.importc: "__glewErrorStringREGAL".}: PFNGLERRORSTRINGREGALPROC
  GetExtensionREGAL* {.importc: "__glewGetExtensionREGAL".}: PFNGLGETEXTENSIONREGALPROC
  IsSupportedREGAL* {.importc: "__glewIsSupportedREGAL".}: PFNGLISSUPPORTEDREGALPROC
  LogMessageCallbackREGAL* {.importc: "__glewLogMessageCallbackREGAL".}: PFNGLLOGMESSAGECALLBACKREGALPROC
  GetProcAddressREGAL* {.importc: "__glewGetProcAddressREGAL".}: PFNGLGETPROCADDRESSREGALPROC
  DetailTexFuncSGIS* {.importc: "__glewDetailTexFuncSGIS".}: PFNGLDETAILTEXFUNCSGISPROC
  GetDetailTexFuncSGIS* {.importc: "__glewGetDetailTexFuncSGIS".}: PFNGLGETDETAILTEXFUNCSGISPROC
  FogFuncSGIS* {.importc: "__glewFogFuncSGIS".}: PFNGLFOGFUNCSGISPROC
  GetFogFuncSGIS* {.importc: "__glewGetFogFuncSGIS".}: PFNGLGETFOGFUNCSGISPROC
  SampleMaskSGIS* {.importc: "__glewSampleMaskSGIS".}: PFNGLSAMPLEMASKSGISPROC
  SamplePatternSGIS* {.importc: "__glewSamplePatternSGIS".}: PFNGLSAMPLEPATTERNSGISPROC
  InterleavedTextureCoordSetsSGIS* {.importc: "__glewInterleavedTextureCoordSetsSGIS".}: PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC
  SelectTextureCoordSetSGIS* {.importc: "__glewSelectTextureCoordSetSGIS".}: PFNGLSELECTTEXTURECOORDSETSGISPROC
  SelectTextureSGIS* {.importc: "__glewSelectTextureSGIS".}: PFNGLSELECTTEXTURESGISPROC
  SelectTextureTransformSGIS* {.importc: "__glewSelectTextureTransformSGIS".}: PFNGLSELECTTEXTURETRANSFORMSGISPROC
  MultisampleSubRectPosSGIS* {.importc: "__glewMultisampleSubRectPosSGIS".}: PFNGLMULTISAMPLESUBRECTPOSSGISPROC
  GetSharpenTexFuncSGIS* {.importc: "__glewGetSharpenTexFuncSGIS".}: PFNGLGETSHARPENTEXFUNCSGISPROC
  SharpenTexFuncSGIS* {.importc: "__glewSharpenTexFuncSGIS".}: PFNGLSHARPENTEXFUNCSGISPROC
  TexImage4DSGIS* {.importc: "__glewTexImage4DSGIS".}: PFNGLTEXIMAGE4DSGISPROC
  TexSubImage4DSGIS* {.importc: "__glewTexSubImage4DSGIS".}: PFNGLTEXSUBIMAGE4DSGISPROC
  GetTexFilterFuncSGIS* {.importc: "__glewGetTexFilterFuncSGIS".}: PFNGLGETTEXFILTERFUNCSGISPROC
  TexFilterFuncSGIS* {.importc: "__glewTexFilterFuncSGIS".}: PFNGLTEXFILTERFUNCSGISPROC
  AsyncMarkerSGIX* {.importc: "__glewAsyncMarkerSGIX".}: PFNGLASYNCMARKERSGIXPROC
  DeleteAsyncMarkersSGIX* {.importc: "__glewDeleteAsyncMarkersSGIX".}: PFNGLDELETEASYNCMARKERSSGIXPROC
  FinishAsyncSGIX* {.importc: "__glewFinishAsyncSGIX".}: PFNGLFINISHASYNCSGIXPROC
  GenAsyncMarkersSGIX* {.importc: "__glewGenAsyncMarkersSGIX".}: PFNGLGENASYNCMARKERSSGIXPROC
  IsAsyncMarkerSGIX* {.importc: "__glewIsAsyncMarkerSGIX".}: PFNGLISASYNCMARKERSGIXPROC
  PollAsyncSGIX* {.importc: "__glewPollAsyncSGIX".}: PFNGLPOLLASYNCSGIXPROC
  AddressSpace* {.importc: "__glewAddressSpace".}: PFNGLADDRESSSPACEPROC
  DataPipe* {.importc: "__glewDataPipe".}: PFNGLDATAPIPEPROC
  FlushRasterSGIX* {.importc: "__glewFlushRasterSGIX".}: PFNGLFLUSHRASTERSGIXPROC
  FogLayersSGIX* {.importc: "__glewFogLayersSGIX".}: PFNGLFOGLAYERSSGIXPROC
  GetFogLayersSGIX* {.importc: "__glewGetFogLayersSGIX".}: PFNGLGETFOGLAYERSSGIXPROC
  TextureFogSGIX* {.importc: "__glewTextureFogSGIX".}: PFNGLTEXTUREFOGSGIXPROC
  FragmentColorMaterialSGIX* {.importc: "__glewFragmentColorMaterialSGIX".}: PFNGLFRAGMENTCOLORMATERIALSGIXPROC
  FragmentLightModelfSGIX* {.importc: "__glewFragmentLightModelfSGIX".}: PFNGLFRAGMENTLIGHTMODELFSGIXPROC
  FragmentLightModelfvSGIX* {.importc: "__glewFragmentLightModelfvSGIX".}: PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
  FragmentLightModeliSGIX* {.importc: "__glewFragmentLightModeliSGIX".}: PFNGLFRAGMENTLIGHTMODELISGIXPROC
  FragmentLightModelivSGIX* {.importc: "__glewFragmentLightModelivSGIX".}: PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
  FragmentLightfSGIX* {.importc: "__glewFragmentLightfSGIX".}: PFNGLFRAGMENTLIGHTFSGIXPROC
  FragmentLightfvSGIX* {.importc: "__glewFragmentLightfvSGIX".}: PFNGLFRAGMENTLIGHTFVSGIXPROC
  FragmentLightiSGIX* {.importc: "__glewFragmentLightiSGIX".}: PFNGLFRAGMENTLIGHTISGIXPROC
  FragmentLightivSGIX* {.importc: "__glewFragmentLightivSGIX".}: PFNGLFRAGMENTLIGHTIVSGIXPROC
  FragmentMaterialfSGIX* {.importc: "__glewFragmentMaterialfSGIX".}: PFNGLFRAGMENTMATERIALFSGIXPROC
  FragmentMaterialfvSGIX* {.importc: "__glewFragmentMaterialfvSGIX".}: PFNGLFRAGMENTMATERIALFVSGIXPROC
  FragmentMaterialiSGIX* {.importc: "__glewFragmentMaterialiSGIX".}: PFNGLFRAGMENTMATERIALISGIXPROC
  FragmentMaterialivSGIX* {.importc: "__glewFragmentMaterialivSGIX".}: PFNGLFRAGMENTMATERIALIVSGIXPROC
  GetFragmentLightfvSGIX* {.importc: "__glewGetFragmentLightfvSGIX".}: PFNGLGETFRAGMENTLIGHTFVSGIXPROC
  GetFragmentLightivSGIX* {.importc: "__glewGetFragmentLightivSGIX".}: PFNGLGETFRAGMENTLIGHTIVSGIXPROC
  GetFragmentMaterialfvSGIX* {.importc: "__glewGetFragmentMaterialfvSGIX".}: PFNGLGETFRAGMENTMATERIALFVSGIXPROC
  GetFragmentMaterialivSGIX* {.importc: "__glewGetFragmentMaterialivSGIX".}: PFNGLGETFRAGMENTMATERIALIVSGIXPROC
  FrameZoomSGIX* {.importc: "__glewFrameZoomSGIX".}: PFNGLFRAMEZOOMSGIXPROC
  IglooInterfaceSGIX* {.importc: "__glewIglooInterfaceSGIX".}: PFNGLIGLOOINTERFACESGIXPROC
  AllocMPEGPredictorsSGIX* {.importc: "__glewAllocMPEGPredictorsSGIX".}: PFNGLALLOCMPEGPREDICTORSSGIXPROC
  DeleteMPEGPredictorsSGIX* {.importc: "__glewDeleteMPEGPredictorsSGIX".}: PFNGLDELETEMPEGPREDICTORSSGIXPROC
  GenMPEGPredictorsSGIX* {.importc: "__glewGenMPEGPredictorsSGIX".}: PFNGLGENMPEGPREDICTORSSGIXPROC
  GetMPEGParameterfvSGIX* {.importc: "__glewGetMPEGParameterfvSGIX".}: PFNGLGETMPEGPARAMETERFVSGIXPROC
  GetMPEGParameterivSGIX* {.importc: "__glewGetMPEGParameterivSGIX".}: PFNGLGETMPEGPARAMETERIVSGIXPROC
  GetMPEGPredictorSGIX* {.importc: "__glewGetMPEGPredictorSGIX".}: PFNGLGETMPEGPREDICTORSGIXPROC
  GetMPEGQuantTableubv* {.importc: "__glewGetMPEGQuantTableubv".}: PFNGLGETMPEGQUANTTABLEUBVPROC
  IsMPEGPredictorSGIX* {.importc: "__glewIsMPEGPredictorSGIX".}: PFNGLISMPEGPREDICTORSGIXPROC
  MPEGPredictorSGIX* {.importc: "__glewMPEGPredictorSGIX".}: PFNGLMPEGPREDICTORSGIXPROC
  MPEGQuantTableubv* {.importc: "__glewMPEGQuantTableubv".}: PFNGLMPEGQUANTTABLEUBVPROC
  SwapMPEGPredictorsSGIX* {.importc: "__glewSwapMPEGPredictorsSGIX".}: PFNGLSWAPMPEGPREDICTORSSGIXPROC
  GetNonlinLightfvSGIX* {.importc: "__glewGetNonlinLightfvSGIX".}: PFNGLGETNONLINLIGHTFVSGIXPROC
  GetNonlinMaterialfvSGIX* {.importc: "__glewGetNonlinMaterialfvSGIX".}: PFNGLGETNONLINMATERIALFVSGIXPROC
  NonlinLightfvSGIX* {.importc: "__glewNonlinLightfvSGIX".}: PFNGLNONLINLIGHTFVSGIXPROC
  NonlinMaterialfvSGIX* {.importc: "__glewNonlinMaterialfvSGIX".}: PFNGLNONLINMATERIALFVSGIXPROC
  PixelTexGenSGIX* {.importc: "__glewPixelTexGenSGIX".}: PFNGLPIXELTEXGENSGIXPROC
  DeformSGIX* {.importc: "__glewDeformSGIX".}: PFNGLDEFORMSGIXPROC
  LoadIdentityDeformationMapSGIX* {.importc: "__glewLoadIdentityDeformationMapSGIX".}: PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
  MeshBreadthSGIX* {.importc: "__glewMeshBreadthSGIX".}: PFNGLMESHBREADTHSGIXPROC
  MeshStrideSGIX* {.importc: "__glewMeshStrideSGIX".}: PFNGLMESHSTRIDESGIXPROC
  ReferencePlaneSGIX* {.importc: "__glewReferencePlaneSGIX".}: PFNGLREFERENCEPLANESGIXPROC
  SpriteParameterfSGIX* {.importc: "__glewSpriteParameterfSGIX".}: PFNGLSPRITEPARAMETERFSGIXPROC
  SpriteParameterfvSGIX* {.importc: "__glewSpriteParameterfvSGIX".}: PFNGLSPRITEPARAMETERFVSGIXPROC
  SpriteParameteriSGIX* {.importc: "__glewSpriteParameteriSGIX".}: PFNGLSPRITEPARAMETERISGIXPROC
  SpriteParameterivSGIX* {.importc: "__glewSpriteParameterivSGIX".}: PFNGLSPRITEPARAMETERIVSGIXPROC
  TagSampleBufferSGIX* {.importc: "__glewTagSampleBufferSGIX".}: PFNGLTAGSAMPLEBUFFERSGIXPROC
  GetVectorOperationSGIX* {.importc: "__glewGetVectorOperationSGIX".}: PFNGLGETVECTOROPERATIONSGIXPROC
  VectorOperationSGIX* {.importc: "__glewVectorOperationSGIX".}: PFNGLVECTOROPERATIONSGIXPROC
  AreVertexArraysResidentSGIX* {.importc: "__glewAreVertexArraysResidentSGIX".}: PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC
  BindVertexArraySGIX* {.importc: "__glewBindVertexArraySGIX".}: PFNGLBINDVERTEXARRAYSGIXPROC
  DeleteVertexArraysSGIX* {.importc: "__glewDeleteVertexArraysSGIX".}: PFNGLDELETEVERTEXARRAYSSGIXPROC
  GenVertexArraysSGIX* {.importc: "__glewGenVertexArraysSGIX".}: PFNGLGENVERTEXARRAYSSGIXPROC
  IsVertexArraySGIX* {.importc: "__glewIsVertexArraySGIX".}: PFNGLISVERTEXARRAYSGIXPROC
  PrioritizeVertexArraysSGIX* {.importc: "__glewPrioritizeVertexArraysSGIX".}: PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC
  ColorTableParameterfvSGI* {.importc: "__glewColorTableParameterfvSGI".}: PFNGLCOLORTABLEPARAMETERFVSGIPROC
  ColorTableParameterivSGI* {.importc: "__glewColorTableParameterivSGI".}: PFNGLCOLORTABLEPARAMETERIVSGIPROC
  ColorTableSGI* {.importc: "__glewColorTableSGI".}: PFNGLCOLORTABLESGIPROC
  CopyColorTableSGI* {.importc: "__glewCopyColorTableSGI".}: PFNGLCOPYCOLORTABLESGIPROC
  GetColorTableParameterfvSGI* {.importc: "__glewGetColorTableParameterfvSGI".}: PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
  GetColorTableParameterivSGI* {.importc: "__glewGetColorTableParameterivSGI".}: PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
  GetColorTableSGI* {.importc: "__glewGetColorTableSGI".}: PFNGLGETCOLORTABLESGIPROC
  GetPixelTransformParameterfvSGI* {.importc: "__glewGetPixelTransformParameterfvSGI".}: PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC
  GetPixelTransformParameterivSGI* {.importc: "__glewGetPixelTransformParameterivSGI".}: PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC
  PixelTransformParameterfSGI* {.importc: "__glewPixelTransformParameterfSGI".}: PFNGLPIXELTRANSFORMPARAMETERFSGIPROC
  PixelTransformParameterfvSGI* {.importc: "__glewPixelTransformParameterfvSGI".}: PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC
  PixelTransformParameteriSGI* {.importc: "__glewPixelTransformParameteriSGI".}: PFNGLPIXELTRANSFORMPARAMETERISGIPROC
  PixelTransformParameterivSGI* {.importc: "__glewPixelTransformParameterivSGI".}: PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC
  PixelTransformSGI* {.importc: "__glewPixelTransformSGI".}: PFNGLPIXELTRANSFORMSGIPROC
  FinishTextureSUNX* {.importc: "__glewFinishTextureSUNX".}: PFNGLFINISHTEXTURESUNXPROC
  GlobalAlphaFactorbSUN* {.importc: "__glewGlobalAlphaFactorbSUN".}: PFNGLGLOBALALPHAFACTORBSUNPROC
  GlobalAlphaFactordSUN* {.importc: "__glewGlobalAlphaFactordSUN".}: PFNGLGLOBALALPHAFACTORDSUNPROC
  GlobalAlphaFactorfSUN* {.importc: "__glewGlobalAlphaFactorfSUN".}: PFNGLGLOBALALPHAFACTORFSUNPROC
  GlobalAlphaFactoriSUN* {.importc: "__glewGlobalAlphaFactoriSUN".}: PFNGLGLOBALALPHAFACTORISUNPROC
  GlobalAlphaFactorsSUN* {.importc: "__glewGlobalAlphaFactorsSUN".}: PFNGLGLOBALALPHAFACTORSSUNPROC
  GlobalAlphaFactorubSUN* {.importc: "__glewGlobalAlphaFactorubSUN".}: PFNGLGLOBALALPHAFACTORUBSUNPROC
  GlobalAlphaFactoruiSUN* {.importc: "__glewGlobalAlphaFactoruiSUN".}: PFNGLGLOBALALPHAFACTORUISUNPROC
  GlobalAlphaFactorusSUN* {.importc: "__glewGlobalAlphaFactorusSUN".}: PFNGLGLOBALALPHAFACTORUSSUNPROC
  ReadVideoPixelsSUN* {.importc: "__glewReadVideoPixelsSUN".}: PFNGLREADVIDEOPIXELSSUNPROC
  ReplacementCodePointerSUN* {.importc: "__glewReplacementCodePointerSUN".}: PFNGLREPLACEMENTCODEPOINTERSUNPROC
  ReplacementCodeubSUN* {.importc: "__glewReplacementCodeubSUN".}: PFNGLREPLACEMENTCODEUBSUNPROC
  ReplacementCodeubvSUN* {.importc: "__glewReplacementCodeubvSUN".}: PFNGLREPLACEMENTCODEUBVSUNPROC
  ReplacementCodeuiSUN* {.importc: "__glewReplacementCodeuiSUN".}: PFNGLREPLACEMENTCODEUISUNPROC
  ReplacementCodeuivSUN* {.importc: "__glewReplacementCodeuivSUN".}: PFNGLREPLACEMENTCODEUIVSUNPROC
  ReplacementCodeusSUN* {.importc: "__glewReplacementCodeusSUN".}: PFNGLREPLACEMENTCODEUSSUNPROC
  ReplacementCodeusvSUN* {.importc: "__glewReplacementCodeusvSUN".}: PFNGLREPLACEMENTCODEUSVSUNPROC
  Color3fVertex3fSUN* {.importc: "__glewColor3fVertex3fSUN".}: PFNGLCOLOR3FVERTEX3FSUNPROC
  Color3fVertex3fvSUN* {.importc: "__glewColor3fVertex3fvSUN".}: PFNGLCOLOR3FVERTEX3FVSUNPROC
  Color4fNormal3fVertex3fSUN* {.importc: "__glewColor4fNormal3fVertex3fSUN".}: PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
  Color4fNormal3fVertex3fvSUN* {.importc: "__glewColor4fNormal3fVertex3fvSUN".}: PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
  Color4ubVertex2fSUN* {.importc: "__glewColor4ubVertex2fSUN".}: PFNGLCOLOR4UBVERTEX2FSUNPROC
  Color4ubVertex2fvSUN* {.importc: "__glewColor4ubVertex2fvSUN".}: PFNGLCOLOR4UBVERTEX2FVSUNPROC
  Color4ubVertex3fSUN* {.importc: "__glewColor4ubVertex3fSUN".}: PFNGLCOLOR4UBVERTEX3FSUNPROC
  Color4ubVertex3fvSUN* {.importc: "__glewColor4ubVertex3fvSUN".}: PFNGLCOLOR4UBVERTEX3FVSUNPROC
  Normal3fVertex3fSUN* {.importc: "__glewNormal3fVertex3fSUN".}: PFNGLNORMAL3FVERTEX3FSUNPROC
  Normal3fVertex3fvSUN* {.importc: "__glewNormal3fVertex3fvSUN".}: PFNGLNORMAL3FVERTEX3FVSUNPROC
  ReplacementCodeuiColor3fVertex3fSUN* {.
      importc: "__glewReplacementCodeuiColor3fVertex3fSUN".}: PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
  ReplacementCodeuiColor3fVertex3fvSUN* {.
      importc: "__glewReplacementCodeuiColor3fVertex3fvSUN".}: PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
  ReplacementCodeuiColor4fNormal3fVertex3fSUN*
      {.importc: "__glewReplacementCodeuiColor4fNormal3fVertex3fSUN".}: PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
  ReplacementCodeuiColor4fNormal3fVertex3fvSUN*
      {.importc: "__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN".}: PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
  ReplacementCodeuiColor4ubVertex3fSUN* {.
      importc: "__glewReplacementCodeuiColor4ubVertex3fSUN".}: PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
  ReplacementCodeuiColor4ubVertex3fvSUN* {.
      importc: "__glewReplacementCodeuiColor4ubVertex3fvSUN".}: PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
  ReplacementCodeuiNormal3fVertex3fSUN* {.
      importc: "__glewReplacementCodeuiNormal3fVertex3fSUN".}: PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
  ReplacementCodeuiNormal3fVertex3fvSUN* {.
      importc: "__glewReplacementCodeuiNormal3fVertex3fvSUN".}: PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
  ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN* {.
      importc: "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN".}: PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
  ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN* {.
      importc: "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN".}: PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
  ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN*
      {.importc: "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN".}: PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
  ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN*
      {.importc: "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN".}: PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
  ReplacementCodeuiTexCoord2fVertex3fSUN*
      {.importc: "__glewReplacementCodeuiTexCoord2fVertex3fSUN".}: PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
  ReplacementCodeuiTexCoord2fVertex3fvSUN*
      {.importc: "__glewReplacementCodeuiTexCoord2fVertex3fvSUN".}: PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
  ReplacementCodeuiVertex3fSUN* {.importc: "__glewReplacementCodeuiVertex3fSUN".}: PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
  ReplacementCodeuiVertex3fvSUN* {.importc: "__glewReplacementCodeuiVertex3fvSUN".}: PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
  TexCoord2fColor3fVertex3fSUN* {.importc: "__glewTexCoord2fColor3fVertex3fSUN".}: PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
  TexCoord2fColor3fVertex3fvSUN* {.importc: "__glewTexCoord2fColor3fVertex3fvSUN".}: PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
  TexCoord2fColor4fNormal3fVertex3fSUN* {.
      importc: "__glewTexCoord2fColor4fNormal3fVertex3fSUN".}: PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
  TexCoord2fColor4fNormal3fVertex3fvSUN* {.
      importc: "__glewTexCoord2fColor4fNormal3fVertex3fvSUN".}: PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
  TexCoord2fColor4ubVertex3fSUN* {.importc: "__glewTexCoord2fColor4ubVertex3fSUN".}: PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
  TexCoord2fColor4ubVertex3fvSUN* {.importc: "__glewTexCoord2fColor4ubVertex3fvSUN".}: PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
  TexCoord2fNormal3fVertex3fSUN* {.importc: "__glewTexCoord2fNormal3fVertex3fSUN".}: PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
  TexCoord2fNormal3fVertex3fvSUN* {.importc: "__glewTexCoord2fNormal3fVertex3fvSUN".}: PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
  TexCoord2fVertex3fSUN* {.importc: "__glewTexCoord2fVertex3fSUN".}: PFNGLTEXCOORD2FVERTEX3FSUNPROC
  TexCoord2fVertex3fvSUN* {.importc: "__glewTexCoord2fVertex3fvSUN".}: PFNGLTEXCOORD2FVERTEX3FVSUNPROC
  TexCoord4fColor4fNormal3fVertex4fSUN* {.
      importc: "__glewTexCoord4fColor4fNormal3fVertex4fSUN".}: PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
  TexCoord4fColor4fNormal3fVertex4fvSUN* {.
      importc: "__glewTexCoord4fColor4fNormal3fVertex4fvSUN".}: PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
  TexCoord4fVertex4fSUN* {.importc: "__glewTexCoord4fVertex4fSUN".}: PFNGLTEXCOORD4FVERTEX4FSUNPROC
  TexCoord4fVertex4fvSUN* {.importc: "__glewTexCoord4fVertex4fvSUN".}: PFNGLTEXCOORD4FVERTEX4FVSUNPROC
  AddSwapHintRectWIN* {.importc: "__glewAddSwapHintRectWIN".}: PFNGLADDSWAPHINTRECTWINPROC
  GLEW_VERSION_1_1* {.importc: "__GLEW_VERSION_1_1".}: GLboolean
  GLEW_VERSION_1_2* {.importc: "__GLEW_VERSION_1_2".}: GLboolean
  GLEW_VERSION_1_2_1* {.importc: "__GLEW_VERSION_1_2_1".}: GLboolean
  GLEW_VERSION_1_3* {.importc: "__GLEW_VERSION_1_3".}: GLboolean
  GLEW_VERSION_1_4* {.importc: "__GLEW_VERSION_1_4".}: GLboolean
  GLEW_VERSION_1_5* {.importc: "__GLEW_VERSION_1_5".}: GLboolean
  GLEW_VERSION_2_0* {.importc: "__GLEW_VERSION_2_0".}: GLboolean
  GLEW_VERSION_2_1* {.importc: "__GLEW_VERSION_2_1".}: GLboolean
  GLEW_VERSION_3_0* {.importc: "__GLEW_VERSION_3_0".}: GLboolean
  GLEW_VERSION_3_1* {.importc: "__GLEW_VERSION_3_1".}: GLboolean
  GLEW_VERSION_3_2* {.importc: "__GLEW_VERSION_3_2".}: GLboolean
  GLEW_VERSION_3_3* {.importc: "__GLEW_VERSION_3_3".}: GLboolean
  GLEW_VERSION_4_0* {.importc: "__GLEW_VERSION_4_0".}: GLboolean
  GLEW_VERSION_4_1* {.importc: "__GLEW_VERSION_4_1".}: GLboolean
  GLEW_VERSION_4_2* {.importc: "__GLEW_VERSION_4_2".}: GLboolean
  GLEW_VERSION_4_3* {.importc: "__GLEW_VERSION_4_3".}: GLboolean
  GLEW_VERSION_4_4* {.importc: "__GLEW_VERSION_4_4".}: GLboolean
  GLEW_VERSION_4_5* {.importc: "__GLEW_VERSION_4_5".}: GLboolean
  GLEW_VERSION_4_6* {.importc: "__GLEW_VERSION_4_6".}: GLboolean
  GLEW_3DFX_multisample* {.importc: "__GLEW_3DFX_multisample".}: GLboolean
  GLEW_3DFX_tbuffer* {.importc: "__GLEW_3DFX_tbuffer".}: GLboolean
  GLEW_3DFX_texture_compression_FXT1* {.importc: "__GLEW_3DFX_texture_compression_FXT1".}: GLboolean
  GLEW_AMD_blend_minmax_factor* {.importc: "__GLEW_AMD_blend_minmax_factor".}: GLboolean
  GLEW_AMD_compressed_3DC_texture* {.importc: "__GLEW_AMD_compressed_3DC_texture".}: GLboolean
  GLEW_AMD_compressed_ATC_texture* {.importc: "__GLEW_AMD_compressed_ATC_texture".}: GLboolean
  GLEW_AMD_conservative_depth* {.importc: "__GLEW_AMD_conservative_depth".}: GLboolean
  GLEW_AMD_debug_output* {.importc: "__GLEW_AMD_debug_output".}: GLboolean
  GLEW_AMD_depth_clamp_separate* {.importc: "__GLEW_AMD_depth_clamp_separate".}: GLboolean
  GLEW_AMD_draw_buffers_blend* {.importc: "__GLEW_AMD_draw_buffers_blend".}: GLboolean
  GLEW_AMD_framebuffer_sample_positions* {.
      importc: "__GLEW_AMD_framebuffer_sample_positions".}: GLboolean
  GLEW_AMD_gcn_shader* {.importc: "__GLEW_AMD_gcn_shader".}: GLboolean
  GLEW_AMD_gpu_shader_half_float* {.importc: "__GLEW_AMD_gpu_shader_half_float".}: GLboolean
  GLEW_AMD_gpu_shader_int16* {.importc: "__GLEW_AMD_gpu_shader_int16".}: GLboolean
  GLEW_AMD_gpu_shader_int64* {.importc: "__GLEW_AMD_gpu_shader_int64".}: GLboolean
  GLEW_AMD_interleaved_elements* {.importc: "__GLEW_AMD_interleaved_elements".}: GLboolean
  GLEW_AMD_multi_draw_indirect* {.importc: "__GLEW_AMD_multi_draw_indirect".}: GLboolean
  GLEW_AMD_name_gen_delete* {.importc: "__GLEW_AMD_name_gen_delete".}: GLboolean
  GLEW_AMD_occlusion_query_event* {.importc: "__GLEW_AMD_occlusion_query_event".}: GLboolean
  GLEW_AMD_performance_monitor* {.importc: "__GLEW_AMD_performance_monitor".}: GLboolean
  GLEW_AMD_pinned_memory* {.importc: "__GLEW_AMD_pinned_memory".}: GLboolean
  GLEW_AMD_program_binary_Z400* {.importc: "__GLEW_AMD_program_binary_Z400".}: GLboolean
  GLEW_AMD_query_buffer_object* {.importc: "__GLEW_AMD_query_buffer_object".}: GLboolean
  GLEW_AMD_sample_positions* {.importc: "__GLEW_AMD_sample_positions".}: GLboolean
  GLEW_AMD_seamless_cubemap_per_texture* {.
      importc: "__GLEW_AMD_seamless_cubemap_per_texture".}: GLboolean
  GLEW_AMD_shader_atomic_counter_ops* {.importc: "__GLEW_AMD_shader_atomic_counter_ops".}: GLboolean
  GLEW_AMD_shader_ballot* {.importc: "__GLEW_AMD_shader_ballot".}: GLboolean
  GLEW_AMD_shader_explicit_vertex_parameter*
      {.importc: "__GLEW_AMD_shader_explicit_vertex_parameter".}: GLboolean
  GLEW_AMD_shader_stencil_export* {.importc: "__GLEW_AMD_shader_stencil_export".}: GLboolean
  GLEW_AMD_shader_stencil_value_export* {.
      importc: "__GLEW_AMD_shader_stencil_value_export".}: GLboolean
  GLEW_AMD_shader_trinary_minmax* {.importc: "__GLEW_AMD_shader_trinary_minmax".}: GLboolean
  GLEW_AMD_sparse_texture* {.importc: "__GLEW_AMD_sparse_texture".}: GLboolean
  GLEW_AMD_stencil_operation_extended* {.
      importc: "__GLEW_AMD_stencil_operation_extended".}: GLboolean
  GLEW_AMD_texture_gather_bias_lod* {.importc: "__GLEW_AMD_texture_gather_bias_lod".}: GLboolean
  GLEW_AMD_texture_texture4* {.importc: "__GLEW_AMD_texture_texture4".}: GLboolean
  GLEW_AMD_transform_feedback3_lines_triangles*
      {.importc: "__GLEW_AMD_transform_feedback3_lines_triangles".}: GLboolean
  GLEW_AMD_transform_feedback4* {.importc: "__GLEW_AMD_transform_feedback4".}: GLboolean
  GLEW_AMD_vertex_shader_layer* {.importc: "__GLEW_AMD_vertex_shader_layer".}: GLboolean
  GLEW_AMD_vertex_shader_tessellator* {.importc: "__GLEW_AMD_vertex_shader_tessellator".}: GLboolean
  GLEW_AMD_vertex_shader_viewport_index* {.
      importc: "__GLEW_AMD_vertex_shader_viewport_index".}: GLboolean
  GLEW_ANDROID_extension_pack_es31a* {.importc: "__GLEW_ANDROID_extension_pack_es31a".}: GLboolean
  GLEW_ANGLE_depth_texture* {.importc: "__GLEW_ANGLE_depth_texture".}: GLboolean
  GLEW_ANGLE_framebuffer_blit* {.importc: "__GLEW_ANGLE_framebuffer_blit".}: GLboolean
  GLEW_ANGLE_framebuffer_multisample* {.importc: "__GLEW_ANGLE_framebuffer_multisample".}: GLboolean
  GLEW_ANGLE_instanced_arrays* {.importc: "__GLEW_ANGLE_instanced_arrays".}: GLboolean
  GLEW_ANGLE_pack_reverse_row_order* {.importc: "__GLEW_ANGLE_pack_reverse_row_order".}: GLboolean
  GLEW_ANGLE_program_binary* {.importc: "__GLEW_ANGLE_program_binary".}: GLboolean
  GLEW_ANGLE_texture_compression_dxt1* {.
      importc: "__GLEW_ANGLE_texture_compression_dxt1".}: GLboolean
  GLEW_ANGLE_texture_compression_dxt3* {.
      importc: "__GLEW_ANGLE_texture_compression_dxt3".}: GLboolean
  GLEW_ANGLE_texture_compression_dxt5* {.
      importc: "__GLEW_ANGLE_texture_compression_dxt5".}: GLboolean
  GLEW_ANGLE_texture_usage* {.importc: "__GLEW_ANGLE_texture_usage".}: GLboolean
  GLEW_ANGLE_timer_query* {.importc: "__GLEW_ANGLE_timer_query".}: GLboolean
  GLEW_ANGLE_translated_shader_source* {.
      importc: "__GLEW_ANGLE_translated_shader_source".}: GLboolean
  GLEW_APPLE_aux_depth_stencil* {.importc: "__GLEW_APPLE_aux_depth_stencil".}: GLboolean
  GLEW_APPLE_client_storage* {.importc: "__GLEW_APPLE_client_storage".}: GLboolean
  GLEW_APPLE_clip_distance* {.importc: "__GLEW_APPLE_clip_distance".}: GLboolean
  GLEW_APPLE_color_buffer_packed_float* {.
      importc: "__GLEW_APPLE_color_buffer_packed_float".}: GLboolean
  GLEW_APPLE_copy_texture_levels* {.importc: "__GLEW_APPLE_copy_texture_levels".}: GLboolean
  GLEW_APPLE_element_array* {.importc: "__GLEW_APPLE_element_array".}: GLboolean
  GLEW_APPLE_fence* {.importc: "__GLEW_APPLE_fence".}: GLboolean
  GLEW_APPLE_float_pixels* {.importc: "__GLEW_APPLE_float_pixels".}: GLboolean
  GLEW_APPLE_flush_buffer_range* {.importc: "__GLEW_APPLE_flush_buffer_range".}: GLboolean
  GLEW_APPLE_framebuffer_multisample* {.importc: "__GLEW_APPLE_framebuffer_multisample".}: GLboolean
  GLEW_APPLE_object_purgeable* {.importc: "__GLEW_APPLE_object_purgeable".}: GLboolean
  GLEW_APPLE_pixel_buffer* {.importc: "__GLEW_APPLE_pixel_buffer".}: GLboolean
  GLEW_APPLE_rgb_422* {.importc: "__GLEW_APPLE_rgb_422".}: GLboolean
  GLEW_APPLE_row_bytes* {.importc: "__GLEW_APPLE_row_bytes".}: GLboolean
  GLEW_APPLE_specular_vector* {.importc: "__GLEW_APPLE_specular_vector".}: GLboolean
  GLEW_APPLE_sync* {.importc: "__GLEW_APPLE_sync".}: GLboolean
  GLEW_APPLE_texture_2D_limited_npot* {.importc: "__GLEW_APPLE_texture_2D_limited_npot".}: GLboolean
  GLEW_APPLE_texture_format_BGRA8888* {.importc: "__GLEW_APPLE_texture_format_BGRA8888".}: GLboolean
  GLEW_APPLE_texture_max_level* {.importc: "__GLEW_APPLE_texture_max_level".}: GLboolean
  GLEW_APPLE_texture_packed_float* {.importc: "__GLEW_APPLE_texture_packed_float".}: GLboolean
  GLEW_APPLE_texture_range* {.importc: "__GLEW_APPLE_texture_range".}: GLboolean
  GLEW_APPLE_transform_hint* {.importc: "__GLEW_APPLE_transform_hint".}: GLboolean
  GLEW_APPLE_vertex_array_object* {.importc: "__GLEW_APPLE_vertex_array_object".}: GLboolean
  GLEW_APPLE_vertex_array_range* {.importc: "__GLEW_APPLE_vertex_array_range".}: GLboolean
  GLEW_APPLE_vertex_program_evaluators* {.
      importc: "__GLEW_APPLE_vertex_program_evaluators".}: GLboolean
  GLEW_APPLE_ycbcr_422* {.importc: "__GLEW_APPLE_ycbcr_422".}: GLboolean
  GLEW_ARB_ES2_compatibility* {.importc: "__GLEW_ARB_ES2_compatibility".}: GLboolean
  GLEW_ARB_ES3_1_compatibility* {.importc: "__GLEW_ARB_ES3_1_compatibility".}: GLboolean
  GLEW_ARB_ES3_2_compatibility* {.importc: "__GLEW_ARB_ES3_2_compatibility".}: GLboolean
  GLEW_ARB_ES3_compatibility* {.importc: "__GLEW_ARB_ES3_compatibility".}: GLboolean
  GLEW_ARB_arrays_of_arrays* {.importc: "__GLEW_ARB_arrays_of_arrays".}: GLboolean
  GLEW_ARB_base_instance* {.importc: "__GLEW_ARB_base_instance".}: GLboolean
  GLEW_ARB_bindless_texture* {.importc: "__GLEW_ARB_bindless_texture".}: GLboolean
  GLEW_ARB_blend_func_extended* {.importc: "__GLEW_ARB_blend_func_extended".}: GLboolean
  GLEW_ARB_buffer_storage* {.importc: "__GLEW_ARB_buffer_storage".}: GLboolean
  GLEW_ARB_cl_event* {.importc: "__GLEW_ARB_cl_event".}: GLboolean
  GLEW_ARB_clear_buffer_object* {.importc: "__GLEW_ARB_clear_buffer_object".}: GLboolean
  GLEW_ARB_clear_texture* {.importc: "__GLEW_ARB_clear_texture".}: GLboolean
  GLEW_ARB_clip_control* {.importc: "__GLEW_ARB_clip_control".}: GLboolean
  GLEW_ARB_color_buffer_float* {.importc: "__GLEW_ARB_color_buffer_float".}: GLboolean
  GLEW_ARB_compatibility* {.importc: "__GLEW_ARB_compatibility".}: GLboolean
  GLEW_ARB_compressed_texture_pixel_storage*
      {.importc: "__GLEW_ARB_compressed_texture_pixel_storage".}: GLboolean
  GLEW_ARB_compute_shader* {.importc: "__GLEW_ARB_compute_shader".}: GLboolean
  GLEW_ARB_compute_variable_group_size* {.
      importc: "__GLEW_ARB_compute_variable_group_size".}: GLboolean
  GLEW_ARB_conditional_render_inverted* {.
      importc: "__GLEW_ARB_conditional_render_inverted".}: GLboolean
  GLEW_ARB_conservative_depth* {.importc: "__GLEW_ARB_conservative_depth".}: GLboolean
  GLEW_ARB_copy_buffer* {.importc: "__GLEW_ARB_copy_buffer".}: GLboolean
  GLEW_ARB_copy_image* {.importc: "__GLEW_ARB_copy_image".}: GLboolean
  GLEW_ARB_cull_distance* {.importc: "__GLEW_ARB_cull_distance".}: GLboolean
  GLEW_ARB_debug_output* {.importc: "__GLEW_ARB_debug_output".}: GLboolean
  GLEW_ARB_depth_buffer_float* {.importc: "__GLEW_ARB_depth_buffer_float".}: GLboolean
  GLEW_ARB_depth_clamp* {.importc: "__GLEW_ARB_depth_clamp".}: GLboolean
  GLEW_ARB_depth_texture* {.importc: "__GLEW_ARB_depth_texture".}: GLboolean
  GLEW_ARB_derivative_control* {.importc: "__GLEW_ARB_derivative_control".}: GLboolean
  GLEW_ARB_direct_state_access* {.importc: "__GLEW_ARB_direct_state_access".}: GLboolean
  GLEW_ARB_draw_buffers* {.importc: "__GLEW_ARB_draw_buffers".}: GLboolean
  GLEW_ARB_draw_buffers_blend* {.importc: "__GLEW_ARB_draw_buffers_blend".}: GLboolean
  GLEW_ARB_draw_elements_base_vertex* {.importc: "__GLEW_ARB_draw_elements_base_vertex".}: GLboolean
  GLEW_ARB_draw_indirect* {.importc: "__GLEW_ARB_draw_indirect".}: GLboolean
  GLEW_ARB_draw_instanced* {.importc: "__GLEW_ARB_draw_instanced".}: GLboolean
  GLEW_ARB_enhanced_layouts* {.importc: "__GLEW_ARB_enhanced_layouts".}: GLboolean
  GLEW_ARB_explicit_attrib_location* {.importc: "__GLEW_ARB_explicit_attrib_location".}: GLboolean
  GLEW_ARB_explicit_uniform_location* {.importc: "__GLEW_ARB_explicit_uniform_location".}: GLboolean
  GLEW_ARB_fragment_coord_conventions* {.
      importc: "__GLEW_ARB_fragment_coord_conventions".}: GLboolean
  GLEW_ARB_fragment_layer_viewport* {.importc: "__GLEW_ARB_fragment_layer_viewport".}: GLboolean
  GLEW_ARB_fragment_program* {.importc: "__GLEW_ARB_fragment_program".}: GLboolean
  GLEW_ARB_fragment_program_shadow* {.importc: "__GLEW_ARB_fragment_program_shadow".}: GLboolean
  GLEW_ARB_fragment_shader* {.importc: "__GLEW_ARB_fragment_shader".}: GLboolean
  GLEW_ARB_fragment_shader_interlock* {.importc: "__GLEW_ARB_fragment_shader_interlock".}: GLboolean
  GLEW_ARB_framebuffer_no_attachments* {.
      importc: "__GLEW_ARB_framebuffer_no_attachments".}: GLboolean
  GLEW_ARB_framebuffer_object* {.importc: "__GLEW_ARB_framebuffer_object".}: GLboolean
  GLEW_ARB_framebuffer_sRGB* {.importc: "__GLEW_ARB_framebuffer_sRGB".}: GLboolean
  GLEW_ARB_geometry_shader4* {.importc: "__GLEW_ARB_geometry_shader4".}: GLboolean
  GLEW_ARB_get_program_binary* {.importc: "__GLEW_ARB_get_program_binary".}: GLboolean
  GLEW_ARB_get_texture_sub_image* {.importc: "__GLEW_ARB_get_texture_sub_image".}: GLboolean
  GLEW_ARB_gl_spirv* {.importc: "__GLEW_ARB_gl_spirv".}: GLboolean
  GLEW_ARB_gpu_shader5* {.importc: "__GLEW_ARB_gpu_shader5".}: GLboolean
  GLEW_ARB_gpu_shader_fp64* {.importc: "__GLEW_ARB_gpu_shader_fp64".}: GLboolean
  GLEW_ARB_gpu_shader_int64* {.importc: "__GLEW_ARB_gpu_shader_int64".}: GLboolean
  GLEW_ARB_half_float_pixel* {.importc: "__GLEW_ARB_half_float_pixel".}: GLboolean
  GLEW_ARB_half_float_vertex* {.importc: "__GLEW_ARB_half_float_vertex".}: GLboolean
  GLEW_ARB_imaging* {.importc: "__GLEW_ARB_imaging".}: GLboolean
  GLEW_ARB_indirect_parameters* {.importc: "__GLEW_ARB_indirect_parameters".}: GLboolean
  GLEW_ARB_instanced_arrays* {.importc: "__GLEW_ARB_instanced_arrays".}: GLboolean
  GLEW_ARB_internalformat_query* {.importc: "__GLEW_ARB_internalformat_query".}: GLboolean
  GLEW_ARB_internalformat_query2* {.importc: "__GLEW_ARB_internalformat_query2".}: GLboolean
  GLEW_ARB_invalidate_subdata* {.importc: "__GLEW_ARB_invalidate_subdata".}: GLboolean
  GLEW_ARB_map_buffer_alignment* {.importc: "__GLEW_ARB_map_buffer_alignment".}: GLboolean
  GLEW_ARB_map_buffer_range* {.importc: "__GLEW_ARB_map_buffer_range".}: GLboolean
  GLEW_ARB_matrix_palette* {.importc: "__GLEW_ARB_matrix_palette".}: GLboolean
  GLEW_ARB_multi_bind* {.importc: "__GLEW_ARB_multi_bind".}: GLboolean
  GLEW_ARB_multi_draw_indirect* {.importc: "__GLEW_ARB_multi_draw_indirect".}: GLboolean
  GLEW_ARB_multisample* {.importc: "__GLEW_ARB_multisample".}: GLboolean
  GLEW_ARB_multitexture* {.importc: "__GLEW_ARB_multitexture".}: GLboolean
  GLEW_ARB_occlusion_query* {.importc: "__GLEW_ARB_occlusion_query".}: GLboolean
  GLEW_ARB_occlusion_query2* {.importc: "__GLEW_ARB_occlusion_query2".}: GLboolean
  GLEW_ARB_parallel_shader_compile* {.importc: "__GLEW_ARB_parallel_shader_compile".}: GLboolean
  GLEW_ARB_pipeline_statistics_query* {.importc: "__GLEW_ARB_pipeline_statistics_query".}: GLboolean
  GLEW_ARB_pixel_buffer_object* {.importc: "__GLEW_ARB_pixel_buffer_object".}: GLboolean
  GLEW_ARB_point_parameters* {.importc: "__GLEW_ARB_point_parameters".}: GLboolean
  GLEW_ARB_point_sprite* {.importc: "__GLEW_ARB_point_sprite".}: GLboolean
  GLEW_ARB_polygon_offset_clamp* {.importc: "__GLEW_ARB_polygon_offset_clamp".}: GLboolean
  GLEW_ARB_post_depth_coverage* {.importc: "__GLEW_ARB_post_depth_coverage".}: GLboolean
  GLEW_ARB_program_interface_query* {.importc: "__GLEW_ARB_program_interface_query".}: GLboolean
  GLEW_ARB_provoking_vertex* {.importc: "__GLEW_ARB_provoking_vertex".}: GLboolean
  GLEW_ARB_query_buffer_object* {.importc: "__GLEW_ARB_query_buffer_object".}: GLboolean
  GLEW_ARB_robust_buffer_access_behavior*
      {.importc: "__GLEW_ARB_robust_buffer_access_behavior".}: GLboolean
  GLEW_ARB_robustness* {.importc: "__GLEW_ARB_robustness".}: GLboolean
  GLEW_ARB_robustness_application_isolation*
      {.importc: "__GLEW_ARB_robustness_application_isolation".}: GLboolean
  GLEW_ARB_robustness_share_group_isolation*
      {.importc: "__GLEW_ARB_robustness_share_group_isolation".}: GLboolean
  GLEW_ARB_sample_locations* {.importc: "__GLEW_ARB_sample_locations".}: GLboolean
  GLEW_ARB_sample_shading* {.importc: "__GLEW_ARB_sample_shading".}: GLboolean
  GLEW_ARB_sampler_objects* {.importc: "__GLEW_ARB_sampler_objects".}: GLboolean
  GLEW_ARB_seamless_cube_map* {.importc: "__GLEW_ARB_seamless_cube_map".}: GLboolean
  GLEW_ARB_seamless_cubemap_per_texture* {.
      importc: "__GLEW_ARB_seamless_cubemap_per_texture".}: GLboolean
  GLEW_ARB_separate_shader_objects* {.importc: "__GLEW_ARB_separate_shader_objects".}: GLboolean
  GLEW_ARB_shader_atomic_counter_ops* {.importc: "__GLEW_ARB_shader_atomic_counter_ops".}: GLboolean
  GLEW_ARB_shader_atomic_counters* {.importc: "__GLEW_ARB_shader_atomic_counters".}: GLboolean
  GLEW_ARB_shader_ballot* {.importc: "__GLEW_ARB_shader_ballot".}: GLboolean
  GLEW_ARB_shader_bit_encoding* {.importc: "__GLEW_ARB_shader_bit_encoding".}: GLboolean
  GLEW_ARB_shader_clock* {.importc: "__GLEW_ARB_shader_clock".}: GLboolean
  GLEW_ARB_shader_draw_parameters* {.importc: "__GLEW_ARB_shader_draw_parameters".}: GLboolean
  GLEW_ARB_shader_group_vote* {.importc: "__GLEW_ARB_shader_group_vote".}: GLboolean
  GLEW_ARB_shader_image_load_store* {.importc: "__GLEW_ARB_shader_image_load_store".}: GLboolean
  GLEW_ARB_shader_image_size* {.importc: "__GLEW_ARB_shader_image_size".}: GLboolean
  GLEW_ARB_shader_objects* {.importc: "__GLEW_ARB_shader_objects".}: GLboolean
  GLEW_ARB_shader_precision* {.importc: "__GLEW_ARB_shader_precision".}: GLboolean
  GLEW_ARB_shader_stencil_export* {.importc: "__GLEW_ARB_shader_stencil_export".}: GLboolean
  GLEW_ARB_shader_storage_buffer_object* {.
      importc: "__GLEW_ARB_shader_storage_buffer_object".}: GLboolean
  GLEW_ARB_shader_subroutine* {.importc: "__GLEW_ARB_shader_subroutine".}: GLboolean
  GLEW_ARB_shader_texture_image_samples* {.
      importc: "__GLEW_ARB_shader_texture_image_samples".}: GLboolean
  GLEW_ARB_shader_texture_lod* {.importc: "__GLEW_ARB_shader_texture_lod".}: GLboolean
  GLEW_ARB_shader_viewport_layer_array* {.
      importc: "__GLEW_ARB_shader_viewport_layer_array".}: GLboolean
  GLEW_ARB_shading_language_100* {.importc: "__GLEW_ARB_shading_language_100".}: GLboolean
  GLEW_ARB_shading_language_420pack* {.importc: "__GLEW_ARB_shading_language_420pack".}: GLboolean
  GLEW_ARB_shading_language_include* {.importc: "__GLEW_ARB_shading_language_include".}: GLboolean
  GLEW_ARB_shading_language_packing* {.importc: "__GLEW_ARB_shading_language_packing".}: GLboolean
  GLEW_ARB_shadow* {.importc: "__GLEW_ARB_shadow".}: GLboolean
  GLEW_ARB_shadow_ambient* {.importc: "__GLEW_ARB_shadow_ambient".}: GLboolean
  GLEW_ARB_sparse_buffer* {.importc: "__GLEW_ARB_sparse_buffer".}: GLboolean
  GLEW_ARB_sparse_texture* {.importc: "__GLEW_ARB_sparse_texture".}: GLboolean
  GLEW_ARB_sparse_texture2* {.importc: "__GLEW_ARB_sparse_texture2".}: GLboolean
  GLEW_ARB_sparse_texture_clamp* {.importc: "__GLEW_ARB_sparse_texture_clamp".}: GLboolean
  GLEW_ARB_spirv_extensions* {.importc: "__GLEW_ARB_spirv_extensions".}: GLboolean
  GLEW_ARB_stencil_texturing* {.importc: "__GLEW_ARB_stencil_texturing".}: GLboolean
  GLEW_ARB_sync* {.importc: "__GLEW_ARB_sync".}: GLboolean
  GLEW_ARB_tessellation_shader* {.importc: "__GLEW_ARB_tessellation_shader".}: GLboolean
  GLEW_ARB_texture_barrier* {.importc: "__GLEW_ARB_texture_barrier".}: GLboolean
  GLEW_ARB_texture_border_clamp* {.importc: "__GLEW_ARB_texture_border_clamp".}: GLboolean
  GLEW_ARB_texture_buffer_object* {.importc: "__GLEW_ARB_texture_buffer_object".}: GLboolean
  GLEW_ARB_texture_buffer_object_rgb32* {.
      importc: "__GLEW_ARB_texture_buffer_object_rgb32".}: GLboolean
  GLEW_ARB_texture_buffer_range* {.importc: "__GLEW_ARB_texture_buffer_range".}: GLboolean
  GLEW_ARB_texture_compression* {.importc: "__GLEW_ARB_texture_compression".}: GLboolean
  GLEW_ARB_texture_compression_bptc* {.importc: "__GLEW_ARB_texture_compression_bptc".}: GLboolean
  GLEW_ARB_texture_compression_rgtc* {.importc: "__GLEW_ARB_texture_compression_rgtc".}: GLboolean
  GLEW_ARB_texture_cube_map* {.importc: "__GLEW_ARB_texture_cube_map".}: GLboolean
  GLEW_ARB_texture_cube_map_array* {.importc: "__GLEW_ARB_texture_cube_map_array".}: GLboolean
  GLEW_ARB_texture_env_add* {.importc: "__GLEW_ARB_texture_env_add".}: GLboolean
  GLEW_ARB_texture_env_combine* {.importc: "__GLEW_ARB_texture_env_combine".}: GLboolean
  GLEW_ARB_texture_env_crossbar* {.importc: "__GLEW_ARB_texture_env_crossbar".}: GLboolean
  GLEW_ARB_texture_env_dot3* {.importc: "__GLEW_ARB_texture_env_dot3".}: GLboolean
  GLEW_ARB_texture_filter_anisotropic* {.
      importc: "__GLEW_ARB_texture_filter_anisotropic".}: GLboolean
  GLEW_ARB_texture_filter_minmax* {.importc: "__GLEW_ARB_texture_filter_minmax".}: GLboolean
  GLEW_ARB_texture_float* {.importc: "__GLEW_ARB_texture_float".}: GLboolean
  GLEW_ARB_texture_gather* {.importc: "__GLEW_ARB_texture_gather".}: GLboolean
  GLEW_ARB_texture_mirror_clamp_to_edge* {.
      importc: "__GLEW_ARB_texture_mirror_clamp_to_edge".}: GLboolean
  GLEW_ARB_texture_mirrored_repeat* {.importc: "__GLEW_ARB_texture_mirrored_repeat".}: GLboolean
  GLEW_ARB_texture_multisample* {.importc: "__GLEW_ARB_texture_multisample".}: GLboolean
  GLEW_ARB_texture_non_power_of_two* {.importc: "__GLEW_ARB_texture_non_power_of_two".}: GLboolean
  GLEW_ARB_texture_query_levels* {.importc: "__GLEW_ARB_texture_query_levels".}: GLboolean
  GLEW_ARB_texture_query_lod* {.importc: "__GLEW_ARB_texture_query_lod".}: GLboolean
  GLEW_ARB_texture_rectangle* {.importc: "__GLEW_ARB_texture_rectangle".}: GLboolean
  GLEW_ARB_texture_rg* {.importc: "__GLEW_ARB_texture_rg".}: GLboolean
  GLEW_ARB_texture_rgb10_a2ui* {.importc: "__GLEW_ARB_texture_rgb10_a2ui".}: GLboolean
  GLEW_ARB_texture_stencil8* {.importc: "__GLEW_ARB_texture_stencil8".}: GLboolean
  GLEW_ARB_texture_storage* {.importc: "__GLEW_ARB_texture_storage".}: GLboolean
  GLEW_ARB_texture_storage_multisample* {.
      importc: "__GLEW_ARB_texture_storage_multisample".}: GLboolean
  GLEW_ARB_texture_swizzle* {.importc: "__GLEW_ARB_texture_swizzle".}: GLboolean
  GLEW_ARB_texture_view* {.importc: "__GLEW_ARB_texture_view".}: GLboolean
  GLEW_ARB_timer_query* {.importc: "__GLEW_ARB_timer_query".}: GLboolean
  GLEW_ARB_transform_feedback2* {.importc: "__GLEW_ARB_transform_feedback2".}: GLboolean
  GLEW_ARB_transform_feedback3* {.importc: "__GLEW_ARB_transform_feedback3".}: GLboolean
  GLEW_ARB_transform_feedback_instanced* {.
      importc: "__GLEW_ARB_transform_feedback_instanced".}: GLboolean
  GLEW_ARB_transform_feedback_overflow_query*
      {.importc: "__GLEW_ARB_transform_feedback_overflow_query".}: GLboolean
  GLEW_ARB_transpose_matrix* {.importc: "__GLEW_ARB_transpose_matrix".}: GLboolean
  GLEW_ARB_uniform_buffer_object* {.importc: "__GLEW_ARB_uniform_buffer_object".}: GLboolean
  GLEW_ARB_vertex_array_bgra* {.importc: "__GLEW_ARB_vertex_array_bgra".}: GLboolean
  GLEW_ARB_vertex_array_object* {.importc: "__GLEW_ARB_vertex_array_object".}: GLboolean
  GLEW_ARB_vertex_attrib_64bit* {.importc: "__GLEW_ARB_vertex_attrib_64bit".}: GLboolean
  GLEW_ARB_vertex_attrib_binding* {.importc: "__GLEW_ARB_vertex_attrib_binding".}: GLboolean
  GLEW_ARB_vertex_blend* {.importc: "__GLEW_ARB_vertex_blend".}: GLboolean
  GLEW_ARB_vertex_buffer_object* {.importc: "__GLEW_ARB_vertex_buffer_object".}: GLboolean
  GLEW_ARB_vertex_program* {.importc: "__GLEW_ARB_vertex_program".}: GLboolean
  GLEW_ARB_vertex_shader* {.importc: "__GLEW_ARB_vertex_shader".}: GLboolean
  GLEW_ARB_vertex_type_10f_11f_11f_rev* {.
      importc: "__GLEW_ARB_vertex_type_10f_11f_11f_rev".}: GLboolean
  GLEW_ARB_vertex_type_2_10_10_10_rev* {.
      importc: "__GLEW_ARB_vertex_type_2_10_10_10_rev".}: GLboolean
  GLEW_ARB_viewport_array* {.importc: "__GLEW_ARB_viewport_array".}: GLboolean
  GLEW_ARB_window_pos* {.importc: "__GLEW_ARB_window_pos".}: GLboolean
  GLEW_ARM_mali_program_binary* {.importc: "__GLEW_ARM_mali_program_binary".}: GLboolean
  GLEW_ARM_mali_shader_binary* {.importc: "__GLEW_ARM_mali_shader_binary".}: GLboolean
  GLEW_ARM_rgba8* {.importc: "__GLEW_ARM_rgba8".}: GLboolean
  GLEW_ARM_shader_framebuffer_fetch* {.importc: "__GLEW_ARM_shader_framebuffer_fetch".}: GLboolean
  GLEW_ARM_shader_framebuffer_fetch_depth_stencil*
      {.importc: "__GLEW_ARM_shader_framebuffer_fetch_depth_stencil".}: GLboolean
  GLEW_ATIX_point_sprites* {.importc: "__GLEW_ATIX_point_sprites".}: GLboolean
  GLEW_ATIX_texture_env_combine3* {.importc: "__GLEW_ATIX_texture_env_combine3".}: GLboolean
  GLEW_ATIX_texture_env_route* {.importc: "__GLEW_ATIX_texture_env_route".}: GLboolean
  GLEW_ATIX_vertex_shader_output_point_size*
      {.importc: "__GLEW_ATIX_vertex_shader_output_point_size".}: GLboolean
  GLEW_ATI_draw_buffers* {.importc: "__GLEW_ATI_draw_buffers".}: GLboolean
  GLEW_ATI_element_array* {.importc: "__GLEW_ATI_element_array".}: GLboolean
  GLEW_ATI_envmap_bumpmap* {.importc: "__GLEW_ATI_envmap_bumpmap".}: GLboolean
  GLEW_ATI_fragment_shader* {.importc: "__GLEW_ATI_fragment_shader".}: GLboolean
  GLEW_ATI_map_object_buffer* {.importc: "__GLEW_ATI_map_object_buffer".}: GLboolean
  GLEW_ATI_meminfo* {.importc: "__GLEW_ATI_meminfo".}: GLboolean
  GLEW_ATI_pn_triangles* {.importc: "__GLEW_ATI_pn_triangles".}: GLboolean
  GLEW_ATI_separate_stencil* {.importc: "__GLEW_ATI_separate_stencil".}: GLboolean
  GLEW_ATI_shader_texture_lod* {.importc: "__GLEW_ATI_shader_texture_lod".}: GLboolean
  GLEW_ATI_text_fragment_shader* {.importc: "__GLEW_ATI_text_fragment_shader".}: GLboolean
  GLEW_ATI_texture_compression_3dc* {.importc: "__GLEW_ATI_texture_compression_3dc".}: GLboolean
  GLEW_ATI_texture_env_combine3* {.importc: "__GLEW_ATI_texture_env_combine3".}: GLboolean
  GLEW_ATI_texture_float* {.importc: "__GLEW_ATI_texture_float".}: GLboolean
  GLEW_ATI_texture_mirror_once* {.importc: "__GLEW_ATI_texture_mirror_once".}: GLboolean
  GLEW_ATI_vertex_array_object* {.importc: "__GLEW_ATI_vertex_array_object".}: GLboolean
  GLEW_ATI_vertex_attrib_array_object* {.
      importc: "__GLEW_ATI_vertex_attrib_array_object".}: GLboolean
  GLEW_ATI_vertex_streams* {.importc: "__GLEW_ATI_vertex_streams".}: GLboolean
  GLEW_EGL_KHR_context_flush_control* {.importc: "__GLEW_EGL_KHR_context_flush_control".}: GLboolean
  GLEW_EGL_NV_robustness_video_memory_purge*
      {.importc: "__GLEW_EGL_NV_robustness_video_memory_purge".}: GLboolean
  GLEW_EXT_422_pixels* {.importc: "__GLEW_EXT_422_pixels".}: GLboolean
  GLEW_EXT_Cg_shader* {.importc: "__GLEW_EXT_Cg_shader".}: GLboolean
  GLEW_EXT_EGL_image_array* {.importc: "__GLEW_EXT_EGL_image_array".}: GLboolean
  GLEW_EXT_YUV_target* {.importc: "__GLEW_EXT_YUV_target".}: GLboolean
  GLEW_EXT_abgr* {.importc: "__GLEW_EXT_abgr".}: GLboolean
  GLEW_EXT_base_instance* {.importc: "__GLEW_EXT_base_instance".}: GLboolean
  GLEW_EXT_bgra* {.importc: "__GLEW_EXT_bgra".}: GLboolean
  GLEW_EXT_bindable_uniform* {.importc: "__GLEW_EXT_bindable_uniform".}: GLboolean
  GLEW_EXT_blend_color* {.importc: "__GLEW_EXT_blend_color".}: GLboolean
  GLEW_EXT_blend_equation_separate* {.importc: "__GLEW_EXT_blend_equation_separate".}: GLboolean
  GLEW_EXT_blend_func_extended* {.importc: "__GLEW_EXT_blend_func_extended".}: GLboolean
  GLEW_EXT_blend_func_separate* {.importc: "__GLEW_EXT_blend_func_separate".}: GLboolean
  GLEW_EXT_blend_logic_op* {.importc: "__GLEW_EXT_blend_logic_op".}: GLboolean
  GLEW_EXT_blend_minmax* {.importc: "__GLEW_EXT_blend_minmax".}: GLboolean
  GLEW_EXT_blend_subtract* {.importc: "__GLEW_EXT_blend_subtract".}: GLboolean
  GLEW_EXT_buffer_storage* {.importc: "__GLEW_EXT_buffer_storage".}: GLboolean
  GLEW_EXT_clear_texture* {.importc: "__GLEW_EXT_clear_texture".}: GLboolean
  GLEW_EXT_clip_cull_distance* {.importc: "__GLEW_EXT_clip_cull_distance".}: GLboolean
  GLEW_EXT_clip_volume_hint* {.importc: "__GLEW_EXT_clip_volume_hint".}: GLboolean
  GLEW_EXT_cmyka* {.importc: "__GLEW_EXT_cmyka".}: GLboolean
  GLEW_EXT_color_buffer_float* {.importc: "__GLEW_EXT_color_buffer_float".}: GLboolean
  GLEW_EXT_color_buffer_half_float* {.importc: "__GLEW_EXT_color_buffer_half_float".}: GLboolean
  GLEW_EXT_color_subtable* {.importc: "__GLEW_EXT_color_subtable".}: GLboolean
  GLEW_EXT_compiled_vertex_array* {.importc: "__GLEW_EXT_compiled_vertex_array".}: GLboolean
  GLEW_EXT_compressed_ETC1_RGB8_sub_texture*
      {.importc: "__GLEW_EXT_compressed_ETC1_RGB8_sub_texture".}: GLboolean
  GLEW_EXT_conservative_depth* {.importc: "__GLEW_EXT_conservative_depth".}: GLboolean
  GLEW_EXT_convolution* {.importc: "__GLEW_EXT_convolution".}: GLboolean
  GLEW_EXT_coordinate_frame* {.importc: "__GLEW_EXT_coordinate_frame".}: GLboolean
  GLEW_EXT_copy_image* {.importc: "__GLEW_EXT_copy_image".}: GLboolean
  GLEW_EXT_copy_texture* {.importc: "__GLEW_EXT_copy_texture".}: GLboolean
  GLEW_EXT_cull_vertex* {.importc: "__GLEW_EXT_cull_vertex".}: GLboolean
  GLEW_EXT_debug_label* {.importc: "__GLEW_EXT_debug_label".}: GLboolean
  GLEW_EXT_debug_marker* {.importc: "__GLEW_EXT_debug_marker".}: GLboolean
  GLEW_EXT_depth_bounds_test* {.importc: "__GLEW_EXT_depth_bounds_test".}: GLboolean
  GLEW_EXT_direct_state_access* {.importc: "__GLEW_EXT_direct_state_access".}: GLboolean
  GLEW_EXT_discard_framebuffer* {.importc: "__GLEW_EXT_discard_framebuffer".}: GLboolean
  GLEW_EXT_draw_buffers* {.importc: "__GLEW_EXT_draw_buffers".}: GLboolean
  GLEW_EXT_draw_buffers2* {.importc: "__GLEW_EXT_draw_buffers2".}: GLboolean
  GLEW_EXT_draw_buffers_indexed* {.importc: "__GLEW_EXT_draw_buffers_indexed".}: GLboolean
  GLEW_EXT_draw_elements_base_vertex* {.importc: "__GLEW_EXT_draw_elements_base_vertex".}: GLboolean
  GLEW_EXT_draw_instanced* {.importc: "__GLEW_EXT_draw_instanced".}: GLboolean
  GLEW_EXT_draw_range_elements* {.importc: "__GLEW_EXT_draw_range_elements".}: GLboolean
  GLEW_EXT_external_buffer* {.importc: "__GLEW_EXT_external_buffer".}: GLboolean
  GLEW_EXT_float_blend* {.importc: "__GLEW_EXT_float_blend".}: GLboolean
  GLEW_EXT_fog_coord* {.importc: "__GLEW_EXT_fog_coord".}: GLboolean
  GLEW_EXT_frag_depth* {.importc: "__GLEW_EXT_frag_depth".}: GLboolean
  GLEW_EXT_fragment_lighting* {.importc: "__GLEW_EXT_fragment_lighting".}: GLboolean
  GLEW_EXT_framebuffer_blit* {.importc: "__GLEW_EXT_framebuffer_blit".}: GLboolean
  GLEW_EXT_framebuffer_multisample* {.importc: "__GLEW_EXT_framebuffer_multisample".}: GLboolean
  GLEW_EXT_framebuffer_multisample_blit_scaled*
      {.importc: "__GLEW_EXT_framebuffer_multisample_blit_scaled".}: GLboolean
  GLEW_EXT_framebuffer_object* {.importc: "__GLEW_EXT_framebuffer_object".}: GLboolean
  GLEW_EXT_framebuffer_sRGB* {.importc: "__GLEW_EXT_framebuffer_sRGB".}: GLboolean
  GLEW_EXT_geometry_point_size* {.importc: "__GLEW_EXT_geometry_point_size".}: GLboolean
  GLEW_EXT_geometry_shader* {.importc: "__GLEW_EXT_geometry_shader".}: GLboolean
  GLEW_EXT_geometry_shader4* {.importc: "__GLEW_EXT_geometry_shader4".}: GLboolean
  GLEW_EXT_gpu_program_parameters* {.importc: "__GLEW_EXT_gpu_program_parameters".}: GLboolean
  GLEW_EXT_gpu_shader4* {.importc: "__GLEW_EXT_gpu_shader4".}: GLboolean
  GLEW_EXT_gpu_shader5* {.importc: "__GLEW_EXT_gpu_shader5".}: GLboolean
  GLEW_EXT_histogram* {.importc: "__GLEW_EXT_histogram".}: GLboolean
  GLEW_EXT_index_array_formats* {.importc: "__GLEW_EXT_index_array_formats".}: GLboolean
  GLEW_EXT_index_func* {.importc: "__GLEW_EXT_index_func".}: GLboolean
  GLEW_EXT_index_material* {.importc: "__GLEW_EXT_index_material".}: GLboolean
  GLEW_EXT_index_texture* {.importc: "__GLEW_EXT_index_texture".}: GLboolean
  GLEW_EXT_instanced_arrays* {.importc: "__GLEW_EXT_instanced_arrays".}: GLboolean
  GLEW_EXT_light_texture* {.importc: "__GLEW_EXT_light_texture".}: GLboolean
  GLEW_EXT_map_buffer_range* {.importc: "__GLEW_EXT_map_buffer_range".}: GLboolean
  GLEW_EXT_memory_object* {.importc: "__GLEW_EXT_memory_object".}: GLboolean
  GLEW_EXT_memory_object_fd* {.importc: "__GLEW_EXT_memory_object_fd".}: GLboolean
  GLEW_EXT_memory_object_win32* {.importc: "__GLEW_EXT_memory_object_win32".}: GLboolean
  GLEW_EXT_misc_attribute* {.importc: "__GLEW_EXT_misc_attribute".}: GLboolean
  GLEW_EXT_multi_draw_arrays* {.importc: "__GLEW_EXT_multi_draw_arrays".}: GLboolean
  GLEW_EXT_multi_draw_indirect* {.importc: "__GLEW_EXT_multi_draw_indirect".}: GLboolean
  GLEW_EXT_multiple_textures* {.importc: "__GLEW_EXT_multiple_textures".}: GLboolean
  GLEW_EXT_multisample* {.importc: "__GLEW_EXT_multisample".}: GLboolean
  GLEW_EXT_multisample_compatibility* {.importc: "__GLEW_EXT_multisample_compatibility".}: GLboolean
  GLEW_EXT_multisampled_render_to_texture*
      {.importc: "__GLEW_EXT_multisampled_render_to_texture".}: GLboolean
  GLEW_EXT_multisampled_render_to_texture2*
      {.importc: "__GLEW_EXT_multisampled_render_to_texture2".}: GLboolean
  GLEW_EXT_multiview_draw_buffers* {.importc: "__GLEW_EXT_multiview_draw_buffers".}: GLboolean
  GLEW_EXT_packed_depth_stencil* {.importc: "__GLEW_EXT_packed_depth_stencil".}: GLboolean
  GLEW_EXT_packed_float* {.importc: "__GLEW_EXT_packed_float".}: GLboolean
  GLEW_EXT_packed_pixels* {.importc: "__GLEW_EXT_packed_pixels".}: GLboolean
  GLEW_EXT_paletted_texture* {.importc: "__GLEW_EXT_paletted_texture".}: GLboolean
  GLEW_EXT_pixel_buffer_object* {.importc: "__GLEW_EXT_pixel_buffer_object".}: GLboolean
  GLEW_EXT_pixel_transform* {.importc: "__GLEW_EXT_pixel_transform".}: GLboolean
  GLEW_EXT_pixel_transform_color_table* {.
      importc: "__GLEW_EXT_pixel_transform_color_table".}: GLboolean
  GLEW_EXT_point_parameters* {.importc: "__GLEW_EXT_point_parameters".}: GLboolean
  GLEW_EXT_polygon_offset* {.importc: "__GLEW_EXT_polygon_offset".}: GLboolean
  GLEW_EXT_polygon_offset_clamp* {.importc: "__GLEW_EXT_polygon_offset_clamp".}: GLboolean
  GLEW_EXT_post_depth_coverage* {.importc: "__GLEW_EXT_post_depth_coverage".}: GLboolean
  GLEW_EXT_provoking_vertex* {.importc: "__GLEW_EXT_provoking_vertex".}: GLboolean
  GLEW_EXT_pvrtc_sRGB* {.importc: "__GLEW_EXT_pvrtc_sRGB".}: GLboolean
  GLEW_EXT_raster_multisample* {.importc: "__GLEW_EXT_raster_multisample".}: GLboolean
  GLEW_EXT_read_format_bgra* {.importc: "__GLEW_EXT_read_format_bgra".}: GLboolean
  GLEW_EXT_render_snorm* {.importc: "__GLEW_EXT_render_snorm".}: GLboolean
  GLEW_EXT_rescale_normal* {.importc: "__GLEW_EXT_rescale_normal".}: GLboolean
  GLEW_EXT_sRGB* {.importc: "__GLEW_EXT_sRGB".}: GLboolean
  GLEW_EXT_sRGB_write_control* {.importc: "__GLEW_EXT_sRGB_write_control".}: GLboolean
  GLEW_EXT_scene_marker* {.importc: "__GLEW_EXT_scene_marker".}: GLboolean
  GLEW_EXT_secondary_color* {.importc: "__GLEW_EXT_secondary_color".}: GLboolean
  GLEW_EXT_semaphore* {.importc: "__GLEW_EXT_semaphore".}: GLboolean
  GLEW_EXT_semaphore_fd* {.importc: "__GLEW_EXT_semaphore_fd".}: GLboolean
  GLEW_EXT_semaphore_win32* {.importc: "__GLEW_EXT_semaphore_win32".}: GLboolean
  GLEW_EXT_separate_shader_objects* {.importc: "__GLEW_EXT_separate_shader_objects".}: GLboolean
  GLEW_EXT_separate_specular_color* {.importc: "__GLEW_EXT_separate_specular_color".}: GLboolean
  GLEW_EXT_shader_framebuffer_fetch* {.importc: "__GLEW_EXT_shader_framebuffer_fetch".}: GLboolean
  GLEW_EXT_shader_group_vote* {.importc: "__GLEW_EXT_shader_group_vote".}: GLboolean
  GLEW_EXT_shader_image_load_formatted* {.
      importc: "__GLEW_EXT_shader_image_load_formatted".}: GLboolean
  GLEW_EXT_shader_image_load_store* {.importc: "__GLEW_EXT_shader_image_load_store".}: GLboolean
  GLEW_EXT_shader_implicit_conversions* {.
      importc: "__GLEW_EXT_shader_implicit_conversions".}: GLboolean
  GLEW_EXT_shader_integer_mix* {.importc: "__GLEW_EXT_shader_integer_mix".}: GLboolean
  GLEW_EXT_shader_io_blocks* {.importc: "__GLEW_EXT_shader_io_blocks".}: GLboolean
  GLEW_EXT_shader_non_constant_global_initializers*
      {.importc: "__GLEW_EXT_shader_non_constant_global_initializers".}: GLboolean
  GLEW_EXT_shader_pixel_local_storage* {.
      importc: "__GLEW_EXT_shader_pixel_local_storage".}: GLboolean
  GLEW_EXT_shader_pixel_local_storage2* {.
      importc: "__GLEW_EXT_shader_pixel_local_storage2".}: GLboolean
  GLEW_EXT_shader_texture_lod* {.importc: "__GLEW_EXT_shader_texture_lod".}: GLboolean
  GLEW_EXT_shadow_funcs* {.importc: "__GLEW_EXT_shadow_funcs".}: GLboolean
  GLEW_EXT_shadow_samplers* {.importc: "__GLEW_EXT_shadow_samplers".}: GLboolean
  GLEW_EXT_shared_texture_palette* {.importc: "__GLEW_EXT_shared_texture_palette".}: GLboolean
  GLEW_EXT_sparse_texture* {.importc: "__GLEW_EXT_sparse_texture".}: GLboolean
  GLEW_EXT_sparse_texture2* {.importc: "__GLEW_EXT_sparse_texture2".}: GLboolean
  GLEW_EXT_stencil_clear_tag* {.importc: "__GLEW_EXT_stencil_clear_tag".}: GLboolean
  GLEW_EXT_stencil_two_side* {.importc: "__GLEW_EXT_stencil_two_side".}: GLboolean
  GLEW_EXT_stencil_wrap* {.importc: "__GLEW_EXT_stencil_wrap".}: GLboolean
  GLEW_EXT_subtexture* {.importc: "__GLEW_EXT_subtexture".}: GLboolean
  GLEW_EXT_texture* {.importc: "__GLEW_EXT_texture".}: GLboolean
  GLEW_EXT_texture3D* {.importc: "__GLEW_EXT_texture3D".}: GLboolean
  GLEW_EXT_texture_array* {.importc: "__GLEW_EXT_texture_array".}: GLboolean
  GLEW_EXT_texture_buffer_object* {.importc: "__GLEW_EXT_texture_buffer_object".}: GLboolean
  GLEW_EXT_texture_compression_astc_decode_mode*
      {.importc: "__GLEW_EXT_texture_compression_astc_decode_mode".}: GLboolean
  GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5*
      {.importc: "__GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5".}: GLboolean
  GLEW_EXT_texture_compression_bptc* {.importc: "__GLEW_EXT_texture_compression_bptc".}: GLboolean
  GLEW_EXT_texture_compression_dxt1* {.importc: "__GLEW_EXT_texture_compression_dxt1".}: GLboolean
  GLEW_EXT_texture_compression_latc* {.importc: "__GLEW_EXT_texture_compression_latc".}: GLboolean
  GLEW_EXT_texture_compression_rgtc* {.importc: "__GLEW_EXT_texture_compression_rgtc".}: GLboolean
  GLEW_EXT_texture_compression_s3tc* {.importc: "__GLEW_EXT_texture_compression_s3tc".}: GLboolean
  GLEW_EXT_texture_cube_map* {.importc: "__GLEW_EXT_texture_cube_map".}: GLboolean
  GLEW_EXT_texture_cube_map_array* {.importc: "__GLEW_EXT_texture_cube_map_array".}: GLboolean
  GLEW_EXT_texture_edge_clamp* {.importc: "__GLEW_EXT_texture_edge_clamp".}: GLboolean
  GLEW_EXT_texture_env* {.importc: "__GLEW_EXT_texture_env".}: GLboolean
  GLEW_EXT_texture_env_add* {.importc: "__GLEW_EXT_texture_env_add".}: GLboolean
  GLEW_EXT_texture_env_combine* {.importc: "__GLEW_EXT_texture_env_combine".}: GLboolean
  GLEW_EXT_texture_env_dot3* {.importc: "__GLEW_EXT_texture_env_dot3".}: GLboolean
  GLEW_EXT_texture_filter_anisotropic* {.
      importc: "__GLEW_EXT_texture_filter_anisotropic".}: GLboolean
  GLEW_EXT_texture_filter_minmax* {.importc: "__GLEW_EXT_texture_filter_minmax".}: GLboolean
  GLEW_EXT_texture_format_BGRA8888* {.importc: "__GLEW_EXT_texture_format_BGRA8888".}: GLboolean
  GLEW_EXT_texture_integer* {.importc: "__GLEW_EXT_texture_integer".}: GLboolean
  GLEW_EXT_texture_lod_bias* {.importc: "__GLEW_EXT_texture_lod_bias".}: GLboolean
  GLEW_EXT_texture_mirror_clamp* {.importc: "__GLEW_EXT_texture_mirror_clamp".}: GLboolean
  GLEW_EXT_texture_norm16* {.importc: "__GLEW_EXT_texture_norm16".}: GLboolean
  GLEW_EXT_texture_object* {.importc: "__GLEW_EXT_texture_object".}: GLboolean
  GLEW_EXT_texture_perturb_normal* {.importc: "__GLEW_EXT_texture_perturb_normal".}: GLboolean
  GLEW_EXT_texture_rectangle* {.importc: "__GLEW_EXT_texture_rectangle".}: GLboolean
  GLEW_EXT_texture_rg* {.importc: "__GLEW_EXT_texture_rg".}: GLboolean
  GLEW_EXT_texture_sRGB* {.importc: "__GLEW_EXT_texture_sRGB".}: GLboolean
  GLEW_EXT_texture_sRGB_R8* {.importc: "__GLEW_EXT_texture_sRGB_R8".}: GLboolean
  GLEW_EXT_texture_sRGB_RG8* {.importc: "__GLEW_EXT_texture_sRGB_RG8".}: GLboolean
  GLEW_EXT_texture_sRGB_decode* {.importc: "__GLEW_EXT_texture_sRGB_decode".}: GLboolean
  GLEW_EXT_texture_shared_exponent* {.importc: "__GLEW_EXT_texture_shared_exponent".}: GLboolean
  GLEW_EXT_texture_snorm* {.importc: "__GLEW_EXT_texture_snorm".}: GLboolean
  GLEW_EXT_texture_storage* {.importc: "__GLEW_EXT_texture_storage".}: GLboolean
  GLEW_EXT_texture_swizzle* {.importc: "__GLEW_EXT_texture_swizzle".}: GLboolean
  GLEW_EXT_texture_type_2_10_10_10_REV* {.
      importc: "__GLEW_EXT_texture_type_2_10_10_10_REV".}: GLboolean
  GLEW_EXT_texture_view* {.importc: "__GLEW_EXT_texture_view".}: GLboolean
  GLEW_EXT_timer_query* {.importc: "__GLEW_EXT_timer_query".}: GLboolean
  GLEW_EXT_transform_feedback* {.importc: "__GLEW_EXT_transform_feedback".}: GLboolean
  GLEW_EXT_unpack_subimage* {.importc: "__GLEW_EXT_unpack_subimage".}: GLboolean
  GLEW_EXT_vertex_array* {.importc: "__GLEW_EXT_vertex_array".}: GLboolean
  GLEW_EXT_vertex_array_bgra* {.importc: "__GLEW_EXT_vertex_array_bgra".}: GLboolean
  GLEW_EXT_vertex_array_setXXX* {.importc: "__GLEW_EXT_vertex_array_setXXX".}: GLboolean
  GLEW_EXT_vertex_attrib_64bit* {.importc: "__GLEW_EXT_vertex_attrib_64bit".}: GLboolean
  GLEW_EXT_vertex_shader* {.importc: "__GLEW_EXT_vertex_shader".}: GLboolean
  GLEW_EXT_vertex_weighting* {.importc: "__GLEW_EXT_vertex_weighting".}: GLboolean
  GLEW_EXT_win32_keyed_mutex* {.importc: "__GLEW_EXT_win32_keyed_mutex".}: GLboolean
  GLEW_EXT_window_rectangles* {.importc: "__GLEW_EXT_window_rectangles".}: GLboolean
  GLEW_EXT_x11_sync_object* {.importc: "__GLEW_EXT_x11_sync_object".}: GLboolean
  GLEW_GREMEDY_frame_terminator* {.importc: "__GLEW_GREMEDY_frame_terminator".}: GLboolean
  GLEW_GREMEDY_string_marker* {.importc: "__GLEW_GREMEDY_string_marker".}: GLboolean
  GLEW_HP_convolution_border_modes* {.importc: "__GLEW_HP_convolution_border_modes".}: GLboolean
  GLEW_HP_image_transform* {.importc: "__GLEW_HP_image_transform".}: GLboolean
  GLEW_HP_occlusion_test* {.importc: "__GLEW_HP_occlusion_test".}: GLboolean
  GLEW_HP_texture_lighting* {.importc: "__GLEW_HP_texture_lighting".}: GLboolean
  GLEW_IBM_cull_vertex* {.importc: "__GLEW_IBM_cull_vertex".}: GLboolean
  GLEW_IBM_multimode_draw_arrays* {.importc: "__GLEW_IBM_multimode_draw_arrays".}: GLboolean
  GLEW_IBM_rasterpos_clip* {.importc: "__GLEW_IBM_rasterpos_clip".}: GLboolean
  GLEW_IBM_static_data* {.importc: "__GLEW_IBM_static_data".}: GLboolean
  GLEW_IBM_texture_mirrored_repeat* {.importc: "__GLEW_IBM_texture_mirrored_repeat".}: GLboolean
  GLEW_IBM_vertex_array_lists* {.importc: "__GLEW_IBM_vertex_array_lists".}: GLboolean
  GLEW_INGR_color_clamp* {.importc: "__GLEW_INGR_color_clamp".}: GLboolean
  GLEW_INGR_interlace_read* {.importc: "__GLEW_INGR_interlace_read".}: GLboolean
  GLEW_INTEL_conservative_rasterization* {.
      importc: "__GLEW_INTEL_conservative_rasterization".}: GLboolean
  GLEW_INTEL_fragment_shader_ordering* {.
      importc: "__GLEW_INTEL_fragment_shader_ordering".}: GLboolean
  GLEW_INTEL_framebuffer_CMAA* {.importc: "__GLEW_INTEL_framebuffer_CMAA".}: GLboolean
  GLEW_INTEL_map_texture* {.importc: "__GLEW_INTEL_map_texture".}: GLboolean
  GLEW_INTEL_parallel_arrays* {.importc: "__GLEW_INTEL_parallel_arrays".}: GLboolean
  GLEW_INTEL_performance_query* {.importc: "__GLEW_INTEL_performance_query".}: GLboolean
  GLEW_INTEL_texture_scissor* {.importc: "__GLEW_INTEL_texture_scissor".}: GLboolean
  GLEW_KHR_blend_equation_advanced* {.importc: "__GLEW_KHR_blend_equation_advanced".}: GLboolean
  GLEW_KHR_blend_equation_advanced_coherent*
      {.importc: "__GLEW_KHR_blend_equation_advanced_coherent".}: GLboolean
  GLEW_KHR_context_flush_control* {.importc: "__GLEW_KHR_context_flush_control".}: GLboolean
  GLEW_KHR_debug* {.importc: "__GLEW_KHR_debug".}: GLboolean
  GLEW_KHR_no_error* {.importc: "__GLEW_KHR_no_error".}: GLboolean
  GLEW_KHR_parallel_shader_compile* {.importc: "__GLEW_KHR_parallel_shader_compile".}: GLboolean
  GLEW_KHR_robust_buffer_access_behavior*
      {.importc: "__GLEW_KHR_robust_buffer_access_behavior".}: GLboolean
  GLEW_KHR_robustness* {.importc: "__GLEW_KHR_robustness".}: GLboolean
  GLEW_KHR_texture_compression_astc_hdr* {.
      importc: "__GLEW_KHR_texture_compression_astc_hdr".}: GLboolean
  GLEW_KHR_texture_compression_astc_ldr* {.
      importc: "__GLEW_KHR_texture_compression_astc_ldr".}: GLboolean
  GLEW_KHR_texture_compression_astc_sliced_3d*
      {.importc: "__GLEW_KHR_texture_compression_astc_sliced_3d".}: GLboolean
  GLEW_KTX_buffer_region* {.importc: "__GLEW_KTX_buffer_region".}: GLboolean
  GLEW_MESAX_texture_stack* {.importc: "__GLEW_MESAX_texture_stack".}: GLboolean
  GLEW_MESA_pack_invert* {.importc: "__GLEW_MESA_pack_invert".}: GLboolean
  GLEW_MESA_resize_buffers* {.importc: "__GLEW_MESA_resize_buffers".}: GLboolean
  GLEW_MESA_shader_integer_functions* {.importc: "__GLEW_MESA_shader_integer_functions".}: GLboolean
  GLEW_MESA_window_pos* {.importc: "__GLEW_MESA_window_pos".}: GLboolean
  GLEW_MESA_ycbcr_texture* {.importc: "__GLEW_MESA_ycbcr_texture".}: GLboolean
  GLEW_NVX_blend_equation_advanced_multi_draw_buffers*
      {.importc: "__GLEW_NVX_blend_equation_advanced_multi_draw_buffers".}: GLboolean
  GLEW_NVX_conditional_render* {.importc: "__GLEW_NVX_conditional_render".}: GLboolean
  GLEW_NVX_gpu_memory_info* {.importc: "__GLEW_NVX_gpu_memory_info".}: GLboolean
  GLEW_NVX_linked_gpu_multicast* {.importc: "__GLEW_NVX_linked_gpu_multicast".}: GLboolean
  GLEW_NV_3dvision_settings* {.importc: "__GLEW_NV_3dvision_settings".}: GLboolean
  GLEW_NV_EGL_stream_consumer_external* {.
      importc: "__GLEW_NV_EGL_stream_consumer_external".}: GLboolean
  GLEW_NV_alpha_to_coverage_dither_control*
      {.importc: "__GLEW_NV_alpha_to_coverage_dither_control".}: GLboolean
  GLEW_NV_bgr* {.importc: "__GLEW_NV_bgr".}: GLboolean
  GLEW_NV_bindless_multi_draw_indirect* {.
      importc: "__GLEW_NV_bindless_multi_draw_indirect".}: GLboolean
  GLEW_NV_bindless_multi_draw_indirect_count*
      {.importc: "__GLEW_NV_bindless_multi_draw_indirect_count".}: GLboolean
  GLEW_NV_bindless_texture* {.importc: "__GLEW_NV_bindless_texture".}: GLboolean
  GLEW_NV_blend_equation_advanced* {.importc: "__GLEW_NV_blend_equation_advanced".}: GLboolean
  GLEW_NV_blend_equation_advanced_coherent*
      {.importc: "__GLEW_NV_blend_equation_advanced_coherent".}: GLboolean
  GLEW_NV_blend_minmax_factor* {.importc: "__GLEW_NV_blend_minmax_factor".}: GLboolean
  GLEW_NV_blend_square* {.importc: "__GLEW_NV_blend_square".}: GLboolean
  GLEW_NV_clip_space_w_scaling* {.importc: "__GLEW_NV_clip_space_w_scaling".}: GLboolean
  GLEW_NV_command_list* {.importc: "__GLEW_NV_command_list".}: GLboolean
  GLEW_NV_compute_program5* {.importc: "__GLEW_NV_compute_program5".}: GLboolean
  GLEW_NV_conditional_render* {.importc: "__GLEW_NV_conditional_render".}: GLboolean
  GLEW_NV_conservative_raster* {.importc: "__GLEW_NV_conservative_raster".}: GLboolean
  GLEW_NV_conservative_raster_dilate* {.importc: "__GLEW_NV_conservative_raster_dilate".}: GLboolean
  GLEW_NV_conservative_raster_pre_snap_triangles*
      {.importc: "__GLEW_NV_conservative_raster_pre_snap_triangles".}: GLboolean
  GLEW_NV_copy_buffer* {.importc: "__GLEW_NV_copy_buffer".}: GLboolean
  GLEW_NV_copy_depth_to_color* {.importc: "__GLEW_NV_copy_depth_to_color".}: GLboolean
  GLEW_NV_copy_image* {.importc: "__GLEW_NV_copy_image".}: GLboolean
  GLEW_NV_deep_texture3D* {.importc: "__GLEW_NV_deep_texture3D".}: GLboolean
  GLEW_NV_depth_buffer_float* {.importc: "__GLEW_NV_depth_buffer_float".}: GLboolean
  GLEW_NV_depth_clamp* {.importc: "__GLEW_NV_depth_clamp".}: GLboolean
  GLEW_NV_depth_range_unclamped* {.importc: "__GLEW_NV_depth_range_unclamped".}: GLboolean
  GLEW_NV_draw_buffers* {.importc: "__GLEW_NV_draw_buffers".}: GLboolean
  GLEW_NV_draw_instanced* {.importc: "__GLEW_NV_draw_instanced".}: GLboolean
  GLEW_NV_draw_texture* {.importc: "__GLEW_NV_draw_texture".}: GLboolean
  GLEW_NV_draw_vulkan_image* {.importc: "__GLEW_NV_draw_vulkan_image".}: GLboolean
  GLEW_NV_evaluators* {.importc: "__GLEW_NV_evaluators".}: GLboolean
  GLEW_NV_explicit_attrib_location* {.importc: "__GLEW_NV_explicit_attrib_location".}: GLboolean
  GLEW_NV_explicit_multisample* {.importc: "__GLEW_NV_explicit_multisample".}: GLboolean
  GLEW_NV_fbo_color_attachments* {.importc: "__GLEW_NV_fbo_color_attachments".}: GLboolean
  GLEW_NV_fence* {.importc: "__GLEW_NV_fence".}: GLboolean
  GLEW_NV_fill_rectangle* {.importc: "__GLEW_NV_fill_rectangle".}: GLboolean
  GLEW_NV_float_buffer* {.importc: "__GLEW_NV_float_buffer".}: GLboolean
  GLEW_NV_fog_distance* {.importc: "__GLEW_NV_fog_distance".}: GLboolean
  GLEW_NV_fragment_coverage_to_color* {.importc: "__GLEW_NV_fragment_coverage_to_color".}: GLboolean
  GLEW_NV_fragment_program* {.importc: "__GLEW_NV_fragment_program".}: GLboolean
  GLEW_NV_fragment_program2* {.importc: "__GLEW_NV_fragment_program2".}: GLboolean
  GLEW_NV_fragment_program4* {.importc: "__GLEW_NV_fragment_program4".}: GLboolean
  GLEW_NV_fragment_program_option* {.importc: "__GLEW_NV_fragment_program_option".}: GLboolean
  GLEW_NV_fragment_shader_interlock* {.importc: "__GLEW_NV_fragment_shader_interlock".}: GLboolean
  GLEW_NV_framebuffer_blit* {.importc: "__GLEW_NV_framebuffer_blit".}: GLboolean
  GLEW_NV_framebuffer_mixed_samples* {.importc: "__GLEW_NV_framebuffer_mixed_samples".}: GLboolean
  GLEW_NV_framebuffer_multisample* {.importc: "__GLEW_NV_framebuffer_multisample".}: GLboolean
  GLEW_NV_framebuffer_multisample_coverage*
      {.importc: "__GLEW_NV_framebuffer_multisample_coverage".}: GLboolean
  GLEW_NV_generate_mipmap_sRGB* {.importc: "__GLEW_NV_generate_mipmap_sRGB".}: GLboolean
  GLEW_NV_geometry_program4* {.importc: "__GLEW_NV_geometry_program4".}: GLboolean
  GLEW_NV_geometry_shader4* {.importc: "__GLEW_NV_geometry_shader4".}: GLboolean
  GLEW_NV_geometry_shader_passthrough* {.
      importc: "__GLEW_NV_geometry_shader_passthrough".}: GLboolean
  GLEW_NV_gpu_multicast* {.importc: "__GLEW_NV_gpu_multicast".}: GLboolean
  GLEW_NV_gpu_program4* {.importc: "__GLEW_NV_gpu_program4".}: GLboolean
  GLEW_NV_gpu_program5* {.importc: "__GLEW_NV_gpu_program5".}: GLboolean
  GLEW_NV_gpu_program5_mem_extended* {.importc: "__GLEW_NV_gpu_program5_mem_extended".}: GLboolean
  GLEW_NV_gpu_program_fp64* {.importc: "__GLEW_NV_gpu_program_fp64".}: GLboolean
  GLEW_NV_gpu_shader5* {.importc: "__GLEW_NV_gpu_shader5".}: GLboolean
  GLEW_NV_half_float* {.importc: "__GLEW_NV_half_float".}: GLboolean
  GLEW_NV_image_formats* {.importc: "__GLEW_NV_image_formats".}: GLboolean
  GLEW_NV_instanced_arrays* {.importc: "__GLEW_NV_instanced_arrays".}: GLboolean
  GLEW_NV_internalformat_sample_query* {.
      importc: "__GLEW_NV_internalformat_sample_query".}: GLboolean
  GLEW_NV_light_max_exponent* {.importc: "__GLEW_NV_light_max_exponent".}: GLboolean
  GLEW_NV_multisample_coverage* {.importc: "__GLEW_NV_multisample_coverage".}: GLboolean
  GLEW_NV_multisample_filter_hint* {.importc: "__GLEW_NV_multisample_filter_hint".}: GLboolean
  GLEW_NV_non_square_matrices* {.importc: "__GLEW_NV_non_square_matrices".}: GLboolean
  GLEW_NV_occlusion_query* {.importc: "__GLEW_NV_occlusion_query".}: GLboolean
  GLEW_NV_pack_subimage* {.importc: "__GLEW_NV_pack_subimage".}: GLboolean
  GLEW_NV_packed_depth_stencil* {.importc: "__GLEW_NV_packed_depth_stencil".}: GLboolean
  GLEW_NV_packed_float* {.importc: "__GLEW_NV_packed_float".}: GLboolean
  GLEW_NV_packed_float_linear* {.importc: "__GLEW_NV_packed_float_linear".}: GLboolean
  GLEW_NV_parameter_buffer_object* {.importc: "__GLEW_NV_parameter_buffer_object".}: GLboolean
  GLEW_NV_parameter_buffer_object2* {.importc: "__GLEW_NV_parameter_buffer_object2".}: GLboolean
  GLEW_NV_path_rendering* {.importc: "__GLEW_NV_path_rendering".}: GLboolean
  GLEW_NV_path_rendering_shared_edge* {.importc: "__GLEW_NV_path_rendering_shared_edge".}: GLboolean
  GLEW_NV_pixel_buffer_object* {.importc: "__GLEW_NV_pixel_buffer_object".}: GLboolean
  GLEW_NV_pixel_data_range* {.importc: "__GLEW_NV_pixel_data_range".}: GLboolean
  GLEW_NV_platform_binary* {.importc: "__GLEW_NV_platform_binary".}: GLboolean
  GLEW_NV_point_sprite* {.importc: "__GLEW_NV_point_sprite".}: GLboolean
  GLEW_NV_polygon_mode* {.importc: "__GLEW_NV_polygon_mode".}: GLboolean
  GLEW_NV_present_video* {.importc: "__GLEW_NV_present_video".}: GLboolean
  GLEW_NV_primitive_restart* {.importc: "__GLEW_NV_primitive_restart".}: GLboolean
  GLEW_NV_read_depth* {.importc: "__GLEW_NV_read_depth".}: GLboolean
  GLEW_NV_read_depth_stencil* {.importc: "__GLEW_NV_read_depth_stencil".}: GLboolean
  GLEW_NV_read_stencil* {.importc: "__GLEW_NV_read_stencil".}: GLboolean
  GLEW_NV_register_combiners* {.importc: "__GLEW_NV_register_combiners".}: GLboolean
  GLEW_NV_register_combiners2* {.importc: "__GLEW_NV_register_combiners2".}: GLboolean
  GLEW_NV_robustness_video_memory_purge* {.
      importc: "__GLEW_NV_robustness_video_memory_purge".}: GLboolean
  GLEW_NV_sRGB_formats* {.importc: "__GLEW_NV_sRGB_formats".}: GLboolean
  GLEW_NV_sample_locations* {.importc: "__GLEW_NV_sample_locations".}: GLboolean
  GLEW_NV_sample_mask_override_coverage* {.
      importc: "__GLEW_NV_sample_mask_override_coverage".}: GLboolean
  GLEW_NV_shader_atomic_counters* {.importc: "__GLEW_NV_shader_atomic_counters".}: GLboolean
  GLEW_NV_shader_atomic_float* {.importc: "__GLEW_NV_shader_atomic_float".}: GLboolean
  GLEW_NV_shader_atomic_float64* {.importc: "__GLEW_NV_shader_atomic_float64".}: GLboolean
  GLEW_NV_shader_atomic_fp16_vector* {.importc: "__GLEW_NV_shader_atomic_fp16_vector".}: GLboolean
  GLEW_NV_shader_atomic_int64* {.importc: "__GLEW_NV_shader_atomic_int64".}: GLboolean
  GLEW_NV_shader_buffer_load* {.importc: "__GLEW_NV_shader_buffer_load".}: GLboolean
  GLEW_NV_shader_noperspective_interpolation*
      {.importc: "__GLEW_NV_shader_noperspective_interpolation".}: GLboolean
  GLEW_NV_shader_storage_buffer_object* {.
      importc: "__GLEW_NV_shader_storage_buffer_object".}: GLboolean
  GLEW_NV_shader_thread_group* {.importc: "__GLEW_NV_shader_thread_group".}: GLboolean
  GLEW_NV_shader_thread_shuffle* {.importc: "__GLEW_NV_shader_thread_shuffle".}: GLboolean
  GLEW_NV_shadow_samplers_array* {.importc: "__GLEW_NV_shadow_samplers_array".}: GLboolean
  GLEW_NV_shadow_samplers_cube* {.importc: "__GLEW_NV_shadow_samplers_cube".}: GLboolean
  GLEW_NV_stereo_view_rendering* {.importc: "__GLEW_NV_stereo_view_rendering".}: GLboolean
  GLEW_NV_tessellation_program5* {.importc: "__GLEW_NV_tessellation_program5".}: GLboolean
  GLEW_NV_texgen_emboss* {.importc: "__GLEW_NV_texgen_emboss".}: GLboolean
  GLEW_NV_texgen_reflection* {.importc: "__GLEW_NV_texgen_reflection".}: GLboolean
  GLEW_NV_texture_array* {.importc: "__GLEW_NV_texture_array".}: GLboolean
  GLEW_NV_texture_barrier* {.importc: "__GLEW_NV_texture_barrier".}: GLboolean
  GLEW_NV_texture_border_clamp* {.importc: "__GLEW_NV_texture_border_clamp".}: GLboolean
  GLEW_NV_texture_compression_latc* {.importc: "__GLEW_NV_texture_compression_latc".}: GLboolean
  GLEW_NV_texture_compression_s3tc* {.importc: "__GLEW_NV_texture_compression_s3tc".}: GLboolean
  GLEW_NV_texture_compression_s3tc_update*
      {.importc: "__GLEW_NV_texture_compression_s3tc_update".}: GLboolean
  GLEW_NV_texture_compression_vtc* {.importc: "__GLEW_NV_texture_compression_vtc".}: GLboolean
  GLEW_NV_texture_env_combine4* {.importc: "__GLEW_NV_texture_env_combine4".}: GLboolean
  GLEW_NV_texture_expand_normal* {.importc: "__GLEW_NV_texture_expand_normal".}: GLboolean
  GLEW_NV_texture_multisample* {.importc: "__GLEW_NV_texture_multisample".}: GLboolean
  GLEW_NV_texture_npot_2D_mipmap* {.importc: "__GLEW_NV_texture_npot_2D_mipmap".}: GLboolean
  GLEW_NV_texture_rectangle* {.importc: "__GLEW_NV_texture_rectangle".}: GLboolean
  GLEW_NV_texture_rectangle_compressed* {.
      importc: "__GLEW_NV_texture_rectangle_compressed".}: GLboolean
  GLEW_NV_texture_shader* {.importc: "__GLEW_NV_texture_shader".}: GLboolean
  GLEW_NV_texture_shader2* {.importc: "__GLEW_NV_texture_shader2".}: GLboolean
  GLEW_NV_texture_shader3* {.importc: "__GLEW_NV_texture_shader3".}: GLboolean
  GLEW_NV_transform_feedback* {.importc: "__GLEW_NV_transform_feedback".}: GLboolean
  GLEW_NV_transform_feedback2* {.importc: "__GLEW_NV_transform_feedback2".}: GLboolean
  GLEW_NV_uniform_buffer_unified_memory* {.
      importc: "__GLEW_NV_uniform_buffer_unified_memory".}: GLboolean
  GLEW_NV_vdpau_interop* {.importc: "__GLEW_NV_vdpau_interop".}: GLboolean
  GLEW_NV_vertex_array_range* {.importc: "__GLEW_NV_vertex_array_range".}: GLboolean
  GLEW_NV_vertex_array_range2* {.importc: "__GLEW_NV_vertex_array_range2".}: GLboolean
  GLEW_NV_vertex_attrib_integer_64bit* {.
      importc: "__GLEW_NV_vertex_attrib_integer_64bit".}: GLboolean
  GLEW_NV_vertex_buffer_unified_memory* {.
      importc: "__GLEW_NV_vertex_buffer_unified_memory".}: GLboolean
  GLEW_NV_vertex_program* {.importc: "__GLEW_NV_vertex_program".}: GLboolean
  GLEW_NV_vertex_program1_1* {.importc: "__GLEW_NV_vertex_program1_1".}: GLboolean
  GLEW_NV_vertex_program2* {.importc: "__GLEW_NV_vertex_program2".}: GLboolean
  GLEW_NV_vertex_program2_option* {.importc: "__GLEW_NV_vertex_program2_option".}: GLboolean
  GLEW_NV_vertex_program3* {.importc: "__GLEW_NV_vertex_program3".}: GLboolean
  GLEW_NV_vertex_program4* {.importc: "__GLEW_NV_vertex_program4".}: GLboolean
  GLEW_NV_video_capture* {.importc: "__GLEW_NV_video_capture".}: GLboolean
  GLEW_NV_viewport_array* {.importc: "__GLEW_NV_viewport_array".}: GLboolean
  GLEW_NV_viewport_array2* {.importc: "__GLEW_NV_viewport_array2".}: GLboolean
  GLEW_NV_viewport_swizzle* {.importc: "__GLEW_NV_viewport_swizzle".}: GLboolean
  GLEW_OES_byte_coordinates* {.importc: "__GLEW_OES_byte_coordinates".}: GLboolean
  GLEW_OML_interlace* {.importc: "__GLEW_OML_interlace".}: GLboolean
  GLEW_OML_resample* {.importc: "__GLEW_OML_resample".}: GLboolean
  GLEW_OML_subsample* {.importc: "__GLEW_OML_subsample".}: GLboolean
  GLEW_OVR_multiview* {.importc: "__GLEW_OVR_multiview".}: GLboolean
  GLEW_OVR_multiview2* {.importc: "__GLEW_OVR_multiview2".}: GLboolean
  GLEW_OVR_multiview_multisampled_render_to_texture*
      {.importc: "__GLEW_OVR_multiview_multisampled_render_to_texture".}: GLboolean
  GLEW_PGI_misc_hints* {.importc: "__GLEW_PGI_misc_hints".}: GLboolean
  GLEW_PGI_vertex_hints* {.importc: "__GLEW_PGI_vertex_hints".}: GLboolean
  GLEW_QCOM_alpha_test* {.importc: "__GLEW_QCOM_alpha_test".}: GLboolean
  GLEW_QCOM_binning_control* {.importc: "__GLEW_QCOM_binning_control".}: GLboolean
  GLEW_QCOM_driver_control* {.importc: "__GLEW_QCOM_driver_control".}: GLboolean
  GLEW_QCOM_extended_get* {.importc: "__GLEW_QCOM_extended_get".}: GLboolean
  GLEW_QCOM_extended_get2* {.importc: "__GLEW_QCOM_extended_get2".}: GLboolean
  GLEW_QCOM_framebuffer_foveated* {.importc: "__GLEW_QCOM_framebuffer_foveated".}: GLboolean
  GLEW_QCOM_perfmon_global_mode* {.importc: "__GLEW_QCOM_perfmon_global_mode".}: GLboolean
  GLEW_QCOM_shader_framebuffer_fetch_noncoherent*
      {.importc: "__GLEW_QCOM_shader_framebuffer_fetch_noncoherent".}: GLboolean
  GLEW_QCOM_tiled_rendering* {.importc: "__GLEW_QCOM_tiled_rendering".}: GLboolean
  GLEW_QCOM_writeonly_rendering* {.importc: "__GLEW_QCOM_writeonly_rendering".}: GLboolean
  GLEW_REGAL_ES1_0_compatibility* {.importc: "__GLEW_REGAL_ES1_0_compatibility".}: GLboolean
  GLEW_REGAL_ES1_1_compatibility* {.importc: "__GLEW_REGAL_ES1_1_compatibility".}: GLboolean
  GLEW_REGAL_enable* {.importc: "__GLEW_REGAL_enable".}: GLboolean
  GLEW_REGAL_error_string* {.importc: "__GLEW_REGAL_error_string".}: GLboolean
  GLEW_REGAL_extension_query* {.importc: "__GLEW_REGAL_extension_query".}: GLboolean
  GLEW_REGAL_log* {.importc: "__GLEW_REGAL_log".}: GLboolean
  GLEW_REGAL_proc_address* {.importc: "__GLEW_REGAL_proc_address".}: GLboolean
  GLEW_REND_screen_coordinates* {.importc: "__GLEW_REND_screen_coordinates".}: GLboolean
  GLEW_S3_s3tc* {.importc: "__GLEW_S3_s3tc".}: GLboolean
  GLEW_SGIS_clip_band_hint* {.importc: "__GLEW_SGIS_clip_band_hint".}: GLboolean
  GLEW_SGIS_color_range* {.importc: "__GLEW_SGIS_color_range".}: GLboolean
  GLEW_SGIS_detail_texture* {.importc: "__GLEW_SGIS_detail_texture".}: GLboolean
  GLEW_SGIS_fog_function* {.importc: "__GLEW_SGIS_fog_function".}: GLboolean
  GLEW_SGIS_generate_mipmap* {.importc: "__GLEW_SGIS_generate_mipmap".}: GLboolean
  GLEW_SGIS_line_texgen* {.importc: "__GLEW_SGIS_line_texgen".}: GLboolean
  GLEW_SGIS_multisample* {.importc: "__GLEW_SGIS_multisample".}: GLboolean
  GLEW_SGIS_multitexture* {.importc: "__GLEW_SGIS_multitexture".}: GLboolean
  GLEW_SGIS_pixel_texture* {.importc: "__GLEW_SGIS_pixel_texture".}: GLboolean
  GLEW_SGIS_point_line_texgen* {.importc: "__GLEW_SGIS_point_line_texgen".}: GLboolean
  GLEW_SGIS_shared_multisample* {.importc: "__GLEW_SGIS_shared_multisample".}: GLboolean
  GLEW_SGIS_sharpen_texture* {.importc: "__GLEW_SGIS_sharpen_texture".}: GLboolean
  GLEW_SGIS_texture4D* {.importc: "__GLEW_SGIS_texture4D".}: GLboolean
  GLEW_SGIS_texture_border_clamp* {.importc: "__GLEW_SGIS_texture_border_clamp".}: GLboolean
  GLEW_SGIS_texture_edge_clamp* {.importc: "__GLEW_SGIS_texture_edge_clamp".}: GLboolean
  GLEW_SGIS_texture_filter4* {.importc: "__GLEW_SGIS_texture_filter4".}: GLboolean
  GLEW_SGIS_texture_lod* {.importc: "__GLEW_SGIS_texture_lod".}: GLboolean
  GLEW_SGIS_texture_select* {.importc: "__GLEW_SGIS_texture_select".}: GLboolean
  GLEW_SGIX_async* {.importc: "__GLEW_SGIX_async".}: GLboolean
  GLEW_SGIX_async_histogram* {.importc: "__GLEW_SGIX_async_histogram".}: GLboolean
  GLEW_SGIX_async_pixel* {.importc: "__GLEW_SGIX_async_pixel".}: GLboolean
  GLEW_SGIX_bali_g_instruments* {.importc: "__GLEW_SGIX_bali_g_instruments".}: GLboolean
  GLEW_SGIX_bali_r_instruments* {.importc: "__GLEW_SGIX_bali_r_instruments".}: GLboolean
  GLEW_SGIX_bali_timer_instruments* {.importc: "__GLEW_SGIX_bali_timer_instruments".}: GLboolean
  GLEW_SGIX_blend_alpha_minmax* {.importc: "__GLEW_SGIX_blend_alpha_minmax".}: GLboolean
  GLEW_SGIX_blend_cadd* {.importc: "__GLEW_SGIX_blend_cadd".}: GLboolean
  GLEW_SGIX_blend_cmultiply* {.importc: "__GLEW_SGIX_blend_cmultiply".}: GLboolean
  GLEW_SGIX_calligraphic_fragment* {.importc: "__GLEW_SGIX_calligraphic_fragment".}: GLboolean
  GLEW_SGIX_clipmap* {.importc: "__GLEW_SGIX_clipmap".}: GLboolean
  GLEW_SGIX_color_matrix_accuracy* {.importc: "__GLEW_SGIX_color_matrix_accuracy".}: GLboolean
  GLEW_SGIX_color_table_index_mode* {.importc: "__GLEW_SGIX_color_table_index_mode".}: GLboolean
  GLEW_SGIX_complex_polar* {.importc: "__GLEW_SGIX_complex_polar".}: GLboolean
  GLEW_SGIX_convolution_accuracy* {.importc: "__GLEW_SGIX_convolution_accuracy".}: GLboolean
  GLEW_SGIX_cube_map* {.importc: "__GLEW_SGIX_cube_map".}: GLboolean
  GLEW_SGIX_cylinder_texgen* {.importc: "__GLEW_SGIX_cylinder_texgen".}: GLboolean
  GLEW_SGIX_datapipe* {.importc: "__GLEW_SGIX_datapipe".}: GLboolean
  GLEW_SGIX_decimation* {.importc: "__GLEW_SGIX_decimation".}: GLboolean
  GLEW_SGIX_depth_pass_instrument* {.importc: "__GLEW_SGIX_depth_pass_instrument".}: GLboolean
  GLEW_SGIX_depth_texture* {.importc: "__GLEW_SGIX_depth_texture".}: GLboolean
  GLEW_SGIX_dvc* {.importc: "__GLEW_SGIX_dvc".}: GLboolean
  GLEW_SGIX_flush_raster* {.importc: "__GLEW_SGIX_flush_raster".}: GLboolean
  GLEW_SGIX_fog_blend* {.importc: "__GLEW_SGIX_fog_blend".}: GLboolean
  GLEW_SGIX_fog_factor_to_alpha* {.importc: "__GLEW_SGIX_fog_factor_to_alpha".}: GLboolean
  GLEW_SGIX_fog_layers* {.importc: "__GLEW_SGIX_fog_layers".}: GLboolean
  GLEW_SGIX_fog_offset* {.importc: "__GLEW_SGIX_fog_offset".}: GLboolean
  GLEW_SGIX_fog_patchy* {.importc: "__GLEW_SGIX_fog_patchy".}: GLboolean
  GLEW_SGIX_fog_scale* {.importc: "__GLEW_SGIX_fog_scale".}: GLboolean
  GLEW_SGIX_fog_texture* {.importc: "__GLEW_SGIX_fog_texture".}: GLboolean
  GLEW_SGIX_fragment_lighting_space* {.importc: "__GLEW_SGIX_fragment_lighting_space".}: GLboolean
  GLEW_SGIX_fragment_specular_lighting* {.
      importc: "__GLEW_SGIX_fragment_specular_lighting".}: GLboolean
  GLEW_SGIX_fragments_instrument* {.importc: "__GLEW_SGIX_fragments_instrument".}: GLboolean
  GLEW_SGIX_framezoom* {.importc: "__GLEW_SGIX_framezoom".}: GLboolean
  GLEW_SGIX_icc_texture* {.importc: "__GLEW_SGIX_icc_texture".}: GLboolean
  GLEW_SGIX_igloo_interface* {.importc: "__GLEW_SGIX_igloo_interface".}: GLboolean
  GLEW_SGIX_image_compression* {.importc: "__GLEW_SGIX_image_compression".}: GLboolean
  GLEW_SGIX_impact_pixel_texture* {.importc: "__GLEW_SGIX_impact_pixel_texture".}: GLboolean
  GLEW_SGIX_instrument_error* {.importc: "__GLEW_SGIX_instrument_error".}: GLboolean
  GLEW_SGIX_interlace* {.importc: "__GLEW_SGIX_interlace".}: GLboolean
  GLEW_SGIX_ir_instrument1* {.importc: "__GLEW_SGIX_ir_instrument1".}: GLboolean
  GLEW_SGIX_line_quality_hint* {.importc: "__GLEW_SGIX_line_quality_hint".}: GLboolean
  GLEW_SGIX_list_priority* {.importc: "__GLEW_SGIX_list_priority".}: GLboolean
  GLEW_SGIX_mpeg1* {.importc: "__GLEW_SGIX_mpeg1".}: GLboolean
  GLEW_SGIX_mpeg2* {.importc: "__GLEW_SGIX_mpeg2".}: GLboolean
  GLEW_SGIX_nonlinear_lighting_pervertex*
      {.importc: "__GLEW_SGIX_nonlinear_lighting_pervertex".}: GLboolean
  GLEW_SGIX_nurbs_eval* {.importc: "__GLEW_SGIX_nurbs_eval".}: GLboolean
  GLEW_SGIX_occlusion_instrument* {.importc: "__GLEW_SGIX_occlusion_instrument".}: GLboolean
  GLEW_SGIX_packed_6bytes* {.importc: "__GLEW_SGIX_packed_6bytes".}: GLboolean
  GLEW_SGIX_pixel_texture* {.importc: "__GLEW_SGIX_pixel_texture".}: GLboolean
  GLEW_SGIX_pixel_texture_bits* {.importc: "__GLEW_SGIX_pixel_texture_bits".}: GLboolean
  GLEW_SGIX_pixel_texture_lod* {.importc: "__GLEW_SGIX_pixel_texture_lod".}: GLboolean
  GLEW_SGIX_pixel_tiles* {.importc: "__GLEW_SGIX_pixel_tiles".}: GLboolean
  GLEW_SGIX_polynomial_ffd* {.importc: "__GLEW_SGIX_polynomial_ffd".}: GLboolean
  GLEW_SGIX_quad_mesh* {.importc: "__GLEW_SGIX_quad_mesh".}: GLboolean
  GLEW_SGIX_reference_plane* {.importc: "__GLEW_SGIX_reference_plane".}: GLboolean
  GLEW_SGIX_resample* {.importc: "__GLEW_SGIX_resample".}: GLboolean
  GLEW_SGIX_scalebias_hint* {.importc: "__GLEW_SGIX_scalebias_hint".}: GLboolean
  GLEW_SGIX_shadow* {.importc: "__GLEW_SGIX_shadow".}: GLboolean
  GLEW_SGIX_shadow_ambient* {.importc: "__GLEW_SGIX_shadow_ambient".}: GLboolean
  GLEW_SGIX_slim* {.importc: "__GLEW_SGIX_slim".}: GLboolean
  GLEW_SGIX_spotlight_cutoff* {.importc: "__GLEW_SGIX_spotlight_cutoff".}: GLboolean
  GLEW_SGIX_sprite* {.importc: "__GLEW_SGIX_sprite".}: GLboolean
  GLEW_SGIX_subdiv_patch* {.importc: "__GLEW_SGIX_subdiv_patch".}: GLboolean
  GLEW_SGIX_subsample* {.importc: "__GLEW_SGIX_subsample".}: GLboolean
  GLEW_SGIX_tag_sample_buffer* {.importc: "__GLEW_SGIX_tag_sample_buffer".}: GLboolean
  GLEW_SGIX_texture_add_env* {.importc: "__GLEW_SGIX_texture_add_env".}: GLboolean
  GLEW_SGIX_texture_coordinate_clamp* {.importc: "__GLEW_SGIX_texture_coordinate_clamp".}: GLboolean
  GLEW_SGIX_texture_lod_bias* {.importc: "__GLEW_SGIX_texture_lod_bias".}: GLboolean
  GLEW_SGIX_texture_mipmap_anisotropic* {.
      importc: "__GLEW_SGIX_texture_mipmap_anisotropic".}: GLboolean
  GLEW_SGIX_texture_multi_buffer* {.importc: "__GLEW_SGIX_texture_multi_buffer".}: GLboolean
  GLEW_SGIX_texture_phase* {.importc: "__GLEW_SGIX_texture_phase".}: GLboolean
  GLEW_SGIX_texture_range* {.importc: "__GLEW_SGIX_texture_range".}: GLboolean
  GLEW_SGIX_texture_scale_bias* {.importc: "__GLEW_SGIX_texture_scale_bias".}: GLboolean
  GLEW_SGIX_texture_supersample* {.importc: "__GLEW_SGIX_texture_supersample".}: GLboolean
  GLEW_SGIX_vector_ops* {.importc: "__GLEW_SGIX_vector_ops".}: GLboolean
  GLEW_SGIX_vertex_array_object* {.importc: "__GLEW_SGIX_vertex_array_object".}: GLboolean
  GLEW_SGIX_vertex_preclip* {.importc: "__GLEW_SGIX_vertex_preclip".}: GLboolean
  GLEW_SGIX_vertex_preclip_hint* {.importc: "__GLEW_SGIX_vertex_preclip_hint".}: GLboolean
  GLEW_SGIX_ycrcb* {.importc: "__GLEW_SGIX_ycrcb".}: GLboolean
  GLEW_SGIX_ycrcb_subsample* {.importc: "__GLEW_SGIX_ycrcb_subsample".}: GLboolean
  GLEW_SGIX_ycrcba* {.importc: "__GLEW_SGIX_ycrcba".}: GLboolean
  GLEW_SGI_color_matrix* {.importc: "__GLEW_SGI_color_matrix".}: GLboolean
  GLEW_SGI_color_table* {.importc: "__GLEW_SGI_color_table".}: GLboolean
  GLEW_SGI_complex* {.importc: "__GLEW_SGI_complex".}: GLboolean
  GLEW_SGI_complex_type* {.importc: "__GLEW_SGI_complex_type".}: GLboolean
  GLEW_SGI_fft* {.importc: "__GLEW_SGI_fft".}: GLboolean
  GLEW_SGI_texture_color_table* {.importc: "__GLEW_SGI_texture_color_table".}: GLboolean
  GLEW_SUNX_constant_data* {.importc: "__GLEW_SUNX_constant_data".}: GLboolean
  GLEW_SUN_convolution_border_modes* {.importc: "__GLEW_SUN_convolution_border_modes".}: GLboolean
  GLEW_SUN_global_alpha* {.importc: "__GLEW_SUN_global_alpha".}: GLboolean
  GLEW_SUN_mesh_array* {.importc: "__GLEW_SUN_mesh_array".}: GLboolean
  GLEW_SUN_read_video_pixels* {.importc: "__GLEW_SUN_read_video_pixels".}: GLboolean
  GLEW_SUN_slice_accum* {.importc: "__GLEW_SUN_slice_accum".}: GLboolean
  GLEW_SUN_triangle_list* {.importc: "__GLEW_SUN_triangle_list".}: GLboolean
  GLEW_SUN_vertex* {.importc: "__GLEW_SUN_vertex".}: GLboolean
  GLEW_WIN_phong_shading* {.importc: "__GLEW_WIN_phong_shading".}: GLboolean
  GLEW_WIN_scene_markerXXX* {.importc: "__GLEW_WIN_scene_markerXXX".}: GLboolean
  GLEW_WIN_specular_fog* {.importc: "__GLEW_WIN_specular_fog".}: GLboolean
  GLEW_WIN_swap_hint* {.importc: "__GLEW_WIN_swap_hint".}: GLboolean ## ```
                                                                     ##   ------------------------------------------------------------------------- 
                                                                     ##      error codes
                                                                     ## ```
  Experimental* {.importc: "glewExperimental".}: GLboolean
proc glAccum*(op: GLenum; value: GLfloat) {.importc, cdecl.}
proc glAlphaFunc*(`func`: GLenum; `ref`: GLclampf) {.importc, cdecl.}
proc glAreTexturesResident*(n: GLsizei; textures: ptr GLuint;
                            residences: ptr GLboolean): GLboolean {.importc,
    cdecl.}
proc glArrayElement*(i: GLint) {.importc, cdecl.}
proc glBegin*(mode: GLenum) {.importc, cdecl.}
proc glBindTexture*(target: GLenum; texture: GLuint) {.importc, cdecl.}
proc glBitmap*(width: GLsizei; height: GLsizei; xorig: GLfloat; yorig: GLfloat;
               xmove: GLfloat; ymove: GLfloat; bitmap: ptr GLubyte) {.importc,
    cdecl.}
proc glBlendFunc*(sfactor: GLenum; dfactor: GLenum) {.importc, cdecl.}
proc glCallList*(list: GLuint) {.importc, cdecl.}
proc glCallLists*(n: GLsizei; kind: GLenum; lists: pointer) {.importc, cdecl.}
proc glClear*(mask: GLbitfield) {.importc, cdecl.}
proc glClearAccum*(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) {.
    importc, cdecl.}
proc glClearColor*(red: GLclampf; green: GLclampf; blue: GLclampf;
                   alpha: GLclampf) {.importc, cdecl.}
proc glClearDepth*(depth: GLclampd) {.importc, cdecl.}
proc glClearIndex*(c: GLfloat) {.importc, cdecl.}
proc glClearStencil*(s: GLint) {.importc, cdecl.}
proc glClipPlane*(plane: GLenum; equation: ptr GLdouble) {.importc, cdecl.}
proc glColor3b*(red: GLbyte; green: GLbyte; blue: GLbyte) {.importc, cdecl.}
proc glColor3bv*(v: ptr GLbyte) {.importc, cdecl.}
proc glColor3d*(red: GLdouble; green: GLdouble; blue: GLdouble) {.importc, cdecl.}
proc glColor3dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glColor3f*(red: GLfloat; green: GLfloat; blue: GLfloat) {.importc, cdecl.}
proc glColor3fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glColor3i*(red: GLint; green: GLint; blue: GLint) {.importc, cdecl.}
proc glColor3iv*(v: ptr GLint) {.importc, cdecl.}
proc glColor3s*(red: GLshort; green: GLshort; blue: GLshort) {.importc, cdecl.}
proc glColor3sv*(v: ptr GLshort) {.importc, cdecl.}
proc glColor3ub*(red: GLubyte; green: GLubyte; blue: GLubyte) {.importc, cdecl.}
proc glColor3ubv*(v: ptr GLubyte) {.importc, cdecl.}
proc glColor3ui*(red: GLuint; green: GLuint; blue: GLuint) {.importc, cdecl.}
proc glColor3uiv*(v: ptr GLuint) {.importc, cdecl.}
proc glColor3us*(red: GLushort; green: GLushort; blue: GLushort) {.importc,
    cdecl.}
proc glColor3usv*(v: ptr GLushort) {.importc, cdecl.}
proc glColor4b*(red: GLbyte; green: GLbyte; blue: GLbyte; alpha: GLbyte) {.
    importc, cdecl.}
proc glColor4bv*(v: ptr GLbyte) {.importc, cdecl.}
proc glColor4d*(red: GLdouble; green: GLdouble; blue: GLdouble; alpha: GLdouble) {.
    importc, cdecl.}
proc glColor4dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glColor4f*(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) {.
    importc, cdecl.}
proc glColor4fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glColor4i*(red: GLint; green: GLint; blue: GLint; alpha: GLint) {.importc,
    cdecl.}
proc glColor4iv*(v: ptr GLint) {.importc, cdecl.}
proc glColor4s*(red: GLshort; green: GLshort; blue: GLshort; alpha: GLshort) {.
    importc, cdecl.}
proc glColor4sv*(v: ptr GLshort) {.importc, cdecl.}
proc glColor4ub*(red: GLubyte; green: GLubyte; blue: GLubyte; alpha: GLubyte) {.
    importc, cdecl.}
proc glColor4ubv*(v: ptr GLubyte) {.importc, cdecl.}
proc glColor4ui*(red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint) {.
    importc, cdecl.}
proc glColor4uiv*(v: ptr GLuint) {.importc, cdecl.}
proc glColor4us*(red: GLushort; green: GLushort; blue: GLushort; alpha: GLushort) {.
    importc, cdecl.}
proc glColor4usv*(v: ptr GLushort) {.importc, cdecl.}
proc glColorMask*(red: GLboolean; green: GLboolean; blue: GLboolean;
                  alpha: GLboolean) {.importc, cdecl.}
proc glColorMaterial*(face: GLenum; mode: GLenum) {.importc, cdecl.}
proc glColorPointer*(size: GLint; kind: GLenum; stride: GLsizei;
                     pointer: pointer) {.importc, cdecl.}
proc glCopyPixels*(x: GLint; y: GLint; width: GLsizei; height: GLsizei;
                   kind: GLenum) {.importc, cdecl.}
proc glCopyTexImage1D*(target: GLenum; level: GLint; internalFormat: GLenum;
                       x: GLint; y: GLint; width: GLsizei; border: GLint) {.
    importc, cdecl.}
proc glCopyTexImage2D*(target: GLenum; level: GLint; internalFormat: GLenum;
                       x: GLint; y: GLint; width: GLsizei; height: GLsizei;
                       border: GLint) {.importc, cdecl.}
proc glCopyTexSubImage1D*(target: GLenum; level: GLint; xoffset: GLint;
                          x: GLint; y: GLint; width: GLsizei) {.importc, cdecl.}
proc glCopyTexSubImage2D*(target: GLenum; level: GLint; xoffset: GLint;
                          yoffset: GLint; x: GLint; y: GLint; width: GLsizei;
                          height: GLsizei) {.importc, cdecl.}
proc glCullFace*(mode: GLenum) {.importc, cdecl.}
proc glDeleteLists*(list: GLuint; range: GLsizei) {.importc, cdecl.}
proc glDeleteTextures*(n: GLsizei; textures: ptr GLuint) {.importc, cdecl.}
proc glDepthFunc*(`func`: GLenum) {.importc, cdecl.}
proc glDepthMask*(flag: GLboolean) {.importc, cdecl.}
proc glDepthRange*(zNear: GLclampd; zFar: GLclampd) {.importc, cdecl.}
proc glDisable*(cap: GLenum) {.importc, cdecl.}
proc glDisableClientState*(array: GLenum) {.importc, cdecl.}
proc glDrawArrays*(mode: GLenum; first: GLint; count: GLsizei) {.importc, cdecl.}
proc glDrawBuffer*(mode: GLenum) {.importc, cdecl.}
proc glDrawElements*(mode: GLenum; count: GLsizei; kind: GLenum;
                     indices: pointer) {.importc, cdecl.}
proc glDrawPixels*(width: GLsizei; height: GLsizei; format: GLenum;
                   kind: GLenum; pixels: pointer) {.importc, cdecl.}
proc glEdgeFlag*(flag: GLboolean) {.importc, cdecl.}
proc glEdgeFlagPointer*(stride: GLsizei; pointer: pointer) {.importc, cdecl.}
proc glEdgeFlagv*(flag: ptr GLboolean) {.importc, cdecl.}
proc glEnable*(cap: GLenum) {.importc, cdecl.}
proc glEnableClientState*(array: GLenum) {.importc, cdecl.}
proc glEnd*() {.importc, cdecl.}
proc glEndList*() {.importc, cdecl.}
proc glEvalCoord1d*(u: GLdouble) {.importc, cdecl.}
proc glEvalCoord1dv*(u: ptr GLdouble) {.importc, cdecl.}
proc glEvalCoord1f*(u: GLfloat) {.importc, cdecl.}
proc glEvalCoord1fv*(u: ptr GLfloat) {.importc, cdecl.}
proc glEvalCoord2d*(u: GLdouble; v: GLdouble) {.importc, cdecl.}
proc glEvalCoord2dv*(u: ptr GLdouble) {.importc, cdecl.}
proc glEvalCoord2f*(u: GLfloat; v: GLfloat) {.importc, cdecl.}
proc glEvalCoord2fv*(u: ptr GLfloat) {.importc, cdecl.}
proc glEvalMesh1*(mode: GLenum; i1: GLint; i2: GLint) {.importc, cdecl.}
proc glEvalMesh2*(mode: GLenum; i1: GLint; i2: GLint; j1: GLint; j2: GLint) {.
    importc, cdecl.}
proc glEvalPoint1*(i: GLint) {.importc, cdecl.}
proc glEvalPoint2*(i: GLint; j: GLint) {.importc, cdecl.}
proc glFeedbackBuffer*(size: GLsizei; kind: GLenum; buffer: ptr GLfloat) {.
    importc, cdecl.}
proc glFinish*() {.importc, cdecl.}
proc glFlush*() {.importc, cdecl.}
proc glFogf*(pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glFogfv*(pname: GLenum; params: ptr GLfloat) {.importc, cdecl.}
proc glFogi*(pname: GLenum; param: GLint) {.importc, cdecl.}
proc glFogiv*(pname: GLenum; params: ptr GLint) {.importc, cdecl.}
proc glFrontFace*(mode: GLenum) {.importc, cdecl.}
proc glFrustum*(left: GLdouble; right: GLdouble; bottom: GLdouble;
                top: GLdouble; zNear: GLdouble; zFar: GLdouble) {.importc, cdecl.}
proc glGenLists*(range: GLsizei): GLuint {.importc, cdecl.}
proc glGenTextures*(n: GLsizei; textures: ptr GLuint) {.importc, cdecl.}
proc glGetBooleanv*(pname: GLenum; params: ptr GLboolean) {.importc, cdecl.}
proc glGetClipPlane*(plane: GLenum; equation: ptr GLdouble) {.importc, cdecl.}
proc glGetDoublev*(pname: GLenum; params: ptr GLdouble) {.importc, cdecl.}
proc glGetError*(): GLenum {.importc, cdecl.}
proc glGetFloatv*(pname: GLenum; params: ptr GLfloat) {.importc, cdecl.}
proc glGetIntegerv*(pname: GLenum; params: ptr GLint) {.importc, cdecl.}
proc glGetLightfv*(light: GLenum; pname: GLenum; params: ptr GLfloat) {.importc,
    cdecl.}
proc glGetLightiv*(light: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glGetMapdv*(target: GLenum; query: GLenum; v: ptr GLdouble) {.importc,
    cdecl.}
proc glGetMapfv*(target: GLenum; query: GLenum; v: ptr GLfloat) {.importc, cdecl.}
proc glGetMapiv*(target: GLenum; query: GLenum; v: ptr GLint) {.importc, cdecl.}
proc glGetMaterialfv*(face: GLenum; pname: GLenum; params: ptr GLfloat) {.
    importc, cdecl.}
proc glGetMaterialiv*(face: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glGetPixelMapfv*(map: GLenum; values: ptr GLfloat) {.importc, cdecl.}
proc glGetPixelMapuiv*(map: GLenum; values: ptr GLuint) {.importc, cdecl.}
proc glGetPixelMapusv*(map: GLenum; values: ptr GLushort) {.importc, cdecl.}
proc glGetPointerv*(pname: GLenum; params: ptr pointer) {.importc, cdecl.}
proc glGetPolygonStipple*(mask: ptr GLubyte) {.importc, cdecl.}
proc glGetString*(name: GLenum): ptr GLubyte {.importc, cdecl.}
proc glGetTexEnvfv*(target: GLenum; pname: GLenum; params: ptr GLfloat) {.
    importc, cdecl.}
proc glGetTexEnviv*(target: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glGetTexGendv*(coord: GLenum; pname: GLenum; params: ptr GLdouble) {.
    importc, cdecl.}
proc glGetTexGenfv*(coord: GLenum; pname: GLenum; params: ptr GLfloat) {.
    importc, cdecl.}
proc glGetTexGeniv*(coord: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glGetTexImage*(target: GLenum; level: GLint; format: GLenum; kind: GLenum;
                    pixels: pointer) {.importc, cdecl.}
proc glGetTexLevelParameterfv*(target: GLenum; level: GLint; pname: GLenum;
                               params: ptr GLfloat) {.importc, cdecl.}
proc glGetTexLevelParameteriv*(target: GLenum; level: GLint; pname: GLenum;
                               params: ptr GLint) {.importc, cdecl.}
proc glGetTexParameterfv*(target: GLenum; pname: GLenum; params: ptr GLfloat) {.
    importc, cdecl.}
proc glGetTexParameteriv*(target: GLenum; pname: GLenum; params: ptr GLint) {.
    importc, cdecl.}
proc glHint*(target: GLenum; mode: GLenum) {.importc, cdecl.}
proc glIndexMask*(mask: GLuint) {.importc, cdecl.}
proc glIndexPointer*(kind: GLenum; stride: GLsizei; pointer: pointer) {.importc,
    cdecl.}
proc glIndexd*(c: GLdouble) {.importc, cdecl.}
proc glIndexdv*(c: ptr GLdouble) {.importc, cdecl.}
proc glIndexf*(c: GLfloat) {.importc, cdecl.}
proc glIndexfv*(c: ptr GLfloat) {.importc, cdecl.}
proc glIndexi*(c: GLint) {.importc, cdecl.}
proc glIndexiv*(c: ptr GLint) {.importc, cdecl.}
proc glIndexs*(c: GLshort) {.importc, cdecl.}
proc glIndexsv*(c: ptr GLshort) {.importc, cdecl.}
proc glIndexub*(c: GLubyte) {.importc, cdecl.}
proc glIndexubv*(c: ptr GLubyte) {.importc, cdecl.}
proc glInitNames*() {.importc, cdecl.}
proc glInterleavedArrays*(format: GLenum; stride: GLsizei; pointer: pointer) {.
    importc, cdecl.}
proc glIsEnabled*(cap: GLenum): GLboolean {.importc, cdecl.}
proc glIsList*(list: GLuint): GLboolean {.importc, cdecl.}
proc glIsTexture*(texture: GLuint): GLboolean {.importc, cdecl.}
proc glLightModelf*(pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glLightModelfv*(pname: GLenum; params: ptr GLfloat) {.importc, cdecl.}
proc glLightModeli*(pname: GLenum; param: GLint) {.importc, cdecl.}
proc glLightModeliv*(pname: GLenum; params: ptr GLint) {.importc, cdecl.}
proc glLightf*(light: GLenum; pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glLightfv*(light: GLenum; pname: GLenum; params: ptr GLfloat) {.importc,
    cdecl.}
proc glLighti*(light: GLenum; pname: GLenum; param: GLint) {.importc, cdecl.}
proc glLightiv*(light: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glLineStipple*(factor: GLint; pattern: GLushort) {.importc, cdecl.}
proc glLineWidth*(width: GLfloat) {.importc, cdecl.}
proc glListBase*(base: GLuint) {.importc, cdecl.}
proc glLoadIdentity*() {.importc, cdecl.}
proc glLoadMatrixd*(m: ptr GLdouble) {.importc, cdecl.}
proc glLoadMatrixf*(m: ptr GLfloat) {.importc, cdecl.}
proc glLoadName*(name: GLuint) {.importc, cdecl.}
proc glLogicOp*(opcode: GLenum) {.importc, cdecl.}
proc glMap1d*(target: GLenum; u1: GLdouble; u2: GLdouble; stride: GLint;
              order: GLint; points: ptr GLdouble) {.importc, cdecl.}
proc glMap1f*(target: GLenum; u1: GLfloat; u2: GLfloat; stride: GLint;
              order: GLint; points: ptr GLfloat) {.importc, cdecl.}
proc glMap2d*(target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint;
              uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint;
              vorder: GLint; points: ptr GLdouble) {.importc, cdecl.}
proc glMap2f*(target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint;
              uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint;
              vorder: GLint; points: ptr GLfloat) {.importc, cdecl.}
proc glMapGrid1d*(un: GLint; u1: GLdouble; u2: GLdouble) {.importc, cdecl.}
proc glMapGrid1f*(un: GLint; u1: GLfloat; u2: GLfloat) {.importc, cdecl.}
proc glMapGrid2d*(un: GLint; u1: GLdouble; u2: GLdouble; vn: GLint;
                  v1: GLdouble; v2: GLdouble) {.importc, cdecl.}
proc glMapGrid2f*(un: GLint; u1: GLfloat; u2: GLfloat; vn: GLint; v1: GLfloat;
                  v2: GLfloat) {.importc, cdecl.}
proc glMaterialf*(face: GLenum; pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glMaterialfv*(face: GLenum; pname: GLenum; params: ptr GLfloat) {.importc,
    cdecl.}
proc glMateriali*(face: GLenum; pname: GLenum; param: GLint) {.importc, cdecl.}
proc glMaterialiv*(face: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glMatrixMode*(mode: GLenum) {.importc, cdecl.}
proc glMultMatrixd*(m: ptr GLdouble) {.importc, cdecl.}
proc glMultMatrixf*(m: ptr GLfloat) {.importc, cdecl.}
proc glNewList*(list: GLuint; mode: GLenum) {.importc, cdecl.}
proc glNormal3b*(nx: GLbyte; ny: GLbyte; nz: GLbyte) {.importc, cdecl.}
proc glNormal3bv*(v: ptr GLbyte) {.importc, cdecl.}
proc glNormal3d*(nx: GLdouble; ny: GLdouble; nz: GLdouble) {.importc, cdecl.}
proc glNormal3dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glNormal3f*(nx: GLfloat; ny: GLfloat; nz: GLfloat) {.importc, cdecl.}
proc glNormal3fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glNormal3i*(nx: GLint; ny: GLint; nz: GLint) {.importc, cdecl.}
proc glNormal3iv*(v: ptr GLint) {.importc, cdecl.}
proc glNormal3s*(nx: GLshort; ny: GLshort; nz: GLshort) {.importc, cdecl.}
proc glNormal3sv*(v: ptr GLshort) {.importc, cdecl.}
proc glNormalPointer*(kind: GLenum; stride: GLsizei; pointer: pointer) {.
    importc, cdecl.}
proc glOrtho*(left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble;
              zNear: GLdouble; zFar: GLdouble) {.importc, cdecl.}
proc glPassThrough*(token: GLfloat) {.importc, cdecl.}
proc glPixelMapfv*(map: GLenum; mapsize: GLsizei; values: ptr GLfloat) {.
    importc, cdecl.}
proc glPixelMapuiv*(map: GLenum; mapsize: GLsizei; values: ptr GLuint) {.
    importc, cdecl.}
proc glPixelMapusv*(map: GLenum; mapsize: GLsizei; values: ptr GLushort) {.
    importc, cdecl.}
proc glPixelStoref*(pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glPixelStorei*(pname: GLenum; param: GLint) {.importc, cdecl.}
proc glPixelTransferf*(pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glPixelTransferi*(pname: GLenum; param: GLint) {.importc, cdecl.}
proc glPixelZoom*(xfactor: GLfloat; yfactor: GLfloat) {.importc, cdecl.}
proc glPointSize*(size: GLfloat) {.importc, cdecl.}
proc glPolygonMode*(face: GLenum; mode: GLenum) {.importc, cdecl.}
proc glPolygonOffset*(factor: GLfloat; units: GLfloat) {.importc, cdecl.}
proc glPolygonStipple*(mask: ptr GLubyte) {.importc, cdecl.}
proc glPopAttrib*() {.importc, cdecl.}
proc glPopClientAttrib*() {.importc, cdecl.}
proc glPopMatrix*() {.importc, cdecl.}
proc glPopName*() {.importc, cdecl.}
proc glPrioritizeTextures*(n: GLsizei; textures: ptr GLuint;
                           priorities: ptr GLclampf) {.importc, cdecl.}
proc glPushAttrib*(mask: GLbitfield) {.importc, cdecl.}
proc glPushClientAttrib*(mask: GLbitfield) {.importc, cdecl.}
proc glPushMatrix*() {.importc, cdecl.}
proc glPushName*(name: GLuint) {.importc, cdecl.}
proc glRasterPos2d*(x: GLdouble; y: GLdouble) {.importc, cdecl.}
proc glRasterPos2dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glRasterPos2f*(x: GLfloat; y: GLfloat) {.importc, cdecl.}
proc glRasterPos2fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glRasterPos2i*(x: GLint; y: GLint) {.importc, cdecl.}
proc glRasterPos2iv*(v: ptr GLint) {.importc, cdecl.}
proc glRasterPos2s*(x: GLshort; y: GLshort) {.importc, cdecl.}
proc glRasterPos2sv*(v: ptr GLshort) {.importc, cdecl.}
proc glRasterPos3d*(x: GLdouble; y: GLdouble; z: GLdouble) {.importc, cdecl.}
proc glRasterPos3dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glRasterPos3f*(x: GLfloat; y: GLfloat; z: GLfloat) {.importc, cdecl.}
proc glRasterPos3fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glRasterPos3i*(x: GLint; y: GLint; z: GLint) {.importc, cdecl.}
proc glRasterPos3iv*(v: ptr GLint) {.importc, cdecl.}
proc glRasterPos3s*(x: GLshort; y: GLshort; z: GLshort) {.importc, cdecl.}
proc glRasterPos3sv*(v: ptr GLshort) {.importc, cdecl.}
proc glRasterPos4d*(x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) {.
    importc, cdecl.}
proc glRasterPos4dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glRasterPos4f*(x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.importc,
    cdecl.}
proc glRasterPos4fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glRasterPos4i*(x: GLint; y: GLint; z: GLint; w: GLint) {.importc, cdecl.}
proc glRasterPos4iv*(v: ptr GLint) {.importc, cdecl.}
proc glRasterPos4s*(x: GLshort; y: GLshort; z: GLshort; w: GLshort) {.importc,
    cdecl.}
proc glRasterPos4sv*(v: ptr GLshort) {.importc, cdecl.}
proc glReadBuffer*(mode: GLenum) {.importc, cdecl.}
proc glReadPixels*(x: GLint; y: GLint; width: GLsizei; height: GLsizei;
                   format: GLenum; kind: GLenum; pixels: pointer) {.importc,
    cdecl.}
proc glRectd*(x1: GLdouble; y1: GLdouble; x2: GLdouble; y2: GLdouble) {.importc,
    cdecl.}
proc glRectdv*(v1: ptr GLdouble; v2: ptr GLdouble) {.importc, cdecl.}
proc glRectf*(x1: GLfloat; y1: GLfloat; x2: GLfloat; y2: GLfloat) {.importc,
    cdecl.}
proc glRectfv*(v1: ptr GLfloat; v2: ptr GLfloat) {.importc, cdecl.}
proc glRecti*(x1: GLint; y1: GLint; x2: GLint; y2: GLint) {.importc, cdecl.}
proc glRectiv*(v1: ptr GLint; v2: ptr GLint) {.importc, cdecl.}
proc glRects*(x1: GLshort; y1: GLshort; x2: GLshort; y2: GLshort) {.importc,
    cdecl.}
proc glRectsv*(v1: ptr GLshort; v2: ptr GLshort) {.importc, cdecl.}
proc glRenderMode*(mode: GLenum): GLint {.importc, cdecl.}
proc glRotated*(angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble) {.
    importc, cdecl.}
proc glRotatef*(angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) {.importc,
    cdecl.}
proc glScaled*(x: GLdouble; y: GLdouble; z: GLdouble) {.importc, cdecl.}
proc glScalef*(x: GLfloat; y: GLfloat; z: GLfloat) {.importc, cdecl.}
proc glScissor*(x: GLint; y: GLint; width: GLsizei; height: GLsizei) {.importc,
    cdecl.}
proc glSelectBuffer*(size: GLsizei; buffer: ptr GLuint) {.importc, cdecl.}
proc glShadeModel*(mode: GLenum) {.importc, cdecl.}
proc glStencilFunc*(`func`: GLenum; `ref`: GLint; mask: GLuint) {.importc, cdecl.}
proc glStencilMask*(mask: GLuint) {.importc, cdecl.}
proc glStencilOp*(fail: GLenum; zfail: GLenum; zpass: GLenum) {.importc, cdecl.}
proc glTexCoord1d*(s: GLdouble) {.importc, cdecl.}
proc glTexCoord1dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glTexCoord1f*(s: GLfloat) {.importc, cdecl.}
proc glTexCoord1fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glTexCoord1i*(s: GLint) {.importc, cdecl.}
proc glTexCoord1iv*(v: ptr GLint) {.importc, cdecl.}
proc glTexCoord1s*(s: GLshort) {.importc, cdecl.}
proc glTexCoord1sv*(v: ptr GLshort) {.importc, cdecl.}
proc glTexCoord2d*(s: GLdouble; t: GLdouble) {.importc, cdecl.}
proc glTexCoord2dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glTexCoord2f*(s: GLfloat; t: GLfloat) {.importc, cdecl.}
proc glTexCoord2fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glTexCoord2i*(s: GLint; t: GLint) {.importc, cdecl.}
proc glTexCoord2iv*(v: ptr GLint) {.importc, cdecl.}
proc glTexCoord2s*(s: GLshort; t: GLshort) {.importc, cdecl.}
proc glTexCoord2sv*(v: ptr GLshort) {.importc, cdecl.}
proc glTexCoord3d*(s: GLdouble; t: GLdouble; r: GLdouble) {.importc, cdecl.}
proc glTexCoord3dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glTexCoord3f*(s: GLfloat; t: GLfloat; r: GLfloat) {.importc, cdecl.}
proc glTexCoord3fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glTexCoord3i*(s: GLint; t: GLint; r: GLint) {.importc, cdecl.}
proc glTexCoord3iv*(v: ptr GLint) {.importc, cdecl.}
proc glTexCoord3s*(s: GLshort; t: GLshort; r: GLshort) {.importc, cdecl.}
proc glTexCoord3sv*(v: ptr GLshort) {.importc, cdecl.}
proc glTexCoord4d*(s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble) {.
    importc, cdecl.}
proc glTexCoord4dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glTexCoord4f*(s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat) {.importc,
    cdecl.}
proc glTexCoord4fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glTexCoord4i*(s: GLint; t: GLint; r: GLint; q: GLint) {.importc, cdecl.}
proc glTexCoord4iv*(v: ptr GLint) {.importc, cdecl.}
proc glTexCoord4s*(s: GLshort; t: GLshort; r: GLshort; q: GLshort) {.importc,
    cdecl.}
proc glTexCoord4sv*(v: ptr GLshort) {.importc, cdecl.}
proc glTexCoordPointer*(size: GLint; kind: GLenum; stride: GLsizei;
                        pointer: pointer) {.importc, cdecl.}
proc glTexEnvf*(target: GLenum; pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glTexEnvfv*(target: GLenum; pname: GLenum; params: ptr GLfloat) {.importc,
    cdecl.}
proc glTexEnvi*(target: GLenum; pname: GLenum; param: GLint) {.importc, cdecl.}
proc glTexEnviv*(target: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glTexGend*(coord: GLenum; pname: GLenum; param: GLdouble) {.importc, cdecl.}
proc glTexGendv*(coord: GLenum; pname: GLenum; params: ptr GLdouble) {.importc,
    cdecl.}
proc glTexGenf*(coord: GLenum; pname: GLenum; param: GLfloat) {.importc, cdecl.}
proc glTexGenfv*(coord: GLenum; pname: GLenum; params: ptr GLfloat) {.importc,
    cdecl.}
proc glTexGeni*(coord: GLenum; pname: GLenum; param: GLint) {.importc, cdecl.}
proc glTexGeniv*(coord: GLenum; pname: GLenum; params: ptr GLint) {.importc,
    cdecl.}
proc glTexImage1D*(target: GLenum; level: GLint; internalformat: GLint;
                   width: GLsizei; border: GLint; format: GLenum; kind: GLenum;
                   pixels: pointer) {.importc, cdecl.}
proc glTexImage2D*(target: GLenum; level: GLint; internalformat: GLint;
                   width: GLsizei; height: GLsizei; border: GLint;
                   format: GLenum; kind: GLenum; pixels: pointer) {.importc,
    cdecl.}
proc glTexParameterf*(target: GLenum; pname: GLenum; param: GLfloat) {.importc,
    cdecl.}
proc glTexParameterfv*(target: GLenum; pname: GLenum; params: ptr GLfloat) {.
    importc, cdecl.}
proc glTexParameteri*(target: GLenum; pname: GLenum; param: GLint) {.importc,
    cdecl.}
proc glTexParameteriv*(target: GLenum; pname: GLenum; params: ptr GLint) {.
    importc, cdecl.}
proc glTexSubImage1D*(target: GLenum; level: GLint; xoffset: GLint;
                      width: GLsizei; format: GLenum; kind: GLenum;
                      pixels: pointer) {.importc, cdecl.}
proc glTexSubImage2D*(target: GLenum; level: GLint; xoffset: GLint;
                      yoffset: GLint; width: GLsizei; height: GLsizei;
                      format: GLenum; kind: GLenum; pixels: pointer) {.importc,
    cdecl.}
proc glTranslated*(x: GLdouble; y: GLdouble; z: GLdouble) {.importc, cdecl.}
proc glTranslatef*(x: GLfloat; y: GLfloat; z: GLfloat) {.importc, cdecl.}
proc glVertex2d*(x: GLdouble; y: GLdouble) {.importc, cdecl.}
proc glVertex2dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glVertex2f*(x: GLfloat; y: GLfloat) {.importc, cdecl.}
proc glVertex2fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glVertex2i*(x: GLint; y: GLint) {.importc, cdecl.}
proc glVertex2iv*(v: ptr GLint) {.importc, cdecl.}
proc glVertex2s*(x: GLshort; y: GLshort) {.importc, cdecl.}
proc glVertex2sv*(v: ptr GLshort) {.importc, cdecl.}
proc glVertex3d*(x: GLdouble; y: GLdouble; z: GLdouble) {.importc, cdecl.}
proc glVertex3dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glVertex3f*(x: GLfloat; y: GLfloat; z: GLfloat) {.importc, cdecl.}
proc glVertex3fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glVertex3i*(x: GLint; y: GLint; z: GLint) {.importc, cdecl.}
proc glVertex3iv*(v: ptr GLint) {.importc, cdecl.}
proc glVertex3s*(x: GLshort; y: GLshort; z: GLshort) {.importc, cdecl.}
proc glVertex3sv*(v: ptr GLshort) {.importc, cdecl.}
proc glVertex4d*(x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) {.importc,
    cdecl.}
proc glVertex4dv*(v: ptr GLdouble) {.importc, cdecl.}
proc glVertex4f*(x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) {.importc,
    cdecl.}
proc glVertex4fv*(v: ptr GLfloat) {.importc, cdecl.}
proc glVertex4i*(x: GLint; y: GLint; z: GLint; w: GLint) {.importc, cdecl.}
proc glVertex4iv*(v: ptr GLint) {.importc, cdecl.}
proc glVertex4s*(x: GLshort; y: GLshort; z: GLshort; w: GLshort) {.importc,
    cdecl.}
proc glVertex4sv*(v: ptr GLshort) {.importc, cdecl.}
proc glVertexPointer*(size: GLint; kind: GLenum; stride: GLsizei;
                      pointer: pointer) {.importc, cdecl.}
proc glViewport*(x: GLint; y: GLint; width: GLsizei; height: GLsizei) {.importc,
    cdecl.}
proc init*(): GLenum {.importc: "glewInit", cdecl.}
  ## ```
                                                   ##   ------------------------------------------------------------------------- 
                                                   ##      GLEW version info 
                                                   ##     
                                                   ##   
                                                   ##   VERSION 2.1.0
                                                   ##   
                                                   ##   VERSION_MAJOR 2
                                                   ##   
                                                   ##   VERSION_MINOR 1
                                                   ##   
                                                   ##   VERSION_MICRO 0
                                                   ##   
                                                   ##   
                                                   ##      API
                                                   ## ```
proc isSupported*(name: cstring): GLboolean {.importc: "glewIsSupported", cdecl.}
proc getExtension*(name: cstring): GLboolean {.importc: "glewGetExtension",
    cdecl.}
proc getErrorString*(error: GLenum): ptr GLubyte {.
    importc: "glewGetErrorString", cdecl.}
proc getString*(name: GLenum): ptr GLubyte {.importc: "glewGetString", cdecl.}
{.pop.}
